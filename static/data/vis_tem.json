{
  "api templates": {
    "fir": [
      {
        "cat_Customizable_Components": {
          "color": "rgb(246, 183, 60)",
          "num": 30,
          "codes": [
            "fir_14.js",
            "fir_3.js",
            "fir_6.js",
            "fir_13.js",
            "fir_21.js",
            "fir_5.js",
            "fir_16.js",
            "fir_29.js",
            "fir_7.js",
            "fir_9.js",
            "fir_11.js",
            "fir_12.js",
            "fir_15.js",
            "fir_17.js",
            "fir_24.js",
            "fir_25.js",
            "fir_26.js",
            "fir_28.js",
            "fir_1.js",
            "fir_2.js",
            "fir_4.js",
            "fir_8.js",
            "fir_10.js",
            "fir_19.js",
            "fir_20.js",
            "fir_23.js",
            "fir_30.js",
            "fir_22.js",
            "fir_27.js",
            "fir_18.js"
          ]
        }
      },
      {
        "fea_Multiple_Chars": {
          "color": "rgb(246, 183, 60)",
          "num": 1,
          "codes": [
            "fir_14.js"
          ]
        }
      },
      {
        "fea_Legend": {
          "color": "rgb(246, 183, 60)",
          "num": 4,
          "codes": [
            "fir_3.js",
            "fir_6.js",
            "fir_13.js",
            "fir_21.js"
          ]
        }
      },
      {
        "fea_Tooltip": {
          "color": "rgb(246, 183, 60)",
          "num": 3,
          "codes": [
            "fir_5.js",
            "fir_16.js",
            "fir_29.js"
          ]
        }
      },
      {
        "fea_Text": {
          "color": "rgb(246, 183, 60)",
          "num": 16,
          "codes": [
            "fir_6.js",
            "fir_13.js",
            "fir_21.js",
            "fir_5.js",
            "fir_16.js",
            "fir_29.js",
            "fir_7.js",
            "fir_9.js",
            "fir_11.js",
            "fir_12.js",
            "fir_15.js",
            "fir_17.js",
            "fir_24.js",
            "fir_25.js",
            "fir_26.js",
            "fir_28.js"
          ]
        }
      },
      {
        "fea_Axis": {
          "color": "rgb(246, 183, 60)",
          "num": 25,
          "codes": [
            "fir_14.js",
            "fir_3.js",
            "fir_6.js",
            "fir_13.js",
            "fir_21.js",
            "fir_5.js",
            "fir_16.js",
            "fir_29.js",
            "fir_7.js",
            "fir_9.js",
            "fir_11.js",
            "fir_12.js",
            "fir_15.js",
            "fir_17.js",
            "fir_25.js",
            "fir_28.js",
            "fir_1.js",
            "fir_2.js",
            "fir_4.js",
            "fir_8.js",
            "fir_10.js",
            "fir_19.js",
            "fir_20.js",
            "fir_23.js",
            "fir_30.js"
          ]
        }
      },
      {
        "fea_Canvas": {
          "color": "rgb(246, 183, 60)",
          "num": 28,
          "codes": [
            "fir_14.js",
            "fir_3.js",
            "fir_6.js",
            "fir_13.js",
            "fir_21.js",
            "fir_5.js",
            "fir_16.js",
            "fir_29.js",
            "fir_7.js",
            "fir_9.js",
            "fir_11.js",
            "fir_12.js",
            "fir_15.js",
            "fir_17.js",
            "fir_24.js",
            "fir_25.js",
            "fir_26.js",
            "fir_28.js",
            "fir_1.js",
            "fir_2.js",
            "fir_4.js",
            "fir_8.js",
            "fir_10.js",
            "fir_20.js",
            "fir_23.js",
            "fir_30.js",
            "fir_22.js",
            "fir_27.js"
          ]
        }
      },
      {
        "fea_Shapes": {
          "color": "rgb(246, 183, 60)",
          "num": 30,
          "codes": [
            "fir_14.js",
            "fir_3.js",
            "fir_6.js",
            "fir_13.js",
            "fir_21.js",
            "fir_5.js",
            "fir_16.js",
            "fir_29.js",
            "fir_7.js",
            "fir_9.js",
            "fir_11.js",
            "fir_12.js",
            "fir_15.js",
            "fir_17.js",
            "fir_24.js",
            "fir_25.js",
            "fir_26.js",
            "fir_28.js",
            "fir_1.js",
            "fir_2.js",
            "fir_4.js",
            "fir_8.js",
            "fir_10.js",
            "fir_19.js",
            "fir_20.js",
            "fir_23.js",
            "fir_30.js",
            "fir_22.js",
            "fir_27.js",
            "fir_18.js"
          ]
        }
      },
      {
        "cat_Data_Processing": {
          "color": "rgb(246, 183, 60)",
          "num": 27,
          "codes": [
            "fir_1.js",
            "fir_3.js",
            "fir_4.js",
            "fir_5.js",
            "fir_6.js",
            "fir_7.js",
            "fir_8.js",
            "fir_9.js",
            "fir_10.js",
            "fir_11.js",
            "fir_14.js",
            "fir_16.js",
            "fir_26.js",
            "fir_2.js",
            "fir_15.js",
            "fir_19.js",
            "fir_21.js",
            "fir_22.js",
            "fir_23.js",
            "fir_24.js",
            "fir_25.js",
            "fir_28.js",
            "fir_29.js",
            "fir_30.js",
            "fir_13.js",
            "fir_17.js",
            "fir_18.js"
          ]
        }
      },
      {
        "fea_Data_Format": {
          "color": "rgb(246, 183, 60)",
          "num": 13,
          "codes": [
            "fir_1.js",
            "fir_3.js",
            "fir_4.js",
            "fir_5.js",
            "fir_6.js",
            "fir_7.js",
            "fir_8.js",
            "fir_9.js",
            "fir_10.js",
            "fir_11.js",
            "fir_14.js",
            "fir_16.js",
            "fir_26.js"
          ]
        }
      },
      {
        "fea_Import_Data": {
          "color": "rgb(246, 183, 60)",
          "num": 23,
          "codes": [
            "fir_1.js",
            "fir_3.js",
            "fir_4.js",
            "fir_5.js",
            "fir_7.js",
            "fir_8.js",
            "fir_9.js",
            "fir_10.js",
            "fir_11.js",
            "fir_14.js",
            "fir_16.js",
            "fir_26.js",
            "fir_2.js",
            "fir_15.js",
            "fir_19.js",
            "fir_21.js",
            "fir_22.js",
            "fir_23.js",
            "fir_24.js",
            "fir_25.js",
            "fir_28.js",
            "fir_29.js",
            "fir_30.js"
          ]
        }
      },
      {
        "fea_Data_Filtering": {
          "color": "rgb(246, 183, 60)",
          "num": 3,
          "codes": [
            "fir_6.js",
            "fir_8.js",
            "fir_13.js"
          ]
        }
      },
      {
        "fea_Data_Transformation": {
          "color": "rgb(246, 183, 60)",
          "num": 13,
          "codes": [
            "fir_1.js",
            "fir_3.js",
            "fir_6.js",
            "fir_7.js",
            "fir_8.js",
            "fir_9.js",
            "fir_11.js",
            "fir_14.js",
            "fir_16.js",
            "fir_23.js",
            "fir_29.js",
            "fir_13.js",
            "fir_17.js"
          ]
        }
      },
      {
        "fea_Data_Grouping": {
          "color": "rgb(246, 183, 60)",
          "num": 8,
          "codes": [
            "fir_4.js",
            "fir_5.js",
            "fir_7.js",
            "fir_8.js",
            "fir_26.js",
            "fir_30.js",
            "fir_13.js",
            "fir_18.js"
          ]
        }
      },
      {
        "cat_Interactions_and_Animations": {
          "color": "rgb(246, 183, 60)",
          "num": 14,
          "codes": [
            "fir_22.js",
            "fir_24.js",
            "fir_10.js",
            "fir_5.js",
            "fir_6.js",
            "fir_9.js",
            "fir_11.js",
            "fir_15.js",
            "fir_16.js",
            "fir_23.js",
            "fir_25.js",
            "fir_26.js",
            "fir_29.js",
            "fir_8.js"
          ]
        }
      },
      {
        "fea_Selection": {
          "color": "rgb(246, 183, 60)",
          "num": 2,
          "codes": [
            "fir_22.js",
            "fir_24.js"
          ]
        }
      },
      {
        "fea_Zoom": {
          "color": "rgb(246, 183, 60)",
          "num": 1,
          "codes": [
            "fir_10.js"
          ]
        }
      },
      {
        "fea_Mouse_Events": {
          "color": "rgb(246, 183, 60)",
          "num": 10,
          "codes": [
            "fir_5.js",
            "fir_6.js",
            "fir_9.js",
            "fir_11.js",
            "fir_15.js",
            "fir_16.js",
            "fir_23.js",
            "fir_25.js",
            "fir_26.js",
            "fir_29.js"
          ]
        }
      },
      {
        "fea_Animations": {
          "color": "rgb(246, 183, 60)",
          "num": 2,
          "codes": [
            "fir_5.js",
            "fir_8.js"
          ]
        }
      }
    ],
    "sec": [
      {
        "cat_Customizable_Components": {
          "color": "rgb(246, 183, 60)",
          "num": 29,
          "codes": [
            "sec_8.js",
            "sec_14.js",
            "sec_17.js",
            "sec_18.js",
            "sec_21.js",
            "sec_25.js",
            "sec_26.js",
            "sec_27.js",
            "sec_30.js",
            "sec_2.js",
            "sec_5.js",
            "sec_9.js",
            "sec_12.js",
            "sec_16.js",
            "sec_19.js",
            "sec_11.js",
            "sec_15.js",
            "sec_22.js",
            "sec_23.js",
            "sec_24.js",
            "sec_28.js",
            "sec_29.js",
            "sec_3.js",
            "sec_6.js",
            "sec_13.js",
            "sec_20.js",
            "sec_1.js",
            "sec_4.js",
            "sec_10.js"
          ]
        }
      },
      {
        "fea_Multiple_Chars": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Legend": {
          "color": "rgb(246, 183, 60)",
          "num": 9,
          "codes": [
            "sec_8.js",
            "sec_14.js",
            "sec_17.js",
            "sec_18.js",
            "sec_21.js",
            "sec_25.js",
            "sec_26.js",
            "sec_27.js",
            "sec_30.js"
          ]
        }
      },
      {
        "fea_Tooltip": {
          "color": "rgb(246, 183, 60)",
          "num": 11,
          "codes": [
            "sec_8.js",
            "sec_14.js",
            "sec_17.js",
            "sec_21.js",
            "sec_25.js",
            "sec_2.js",
            "sec_5.js",
            "sec_9.js",
            "sec_12.js",
            "sec_16.js",
            "sec_19.js"
          ]
        }
      },
      {
        "fea_Text": {
          "color": "rgb(246, 183, 60)",
          "num": 14,
          "codes": [
            "sec_26.js",
            "sec_27.js",
            "sec_30.js",
            "sec_5.js",
            "sec_9.js",
            "sec_12.js",
            "sec_19.js",
            "sec_11.js",
            "sec_15.js",
            "sec_22.js",
            "sec_23.js",
            "sec_24.js",
            "sec_28.js",
            "sec_29.js"
          ]
        }
      },
      {
        "fea_Axis": {
          "color": "rgb(246, 183, 60)",
          "num": 16,
          "codes": [
            "sec_8.js",
            "sec_14.js",
            "sec_18.js",
            "sec_5.js",
            "sec_9.js",
            "sec_12.js",
            "sec_19.js",
            "sec_15.js",
            "sec_22.js",
            "sec_23.js",
            "sec_28.js",
            "sec_29.js",
            "sec_3.js",
            "sec_6.js",
            "sec_13.js",
            "sec_20.js"
          ]
        }
      },
      {
        "fea_Canvas": {
          "color": "rgb(246, 183, 60)",
          "num": 2,
          "codes": [
            "sec_14.js",
            "sec_17.js"
          ]
        }
      },
      {
        "fea_Shapes": {
          "color": "rgb(246, 183, 60)",
          "num": 28,
          "codes": [
            "sec_8.js",
            "sec_14.js",
            "sec_17.js",
            "sec_18.js",
            "sec_21.js",
            "sec_25.js",
            "sec_26.js",
            "sec_27.js",
            "sec_30.js",
            "sec_2.js",
            "sec_5.js",
            "sec_9.js",
            "sec_12.js",
            "sec_16.js",
            "sec_19.js",
            "sec_11.js",
            "sec_22.js",
            "sec_23.js",
            "sec_24.js",
            "sec_28.js",
            "sec_29.js",
            "sec_3.js",
            "sec_6.js",
            "sec_13.js",
            "sec_20.js",
            "sec_1.js",
            "sec_4.js",
            "sec_10.js"
          ]
        }
      },
      {
        "cat_Data_Processing": {
          "color": "rgb(246, 183, 60)",
          "num": 6,
          "codes": [
            "sec_19.js",
            "sec_20.js",
            "sec_23.js",
            "sec_24.js",
            "sec_25.js",
            "sec_12.js"
          ]
        }
      },
      {
        "fea_Data_Format": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Import_Data": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Data_Filtering": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Data_Transformation": {
          "color": "rgb(246, 183, 60)",
          "num": 5,
          "codes": [
            "sec_19.js",
            "sec_20.js",
            "sec_23.js",
            "sec_24.js",
            "sec_25.js"
          ]
        }
      },
      {
        "fea_Data_Grouping": {
          "color": "rgb(246, 183, 60)",
          "num": 2,
          "codes": [
            "sec_25.js",
            "sec_12.js"
          ]
        }
      },
      {
        "cat_Interactions_and_Animations": {
          "color": "rgb(246, 183, 60)",
          "num": 16,
          "codes": [
            "sec_5.js",
            "sec_9.js",
            "sec_11.js",
            "sec_12.js",
            "sec_13.js",
            "sec_16.js",
            "sec_21.js",
            "sec_25.js",
            "sec_1.js",
            "sec_2.js",
            "sec_6.js",
            "sec_10.js",
            "sec_14.js",
            "sec_15.js",
            "sec_18.js",
            "sec_20.js"
          ]
        }
      },
      {
        "fea_Selection": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Zoom": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Mouse_Events": {
          "color": "rgb(246, 183, 60)",
          "num": 8,
          "codes": [
            "sec_5.js",
            "sec_9.js",
            "sec_11.js",
            "sec_12.js",
            "sec_13.js",
            "sec_16.js",
            "sec_21.js",
            "sec_25.js"
          ]
        }
      },
      {
        "fea_Animations": {
          "color": "rgb(246, 183, 60)",
          "num": 11,
          "codes": [
            "sec_5.js",
            "sec_9.js",
            "sec_11.js",
            "sec_1.js",
            "sec_2.js",
            "sec_6.js",
            "sec_10.js",
            "sec_14.js",
            "sec_15.js",
            "sec_18.js",
            "sec_20.js"
          ]
        }
      }
    ],
    "thr": [
      {
        "cat_Customizable_Components": {
          "color": "rgb(246, 183, 60)",
          "num": 30,
          "codes": [
            "thr_14.js",
            "thr_2.js",
            "thr_3.js",
            "thr_8.js",
            "thr_13.js",
            "thr_16.js",
            "thr_17.js",
            "thr_18.js",
            "thr_20.js",
            "thr_21.js",
            "thr_24.js",
            "thr_25.js",
            "thr_26.js",
            "thr_28.js",
            "thr_1.js",
            "thr_4.js",
            "thr_5.js",
            "thr_10.js",
            "thr_11.js",
            "thr_15.js",
            "thr_22.js",
            "thr_23.js",
            "thr_27.js",
            "thr_29.js",
            "thr_30.js",
            "thr_6.js",
            "thr_7.js",
            "thr_9.js",
            "thr_12.js",
            "thr_19.js"
          ]
        }
      },
      {
        "fea_Multiple_Chars": {
          "color": "rgb(246, 183, 60)",
          "num": 1,
          "codes": [
            "thr_14.js"
          ]
        }
      },
      {
        "fea_Legend": {
          "color": "rgb(246, 183, 60)",
          "num": 13,
          "codes": [
            "thr_2.js",
            "thr_3.js",
            "thr_8.js",
            "thr_13.js",
            "thr_16.js",
            "thr_17.js",
            "thr_18.js",
            "thr_20.js",
            "thr_21.js",
            "thr_24.js",
            "thr_25.js",
            "thr_26.js",
            "thr_28.js"
          ]
        }
      },
      {
        "fea_Tooltip": {
          "color": "rgb(246, 183, 60)",
          "num": 22,
          "codes": [
            "thr_14.js",
            "thr_2.js",
            "thr_3.js",
            "thr_8.js",
            "thr_13.js",
            "thr_16.js",
            "thr_20.js",
            "thr_21.js",
            "thr_24.js",
            "thr_25.js",
            "thr_26.js",
            "thr_1.js",
            "thr_4.js",
            "thr_5.js",
            "thr_10.js",
            "thr_11.js",
            "thr_15.js",
            "thr_22.js",
            "thr_23.js",
            "thr_27.js",
            "thr_29.js",
            "thr_30.js"
          ]
        }
      },
      {
        "fea_Text": {
          "color": "rgb(246, 183, 60)",
          "num": 2,
          "codes": [
            "thr_14.js",
            "thr_5.js"
          ]
        }
      },
      {
        "fea_Axis": {
          "color": "rgb(246, 183, 60)",
          "num": 26,
          "codes": [
            "thr_14.js",
            "thr_2.js",
            "thr_3.js",
            "thr_8.js",
            "thr_13.js",
            "thr_16.js",
            "thr_20.js",
            "thr_21.js",
            "thr_24.js",
            "thr_25.js",
            "thr_26.js",
            "thr_28.js",
            "thr_1.js",
            "thr_4.js",
            "thr_5.js",
            "thr_10.js",
            "thr_11.js",
            "thr_15.js",
            "thr_23.js",
            "thr_27.js",
            "thr_29.js",
            "thr_30.js",
            "thr_6.js",
            "thr_7.js",
            "thr_9.js",
            "thr_12.js"
          ]
        }
      },
      {
        "fea_Canvas": {
          "color": "rgb(246, 183, 60)",
          "num": 23,
          "codes": [
            "thr_2.js",
            "thr_3.js",
            "thr_8.js",
            "thr_13.js",
            "thr_16.js",
            "thr_20.js",
            "thr_21.js",
            "thr_24.js",
            "thr_25.js",
            "thr_26.js",
            "thr_28.js",
            "thr_4.js",
            "thr_5.js",
            "thr_11.js",
            "thr_15.js",
            "thr_23.js",
            "thr_27.js",
            "thr_29.js",
            "thr_30.js",
            "thr_6.js",
            "thr_7.js",
            "thr_9.js",
            "thr_12.js"
          ]
        }
      },
      {
        "fea_Shapes": {
          "color": "rgb(246, 183, 60)",
          "num": 30,
          "codes": [
            "thr_14.js",
            "thr_2.js",
            "thr_3.js",
            "thr_8.js",
            "thr_13.js",
            "thr_16.js",
            "thr_17.js",
            "thr_18.js",
            "thr_20.js",
            "thr_21.js",
            "thr_24.js",
            "thr_25.js",
            "thr_26.js",
            "thr_28.js",
            "thr_1.js",
            "thr_4.js",
            "thr_5.js",
            "thr_10.js",
            "thr_11.js",
            "thr_15.js",
            "thr_22.js",
            "thr_23.js",
            "thr_27.js",
            "thr_29.js",
            "thr_30.js",
            "thr_6.js",
            "thr_7.js",
            "thr_9.js",
            "thr_12.js",
            "thr_19.js"
          ]
        }
      },
      {
        "cat_Data_Processing": {
          "color": "rgb(246, 183, 60)",
          "num": 2,
          "codes": [
            "thr_30.js",
            "thr_29.js"
          ]
        }
      },
      {
        "fea_Data_Format": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Import_Data": {
          "color": "rgb(246, 183, 60)",
          "num": 2,
          "codes": [
            "thr_30.js",
            "thr_29.js"
          ]
        }
      },
      {
        "fea_Data_Filtering": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Data_Transformation": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Data_Grouping": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "cat_Interactions_and_Animations": {
          "color": "rgb(246, 183, 60)",
          "num": 6,
          "codes": [
            "thr_15.js",
            "thr_5.js",
            "thr_6.js",
            "thr_7.js",
            "thr_30.js",
            "thr_10.js"
          ]
        }
      },
      {
        "fea_Selection": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Zoom": {
          "color": "rgb(246, 183, 60)",
          "num": 1,
          "codes": [
            "thr_15.js"
          ]
        }
      },
      {
        "fea_Mouse_Events": {
          "color": "rgb(246, 183, 60)",
          "num": 5,
          "codes": [
            "thr_15.js",
            "thr_5.js",
            "thr_6.js",
            "thr_7.js",
            "thr_30.js"
          ]
        }
      },
      {
        "fea_Animations": {
          "color": "rgb(246, 183, 60)",
          "num": 2,
          "codes": [
            "thr_5.js",
            "thr_10.js"
          ]
        }
      }
    ]
  },
  "all templates": [
    {
      "name": "cat_Customizable_Components",
      "color": "",
      "fir": 30,
      "sec": 29,
      "thr": 30
    },
    {
      "name": "fea_Multiple_Chars",
      "color": "",
      "fir": 1,
      "sec": 0,
      "thr": 1
    },
    {
      "name": "fea_Legend",
      "color": "",
      "fir": 4,
      "sec": 9,
      "thr": 13
    },
    {
      "name": "fea_Tooltip",
      "color": "",
      "fir": 3,
      "sec": 11,
      "thr": 22
    },
    {
      "name": "fea_Text",
      "color": "",
      "fir": 16,
      "sec": 14,
      "thr": 2
    },
    {
      "name": "fea_Axis",
      "color": "",
      "fir": 25,
      "sec": 16,
      "thr": 26
    },
    {
      "name": "fea_Canvas",
      "color": "",
      "fir": 28,
      "sec": 2,
      "thr": 23
    },
    {
      "name": "fea_Shapes",
      "color": "",
      "fir": 30,
      "sec": 28,
      "thr": 30
    },
    {
      "name": "cat_Data_Processing",
      "color": "",
      "fir": 27,
      "sec": 6,
      "thr": 2
    },
    {
      "name": "fea_Data_Format",
      "color": "",
      "fir": 13,
      "sec": 0,
      "thr": 0
    },
    {
      "name": "fea_Import_Data",
      "color": "",
      "fir": 23,
      "sec": 0,
      "thr": 2
    },
    {
      "name": "fea_Data_Filtering",
      "color": "",
      "fir": 3,
      "sec": 0,
      "thr": 0
    },
    {
      "name": "fea_Data_Transformation",
      "color": "",
      "fir": 13,
      "sec": 5,
      "thr": 0
    },
    {
      "name": "fea_Data_Grouping",
      "color": "",
      "fir": 8,
      "sec": 2,
      "thr": 0
    },
    {
      "name": "cat_Interactions_and_Animations",
      "color": "",
      "fir": 14,
      "sec": 16,
      "thr": 6
    },
    {
      "name": "fea_Selection",
      "color": "",
      "fir": 2,
      "sec": 0,
      "thr": 0
    },
    {
      "name": "fea_Zoom",
      "color": "",
      "fir": 1,
      "sec": 0,
      "thr": 1
    },
    {
      "name": "fea_Mouse_Events",
      "color": "",
      "fir": 10,
      "sec": 8,
      "thr": 5
    },
    {
      "name": "fea_Animations",
      "color": "",
      "fir": 2,
      "sec": 11,
      "thr": 2
    }
  ],
  "labeled files": {
    "fir_14.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_14\"><pre id=\"fir_14_code\" ><code class=\"javascript\"><span class=\"hljs-comment\">// Set the dimensions of the canvas / graph</span>\n<span class=\"hljs-keyword\">var</span>\tmargin = {<span class=\"hljs-attr\">top</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">right</span>: <span class=\"hljs-number\">20</span>, <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">left</span>: <span class=\"hljs-number\">50</span>},\n\twidth = <span class=\"hljs-number\">400</span> - margin.left - margin.right,\n\theight = <span class=\"hljs-number\">220</span> - margin.top - margin.bottom;\n\n<span class=\"hljs-comment\">// Parse the date / time</span>\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Data_Format_0\" class=\"highlights fea_Data_Format\"><span class=\"hljs-keyword\">var</span>\tparseDate = fir.time.format(<span class=\"hljs-string\">\"%d-%b-%y\"</span>).parse;</div>\n\n<span class=\"hljs-comment\">// Set the ranges</span>\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span>\tx = fir.time.scale().range([<span class=\"hljs-number\">0</span>, width]);\n<span class=\"hljs-keyword\">var</span>\ty = fir.scale.linear().range([height, <span class=\"hljs-number\">0</span>]);\n\n<span class=\"hljs-comment\">// Define the axes</span>\n<span class=\"hljs-keyword\">var</span>\txAxis = fir.svg.axis().scale(x)\n\t.orient(<span class=\"hljs-string\">\"bottom\"</span>).ticks(<span class=\"hljs-number\">5</span>);\n\n<span class=\"hljs-keyword\">var</span>\tyAxis = fir.svg.axis().scale(y)\n\t.orient(<span class=\"hljs-string\">\"left\"</span>).ticks(<span class=\"hljs-number\">5</span>);</div>\n\n<span class=\"hljs-comment\">// Define the line</span>\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">var</span>\tvalueline = fir.svg.line()\n\t.x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> x(d.date); })\n\t.y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> y(d.close); });</div>\n    \n<span class=\"hljs-comment\">// Adds the svg canvas</span>\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">var</span>\tchart1 = fir.select(<span class=\"hljs-string\">\"body\"</span>)\n\t.append(<span class=\"hljs-string\">\"svg\"</span>)\n\t\t.attr(<span class=\"hljs-string\">\"width\"</span>, width + margin.left + margin.right)\n\t\t.attr(<span class=\"hljs-string\">\"height\"</span>, height + margin.top + margin.bottom)\n\t.append(<span class=\"hljs-string\">\"g\"</span>)\n\t\t.attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);</div>\n\n<span class=\"hljs-comment\">// Get the data</span>\n<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.csv(<span class=\"hljs-string\">\"data1.csv\"</span></div><span class=\"hljs-string\"></span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, data</span>) </span>{\n\tdata.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n\t\td.date = parseDate(d.date);\n\t\td.close = +d.close;\n\t});\n\n\t<span class=\"hljs-comment\">// Scale the range of the data</span>\n\tx.domain(fir.extent(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.date; }));\n\ty.domain([<span class=\"hljs-number\">0</span>, <div style=\"display: inline;\" id=\"Data_Transformation_0\" class=\"highlights fea_Data_Transformation\">fir.max(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.close; })</div>]);\n\n\t<span class=\"hljs-comment\">// Add the valueline path.</span>\n\t<div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">chart1.append(<span class=\"hljs-string\">\"path\"</span>)\n\t\t.attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"line\"</span>)\n\t\t.attr(<span class=\"hljs-string\">\"d\"</span>, valueline(data));</div>\n\n\t<span class=\"hljs-comment\">// Add the X Axis</span>\n\t<div style=\"display: inline;\" id=\"Axis_2\" class=\"highlights fea_Axis\">chart1.append(<span class=\"hljs-string\">\"g\"</span>)\n\t\t.attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"x axis\"</span>)\n\t\t.attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height + <span class=\"hljs-string\">\")\"</span>)\n\t\t.call(xAxis);\n\n\t<span class=\"hljs-comment\">// Add the Y Axis</span>\n\tchart1.append(<span class=\"hljs-string\">\"g\"</span>)\n\t\t.attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"y axis\"</span>)\n\t\t.call(yAxis);</div>\n\n});\n\n<span class=\"hljs-comment\">// Adds the svg canvas</span>\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Multiple_Chars_0\" class=\"highlights fea_Multiple_Chars\"><span class=\"hljs-keyword\">var</span>\tchart2 = fir.select(<span class=\"hljs-string\">\"body\"</span>)\n\t.append(<span class=\"hljs-string\">\"svg\"</span>)\n\t\t.attr(<span class=\"hljs-string\">\"width\"</span>, width + margin.left + margin.right)\n\t\t.attr(<span class=\"hljs-string\">\"height\"</span>, height + margin.top + margin.bottom)\n\t.append(<span class=\"hljs-string\">\"g\"</span>)\n\t\t.attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);</div>\n\t\t\n<span class=\"hljs-comment\">// Get the data</span>\n<div style=\"display: inline;\" id=\"Import_Data_1\" class=\"highlights fea_Import_Data\">fir.csv(<span class=\"hljs-string\">\"data2.csv\"</span></div><span class=\"hljs-string\"></span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, data</span>) </span>{\n\tdata.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n\t\td.date = parseDate(d.date);\n\t\td.close = +d.close;\n\t});\n\n\t<span class=\"hljs-comment\">// Scale the range of the data</span>\n\tx.domain(fir.extent(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.date; }));\n\ty.domain([<span class=\"hljs-number\">0</span>, fir.max(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.close; })]);\n\n\t<span class=\"hljs-comment\">/</span><span class=\"hljs-comment\"></span><span class=\"hljs-comment\">/ Add the valueline path.</span>\n\t<div style=\"display: inline;\" id=\"Shapes_2\" class=\"highlights fea_Shapes\">chart2.append(<span class=\"hljs-string\">\"path\"</span>)\n\t\t.attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"line\"</span>)\n\t\t.attr(<span class=\"hljs-string\">\"d\"</span>, valueline(data));</div>\n\n\t<span class=\"hljs-comment\">// Add the X Axis</span>\n\t<div style=\"display: inline;\" id=\"Axis_1\" class=\"highlights fea_Axis\">chart2.append(<span class=\"hljs-string\">\"g\"</span>)\n\t\t.attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"x axis\"</span>)\n\t\t.attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height + <span class=\"hljs-string\">\")\"</span>)\n\t\t.call(xAxis);\n\n\t<span class=\"hljs-comment\">// Add the Y Axis</span>\n\tchart2.append(<span class=\"hljs-string\">\"g\"</span>)\n\t\t.attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"y axis\"</span>)\n\t\t.call(yAxis);</div>\n\n});\n<span class=\"hljs-comment\">//https://bl.ocks.org/firnoob/5987480</span></code></pre></div>",
    "fir_3.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_3\"><pre id=\"fir_3_code\" ><code class=\"javascript\"><span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">var</span> margin = {<span class=\"hljs-attr\">top</span>: <span class=\"hljs-number\">10</span>, <span class=\"hljs-attr\">right</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">left</span>: <span class=\"hljs-number\">60</span>},\n    width = <span class=\"hljs-number\">460</span> - margin.left - margin.right,\n    height = <span class=\"hljs-number\">400</span> - margin.top - margin.bottom;\n\n<span class=\"hljs-comment\">// append the svg object to the body of the page</span>\n<span class=\"hljs-keyword\">var</span> svg = fir.select(<span class=\"hljs-string\">\"#my_dataviz\"</span>)\n  .append(<span class=\"hljs-string\">\"svg\"</span>)\n    .attr(<span class=\"hljs-string\">\"width\"</span>, width + margin.left + margin.right)\n    .attr(<span class=\"hljs-string\">\"height\"</span>, height + margin.top + margin.bottom)\n  .append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>,\n          <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);</div>\n\n<span class=\"hljs-comment\">//Read the data</span>\n<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.csv(<span class=\"hljs-string\">\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered_comma.csv\"</span></div><span class=\"hljs-string\"></span>,\n\n  <span class=\"hljs-comment\">// When reading the csv, I must format variables:</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{\n    <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">date</span> : <div style=\"display: inline;\" id=\"Data_Format_0\" class=\"highlights fea_Data_Format\">fir.timeParse(<span class=\"hljs-string\">\"%Y-%m-%d\"</span>)(d.date)</div>, <span class=\"hljs-attr\">value</span> : d.value }\n  },\n\n  <span class=\"hljs-comment\">// Now I can use this dataset:</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{\n\n    <span class=\"hljs-comment\">// Add X axis --&gt; it is a date format</span>\n    <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> x = fir.scaleTime()\n      .domain(fir.extent(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.date; }))\n      .range([ <span class=\"hljs-number\">0</span>, width ]);\n    svg.append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height + <span class=\"hljs-string\">\")\"</span>)\n      .call(fir.axisBottom(x));</div>\n\n    <span class=\"hljs-comment\">// Max value observed:</span>\n    <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Data_Transformation_0\" class=\"highlights fea_Data_Transformation\"><span class=\"hljs-keyword\">const</span> max = fir.max(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> +d.value; })</div>\n\n    <span class=\"hljs-comment\">// Add Y axis</span>\n    <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_1\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> y = fir.scaleLinear()\n      .domain([<span class=\"hljs-number\">0</span>, max])\n      .range([ height, <span class=\"hljs-number\">0</span> ]);\n    svg.append(<span class=\"hljs-string\">\"g\"</span>)\n      .call(fir.axisLeft(y));</div>\n\n    <span class=\"hljs-comment\">// Set the gradient</span>\n   <div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\"> svg.append(<span class=\"hljs-string\">\"linearGradient\"</span>)\n      .attr(<span class=\"hljs-string\">\"id\"</span>, <span class=\"hljs-string\">\"line-gradient\"</span>)\n      .attr(<span class=\"hljs-string\">\"gradientUnits\"</span>, <span class=\"hljs-string\">\"userSpaceOnUse\"</span>)\n      .attr(<span class=\"hljs-string\">\"x1\"</span>, <span class=\"hljs-number\">0</span>)\n      .attr(<span class=\"hljs-string\">\"y1\"</span>, y(<span class=\"hljs-number\">0</span>))\n      .attr(<span class=\"hljs-string\">\"x2\"</span>, <span class=\"hljs-number\">0</span>)\n      .attr(<span class=\"hljs-string\">\"y2\"</span>, y(max))\n      .selectAll(<span class=\"hljs-string\">\"stop\"</span>)\n        .data([\n          {<span class=\"hljs-attr\">offset</span>: <span class=\"hljs-string\">\"0%\"</span>, <span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\">\"blue\"</span>},\n          {<span class=\"hljs-attr\">offset</span>: <span class=\"hljs-string\">\"100%\"</span>, <span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\">\"red\"</span>}\n        ])\n      .enter().append(<span class=\"hljs-string\">\"stop\"</span>)\n        .attr(<span class=\"hljs-string\">\"offset\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.offset; })\n        .attr(<span class=\"hljs-string\">\"stop-color\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.color; });</div>\n\n    <span class=\"hljs-comment\">// Add the line</span>\n    <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">svg.append(<span class=\"hljs-string\">\"path\"</span>)\n      .datum(data)\n      .attr(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"none\"</span>)\n      .attr(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"url(#line-gradient)\"</span> )\n      .attr(<span class=\"hljs-string\">\"stroke-width\"</span>, <span class=\"hljs-number\">2</span>)\n      .attr(<span class=\"hljs-string\">\"d\"</span>, fir.line()\n        .x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> x(d.date) })\n        .y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> y(d.value) })\n        )</div>\n\n})</code></pre></div>",
    "fir_6.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_6\"><pre id=\"fir_6_code\" ><code class=\"javascript\"><span class=\"hljs-keyword\">var</span> myData = <span class=\"hljs-string\">\"date\tNew York\tSan Francisco\tAustin\\n\\\n20111001\t63.4\t62.7\t72.2\\n\\\n20111002\t58.0\t59.9\t67.7\\n\\\n20111003\t53.3\t59.1\t69.4\\n\\\n20111004\t55.7\t58.8\t68.0\\n\\\n20111005\t64.2\t58.7\t72.4\\n\\\n20111006\t58.8\t57.0\t77.0\\n\\\n20111007\t57.9\t56.7\t82.3\\n\\\n20111008\t61.8\t56.8\t78.9\\n\\\n20111009\t69.3\t56.7\t68.8\\n\\\n20111010\t71.2\t60.1\t68.7\\n\\\n20111011\t68.7\t61.1\t70.3\\n\\\n20111012\t61.8\t61.5\t75.3\\n\\\n20111013\t63.0\t64.3\t76.6\\n\\\n20111014\t66.9\t67.1\t66.6\\n\\\n20111015\t61.7\t64.6\t68.0\\n\\\n20111016\t61.8\t61.6\t70.6\\n\\\n20111017\t62.8\t61.1\t71.1\\n\\\n20111018\t60.8\t59.2\t70.0\\n\\\n20111019\t62.1\t58.9\t61.6\\n\\\n20111020\t65.1\t57.2\t57.4\\n\\\n20111021\t55.6\t56.4\t64.3\\n\\\n20111022\t54.4\t60.7\t72.4\\n\"</span>;\n\n<span class=\"hljs-keyword\"></span><span class=\"hljs-keyword\"></span><span class=\"hljs-keyword\">var</span> margin = {\n    <span class=\"hljs-attr\">top</span>: <span class=\"hljs-number\">20</span>,\n    <span class=\"hljs-attr\">right</span>: <span class=\"hljs-number\">80</span>,\n    <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-number\">30</span>,\n    <span class=\"hljs-attr\">left</span>: <span class=\"hljs-number\">50</span>\n  },\n  width = <span class=\"hljs-number\">900</span> - margin.left - margin.right,\n  height = <span class=\"hljs-number\">500</span> - margin.top - margin.bottom;\n\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Data_Format_0\" class=\"highlights fea_Data_Format\"><span class=\"hljs-keyword\">var</span> parseDate = fir.time.format(<span class=\"hljs-string\">\"%Y%m%d\"</span>).parse;</div>\n\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> x = fir.time.scale()\n  .range([<span class=\"hljs-number\">0</span>, width]);\n\n<span class=\"hljs-keyword\">var</span> y = fir.scale.linear()\n  .range([height, <span class=\"hljs-number\">0</span>]);\n\n<span class=\"hljs-keyword\">var</span> color = fir.scale.category10();\n\n<span class=\"hljs-keyword\">var</span> xAxis = fir.svg.axis()\n  .scale(x)\n  .orient(<span class=\"hljs-string\">\"bottom\"</span>);\n\n<span class=\"hljs-keyword\">var</span> yAxis = fir.svg.axis()\n  .scale(y)\n  .orient(<span class=\"hljs-string\">\"left\"</span>);</div>\n\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">var</span> line = fir.svg.line()\n  .interpolate(<span class=\"hljs-string\">\"basis\"</span>)\n  .x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> x(d.date);\n  })\n  .y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> y(d.temperature);\n  });</div>\n\n<span class=\"hljs-keyword\">v</span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">ar</span> svg = fir.select(<span class=\"hljs-string\">\"body\"</span>).append(<span class=\"hljs-string\">\"svg\"</span>)\n  .attr(<span class=\"hljs-string\">\"width\"</span>, width + margin.left + margin.right)\n  .attr(<span class=\"hljs-string\">\"height\"</span>, height + margin.top + margin.bottom)\n  .append(<span class=\"hljs-string\">\"g\"</span>)\n  .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);</div>\n\n<span class=\"hljs-keyword\">var</span> data = fir.tsv.parse(myData);\n\n<div style=\"display: inline;\" id=\"Data_Filtering_0\" class=\"highlights fea_Data_Filtering\">color.domain(fir.keys(data[<span class=\"hljs-number\">0</span>]).filter(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">key</span>) </span>{\n  <span class=\"hljs-keyword\">return</span> key !== <span class=\"hljs-string\">\"date\"</span>;\n}));</div>\n\ndata.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n  d.date = parseDate(d.date);\n});\n\n<span class=\"hljs-keyword\">var</span> cities = color.domain().map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">name</span>) </span>{\n  <span class=\"hljs-keyword\">return</span> {\n    <span class=\"hljs-attr\">name</span>: name,\n    <span class=\"hljs-attr\">values</span>: data.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n      <span class=\"hljs-keyword\">return</span> {\n        <span class=\"hljs-attr\">date</span>: d.date,\n        <span class=\"hljs-attr\">temperature</span>: +d[name]\n      };\n    })\n  };\n});\n\nx.domain(fir.extent(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n  <span class=\"hljs-keyword\">return</span> d.date;\n}));\n\ny.domain([\n  <div style=\"display: inline;\" id=\"Data_Transformation_1\" class=\"highlights fea_Data_Transformation\">fir.min(cities, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> fir.min(c.values, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">v</span>) </span>{\n      <span class=\"hljs-keyword\">return</span> v.temperature;\n    });\n  })</div>,\n  <div style=\"display: inline;\" id=\"Data_Transformation_0\" class=\"highlights fea_Data_Transformation\">fir.max(cities, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> fir.max(c.values, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">v</span>) </span>{\n      <span class=\"hljs-keyword\">return</span> v.temperature;\n    });\n  })</div>\n]);\n\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\"><span class=\"hljs-keyword\">var</span> legend = svg.selectAll(<span class=\"hljs-string\">'g'</span>)\n  .data(cities)\n  .enter()\n  .append(<span class=\"hljs-string\">'g'</span>)\n  .attr(<span class=\"hljs-string\">'class'</span>, <span class=\"hljs-string\">'legend'</span>);</div>\n\n<div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">legend.append(<span class=\"hljs-string\">'rect'</span>)\n  .attr(<span class=\"hljs-string\">'x'</span>, width - <span class=\"hljs-number\">20</span>)\n  .attr(<span class=\"hljs-string\">'y'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d, i</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> i * <span class=\"hljs-number\">20</span>;\n  })\n  .attr(<span class=\"hljs-string\">'width'</span>, <span class=\"hljs-number\">10</span>)\n  .attr(<span class=\"hljs-string\">'height'</span>, <span class=\"hljs-number\">10</span>)\n  .style(<span class=\"hljs-string\">'fill'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> color(d.name);\n  });</div>\n\n<div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">legend.append(<span class=\"hljs-string\">'text'</span>)\n  .attr(<span class=\"hljs-string\">'x'</span>, width - <span class=\"hljs-number\">8</span>)\n  .attr(<span class=\"hljs-string\">'y'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d, i</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> (i * <span class=\"hljs-number\">20</span>) + <span class=\"hljs-number\">9</span>;\n  })\n  .text(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> d.name;\n  });</div>\n\n<div style=\"display: inline;\" id=\"Axis_1\" class=\"highlights fea_Axis\">svg.append(<span class=\"hljs-string\">\"g\"</span>)\n  .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"x axis\"</span>)\n  .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height + <span class=\"hljs-string\">\")\"</span>)\n  .call(xAxis);\n\nsvg.append(<span class=\"hljs-string\">\"g\"</span>)\n  .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"y axis\"</span>)\n  .call(yAxis)\n  .append(<span class=\"hljs-string\">\"text\"</span>)\n  .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"rotate(-90)\"</span>)\n  .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-number\">6</span>)\n  .attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\".71em\"</span>)\n  .style(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"end\"</span>)\n  .text(<span class=\"hljs-string\">\"Temperature (ºF)\"</span>);\n</div>\n<span class=\"hljs-keyword\">var</span> city = svg.selectAll(<span class=\"hljs-string\">\".city\"</span>)\n  .data(cities)\n  .enter().append(<span class=\"hljs-string\">\"g\"</span>)\n  .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"city\"</span>);\n\n<div style=\"display: inline;\" id=\"Shapes_2\" class=\"highlights fea_Shapes\">city.append(<span class=\"hljs-string\">\"path\"</span>)\n  .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"line\"</span>)\n  .attr(<span class=\"hljs-string\">\"d\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> line(d.values);\n  })\n  .style(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> color(d.name);\n  });</div>\n\n<div style=\"display: inline;\" id=\"Text_1\" class=\"highlights fea_Text\">city.append(<span class=\"hljs-string\">\"text\"</span>)\n  .datum(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> {\n      <span class=\"hljs-attr\">name</span>: d.name,\n      <span class=\"hljs-attr\">value</span>: d.values[d.values.length - <span class=\"hljs-number\">1</span>]\n    };\n  })\n  .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"translate(\"</span> + x(d.value.date) + <span class=\"hljs-string\">\",\"</span> + y(d.value.temperature) + <span class=\"hljs-string\">\")\"</span>;\n  })\n  .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-number\">3</span>)\n  .attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\".35em\"</span>)\n  .text(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> d.name;\n  });</div>\n\n<span class=\"hljs-keyword\">var</span> mouseG = svg.append(<span class=\"hljs-string\">\"g\"</span>)\n  .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"mouse-over-effects\"</span>);\n\n<div style=\"display: inline;\" id=\"Shapes_3\" class=\"highlights fea_Shapes\">mouseG.append(<span class=\"hljs-string\">\"path\"</span>) <span class=\"hljs-comment\">// this is the black vertical line to follow mouse</span>\n  .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"mouse-line\"</span>)\n  .style(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"black\"</span>)\n  .style(<span class=\"hljs-string\">\"stroke-width\"</span>, <span class=\"hljs-string\">\"1px\"</span>)\n  .style(<span class=\"hljs-string\">\"opacity\"</span>, <span class=\"hljs-string\">\"0\"</span>);\n  \n<span class=\"hljs-keyword\">var</span> lines = <span class=\"hljs-built_in\">document</span>.getElementsByClassName(<span class=\"hljs-string\">'line'</span>);\n\n<span class=\"hljs-keyword\">var</span> mousePerLine = mouseG.selectAll(<span class=\"hljs-string\">'.mouse-per-line'</span>)\n  .data(cities)\n  .enter()\n  .append(<span class=\"hljs-string\">\"g\"</span>)\n  .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"mouse-per-line\"</span>);\n\nmousePerLine.append(<span class=\"hljs-string\">\"circle\"</span>)\n  .attr(<span class=\"hljs-string\">\"r\"</span>, <span class=\"hljs-number\">7</span>)\n  .style(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> color(d.name);\n  })\n  .style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"none\"</span>)\n  .style(<span class=\"hljs-string\">\"stroke-width\"</span>, <span class=\"hljs-string\">\"1px\"</span>)\n  .style(<span class=\"hljs-string\">\"opacity\"</span>, <span class=\"hljs-string\">\"0\"</span>);</div>\n\n<div style=\"display: inline;\" id=\"Text_2\" class=\"highlights fea_Text\">mousePerLine.append(<span class=\"hljs-string\">\"text\"</span>)\n  .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(10,3)\"</span>);</div>\n\nmouseG.append(<span class=\"hljs-string\">'svg:rect'</span>) <span class=\"hljs-comment\">// append a rect to catch mouse movements on canvas</span>\n  .attr(<span class=\"hljs-string\">'width'</span>, width) <span class=\"hljs-comment\">// can't catch mouse events on a g element</span>\n  .attr(<span class=\"hljs-string\">'height'</span>, height)\n  .attr(<span class=\"hljs-string\">'fill'</span>, <span class=\"hljs-string\">'none'</span>)\n  .attr(<span class=\"hljs-string\">'pointer-events'</span>, <span class=\"hljs-string\">'all'</span>)\n  <div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\">.on(<span class=\"hljs-string\">'mouseout'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span></div><span class=\"hljs-function\"></span>{ <span class=\"hljs-comment\">// on mouse out hide line, circles and text</span>\n    fir.select(<span class=\"hljs-string\">\".mouse-line\"</span>)\n      .style(<span class=\"hljs-string\">\"opacity\"</span>, <span class=\"hljs-string\">\"0\"</span>);\n    fir.selectAll(<span class=\"hljs-string\">\".mouse-per-line circle\"</span>)\n      .style(<span class=\"hljs-string\">\"opacity\"</span>, <span class=\"hljs-string\">\"0\"</span>);\n    fir.selectAll(<span class=\"hljs-string\">\".mouse-per-line text\"</span>)\n      .style(<span class=\"hljs-string\">\"opacity\"</span>, <span class=\"hljs-string\">\"0\"</span>);\n  })\n  <div style=\"display: inline;\" id=\"Mouse_Events_1\" class=\"highlights fea_Mouse_Events\">.on(<span class=\"hljs-string\">'mouseover'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span></div><span class=\"hljs-function\"> </span>{ <span class=\"hljs-comment\">// on mouse in show line, circles and text</span>\n    fir.select(<span class=\"hljs-string\">\".mouse-line\"</span>)\n      .style(<span class=\"hljs-string\">\"opacity\"</span>, <span class=\"hljs-string\">\"1\"</span>);\n    fir.selectAll(<span class=\"hljs-string\">\".mouse-per-line circle\"</span>)\n      .style(<span class=\"hljs-string\">\"opacity\"</span>, <span class=\"hljs-string\">\"1\"</span>);\n    fir.selectAll(<span class=\"hljs-string\">\".mouse-per-line text\"</span>)\n      .style(<span class=\"hljs-string\">\"opacity\"</span>, <span class=\"hljs-string\">\"1\"</span>);\n  })\n  <div style=\"display: inline;\" id=\"Mouse_Events_2\" class=\"highlights fea_Mouse_Events\">.on(<span class=\"hljs-string\">'mousemove'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span></div><span class=\"hljs-function\"> </span>{ <span class=\"hljs-comment\">// mouse moving over canvas</span>\n    <span class=\"hljs-keyword\">var</span> mouse = fir.mouse(<span class=\"hljs-built_in\">this</span>);\n    fir.select(<span class=\"hljs-string\">\".mouse-line\"</span>)\n      .attr(<span class=\"hljs-string\">\"d\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n        <span class=\"hljs-keyword\">var</span> d = <span class=\"hljs-string\">\"M\"</span> + mouse[<span class=\"hljs-number\">0</span>] + <span class=\"hljs-string\">\",\"</span> + height;\n        d += <span class=\"hljs-string\">\" \"</span> + mouse[<span class=\"hljs-number\">0</span>] + <span class=\"hljs-string\">\",\"</span> + <span class=\"hljs-number\">0</span>;\n        <span class=\"hljs-keyword\">return</span> d;\n      });\n\n    fir.selectAll(<span class=\"hljs-string\">\".mouse-per-line\"</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d, i</span>) </span>{\n        <span class=\"hljs-built_in\">console</span>.log(width/mouse[<span class=\"hljs-number\">0</span>])\n        <span class=\"hljs-keyword\">var</span> xDate = x.invert(mouse[<span class=\"hljs-number\">0</span>]),\n            bisect = fir.bisector(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.date; }).right;\n            idx = bisect(d.values, xDate);\n        \n        <span class=\"hljs-keyword\">var</span> beginning = <span class=\"hljs-number\">0</span>,\n            end = lines[i].getTotalLength(),\n            target = <span class=\"hljs-literal\">null</span>;\n\n        <span class=\"hljs-keyword\">while</span> (<span class=\"hljs-literal\">true</span>){\n          target = <span class=\"hljs-built_in\">Math</span>.floor((beginning + end) / <span class=\"hljs-number\">2</span>);\n          pos = lines[i].getPointAtLength(target);\n          <span class=\"hljs-keyword\">if</span> ((target === end || target === beginning) &amp;&amp; pos.x !== mouse[<span class=\"hljs-number\">0</span>]) {\n              <span class=\"hljs-keyword\">break</span>;\n          }\n          <span class=\"hljs-keyword\">if</span> (pos.x &gt; mouse[<span class=\"hljs-number\">0</span>])      end = target;\n          <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (pos.x &lt; mouse[<span class=\"hljs-number\">0</span>]) beginning = target;\n          <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">break</span>; <span class=\"hljs-comment\">//position found</span>\n        }\n        \n        fir.select(<span class=\"hljs-built_in\">this</span>).select(<span class=\"hljs-string\">'text'</span>)\n          .text(y.invert(pos.y).toFixed(<span class=\"hljs-number\">2</span>));\n          \n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"translate(\"</span> + mouse[<span class=\"hljs-number\">0</span>] + <span class=\"hljs-string\">\",\"</span> + pos.y +<span class=\"hljs-string\">\")\"</span>;\n      });\n  });</code></pre></div>",
    "fir_13.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_13\"><pre id=\"fir_13_code\" ><code class=\"javascript\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getTextWidth</span>(<span class=\"hljs-params\">text, fontSize, fontName</span>) </span>{\n    c = <span class=\"hljs-built_in\">document</span>.createElement(<span class=\"hljs-string\">\"canvas\"</span>);\n    ctx = c.getContext(<span class=\"hljs-string\">\"2d\"</span>);\n    ctx.font = fontSize + <span class=\"hljs-string\">' '</span> + fontName;\n    <span class=\"hljs-keyword\">return</span> ctx.measureText(text).width;\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">DataSegregator</span>(<span class=\"hljs-params\">array, on</span>) </span>{\n    <span class=\"hljs-keyword\">var</span> SegData;\n    OrdinalPositionHolder = {\n        <span class=\"hljs-attr\">valueOf</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n            thisObject = <span class=\"hljs-built_in\">this</span>;\n            keys = <span class=\"hljs-built_in\">Object</span>.keys(thisObject);\n            keys.splice(keys.indexOf(<span class=\"hljs-string\">\"valueOf\"</span>), <span class=\"hljs-number\">1</span>);\n            keys.splice(keys.indexOf(<span class=\"hljs-string\">\"keys\"</span>), <span class=\"hljs-number\">1</span>);\n            <span class=\"hljs-keyword\">return</span> keys.length == <span class=\"hljs-number\">0</span> ? -<span class=\"hljs-number\">1</span> : <div style=\"display: inline;\" id=\"Data_Transformation_0\" class=\"highlights fea_Data_Transformation\">fir.max(keys, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> thisObject[d] })</div>\n        }\n        , <span class=\"hljs-attr\">keys</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n            keys = <span class=\"hljs-built_in\">Object</span>.keys(thisObject);\n            keys.splice(keys.indexOf(<span class=\"hljs-string\">\"valueOf\"</span>), <span class=\"hljs-number\">1</span>);\n            keys.splice(keys.indexOf(<span class=\"hljs-string\">\"keys\"</span>), <span class=\"hljs-number\">1</span>);\n            <span class=\"hljs-keyword\">return</span> keys;\n        }\n    }\n    array[<span class=\"hljs-number\">0</span>].map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d[on] }).forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">b</span>) </span>{\n        value = OrdinalPositionHolder.valueOf();\n        OrdinalPositionHolder[b] = OrdinalPositionHolder &gt; -<span class=\"hljs-number\">1</span> ? ++value : <span class=\"hljs-number\">0</span>;\n    })\n\n    SegData = OrdinalPositionHolder.keys().map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n        <span class=\"hljs-keyword\">return</span> [];\n    });\n\n    array.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{\n        d.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">b</span>) </span>{\n            SegData[OrdinalPositionHolder[b[on]]].push(b);\n        })\n    });\n\n    <span class=\"hljs-keyword\">return</span> SegData;\n}\n\n\nData = [\n{ <span class=\"hljs-attr\">Date</span>: <span class=\"hljs-string\">\"2016-06-14\"</span>, <span class=\"hljs-attr\">Categories</span>: [{ <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Category1\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">368</span> }, { <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Category2\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">321</span> }, { <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Category3\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">524</span> }], <span class=\"hljs-attr\">LineCategory</span>: [{ <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Line1\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">69</span> }, { <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Line2\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">63</span> }] },\n{ <span class=\"hljs-attr\">Date</span>: <span class=\"hljs-string\">\"2016-06-15\"</span>, <span class=\"hljs-attr\">Categories</span>: [{ <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Category1\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">521</span> }, { <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Category2\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">123</span> }, { <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Category3\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">653</span> }], <span class=\"hljs-attr\">LineCategory</span>: [{ <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Line1\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">89</span> }, { <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Line2\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">96</span> }] },\n{ <span class=\"hljs-attr\">Date</span>: <span class=\"hljs-string\">\"2016-06-17\"</span>, <span class=\"hljs-attr\">Categories</span>: [{ <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Category1\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">368</span> }, { <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Category2\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">236</span> }, { <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Category3\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">537</span> }], <span class=\"hljs-attr\">LineCategory</span>: [{ <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Line1\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">63</span> }, { <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Line2\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">35</span> }] },\n{ <span class=\"hljs-attr\">Date</span>: <span class=\"hljs-string\">\"2016-06-18\"</span>, <span class=\"hljs-attr\">Categories</span>: [{ <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Category1\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">423</span> }, { <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Category2\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">330</span> }, { <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Category3\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">689</span> }], <span class=\"hljs-attr\">LineCategory</span>: [{ <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Line1\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">86</span> }, { <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Line2\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">45</span> }] },\n{ <span class=\"hljs-attr\">Date</span>: <span class=\"hljs-string\">\"2016-06-19\"</span>, <span class=\"hljs-attr\">Categories</span>: [{ <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Category1\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">601</span> }, { <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Category2\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">423</span> }, { <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Category3\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">490</span> }], <span class=\"hljs-attr\">LineCategory</span>: [{ <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Line1\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">65</span> }, { <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Line2\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">63</span> }] },\n{ <span class=\"hljs-attr\">Date</span>: <span class=\"hljs-string\">\"2016-06-20\"</span>, <span class=\"hljs-attr\">Categories</span>: [{ <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Category1\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">412</span> }, { <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Category2\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">461</span> }, { <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Category3\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">321</span> }], <span class=\"hljs-attr\">LineCategory</span>: [{ <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Line1\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">75</span> }, { <span class=\"hljs-attr\">Name</span>: <span class=\"hljs-string\">\"Line2\"</span>, <span class=\"hljs-attr\">Value</span>: <span class=\"hljs-number\">85</span> }] }\n]\n\n<span class=\"hljs-keyword\">var</span> margin = { <span class=\"hljs-attr\">top</span>: <span class=\"hljs-number\">20</span>, <span class=\"hljs-attr\">right</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-number\">60</span>, <span class=\"hljs-attr\">left</span>: <span class=\"hljs-number\">40</span> },\n    width = <span class=\"hljs-number\">960</span> - margin.left - margin.right,\n    height = <span class=\"hljs-number\">500</span> - margin.top - margin.bottom;\n\n<span class=\"hljs-keyword\">var</span> textWidthHolder = <span class=\"hljs-number\">0</span>;\n<span class=\"hljs-comment\">/// Adding Date in LineCategory</span>\nData.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{\n    d.LineCategory.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">b</span>) </span>{\n        b.Date = d.Date;\n    })\n});\n\n\n\n\n<span class=\"hljs-keyword\">var</span> Categories = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Array</span>();\n<span class=\"hljs-comment\">// Extension method declaration</span>\n\nCategories.pro\n\n<span class=\"hljs-keyword\">var</span> Data;\n<span class=\"hljs-keyword\">var</span> ageNames;\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> x0 = fir.scale.ordinal()\n    .rangeRoundBands([<span class=\"hljs-number\">0</span>, width], <span class=\"hljs-number\">.1</span>);\n<span class=\"hljs-keyword\">var</span> XLine = fir.scale.ordinal()\n    .rangeRoundPoints([<span class=\"hljs-number\">0</span>, width], <span class=\"hljs-number\">.1</span>);\n<span class=\"hljs-keyword\">var</span> x1 = fir.scale.ordinal();\n\n<span class=\"hljs-keyword\">var</span> y = fir.scale.linear()\n    .range([height, <span class=\"hljs-number\">0</span>]);\n\n<span class=\"hljs-keyword\">var</span> YLine = fir.scale.linear().range([height, <span class=\"hljs-number\">0</span>])\n.domain([<span class=\"hljs-number\">0</span>, fir.max(Data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> fir.max(d.LineCategory, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">b</span>) </span>{ <span class=\"hljs-keyword\">return</span> b.Value }) })]);</div>\n\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_1\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> color = fir.scale.ordinal()\n    .range([<span class=\"hljs-string\">\"#98abc5\"</span>, <span class=\"hljs-string\">\"#8a89a6\"</span>, <span class=\"hljs-string\">\"#7b6888\"</span>, <span class=\"hljs-string\">\"#6b486b\"</span>, <span class=\"hljs-string\">\"#a05d56\"</span>, <span class=\"hljs-string\">\"#d0743c\"</span>, <span class=\"hljs-string\">\"#ff8c00\"</span>]);</div>\n\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">var</span> line = fir.svg.line().x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> x0(d.Date) + x0.rangeBand() / <span class=\"hljs-number\">2</span>;\n}).y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> YLine(d.Value) });</div>\n\n\n\n\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_2\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> xAxis = fir.svg.axis()\n    .scale(x0)\n    .orient(<span class=\"hljs-string\">\"bottom\"</span>);\n\n<span class=\"hljs-keyword\">var</span> yAxis = fir.svg.axis()\n    .scale(y)\n    .orient(<span class=\"hljs-string\">\"left\"</span>)\n    .tickFormat(fir.format(<span class=\"hljs-string\">\".2s\"</span>));\n\n<span class=\"hljs-keyword\">var</span> YLeftAxis = fir.svg.axis().scale(YLine).orient(<span class=\"hljs-string\">\"right\"</span>).tickFormat(fir.format(<span class=\"hljs-string\">\".2s\"</span>));</div>\n\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">var</span> svg = fir.select(<span class=\"hljs-string\">\"body\"</span>).append(<span class=\"hljs-string\">\"svg\"</span>)\n    .attr(<span class=\"hljs-string\">\"width\"</span>, width + margin.left + margin.right)\n    .attr(<span class=\"hljs-string\">\"height\"</span>, height + margin.top + margin.bottom)\n  .append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);</div>\n\n\n\n\n\n<span class=\"hljs-comment\">// Bar Data categories</span>\nData.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{\n    d.Categories.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">b</span>) </span>{\n        <span class=\"hljs-keyword\">if</span> (Categories.findIndex(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">c</span>) </span>{ <span class=\"hljs-keyword\">return</span> c.Name===b.Name}) == -<span class=\"hljs-number\">1</span>) {\n            b.Type = <span class=\"hljs-string\">\"bar\"</span>;\n            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-built_in\">JSON</span>.stringify(b))\n            Categories.push(b)\n        }\n    })\n});\n\n\n<span class=\"hljs-comment\">// Line Data categories</span>\nData.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{\n    d.LineCategory.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">b</span>) </span>{\n        <span class=\"hljs-keyword\">if</span> (Categories.findIndex(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">c</span>) </span>{ <span class=\"hljs-keyword\">return</span> c.Name === b.Name }) == -<span class=\"hljs-number\">1</span>) {\n            b.Type = <span class=\"hljs-string\">\"line\"</span>;\n            <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-built_in\">JSON</span>.stringify(b))\n            Categories.push(b)\n        }\n    })\n});\n\n<span class=\"hljs-comment\">// Processing Line data</span>\n<div style=\"display: inline;\" id=\"Data_Grouping_0\" class=\"highlights fea_Data_Grouping\">lineData = DataSegregator(Data.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.LineCategory }), <span class=\"hljs-string\">\"Name\"</span>);</div>\n\n<span class=\"hljs-comment\">// Line Coloring</span>\nLineColor = fir.scale.ordinal();\nLineColor.domain(<div style=\"display: inline;\" id=\"Data_Filtering_0\" class=\"highlights fea_Data_Filtering\">Categories.filter(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.Type == <span class=\"hljs-string\">\"line\"</span> })</div>.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.Name }));\nLineColor.range([<span class=\"hljs-string\">\"#d40606\"</span>, <span class=\"hljs-string\">\"#06bf00\"</span>, <span class=\"hljs-string\">\"#98bdc5\"</span>, <span class=\"hljs-string\">\"#671919\"</span>, <span class=\"hljs-string\">\"#0b172b\"</span>])\nx0.domain(Data.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.Date; }));\nXLine.domain(Data.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.Date; }));\nx1.domain(Categories.filter(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.Type == <span class=\"hljs-string\">\"bar\"</span> }).map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.Name})).rangeRoundBands([<span class=\"hljs-number\">0</span>, x0.rangeBand()]);\ny.domain([<span class=\"hljs-number\">0</span>, <div style=\"display: inline;\" id=\"Data_Transformation_1\" class=\"highlights fea_Data_Transformation\">fir.max(Data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> fir.max(d.Categories, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.Value; }); })</div>]);\n\nsvg.append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"x axis\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height + <span class=\"hljs-string\">\")\"</span>)\n    .call(xAxis);\n\nsvg.append(<span class=\"hljs-string\">\"g\"</span>)\n   .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"y axis\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + (width) + <span class=\"hljs-string\">\",0)\"</span>)\n   .call(YLeftAxis)\n\n <div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">.append(<span class=\"hljs-string\">\"text\"</span>)\n   .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"rotate(-90)\"</span>)\n   .attr(<span class=\"hljs-string\">\"y\"</span>, -<span class=\"hljs-number\">10</span>)\n\n   .attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\".71em\"</span>)\n   .style(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"end\"</span>)\n   .text(<span class=\"hljs-string\">\"Percent\"</span>);</div>\n\nsvg.append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"y axis\"</span>)\n    .call(yAxis)\n  .append(<span class=\"hljs-string\">\"text\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"rotate(-90)\"</span>)\n    .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-number\">6</span>)\n    .attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\".71em\"</span>)\n    .style(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"end\"</span>)\n    .text(<span class=\"hljs-string\">\"Population\"</span>);\n\n\n<span class=\"hljs-keyword\">var</span> state = svg.selectAll(<span class=\"hljs-string\">\".state\"</span>)\n    .data(Data)\n  .enter().append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"state\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"translate(\"</span> + x0(d.Date) + <span class=\"hljs-string\">\",0)\"</span>; });\n\n<div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">state.selectAll(<span class=\"hljs-string\">\"rect\"</span>)\n    .data(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.Categories; })\n  .enter().append(<span class=\"hljs-string\">\"rect\"</span>)\n    .attr(<span class=\"hljs-string\">\"width\"</span>, x1.rangeBand())\n    .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> x1(d.Name); })\n    .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> y(d.Value); })\n    <span class=\"hljs-comment\">//.attr(\"height\", function (d) { return height - y(d.Value); })</span>\n    .style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> color(d.Name); })\n    .transition().delay(<span class=\"hljs-number\">500</span>).attrTween(<span class=\"hljs-string\">\"height\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{\n        <span class=\"hljs-keyword\">var</span> i = fir.interpolate(<span class=\"hljs-number\">0</span>, height - y(d.Value));\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">t</span>)\n        </span>{\n            <span class=\"hljs-keyword\">return</span> i(t);\n        }\n    });\n\n<span class=\"hljs-comment\">// drawaing lines</span>\nsvg.selectAll(<span class=\"hljs-string\">\".lines\"</span>).data(lineData).enter().append(<span class=\"hljs-string\">\"g\"</span>).attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"line\"</span>)\n.each(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{\n    Name=d[<span class=\"hljs-number\">0</span>].Name\n    fir.select(<span class=\"hljs-built_in\">this</span>).append(<span class=\"hljs-string\">\"path\"</span>).attr(<span class=\"hljs-string\">\"d\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">b</span>) </span>{ <span class=\"hljs-keyword\">return</span> line(b) }).style({ <span class=\"hljs-string\">\"stroke-width\"</span>: <span class=\"hljs-string\">\"2px\"</span>, <span class=\"hljs-string\">\"fill\"</span>: <span class=\"hljs-string\">\"none\"</span> }).style(<span class=\"hljs-string\">\"stroke\"</span>, LineColor(Name)).transition().duration(<span class=\"hljs-number\">1500</span>);\n})</div>\n\n\n<span class=\"hljs-comment\">// Legends</span>\n\n<span class=\"hljs-keyword\">var</span> LegendHolder = svg.append(<span class=\"hljs-string\">\"g\"</span>).attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"legendHolder\"</span>);\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\"><span class=\"hljs-keyword\">var</span> legend = LegendHolder.selectAll(<span class=\"hljs-string\">\".legend\"</span>)\n    .data(Categories.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> {<span class=\"hljs-string\">\"Name\"</span>:d.Name,<span class=\"hljs-string\">\"Type\"</span>:d.Type}}))\n  .enter().append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"legend\"</span>)</div>\n    .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d, i</span>) </span>{ <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"translate(0,\"</span> +( height+ margin.bottom/<span class=\"hljs-number\">2</span> )+ <span class=\"hljs-string\">\")\"</span>; })\n    .each(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d,i</span>) </span>{\n        <span class=\"hljs-comment\">//  Legend Symbols</span>\n\n\n        <div style=\"display: inline;\" id=\"Shapes_2\" class=\"highlights fea_Shapes\">fir.select(<span class=\"hljs-built_in\">this</span>).append(<span class=\"hljs-string\">\"rect\"</span>)\n        .attr(<span class=\"hljs-string\">\"width\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{ <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">18</span> })\n        .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">b</span>) </span>{\n\n            left = (i+<span class=\"hljs-number\">1</span>) * <span class=\"hljs-number\">15</span> + i * <span class=\"hljs-number\">18</span> + i * <span class=\"hljs-number\">5</span> + textWidthHolder;\n            <span class=\"hljs-keyword\">return</span> left;\n        })\n         .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">b</span>) </span>{ <span class=\"hljs-keyword\">return</span> b.Type == <span class=\"hljs-string\">'bar'</span>?<span class=\"hljs-number\">0</span>:<span class=\"hljs-number\">7</span>})\n        .attr(<span class=\"hljs-string\">\"height\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">b</span>) </span>{ <span class=\"hljs-keyword\">return</span> b.Type== <span class=\"hljs-string\">'bar'</span>? <span class=\"hljs-number\">18</span>:<span class=\"hljs-number\">5</span> })\n        .style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">b</span>) </span>{ <span class=\"hljs-keyword\">return</span> b.Type == <span class=\"hljs-string\">'bar'</span> ? color(d.Name) : LineColor(d.Name) });</div>\n\n        <span class=\"hljs-comment\">//  Legend Text</span>\n\n        <div style=\"display: inline;\" id=\"Text_1\" class=\"highlights fea_Text\">fir.select(<span class=\"hljs-built_in\">this</span>).append(<span class=\"hljs-string\">\"text\"</span>)\n        .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">b</span>) </span>{\n\n            left = (i+<span class=\"hljs-number\">1</span>) * <span class=\"hljs-number\">15</span> + (i+<span class=\"hljs-number\">1</span>) * <span class=\"hljs-number\">18</span> + (i + <span class=\"hljs-number\">1</span>) * <span class=\"hljs-number\">5</span> + textWidthHolder;\n\n            <span class=\"hljs-keyword\">return</span> left;\n        })\n        .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-number\">9</span>)\n        .attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\".35em\"</span>)\n        .style(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"start\"</span>)\n        .text(d.Name);\n\n        textWidthHolder += getTextWidth(d.Name, <span class=\"hljs-string\">\"10px\"</span>, <span class=\"hljs-string\">\"calibri\"</span>);\n    });</div>\n\n\n<span class=\"hljs-comment\">// Legend Placing</span>\n\nfir.select(<span class=\"hljs-string\">\".legendHolder\"</span>).attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{\n    thisWidth = fir.select(<span class=\"hljs-built_in\">this</span>).node().getBBox().width;\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"translate(\"</span> + ((width) / <span class=\"hljs-number\">2</span> - thisWidth / <span class=\"hljs-number\">2</span>) + <span class=\"hljs-string\">\",0)\"</span>;\n})\n<span class=\"hljs-comment\">//https://bl.ocks.org/nanu146/f48ffc5ec10270f55c9e1fb3da8b38f0</span></code></pre></div>",
    "fir_21.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_21\"><pre id=\"fir_21_code\" ><code class=\"javascript\"><span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">var</span> svg = fir.select(<span class=\"hljs-string\">\"svg\"</span>),\n    width = +svg.attr(<span class=\"hljs-string\">\"width\"</span>),\n    height = +svg.attr(<span class=\"hljs-string\">\"height\"</span>),\n    innerRadius = <span class=\"hljs-number\">180</span>,\n    outerRadius = <span class=\"hljs-built_in\">Math</span>.min(width, height) / <span class=\"hljs-number\">2</span>,\n    g = svg.append(<span class=\"hljs-string\">\"g\"</span>).attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + width / <span class=\"hljs-number\">2</span> + <span class=\"hljs-string\">\",\"</span> + height / <span class=\"hljs-number\">2</span> + <span class=\"hljs-string\">\")\"</span>);</div>\n\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> x = fir.scaleBand()\n    .range([<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2</span> * <span class=\"hljs-built_in\">Math</span>.PI])\n    .align(<span class=\"hljs-number\">0</span>);\n\n<span class=\"hljs-keyword\">var</span> y = fir.scaleRadial()\n    .range([innerRadius, outerRadius]);\n\n<span class=\"hljs-keyword\">var</span> z = fir.scaleOrdinal()\n    .range([<span class=\"hljs-string\">\"#98abc5\"</span>, <span class=\"hljs-string\">\"#8a89a6\"</span>, <span class=\"hljs-string\">\"#7b6888\"</span>, <span class=\"hljs-string\">\"#6b486b\"</span>, <span class=\"hljs-string\">\"#a05d56\"</span>, <span class=\"hljs-string\">\"#d0743c\"</span>, <span class=\"hljs-string\">\"#ff8c00\"</span>]);</div>\n\n<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.csv(<span class=\"hljs-string\">\"data.csv\"</span></div><span class=\"hljs-string\"></span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d, i, columns</span>) </span>{\n  <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">1</span>, t = <span class=\"hljs-number\">0</span>; i &lt; columns.length; ++i) t += d[columns[i]] = +d[columns[i]];\n  d.total = t;\n  <span class=\"hljs-keyword\">return</span> d;\n}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, data</span>) </span>{\n  <span class=\"hljs-keyword\">if</span> (error) <span class=\"hljs-keyword\">throw</span> error;\n\n  x.domain(data.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.State; }));\n  y.domain([<span class=\"hljs-number\">0</span>, fir.max(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.total; })]);\n  z.domain(data.columns.slice(<span class=\"hljs-number\">1</span>));\n\n  <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">g.append(<span class=\"hljs-string\">\"g\"</span>)\n    .selectAll(<span class=\"hljs-string\">\"g\"</span>)\n    .data(fir.stack().keys(data.columns.slice(<span class=\"hljs-number\">1</span>))(data))\n    .enter().append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> z(d.key); })\n    .selectAll(<span class=\"hljs-string\">\"path\"</span>)\n    .data(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d; })\n    .enter().append(<span class=\"hljs-string\">\"path\"</span>)\n      .attr(<span class=\"hljs-string\">\"d\"</span>, fir.arc()\n          .innerRadius(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> y(d[<span class=\"hljs-number\">0</span>]); })\n          .outerRadius(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> y(d[<span class=\"hljs-number\">1</span>]); })\n          .startAngle(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> x(d.data.State); })\n          .endAngle(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> x(d.data.State) + x.bandwidth(); })\n          .padAngle(<span class=\"hljs-number\">0.01</span>)\n          .padRadius(innerRadius));</div>\n\n  <span class=\"hljs-keyword\">var</span> label = g.append(<span class=\"hljs-string\">\"g\"</span>)\n    .selectAll(<span class=\"hljs-string\">\"g\"</span>)\n    .data(data)\n    .enter().append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"middle\"</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"rotate(\"</span> + ((x(d.State) + x.bandwidth() / <span class=\"hljs-number\">2</span>) * <span class=\"hljs-number\">180</span> / <span class=\"hljs-built_in\">Math</span>.PI - <span class=\"hljs-number\">90</span>) + <span class=\"hljs-string\">\")translate(\"</span> + innerRadius + <span class=\"hljs-string\">\",0)\"</span>; });\n\n  <div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">label.append(<span class=\"hljs-string\">\"line\"</span>)\n      .attr(<span class=\"hljs-string\">\"x2\"</span>, -<span class=\"hljs-number\">5</span>)\n      .attr(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"#000\"</span>);</div>\n\n  <div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">label.append(<span class=\"hljs-string\">\"text\"</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> (x(d.State) + x.bandwidth() / <span class=\"hljs-number\">2</span> + <span class=\"hljs-built_in\">Math</span>.PI / <span class=\"hljs-number\">2</span>) % (<span class=\"hljs-number\">2</span> * <span class=\"hljs-built_in\">Math</span>.PI) &lt; <span class=\"hljs-built_in\">Math</span>.PI ? <span class=\"hljs-string\">\"rotate(90)translate(0,16)\"</span> : <span class=\"hljs-string\">\"rotate(-90)translate(0,-9)\"</span>; })\n      .text(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.State; });</div>\n\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_1\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> yAxis = g.append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"middle\"</span>);\n\n  <span class=\"hljs-keyword\">var</span> yTick = yAxis\n    .selectAll(<span class=\"hljs-string\">\"g\"</span>)\n    .data(y.ticks(<span class=\"hljs-number\">5</span>).slice(<span class=\"hljs-number\">1</span>))\n    .enter().append(<span class=\"hljs-string\">\"g\"</span>);\n\n  yTick.append(<span class=\"hljs-string\">\"circle\"</span>)\n      .attr(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"none\"</span>)\n      .attr(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"#000\"</span>)\n      .attr(<span class=\"hljs-string\">\"r\"</span>, y);\n\n  yTick.append(<span class=\"hljs-string\">\"text\"</span>)\n      .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> -y(d); })\n      .attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\"0.35em\"</span>)\n      .attr(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"none\"</span>)\n      .attr(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"#fff\"</span>)\n      .attr(<span class=\"hljs-string\">\"stroke-width\"</span>, <span class=\"hljs-number\">5</span>)\n      .text(y.tickFormat(<span class=\"hljs-number\">5</span>, <span class=\"hljs-string\">\"s\"</span>));\n\n  yTick.append(<span class=\"hljs-string\">\"text\"</span>)\n      .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> -y(d); })\n      .attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\"0.35em\"</span>)\n      .text(y.tickFormat(<span class=\"hljs-number\">5</span>, <span class=\"hljs-string\">\"s\"</span>));\n\n  yAxis.append(<span class=\"hljs-string\">\"text\"</span>)\n      .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> -y(y.ticks(<span class=\"hljs-number\">5</span>).pop()); })\n      .attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\"-1em\"</span>)\n      .text(<span class=\"hljs-string\">\"Population\"</span>);</div>\n\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\"><span class=\"hljs-keyword\">var</span> legend = g.append(<span class=\"hljs-string\">\"g\"</span>)\n    .selectAll(<span class=\"hljs-string\">\"g\"</span>)\n    .data(data.columns.slice(<span class=\"hljs-number\">1</span>).reverse())\n    .enter().append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d, i</span>) </span>{ <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"translate(-40,\"</span> + (i - (data.columns.length - <span class=\"hljs-number\">1</span>) / <span class=\"hljs-number\">2</span>) * <span class=\"hljs-number\">20</span> + <span class=\"hljs-string\">\")\"</span>; });</div>\n\n  <div style=\"display: inline;\" id=\"Shapes_2\" class=\"highlights fea_Shapes\">legend.append(<span class=\"hljs-string\">\"rect\"</span>)\n      .attr(<span class=\"hljs-string\">\"width\"</span>, <span class=\"hljs-number\">18</span>)\n      .attr(<span class=\"hljs-string\">\"height\"</span>, <span class=\"hljs-number\">18</span>)\n      .attr(<span class=\"hljs-string\">\"fill\"</span>, z);</div>\n\n  <div style=\"display: inline;\" id=\"Text_1\" class=\"highlights fea_Text\">legend.append(<span class=\"hljs-string\">\"text\"</span>)\n      .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-number\">24</span>)\n      .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-number\">9</span>)\n      .attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\"0.35em\"</span>)\n      .text(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d; });</div>\n});\n\n#https:<span class=\"hljs-comment\">//bl.ocks.org/mbostock/6fead6d1378d6df5ae77bb6a719afcb2</span></code></pre></div>",
    "fir_5.js": "<div class=\"codeBlock hljs lua\" id=\"fir_5\"><pre id=\"fir_5_code\" ><code class=\"javascript\"><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\">var margin = {top: <span class=\"hljs-number\">20</span>, right: <span class=\"hljs-number\">30</span>, bottom: <span class=\"hljs-number\">20</span>, left: <span class=\"hljs-number\">100</span>},\n    width = <span class=\"hljs-number\">760</span> - margin.left - margin.right,\n    height = <span class=\"hljs-number\">300</span> - margin.top - margin.bottom;\n\n// Basic SVG canvas\nvar svg = fir.<span class=\"hljs-built_in\">select</span>(<span class=\"hljs-string\">\"body\"</span>).append(<span class=\"hljs-string\">\"svg\"</span>)\n    .attr(<span class=\"hljs-string\">\"width\"</span>, width + margin.left + margin.right)\n    .attr(<span class=\"hljs-string\">\"height\"</span>, height + margin.top + margin.bottom)\n  .append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);</div>\n\n// http://bl.ocks.org/zanarmstrong/raw/<span class=\"hljs-number\">05</span>c1e95bf7aa16c4768e/\n<div style=\"display: inline;\" id=\"Data_Format_0\" class=\"highlights fea_Data_Format\">var parseDate = fir.timeParse(<span class=\"hljs-string\">\"%Y-%m\"</span>);\nvar displayDate = fir.timeFormat(<span class=\"hljs-string\">\"%b %y\"</span>);\nvar displayValue = fir.<span class=\"hljs-built_in\">format</span>(<span class=\"hljs-string\">\",.0f\"</span>);</div>\n    \t\n<div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\">// Temporal scale\nvar x = fir.scaleTime()\n    .range([<span class=\"hljs-number\">0</span>, width]);\n\n// Linear scale\nvar y = fir.scaleLinear()\n    .range([height, height - <span class=\"hljs-number\">200</span>]);</div>\n\n<div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">var line = fir.line()\n    .x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> x(d.<span class=\"hljs-built_in\">date</span>); })\n    .y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> y(d.value); });</div>\n\nvar g = svg.append(<span class=\"hljs-string\">\"g\"</span>)\n\t.attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(10, 0)\"</span>);\n\n\t<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.json(<span class=\"hljs-string\">\"dataset.json\"</span></div><span class=\"hljs-string\"></span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(data)</span></span> {\n\n  // Pre-processing\n  // {<span class=\"hljs-string\">\"id\"</span> : <span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">\"name\"</span>: <span class=\"hljs-string\">\"A\"</span>, <span class=\"hljs-string\">\"value\"</span>: <span class=\"hljs-number\">10</span>, <span class=\"hljs-string\">\"date\"</span>: <span class=\"hljs-string\">\"2016-01\"</span>}\n  <div style=\"display: inline;\" id=\"Data_Grouping_0\" class=\"highlights fea_Data_Grouping\">data.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> {\n\t\td.value = +d.value;</div>\n    d[<span class=\"hljs-string\">\"date\"</span>] = parseDate(d[<span class=\"hljs-string\">\"date\"</span>]);\n  });\n  \n  x.domain(fir.extent(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> d.<span class=\"hljs-built_in\">date</span>; }));\n\ty.domain([<span class=\"hljs-number\">0</span>, fir.<span class=\"hljs-built_in\">max</span>(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> d.value; })]);\n\n  <div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">svg.selectAll(<span class=\"hljs-string\">\"text\"</span>).data(data).enter()\n   .append(<span class=\"hljs-string\">\"text\"</span>)\n    .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-number\">420</span>)\n    .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> x(d.<span class=\"hljs-built_in\">date</span>); })\n  \t.attr(<span class=\"hljs-string\">\"id\"</span>, <span class=\"hljs-string\">\"\"</span>)\n    .style(<span class=\"hljs-string\">\"font-size\"</span>, <span class=\"hljs-number\">10</span>)\n    .style(<span class=\"hljs-string\">\"font-family\"</span>, <span class=\"hljs-string\">\"monospace\"</span>)\n    .text(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d, i)</span></span> { <span class=\"hljs-keyword\">return</span> d.<span class=\"hljs-built_in\">date</span>; });</div>\n\n  <div style=\"display: inline;\" id=\"Text_1\" class=\"highlights fea_Text\">g.selectAll(<span class=\"hljs-string\">\".value\"</span>).data([data[data.length <span class=\"hljs-number\">-1</span>]]).enter()\n   .append(<span class=\"hljs-string\">\"text\"</span>)\n    .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"value\"</span>)\n    .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> y(d.value); })\n    .attr(<span class=\"hljs-string\">\"x\"</span>, width - <span class=\"hljs-number\">20</span>)\n    .style(<span class=\"hljs-string\">\"font-size\"</span>, <span class=\"hljs-number\">20</span>)\n    .style(<span class=\"hljs-string\">\"font-family\"</span>, <span class=\"hljs-string\">\"monospace\"</span>)\n    .text(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d, i)</span></span> { <span class=\"hljs-keyword\">return</span> d.value; });</div>\n  \n  <div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">g.selectAll(<span class=\"hljs-string\">\"circle\"</span>).data(data).enter()\n   .append(<span class=\"hljs-string\">\"circle\"</span>)\n    .attr(<span class=\"hljs-string\">\"cx\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> x(d.<span class=\"hljs-built_in\">date</span>); })\n    .attr(<span class=\"hljs-string\">\"cy\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> y(d.value); })\n    .attr(<span class=\"hljs-string\">\"r\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d, i)</span></span> { <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">5</span>; })\n    .attr(<span class=\"hljs-string\">\"id\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> d.id; })\n    .style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"#fcb0b5\"</span>)</div>\n    <div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\">.on(<span class=\"hljs-string\">\"mouseover\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span>{</div>\n\n    \t<div style=\"display: inline;\" id=\"Animations_0\" class=\"highlights fea_Animations\">fir.<span class=\"hljs-built_in\">select</span>(this).transition().duration(<span class=\"hljs-number\">200</span>).style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"#fir0715\"</span>);</div>\n\n      <div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\">g.selectAll(<span class=\"hljs-string\">\"#tooltip\"</span>).data([d]).enter().append(<span class=\"hljs-string\">\"text\"</span>)\n        .attr(<span class=\"hljs-string\">\"id\"</span>, <span class=\"hljs-string\">\"tooltip\"</span>)\n        .text(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d, i)</span></span> { <span class=\"hljs-keyword\">return</span> d.value; })\n        .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> {<span class=\"hljs-keyword\">return</span> y(d.value) - <span class=\"hljs-number\">12</span>})\n        .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> x(d.<span class=\"hljs-built_in\">date</span>); })</div>\n\n      g.selectAll(<span class=\"hljs-string\">\"#tooltip_path\"</span>).data([d]).enter().append(<span class=\"hljs-string\">\"line\"</span>)\n        .attr(<span class=\"hljs-string\">\"id\"</span>, <span class=\"hljs-string\">\"tooltip_path\"</span>)\n        .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"line\"</span>)\n        .attr(<span class=\"hljs-string\">\"d\"</span>, line)\n        .attr(<span class=\"hljs-string\">\"x1\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> {<span class=\"hljs-keyword\">return</span> x(d.<span class=\"hljs-built_in\">date</span>)})\n        .attr(<span class=\"hljs-string\">\"x2\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> {<span class=\"hljs-keyword\">return</span> x(d.<span class=\"hljs-built_in\">date</span>)})\n        .attr(<span class=\"hljs-string\">\"y1\"</span>, height)\n        .attr(<span class=\"hljs-string\">\"y2\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> {<span class=\"hljs-keyword\">return</span> y(d.value)})\n        .attr(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"black\"</span>)\n        .style(<span class=\"hljs-string\">\"stroke-dasharray\"</span>, (<span class=\"hljs-string\">\"3, 3\"</span>));\n    })\n    <div style=\"display: inline;\" id=\"Mouse_Events_1\" class=\"highlights fea_Mouse_Events\">.on(<span class=\"hljs-string\">\"mouseout\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span></div><span class=\"hljs-function\"><span class=\"hljs-params\"></span></span> {\n      <div style=\"display: inline;\" id=\"Animations_1\" class=\"highlights fea_Animations\">fir.<span class=\"hljs-built_in\">select</span>(this).transition().duration(<span class=\"hljs-number\">500</span>).style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"#fcb0b5\"</span>)</div>;\n\n      g.selectAll(<span class=\"hljs-string\">\"#tooltip\"</span>).<span class=\"hljs-built_in\">remove</span>();\n      g.selectAll(<span class=\"hljs-string\">\"#tooltip_path\"</span>).<span class=\"hljs-built_in\">remove</span>();\n    });\n\n    g.selectAll(<span class=\"hljs-string\">\"path\"</span>).data([data]).enter().append(<span class=\"hljs-string\">\"path\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"line\"</span>)\n      .attr(<span class=\"hljs-string\">\"d\"</span>, line);\n  \n    svg.append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"axis axis--x\"</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height + <span class=\"hljs-string\">\")\"</span>)\n      .call(fir.axisBottom(x));\n  \n\n});\n//http://bl.ocks.org/romsson/f205420d21ced66810058d4cdf25c6dd</code></pre></div>",
    "fir_16.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_16\"><pre id=\"fir_16_code\" ><code class=\"javascript\">      <span class=\"hljs-comment\">// Change fir's SI prefix to more business friendly units</span>\n      <span class=\"hljs-comment\">//      K = thousands</span>\n      <span class=\"hljs-comment\">//      M = millions</span>\n      <span class=\"hljs-comment\">//      B = billions</span>\n      <span class=\"hljs-comment\">//      T = trillion</span>\n      <span class=\"hljs-comment\">//      P = quadrillion</span>\n      <span class=\"hljs-comment\">//      E = quintillion</span>\n      <span class=\"hljs-comment\">// small decimals are handled with e-n formatting.</span>\n      <span class=\"hljs-keyword\">var</span> fir_formatPrefixes = [<span class=\"hljs-string\">\"e-24\"</span>,<span class=\"hljs-string\">\"e-21\"</span>,<span class=\"hljs-string\">\"e-18\"</span>,<span class=\"hljs-string\">\"e-15\"</span>,<span class=\"hljs-string\">\"e-12\"</span>,<span class=\"hljs-string\">\"e-9\"</span>,<span class=\"hljs-string\">\"e-6\"</span>,<span class=\"hljs-string\">\"e-3\"</span>,<span class=\"hljs-string\">\"\"</span>,<span class=\"hljs-string\">\"K\"</span>,<span class=\"hljs-string\">\"M\"</span>,<span class=\"hljs-string\">\"B\"</span>,<span class=\"hljs-string\">\"T\"</span>,<span class=\"hljs-string\">\"P\"</span>,<span class=\"hljs-string\">\"E\"</span>,<span class=\"hljs-string\">\"Z\"</span>,<span class=\"hljs-string\">\"Y\"</span>].map(fir_formatPrefix);\n\n      <span class=\"hljs-comment\">// Override fir's formatPrefix function</span>\n      fir.formatPrefix = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">value, precision</span>) </span>{\n          <span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>;\n          <span class=\"hljs-keyword\">if</span> (value) {\n              <span class=\"hljs-keyword\">if</span> (value &lt; <span class=\"hljs-number\">0</span>) {\n                  value *= -<span class=\"hljs-number\">1</span>;\n              }\n              <span class=\"hljs-keyword\">if</span> (precision) {\n                  value = fir.round(value, fir_format_precision(value, precision));\n              }\n              i = <span class=\"hljs-number\">1</span> + <span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-number\">1e-12</span> + <span class=\"hljs-built_in\">Math</span>.log(value) / <span class=\"hljs-built_in\">Math</span>.LN10);\n              i = <span class=\"hljs-built_in\">Math</span>.max(-<span class=\"hljs-number\">24</span>, <span class=\"hljs-built_in\">Math</span>.min(<span class=\"hljs-number\">24</span>, <span class=\"hljs-built_in\">Math</span>.floor((i - <span class=\"hljs-number\">1</span>) / <span class=\"hljs-number\">3</span>) * <span class=\"hljs-number\">3</span>));\n          }\n          <span class=\"hljs-keyword\">return</span> fir_formatPrefixes[<span class=\"hljs-number\">8</span> + i / <span class=\"hljs-number\">3</span>];\n      };\n\n      <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">fir_formatPrefix</span>(<span class=\"hljs-params\">d, i</span>) </span>{\n          <span class=\"hljs-keyword\">var</span> k = <span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">10</span>, <span class=\"hljs-built_in\">Math</span>.abs(<span class=\"hljs-number\">8</span> - i) * <span class=\"hljs-number\">3</span>);\n          <span class=\"hljs-keyword\">return</span> {\n              <span class=\"hljs-attr\">scale</span>: i &gt; <span class=\"hljs-number\">8</span> ? <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d / k; } : <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d * k; },\n              <span class=\"hljs-attr\">symbol</span>: d\n          };\n      }\n\n      <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">fir_format_precision</span>(<span class=\"hljs-params\">x, p</span>) </span>{\n          <span class=\"hljs-keyword\">return</span> p - (x ? <span class=\"hljs-built_in\">Math</span>.ceil(<span class=\"hljs-built_in\">Math</span>.log(x) / <span class=\"hljs-built_in\">Math</span>.LN10) : <span class=\"hljs-number\">1</span>);\n      }\n\n      <span class=\"hljs-comment\">// Define margins of the SVG canvas</span>\n      <span class=\"hljs-keyword\">var</span> margin = {<span class=\"hljs-attr\">top</span>:<span class=\"hljs-number\">50</span>, <span class=\"hljs-attr\">right</span>:<span class=\"hljs-number\">20</span>, <span class=\"hljs-attr\">bottom</span>:<span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">left</span>:<span class=\"hljs-number\">100</span>};\n      <span class=\"hljs-keyword\">var</span> width = <span class=\"hljs-number\">500</span> - margin.left - margin.right;\n      <span class=\"hljs-keyword\">var</span> height = <span class=\"hljs-number\">500</span> - margin.top - margin.bottom;\n\n      <span class=\"hljs-comment\">// Parse and format the Year data </span>\n      <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Data_Format_0\" class=\"highlights fea_Data_Format\"><span class=\"hljs-keyword\">var</span> parseDate = fir.time.format(<span class=\"hljs-string\">\"%Y\"</span>).parse;\n      <span class=\"hljs-keyword\">var</span> formatDate = fir.time.format(<span class=\"hljs-string\">\"%Y\"</span>);\n\n      <span class=\"hljs-comment\">// Format the Population data </span>\n      <span class=\"hljs-keyword\">var</span> formatData = fir.format(<span class=\"hljs-string\">\".2s\"</span>);\n      <span class=\"hljs-keyword\">var</span> commaData = fir.format(<span class=\"hljs-string\">\",\"</span>);</div>\n      \n      <span class=\"hljs-comment\">// Define the scales</span>\n      <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_1\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> myXScale = fir.time.scale().range([<span class=\"hljs-number\">0</span>,width]);    \n      <span class=\"hljs-keyword\">var</span> myYScale = fir.scale.linear().range([height,<span class=\"hljs-number\">0</span>]);\n</div>\n      <span class=\"hljs-comment\">// Define the axes</span>\n      <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> myXAxis = fir.svg.axis().scale(myXScale).orient(<span class=\"hljs-string\">\"bottom\"</span>);\n      <span class=\"hljs-keyword\">var</span> myYAxis = fir.svg.axis().scale(myYScale).orient(<span class=\"hljs-string\">\"left\"</span>).tickFormat(formatData);</div>\n\n      <span class=\"hljs-comment\">// Define the output line</span>\n      <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">var</span> line1 = fir.svg.line().x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> myXScale(d.Year);}).y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> myYScale(d.Population);});\n      <span class=\"hljs-keyword\">var</span> line2 = fir.svg.line().x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> myXScale(d.Year);}).y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> myYScale(d.Population);});</div>\n\n      <span class=\"hljs-comment\">// Define a tooltip for points on the graph</span>\n      <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\"><span class=\"hljs-keyword\">var</span> tip = fir.tip().attr(<span class=\"hljs-string\">'class'</span>, <span class=\"hljs-string\">'fir-tip'</span>).offset([-<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">0</span>]).html(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"&lt;strong&gt; Year:&lt;/strong&gt; &lt;span style='color:orange'&gt;\"</span> + formatDate(d.Year) + <span class=\"hljs-string\">\"&lt;/span&gt;, &lt;strong&gt; Population:&lt;/strong&gt; &lt;span style='color:orange'&gt;\"</span> + commaData(d.Population) + <span class=\"hljs-string\">\"&lt;/span&gt;\"</span> ; });</div>\n\n      <span class=\"hljs-comment\">// Define the SVG and inner drawing space which will act as a container for our viz</span>\n      <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">var</span> mySVG = fir.select(<span class=\"hljs-string\">\"#populationDiv\"</span>).append(<span class=\"hljs-string\">\"svg\"</span>).attr(<span class=\"hljs-string\">\"width\"</span>, width+margin.left+margin.right).attr(<span class=\"hljs-string\">\"height\"</span>, height+margin.top+margin.bottom).append(<span class=\"hljs-string\">\"g\"</span>).attr(<span class=\"hljs-string\">\"transform\"</span>,<span class=\"hljs-string\">\"translate(\"</span>+margin.left+<span class=\"hljs-string\">\",\"</span>+margin.top+<span class=\"hljs-string\">\")\"</span>);</div>\n\n      <span class=\"hljs-comment\">// Define the function that obtains the max and min of India's population data from the TSV file</span>\n      <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">indiaPopData</span>(<span class=\"hljs-params\"></span>)\n        </span>{\n          <div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.tsv(<span class=\"hljs-string\">\"indiaPopulation.tsv\"</span>,</div> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error,data</span>)\n            </span>{\n              <span class=\"hljs-comment\">// Iterating through the data</span>\n              data.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)\n              </span>{\n                <span class=\"hljs-comment\">// Parsing the Year format present in the original data</span>\n                d.Year = parseDate(d.Year); \n                <span class=\"hljs-comment\">// Converting string to integer</span>\n                <div style=\"display: inline;\" id=\"Data_Transformation_0\" class=\"highlights fea_Data_Transformation\">d.Population = +d.Population;</div>\n              });\n\n              <span class=\"hljs-comment\">// Defining variables to store the max and min values present in the dataset</span>\n              <span class=\"hljs-keyword\">var</span> Indmax;\n              <span class=\"hljs-keyword\">var</span> Indmin;\n              <div style=\"display: inline;\" id=\"Data_Transformation_1\" class=\"highlights fea_Data_Transformation\">Indmax = fir.max(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.Population;});\n              Indmin = fir.min(data,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.Population;});</div>\n            });\n        }\n\n      <span class=\"hljs-comment\">// Defining a function to draw the graph with India's population represented on the scales</span>\n      <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">INDPopulationCreate</span>(<span class=\"hljs-params\"></span>)\n        </span>{\n          fir.tsv(<span class=\"hljs-string\">\"indiaPopulation.tsv\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error,data</span>)\n            </span>{\n              <span class=\"hljs-comment\">// Iterating through the data</span>\n              data.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)\n              </span>{\n                <span class=\"hljs-comment\">// Parsing the Year format present in the original data</span>\n                d.Year = parseDate(d.Year);\n                <span class=\"hljs-comment\">// Converting string to integer</span>\n                d.Population = +d.Population;\n              });\n\n              <span class=\"hljs-comment\">// Assigning the max and min values in the dataset</span>\n              Indmax = fir.max(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.Population;});\n              Indmin = fir.min(data,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.Population;});\n\n              <span class=\"hljs-comment\">// Define the domain for the axes</span>\n              myXScale.domain(fir.extent(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.Year;}));\n              myYScale.domain([<span class=\"hljs-number\">0</span>,Indmax]);\n\n              <span class=\"hljs-comment\">// Draw horizontal grid lines</span>\n              mySVG.selectAll(<span class=\"hljs-string\">\"line.horizontalGrid\"</span>).data(myYScale.ticks(<span class=\"hljs-number\">10</span>)).enter().append(<span class=\"hljs-string\">\"line\"</span>)\n              .attr(\n                    {\n                        <span class=\"hljs-string\">\"class\"</span>:<span class=\"hljs-string\">\"horizontalGrid\"</span>,\n                        <span class=\"hljs-string\">\"x1\"</span> : <span class=\"hljs-string\">\"0\"</span>,\n                        <span class=\"hljs-string\">\"x2\"</span> : width,\n                        <span class=\"hljs-string\">\"y1\"</span> : <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{ <span class=\"hljs-keyword\">return</span> myYScale(d);},\n                        <span class=\"hljs-string\">\"y2\"</span> : <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{ <span class=\"hljs-keyword\">return</span> myYScale(d);},\n                        <span class=\"hljs-string\">\"fill\"</span> : <span class=\"hljs-string\">\"none\"</span>,\n                        <span class=\"hljs-string\">\"shape-rendering\"</span> : <span class=\"hljs-string\">\"crispEdges\"</span>,\n                        <span class=\"hljs-string\">\"stroke\"</span> : <span class=\"hljs-string\">\"grey\"</span>,\n                        <span class=\"hljs-string\">\"stroke-opacity\"</span> : <span class=\"hljs-string\">\"0.5\"</span>,\n                        <span class=\"hljs-string\">\"stroke-width\"</span> : <span class=\"hljs-string\">\"1px\"</span>\n                    });\n\n              <span class=\"hljs-comment\">// Draw vertical grid lines</span>\n              mySVG.selectAll(<span class=\"hljs-string\">\"line.verticalGrid\"</span>).data(myXScale.ticks(<span class=\"hljs-number\">10</span>)).enter().append(<span class=\"hljs-string\">\"line\"</span>)\n              .attr(\n                    {\n                      <span class=\"hljs-string\">\"class\"</span>:<span class=\"hljs-string\">\"verticalGrid\"</span>,\n                      <span class=\"hljs-string\">\"x1\"</span> : <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{ <span class=\"hljs-keyword\">return</span> myXScale(d);},\n                      <span class=\"hljs-string\">\"x2\"</span> : <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{ <span class=\"hljs-keyword\">return</span> myXScale(d);},\n                      <span class=\"hljs-string\">\"y1\"</span> : <span class=\"hljs-string\">\"0\"</span>,\n                      <span class=\"hljs-string\">\"y2\"</span> : height,\n                      <span class=\"hljs-string\">\"fill\"</span> : <span class=\"hljs-string\">\"none\"</span>,\n                      <span class=\"hljs-string\">\"shape-rendering\"</span> : <span class=\"hljs-string\">\"crispEdges\"</span>,\n                      <span class=\"hljs-string\">\"stroke\"</span> : <span class=\"hljs-string\">\"grey\"</span>,\n                      <span class=\"hljs-string\">\"stroke-opacity\"</span> : <span class=\"hljs-string\">\"0.4\"</span>,\n                      <span class=\"hljs-string\">\"stroke-width\"</span> : <span class=\"hljs-string\">\"1px\"</span>\n                    });\n\n              <span class=\"hljs-comment\">// Draw the X and Y axes</span>\n              mySVG.append(<span class=\"hljs-string\">\"g\"</span>).attr(<span class=\"hljs-string\">\"class\"</span>,<span class=\"hljs-string\">\"x-axis\"</span>).attr(<span class=\"hljs-string\">\"transform\"</span>,<span class=\"hljs-string\">\"translate(0, \"</span>+height+<span class=\"hljs-string\">\")\"</span>).call(myXAxis).append(<span class=\"hljs-string\">\"text\"</span>).attr(<span class=\"hljs-string\">\"class\"</span>,<span class=\"hljs-string\">\"whiteFont\"</span>).attr(<span class=\"hljs-string\">\"x\"</span>,width).attr(<span class=\"hljs-string\">\"y\"</span>, -<span class=\"hljs-number\">6</span>).style(<span class=\"hljs-string\">\"text-anchor\"</span>,<span class=\"hljs-string\">\"end\"</span>).text(<span class=\"hljs-string\">\"Time in years\"</span>);;\n              mySVG.append(<span class=\"hljs-string\">\"g\"</span>).attr(<span class=\"hljs-string\">\"class\"</span>,<span class=\"hljs-string\">\"y-axis\"</span>).call(myYAxis)<div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">.append(<span class=\"hljs-string\">\"text\"</span>).attr(<span class=\"hljs-string\">\"class\"</span>,<span class=\"hljs-string\">\"whiteFont\"</span>).attr(<span class=\"hljs-string\">\"transform\"</span>,<span class=\"hljs-string\">\"rotate(-90)\"</span>).attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-number\">6</span>).attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\"0.71em\"</span>).style(<span class=\"hljs-string\">\"text-anchor\"</span>,<span class=\"hljs-string\">\"end\"</span>).text(<span class=\"hljs-string\">\"Population Numbers\"</span>);\n</div>\n              <span class=\"hljs-comment\">// Draw the circular points on the output graph</span>\n              mySVG.selectAll(<span class=\"hljs-string\">\".point\"</span>).data(data).enter().append(<span class=\"hljs-string\">\"circle\"</span>).attr(<span class=\"hljs-string\">\"class\"</span>,<span class=\"hljs-string\">\"point\"</span>).attr(<span class=\"hljs-string\">\"cx\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> myXScale(d.Year);}).attr(<span class=\"hljs-string\">\"cy\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> myYScale(d.Population);}).attr(<span class=\"hljs-string\">\"r\"</span>, <span class=\"hljs-number\">3</span>).style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"#FFD747\"</span>).on(<span class=\"hljs-string\">'mouseover'</span>, tip.show)<div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\">.on(<span class=\"hljs-string\">'mouseout'</span>, tip.hide)</div>;\n\n              <span class=\"hljs-comment\">// Javascript code to add hover effects to the graph</span>\n              $(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) \n                </span>{\n                  $(<span class=\"hljs-string\">'circle'</span>).hover(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n                  $(<span class=\"hljs-built_in\">this</span>).attr(<span class=\"hljs-string\">'r'</span>,<span class=\"hljs-number\">5</span>);\n                   }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n                  $(<span class=\"hljs-built_in\">this</span>).attr(<span class=\"hljs-string\">'r'</span>,<span class=\"hljs-number\">3</span>);});\n                });\n\n              <span class=\"hljs-comment\">// Draw the line on the output graph</span>\n              <span class=\"hljs-keyword\">var</span> path2 = mySVG.append(<span class=\"hljs-string\">\"path\"</span>).datum(data).attr(<span class=\"hljs-string\">\"class\"</span>,<span class=\"hljs-string\">\"line1\"</span>).attr(<span class=\"hljs-string\">\"d\"</span>,line1);\n\n              <span class=\"hljs-comment\">// Add transitions to the path</span>\n              <span class=\"hljs-keyword\">var</span> totalLength = path2.node().getTotalLength();\n              path2.attr(<span class=\"hljs-string\">\"stroke-dasharray\"</span>, totalLength + <span class=\"hljs-string\">\" \"</span> + totalLength).attr(<span class=\"hljs-string\">\"stroke-dashoffset\"</span>, totalLength).transition().duration(<span class=\"hljs-number\">1000</span>).ease(<span class=\"hljs-string\">\"linear\"</span>).attr(<span class=\"hljs-string\">\"stroke-dashoffset\"</span>, <span class=\"hljs-number\">0</span>);\n\n              <span class=\"hljs-comment\">// Add label to the end of the path</span>\n              mySVG.append(<span class=\"hljs-string\">\"text\"</span>).attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span>+(width+<span class=\"hljs-number\">10</span>)+<span class=\"hljs-string\">\",\"</span>+myYScale(data[<span class=\"hljs-number\">23</span>].Population)+<span class=\"hljs-string\">\")\"</span>).attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\".35em\"</span>).attr(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"start\"</span>).style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"#FFD747\"</span>).text(<span class=\"hljs-string\">\"India\"</span>);\n\n              <span class=\"hljs-comment\">// Calling the tip() function for the tooltip</span>\n              mySVG.call(tip);\n            });\n        }\n\n      <span class=\"hljs-comment\">// Pull data from the external TSV file and parse the year information present in it</span>\n      <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">USPopulationCreate</span>(<span class=\"hljs-params\"></span>) \n        </span>{\n          fir.tsv(<span class=\"hljs-string\">\"USAPopulation.tsv\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error,data</span>)\n            </span>{\n              data.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)\n              </span>{\n                d.Year = parseDate(d.Year);\n                d.Population = +d.Population;\n              });\n\n              <span class=\"hljs-comment\">// Calling the function to get max and min values of the India's population to set the domain for the axes</span>\n              indiaPopData();\n             \n              <span class=\"hljs-comment\">// Draw the circular points on the output graph</span>\n              mySVG.selectAll(<span class=\"hljs-string\">\".dot\"</span>).data(data).enter().append(<span class=\"hljs-string\">\"circle\"</span>).attr(<span class=\"hljs-string\">\"class\"</span>,<span class=\"hljs-string\">\"dot\"</span>).attr(<span class=\"hljs-string\">\"cx\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> myXScale(d.Year);}).attr(<span class=\"hljs-string\">\"cy\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> myYScale(d.Population);}).attr(<span class=\"hljs-string\">\"r\"</span>, <span class=\"hljs-number\">3</span>).style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"#FFD747\"</span>).on(<span class=\"hljs-string\">'mouseover'</span>, tip.show).on(<span class=\"hljs-string\">'mouseout'</span>, tip.hide);\n\n              <span class=\"hljs-comment\">// Javascript code to add hover effects to the graph</span>\n              $(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) \n                </span>{\n                  $(<span class=\"hljs-string\">'circle'</span>).hover(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{\n                  $(<span class=\"hljs-built_in\">this</span>).attr(<span class=\"hljs-string\">'r'</span>,<span class=\"hljs-number\">5</span>);\n                  }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n                  $(<span class=\"hljs-built_in\">this</span>).attr(<span class=\"hljs-string\">'r'</span>,<span class=\"hljs-number\">3</span>);\n                  });\n                });\n\n              <span class=\"hljs-comment\">// Draw the line on the output graph</span>\n              <span class=\"hljs-keyword\">var</span> path1 = mySVG.append(<span class=\"hljs-string\">\"path\"</span>).datum(data).attr(<span class=\"hljs-string\">\"class\"</span>,<span class=\"hljs-string\">\"line2\"</span>).attr(<span class=\"hljs-string\">\"d\"</span>,line2);\n              <span class=\"hljs-keyword\">var</span> totalLength = path1.node().getTotalLength();\n\n              <span class=\"hljs-comment\">// Add transitions to the path</span>\n              path1.attr(<span class=\"hljs-string\">\"stroke-dasharray\"</span>, totalLength + <span class=\"hljs-string\">\" \"</span> + totalLength).attr(<span class=\"hljs-string\">\"stroke-dashoffset\"</span>, totalLength).transition().duration(<span class=\"hljs-number\">1000</span>).ease(<span class=\"hljs-string\">\"linear\"</span>)\n            .attr(<span class=\"hljs-string\">\"stroke-dashoffset\"</span>, <span class=\"hljs-number\">0</span>);\n\n              <span class=\"hljs-comment\">// Add label to the end of the path</span>\n              mySVG.append(<span class=\"hljs-string\">\"text\"</span>).attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span>+(width+<span class=\"hljs-number\">10</span>)+<span class=\"hljs-string\">\",\"</span>+(myYScale(data[<span class=\"hljs-number\">0</span>].Population)-<span class=\"hljs-number\">15</span>)+<span class=\"hljs-string\">\")\"</span>).attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\".35em\"</span>).attr(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"start\"</span>).style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"#FFD747\"</span>).text(<span class=\"hljs-string\">\"USA\"</span>);\n            \n              <span class=\"hljs-comment\">// Add a title to the graph</span>\n              mySVG.append(<span class=\"hljs-string\">\"text\"</span>).attr(<span class=\"hljs-string\">\"class\"</span>,<span class=\"hljs-string\">\"whiteHeader\"</span>).attr(<span class=\"hljs-string\">\"x\"</span>, (width / <span class=\"hljs-number\">2</span>)).attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-number\">0</span> - (margin.top / <span class=\"hljs-number\">2</span>)).attr(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"middle\"</span>).style(<span class=\"hljs-string\">\"font-size\"</span>, <span class=\"hljs-string\">\"14px\"</span>).style(<span class=\"hljs-string\">\"font-weight\"</span>,<span class=\"hljs-string\">\"bold\"</span>).text(<span class=\"hljs-string\">\"Population trend in USA and India from 1990 to 2014\"</span>);\n\n              <span class=\"hljs-comment\">// Calling the tooltip function</span>\n              mySVG.call(tip);\n            });\n        }\n\n      <span class=\"hljs-comment\">// Function call to create the line graphs for both countries</span>\n\n      INDPopulationCreate();\n      USPopulationCreate();\n      <span class=\"hljs-comment\">//https://github.com/colorfulAsh/interactive-fir-lineGraph/blob/master/myfirscript.js</span></code></pre></div>",
    "fir_29.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_29\"><pre id=\"fir_29_code\" ><code class=\"javascript\"><span class=\"hljs-comment\">// set the dimensions and margins of the graph</span>\n<span class=\"hljs-keyword\">var</span> margin = {<span class=\"hljs-attr\">top</span>: <span class=\"hljs-number\">80</span>, <span class=\"hljs-attr\">right</span>: <span class=\"hljs-number\">25</span>, <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">left</span>: <span class=\"hljs-number\">40</span>},\n  width = <span class=\"hljs-number\">450</span> - margin.left - margin.right,\n  height = <span class=\"hljs-number\">450</span> - margin.top - margin.bottom;\n\n<span class=\"hljs-comment\">// append the svg object to the body of the page</span>\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">var</span> svg = fir.select(<span class=\"hljs-string\">\"#my_dataviz\"</span>)\n.append(<span class=\"hljs-string\">\"svg\"</span>)\n  .attr(<span class=\"hljs-string\">\"width\"</span>, width + margin.left + margin.right)\n  .attr(<span class=\"hljs-string\">\"height\"</span>, height + margin.top + margin.bottom)\n.append(<span class=\"hljs-string\">\"g\"</span>)\n  .attr(<span class=\"hljs-string\">\"transform\"</span>,\n        <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);</div>\n\n<span class=\"hljs-comment\">//Read the data</span>\n<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.csv(<span class=\"hljs-string\">\"https://raw.githubusercontent.com/holtzy/fir-graph-gallery/master/DATA/heatmap_data.csv\"</span></div><span class=\"hljs-string\"></span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{\n\n  <span class=\"hljs-comment\">// Labels of row and columns -&gt; unique identifier of the column called 'group' and 'variable'</span>\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Data_Transformation_0\" class=\"highlights fea_Data_Transformation\"><span class=\"hljs-keyword\">var</span> myGroups = fir.map(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{<span class=\"hljs-keyword\">return</span> d.group;}).keys()\n  <span class=\"hljs-keyword\">var</span> myVars = fir.map(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{<span class=\"hljs-keyword\">return</span> d.variable;}).keys()</div>\n\n  <span class=\"hljs-comment\">// Build X scales and axis:</span>\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> x = fir.scaleBand()\n    .range([ <span class=\"hljs-number\">0</span>, width ])\n    .domain(myGroups)\n    .padding(<span class=\"hljs-number\">0.05</span>);\n  svg.append(<span class=\"hljs-string\">\"g\"</span>)\n    .style(<span class=\"hljs-string\">\"font-size\"</span>, <span class=\"hljs-number\">15</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height + <span class=\"hljs-string\">\")\"</span>)\n    .call(fir.axisBottom(x).tickSize(<span class=\"hljs-number\">0</span>))\n    .select(<span class=\"hljs-string\">\".domain\"</span>).remove()\n\n  <span class=\"hljs-comment\">// Build Y scales and axis:</span>\n  <span class=\"hljs-keyword\">var</span> y = fir.scaleBand()\n    .range([ height, <span class=\"hljs-number\">0</span> ])\n    .domain(myVars)\n    .padding(<span class=\"hljs-number\">0.05</span>);\n  svg.append(<span class=\"hljs-string\">\"g\"</span>)\n    .style(<span class=\"hljs-string\">\"font-size\"</span>, <span class=\"hljs-number\">15</span>)\n    .call(fir.axisLeft(y).tickSize(<span class=\"hljs-number\">0</span>))\n    .select(<span class=\"hljs-string\">\".domain\"</span>).remove()\n\n  <span class=\"hljs-comment\">// Build color scale</span>\n  <span class=\"hljs-keyword\">var</span> myColor = fir.scaleSequential()\n    .interpolator(fir.interpolateInferno)\n    .domain([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>])</div>\n\n  <span class=\"hljs-comment\">// create a tooltip</span>\n <div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\"> <span class=\"hljs-keyword\">var</span> tooltip = fir.select(<span class=\"hljs-string\">\"#my_dataviz\"</span>)\n    .append(<span class=\"hljs-string\">\"div\"</span>)\n    .style(<span class=\"hljs-string\">\"opacity\"</span>, <span class=\"hljs-number\">0</span>)\n    .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"tooltip\"</span>)\n    .style(<span class=\"hljs-string\">\"background-color\"</span>, <span class=\"hljs-string\">\"white\"</span>)\n    .style(<span class=\"hljs-string\">\"border\"</span>, <span class=\"hljs-string\">\"solid\"</span>)\n    .style(<span class=\"hljs-string\">\"border-width\"</span>, <span class=\"hljs-string\">\"2px\"</span>)\n    .style(<span class=\"hljs-string\">\"border-radius\"</span>, <span class=\"hljs-string\">\"5px\"</span>)\n    .style(<span class=\"hljs-string\">\"padding\"</span>, <span class=\"hljs-string\">\"5px\"</span>)</div>\n\n  <span class=\"hljs-comment\">// Three function that change the tooltip when user hover / move / leave a cell</span>\n  <span class=\"hljs-keyword\">var</span> mouseover = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n    tooltip\n      .style(<span class=\"hljs-string\">\"opacity\"</span>, <span class=\"hljs-number\">1</span>)\n    fir.select(<span class=\"hljs-built_in\">this</span>)\n      .style(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"black\"</span>)\n      .style(<span class=\"hljs-string\">\"opacity\"</span>, <span class=\"hljs-number\">1</span>)\n  }\n  <span class=\"hljs-keyword\">var</span> mousemove = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n    tooltip\n      .html(<span class=\"hljs-string\">\"The exact value of&lt;br&gt;this cell is: \"</span> + d.value)\n      .style(<span class=\"hljs-string\">\"left\"</span>, (fir.mouse(<span class=\"hljs-built_in\">this</span>)[<span class=\"hljs-number\">0</span>]+<span class=\"hljs-number\">70</span>) + <span class=\"hljs-string\">\"px\"</span>)\n      .style(<span class=\"hljs-string\">\"top\"</span>, (fir.mouse(<span class=\"hljs-built_in\">this</span>)[<span class=\"hljs-number\">1</span>]) + <span class=\"hljs-string\">\"px\"</span>)\n  }\n  <span class=\"hljs-keyword\">var</span> mouseleave = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n    tooltip\n      .style(<span class=\"hljs-string\">\"opacity\"</span>, <span class=\"hljs-number\">0</span>)\n    fir.select(<span class=\"hljs-built_in\">this</span>)\n      .style(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"none\"</span>)\n      .style(<span class=\"hljs-string\">\"opacity\"</span>, <span class=\"hljs-number\">0.8</span>)\n  }\n\n  <span class=\"hljs-comment\">// add the squares</span>\n  <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">svg.selectAll()\n    .data(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{<span class=\"hljs-keyword\">return</span> d.group+<span class=\"hljs-string\">':'</span>+d.variable;})\n    .enter()\n    .append(<span class=\"hljs-string\">\"rect\"</span>)\n      .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> x(d.group) })\n      .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> y(d.variable) })\n      .attr(<span class=\"hljs-string\">\"rx\"</span>, <span class=\"hljs-number\">4</span>)\n      .attr(<span class=\"hljs-string\">\"ry\"</span>, <span class=\"hljs-number\">4</span>)\n      .attr(<span class=\"hljs-string\">\"width\"</span>, x.bandwidth() )\n      .attr(<span class=\"hljs-string\">\"height\"</span>, y.bandwidth() )\n      .style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> myColor(d.value)} )\n      .style(<span class=\"hljs-string\">\"stroke-width\"</span>, <span class=\"hljs-number\">4</span>)\n      .style(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"none\"</span>)\n      .style(<span class=\"hljs-string\">\"opacity\"</span>, <span class=\"hljs-number\">0.8</span>)</div>\n    <div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\">.on(<span class=\"hljs-string\">\"mouseover\"</span>, mouseover)\n    .on(<span class=\"hljs-string\">\"mousemove\"</span>, mousemove)\n    .on(<span class=\"hljs-string\">\"mouseleave\"</span>, mouseleave)</div>\n})\n\n<span class=\"hljs-comment\">// Add title to graph</span>\n<div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">svg.append(<span class=\"hljs-string\">\"text\"</span>)\n        .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-number\">0</span>)\n        .attr(<span class=\"hljs-string\">\"y\"</span>, -<span class=\"hljs-number\">50</span>)\n        .attr(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"left\"</span>)\n        .style(<span class=\"hljs-string\">\"font-size\"</span>, <span class=\"hljs-string\">\"22px\"</span>)\n        .text(<span class=\"hljs-string\">\"A fir.js heatmap\"</span>);\n\n<span class=\"hljs-comment\">// Add subtitle to graph</span>\nsvg.append(<span class=\"hljs-string\">\"text\"</span>)\n        .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-number\">0</span>)\n        .attr(<span class=\"hljs-string\">\"y\"</span>, -<span class=\"hljs-number\">20</span>)\n        .attr(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"left\"</span>)\n        .style(<span class=\"hljs-string\">\"font-size\"</span>, <span class=\"hljs-string\">\"14px\"</span>)\n        .style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"grey\"</span>)\n        .style(<span class=\"hljs-string\">\"max-width\"</span>, <span class=\"hljs-number\">400</span>)\n        .text(<span class=\"hljs-string\">\"A short description of the take-away message of this chart.\"</span>);\n</div>\n        #https:<span class=\"hljs-comment\">//www.fir-graph-gallery.com/graph/heatmap_style.html</span></code></pre></div>",
    "fir_7.js": "<div class=\"codeBlock hljs lua\" id=\"fir_7\"><pre id=\"fir_7_code\" ><code class=\"javascript\"><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\">var svg = fir.<span class=\"hljs-built_in\">select</span>(<span class=\"hljs-string\">\"svg\"</span>),\n    margin = {top: <span class=\"hljs-number\">20</span>, right: <span class=\"hljs-number\">80</span>, bottom: <span class=\"hljs-number\">30</span>, left: <span class=\"hljs-number\">50</span>},\n    width = svg.attr(<span class=\"hljs-string\">\"width\"</span>) - margin.left - margin.right,\n    height = svg.attr(<span class=\"hljs-string\">\"height\"</span>) - margin.top - margin.bottom,\n    g = svg.append(<span class=\"hljs-string\">\"g\"</span>).attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);</div>\n\n<div style=\"display: inline;\" id=\"Data_Format_0\" class=\"highlights fea_Data_Format\">var parseTime = fir.timeParse(<span class=\"hljs-string\">\"%Y%m%d\"</span>);</div>\n\n<div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\">var x = fir.scaleTime().range([<span class=\"hljs-number\">0</span>, width]),\n    y = fir.scaleLinear().range([height, <span class=\"hljs-number\">0</span>]),\n    z = fir.scaleOrdinal(fir.schemeCategory10);</div>\n\n<div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">var line = fir.line()\n    .curve(fir.curveBasis)\n    .x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> x(d.<span class=\"hljs-built_in\">date</span>); })\n    .y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> y(d.temperature); });</div>\n\n<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.tsv(<span class=\"hljs-string\">\"data.tsv\"</span></div><span class=\"hljs-string\"></span>, <span class=\"hljs-built_in\">type</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(error, data)</span></span> {\n  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">error</span>) throw <span class=\"hljs-built_in\">error</span>;\n\n  <div style=\"display: inline;\" id=\"Data_Grouping_0\" class=\"highlights fea_Data_Grouping\">var cities = data.columns.slice(<span class=\"hljs-number\">1</span>).map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(id)</span></span> {\n    <span class=\"hljs-keyword\">return</span> {\n      id: id,\n      values: data.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> {\n        <span class=\"hljs-keyword\">return</span> {<span class=\"hljs-built_in\">date</span>: d.<span class=\"hljs-built_in\">date</span>, temperature: d[id]};\n      })\n    };\n  });</div>\n\n  x.domain(fir.extent(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> d.<span class=\"hljs-built_in\">date</span>; }));\n\n  y.domain([\n    <div style=\"display: inline;\" id=\"Data_Transformation_0\" class=\"highlights fea_Data_Transformation\">fir.<span class=\"hljs-built_in\">min</span>(cities, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(c)</span></span> { <span class=\"hljs-keyword\">return</span> fir.<span class=\"hljs-built_in\">min</span>(c.values, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> d.temperature; }); }),\n    fir.<span class=\"hljs-built_in\">max</span>(cities, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(c)</span></span> { <span class=\"hljs-keyword\">return</span> fir.<span class=\"hljs-built_in\">max</span>(c.values, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> d.temperature; }); })</div>\n  ]);\n\n  z.domain(cities.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(c)</span></span> { <span class=\"hljs-keyword\">return</span> c.id; }));\n\n  <div style=\"display: inline;\" id=\"Axis_1\" class=\"highlights fea_Axis\">g.append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"axis axis--x\"</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height + <span class=\"hljs-string\">\")\"</span>)\n      .call(fir.axisBottom(x));\n\n  g.append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"axis axis--y\"</span>)\n      .call(fir.axisLeft(y))\n    .append(<span class=\"hljs-string\">\"text\"</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"rotate(-90)\"</span>)\n      .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-number\">6</span>)\n      .attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\"0.71em\"</span>)\n      .attr(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"#000\"</span>)\n      .text(<span class=\"hljs-string\">\"Temperature, ºF\"</span>);</div>\n\n  var city = g.selectAll(<span class=\"hljs-string\">\".city\"</span>)\n    .data(cities)\n    .enter().append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"city\"</span>);\n\n <div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\"> city.append(<span class=\"hljs-string\">\"path\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"line\"</span>)\n      .attr(<span class=\"hljs-string\">\"d\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> line(d.values); })\n      .style(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> z(d.id); });</div>\n\n  <div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">city.append(<span class=\"hljs-string\">\"text\"</span>)\n      .datum(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> {id: d.id, value: d.values[d.values.length - <span class=\"hljs-number\">1</span>]}; })\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"translate(\"</span> + x(d.value.<span class=\"hljs-built_in\">date</span>) + <span class=\"hljs-string\">\",\"</span> + y(d.value.temperature) + <span class=\"hljs-string\">\")\"</span>; })\n      .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-number\">3</span>)\n      .attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\"0.35em\"</span>)\n      .style(<span class=\"hljs-string\">\"font\"</span>, <span class=\"hljs-string\">\"10px sans-serif\"</span>)\n      .text(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> d.id; });</div>\n});\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">type</span><span class=\"hljs-params\">(d, _, columns)</span></span> {\n  d.<span class=\"hljs-built_in\">date</span> = parseTime(d.<span class=\"hljs-built_in\">date</span>);\n  <span class=\"hljs-keyword\">for</span> (var i = <span class=\"hljs-number\">1</span>, n = columns.length, c; i &lt; n; ++i) d[c = columns[i]] = +d[c];\n  <span class=\"hljs-keyword\">return</span> d;\n}\n//https://bl.ocks.org/sebg/<span class=\"hljs-number\">0</span>cc55428f83eb52bdfad6f5692023b07</code></pre></div>",
    "fir_9.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_9\"><pre id=\"fir_9_code\" ><code class=\"javascript\"><span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">var</span> svg = fir.select(<span class=\"hljs-string\">\"svg\"</span>),\n    margin = {<span class=\"hljs-attr\">top</span>: <span class=\"hljs-number\">20</span>, <span class=\"hljs-attr\">right</span>: <span class=\"hljs-number\">20</span>, <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">left</span>: <span class=\"hljs-number\">40</span>},\n    width = +svg.attr(<span class=\"hljs-string\">\"width\"</span>) - margin.left - margin.right,\n    height = +svg.attr(<span class=\"hljs-string\">\"height\"</span>) - margin.top - margin.bottom;</div>\n\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Data_Format_0\" class=\"highlights fea_Data_Format\"><span class=\"hljs-keyword\">var</span> parseTime = fir.timeParse(<span class=\"hljs-string\">\"%Y\"</span>)</div>\n    bisectDate = fir.bisector(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.year; }).left;\n\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> x = fir.scaleTime().range([<span class=\"hljs-number\">0</span>, width]);\n<span class=\"hljs-keyword\">var</span> y = fir.scaleLinear().range([height, <span class=\"hljs-number\">0</span>]);</div>\n\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">var</span> line = fir.line()\n    .x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> x(d.year); })\n    .y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> y(d.value); });</div>\n\n<span class=\"hljs-keyword\">var</span> g = svg.append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);\n\n<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.json(<span class=\"hljs-string\">\"data.json\"</span></div><span class=\"hljs-string\"></span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, data</span>) </span>{\n    <span class=\"hljs-keyword\">if</span> (error) <span class=\"hljs-keyword\">throw</span> error;\n\n    data.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n      d.year = parseTime(d.year);\n      d.value = +d.value;\n    });\n\n    x.domain(fir.extent(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.year; }));\n    y.domain([<div style=\"display: inline;\" id=\"Data_Transformation_0\" class=\"highlights fea_Data_Transformation\">fir.min(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.value; }) / <span class=\"hljs-number\">1.005</span>, fir.max(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.value; }) * <span class=\"hljs-number\">1.005</span>]</div>);\n\n    <div style=\"display: inline;\" id=\"Axis_1\" class=\"highlights fea_Axis\">g.append(<span class=\"hljs-string\">\"g\"</span>)\n        .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"axis axis--x\"</span>)\n        .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height + <span class=\"hljs-string\">\")\"</span>)\n        .call(fir.axisBottom(x));\n\n    g.append(<span class=\"hljs-string\">\"g\"</span>)\n        .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"axis axis--y\"</span>)\n        .call(fir.axisLeft(y).ticks(<span class=\"hljs-number\">6</span>).tickFormat(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">parseInt</span>(d / <span class=\"hljs-number\">1000</span>) + <span class=\"hljs-string\">\"k\"</span>; }))\n      .append(<span class=\"hljs-string\">\"text\"</span>)\n        .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"axis-title\"</span>)\n        .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"rotate(-90)\"</span>)\n        .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-number\">6</span>)\n        .attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\".71em\"</span>)\n        .style(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"end\"</span>)\n        .attr(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"#5D6971\"</span>)\n        .text(<span class=\"hljs-string\">\"Population)\"</span>);</div>\n\n    <div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">g.append(<span class=\"hljs-string\">\"path\"</span>)\n        .datum(data)\n        .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"line\"</span>)\n        .attr(<span class=\"hljs-string\">\"d\"</span>, line);</div>\n\n    <span class=\"hljs-keyword\">var</span> focus = g.append(<span class=\"hljs-string\">\"g\"</span>)\n        .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"focus\"</span>)\n        .style(<span class=\"hljs-string\">\"display\"</span>, <span class=\"hljs-string\">\"none\"</span>);\n\n    focus.append(<span class=\"hljs-string\">\"line\"</span>)\n        .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"x-hover-line hover-line\"</span>)\n        .attr(<span class=\"hljs-string\">\"y1\"</span>, <span class=\"hljs-number\">0</span>)\n        .attr(<span class=\"hljs-string\">\"y2\"</span>, height);\n\n    <div style=\"display: inline;\" id=\"Shapes_2\" class=\"highlights fea_Shapes\">focus.append(<span class=\"hljs-string\">\"line\"</span>)\n        .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"y-hover-line hover-line\"</span>)\n        .attr(<span class=\"hljs-string\">\"x1\"</span>, width)\n        .attr(<span class=\"hljs-string\">\"x2\"</span>, width);\n\n    focus.append(<span class=\"hljs-string\">\"circle\"</span>)\n        .attr(<span class=\"hljs-string\">\"r\"</span>, <span class=\"hljs-number\">7.5</span>);</div>\n\n    <div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">focus.append(<span class=\"hljs-string\">\"text\"</span>)\n        .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-number\">15</span>)\n      \t.attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\".31em\"</span>);\n</div>\n    <div style=\"display: inline;\" id=\"Shapes_3\" class=\"highlights fea_Shapes\">svg.append(<span class=\"hljs-string\">\"rect\"</span>)\n        .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>)\n        .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"overlay\"</span>)\n        .attr(<span class=\"hljs-string\">\"width\"</span>, width)\n        .attr(<span class=\"hljs-string\">\"height\"</span>, height)</div>\n        <div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\">.on(<span class=\"hljs-string\">\"mouseover\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{ focus.style(<span class=\"hljs-string\">\"display\"</span>, <span class=\"hljs-literal\">null</span>); })\n        .on(<span class=\"hljs-string\">\"mouseout\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{ focus.style(<span class=\"hljs-string\">\"display\"</span>, <span class=\"hljs-string\">\"none\"</span>); })\n        .on(<span class=\"hljs-string\">\"mousemove\"</span>, mousemove);</div>\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">mousemove</span>(<span class=\"hljs-params\"></span>) </span>{\n      <span class=\"hljs-keyword\">var</span> x0 = x.invert(fir.mouse(<span class=\"hljs-built_in\">this</span>)[<span class=\"hljs-number\">0</span>]),\n          i = bisectDate(data, x0, <span class=\"hljs-number\">1</span>),\n          d0 = data[i - <span class=\"hljs-number\">1</span>],\n          d1 = data[i],\n          d = x0 - d0.year &gt; d1.year - x0 ? d1 : d0;\n      focus.attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + x(d.year) + <span class=\"hljs-string\">\",\"</span> + y(d.value) + <span class=\"hljs-string\">\")\"</span>);\n      focus.select(<span class=\"hljs-string\">\"text\"</span>).text(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{ <span class=\"hljs-keyword\">return</span> d.value; });\n      focus.select(<span class=\"hljs-string\">\".x-hover-line\"</span>).attr(<span class=\"hljs-string\">\"y2\"</span>, height - y(d.value));\n      focus.select(<span class=\"hljs-string\">\".y-hover-line\"</span>).attr(<span class=\"hljs-string\">\"x2\"</span>, width + width);\n    }\n});\n<span class=\"hljs-comment\">//https://bl.ocks.org/alandunning/cfb7dcd7951826b9eacd54f0647f48fir</span></code></pre></div>",
    "fir_11.js": "<div class=\"codeBlock hljs lua\" id=\"fir_11\"><pre id=\"fir_11_code\" ><code class=\"javascript\">var margin = { top: <span class=\"hljs-number\">30</span>, right: <span class=\"hljs-number\">120</span>, bottom: <span class=\"hljs-number\">30</span>, left: <span class=\"hljs-number\">50</span> },\n    width = <span class=\"hljs-number\">960</span> - margin.left - margin.right,\n    height = <span class=\"hljs-number\">500</span> - margin.top - margin.bottom,\n    tooltip = { width: <span class=\"hljs-number\">100</span>, height: <span class=\"hljs-number\">100</span>, x: <span class=\"hljs-number\">10</span>, y: <span class=\"hljs-number\">-30</span> };\n\n<div style=\"display: inline;\" id=\"Data_Format_0\" class=\"highlights fea_Data_Format\">var parseDate = fir.<span class=\"hljs-built_in\">time</span>.<span class=\"hljs-built_in\">format</span>(<span class=\"hljs-string\">\"%m/%e/%Y\"</span>).parse,\n    bisectDate = fir.bisector(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> d.<span class=\"hljs-built_in\">date</span>; }).left,\n    formatValue = fir.<span class=\"hljs-built_in\">format</span>(<span class=\"hljs-string\">\",\"</span>),\n    dateFormatter = fir.<span class=\"hljs-built_in\">time</span>.<span class=\"hljs-built_in\">format</span>(<span class=\"hljs-string\">\"%m/%d/%y\"</span>);</div>\n\n<div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\">var x = fir.<span class=\"hljs-built_in\">time</span>.scale()\n        .range([<span class=\"hljs-number\">0</span>, width]);\n\nvar y = fir.scale.linear()\n        .range([height, <span class=\"hljs-number\">0</span>]);\n\nvar xAxis = fir.svg.axis()\n    .scale(x)\n    .orient(<span class=\"hljs-string\">\"bottom\"</span>)\n    .tickFormat(dateFormatter);\n\nvar yAxis = fir.svg.axis()\n    .scale(y)\n    .orient(<span class=\"hljs-string\">\"left\"</span>)\n    .tickFormat(fir.<span class=\"hljs-built_in\">format</span>(<span class=\"hljs-string\">\"s\"</span>))</div>\n\n<div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">var line = fir.svg.line()\n    .x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> x(d.<span class=\"hljs-built_in\">date</span>); })\n    .y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> y(d.likes); });</div>\n\n<div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\">var svg = fir.<span class=\"hljs-built_in\">select</span>(<span class=\"hljs-string\">\"body\"</span>).append(<span class=\"hljs-string\">\"svg\"</span>)\n    .attr(<span class=\"hljs-string\">\"width\"</span>, width + margin.left + margin.right)\n    .attr(<span class=\"hljs-string\">\"height\"</span>, height + margin.top + margin.bottom)\n    .append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);</div>\n\n<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.tsv(<span class=\"hljs-string\">\"data.tsv\"</span></div><span class=\"hljs-string\"></span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(error, data)</span></span> {\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">error</span>) throw <span class=\"hljs-built_in\">error</span>;\n\n    data.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> {\n        d.<span class=\"hljs-built_in\">date</span> = parseDate(d.<span class=\"hljs-built_in\">date</span>);\n        d.likes = +d.likes;\n    });\n\n    <div style=\"display: inline;\" id=\"Data_Transformation_0\" class=\"highlights fea_Data_Transformation\">data.<span class=\"hljs-built_in\">sort</span>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(a, b)</span></span> {\n        <span class=\"hljs-keyword\">return</span> a.<span class=\"hljs-built_in\">date</span> - b.<span class=\"hljs-built_in\">date</span>;\n    });\n</div>\n    x.domain([data[<span class=\"hljs-number\">0</span>].<span class=\"hljs-built_in\">date</span>, data[data.length - <span class=\"hljs-number\">1</span>].<span class=\"hljs-built_in\">date</span>]);\n    y.domain(fir.extent(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> d.likes; }));\n\n    <div style=\"display: inline;\" id=\"Axis_1\" class=\"highlights fea_Axis\">svg.append(<span class=\"hljs-string\">\"g\"</span>)\n        .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"x axis\"</span>)\n        .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height + <span class=\"hljs-string\">\")\"</span>)\n        .call(xAxis);\n\n    svg.append(<span class=\"hljs-string\">\"g\"</span>)\n        .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"y axis\"</span>)\n        .call(yAxis)\n        .append(<span class=\"hljs-string\">\"text\"</span>)\n        .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"rotate(-90)\"</span>)\n        .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-number\">6</span>)\n        .attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\".71em\"</span>)\n        .style(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"end\"</span>)\n        .text(<span class=\"hljs-string\">\"Number of Likes\"</span>);</div>\n\n    <div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">svg.append(<span class=\"hljs-string\">\"path\"</span>)\n        .datum(data)\n        .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"line\"</span>)\n        .attr(<span class=\"hljs-string\">\"d\"</span>, line);</div>\n\n    var focus = svg.append(<span class=\"hljs-string\">\"g\"</span>)\n        .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"focus\"</span>)\n        .style(<span class=\"hljs-string\">\"display\"</span>, <span class=\"hljs-string\">\"none\"</span>);\n\n    <div style=\"display: inline;\" id=\"Shapes_2\" class=\"highlights fea_Shapes\">focus.append(<span class=\"hljs-string\">\"circle\"</span>)\n        .attr(<span class=\"hljs-string\">\"r\"</span>, <span class=\"hljs-number\">5</span>);\n\n    focus.append(<span class=\"hljs-string\">\"rect\"</span>)\n        .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"tooltip\"</span>)\n        .attr(<span class=\"hljs-string\">\"width\"</span>, <span class=\"hljs-number\">100</span>)\n        .attr(<span class=\"hljs-string\">\"height\"</span>, <span class=\"hljs-number\">50</span>)\n        .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-number\">10</span>)\n        .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-number\">-22</span>)\n        .attr(<span class=\"hljs-string\">\"rx\"</span>, <span class=\"hljs-number\">4</span>)\n        .attr(<span class=\"hljs-string\">\"ry\"</span>, <span class=\"hljs-number\">4</span>);</div>\n\n    <div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">focus.append(<span class=\"hljs-string\">\"text\"</span>)\n        .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"tooltip-date\"</span>)\n        .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-number\">18</span>)\n        .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-number\">-2</span>);\n\n    focus.append(<span class=\"hljs-string\">\"text\"</span>)\n        .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-number\">18</span>)\n        .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-number\">18</span>)\n        .text(<span class=\"hljs-string\">\"Likes:\"</span>);\n\n    focus.append(<span class=\"hljs-string\">\"text\"</span>)\n        .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"tooltip-likes\"</span>)\n        .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-number\">60</span>)\n        .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-number\">18</span>);</div>\n\n    svg.append(<span class=\"hljs-string\">\"rect\"</span>)\n        .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"overlay\"</span>)\n        .attr(<span class=\"hljs-string\">\"width\"</span>, width)\n        .attr(<span class=\"hljs-string\">\"height\"</span>, height)\n        <div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\">.on(<span class=\"hljs-string\">\"mouseover\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span> { focus.style(<span class=\"hljs-string\">\"display\"</span>, null); })\n        .on(<span class=\"hljs-string\">\"mouseout\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span> { focus.style(<span class=\"hljs-string\">\"display\"</span>, <span class=\"hljs-string\">\"none\"</span>); })\n        .on(<span class=\"hljs-string\">\"mousemove\"</span>, mousemove);</div>\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">mousemove</span><span class=\"hljs-params\">()</span></span> {\n        var x0 = x.invert(fir.mouse(this)[<span class=\"hljs-number\">0</span>]),\n            i = bisectDate(data, x0, <span class=\"hljs-number\">1</span>),\n            d0 = data[i - <span class=\"hljs-number\">1</span>],\n            d1 = data[i],\n            d = x0 - d0.<span class=\"hljs-built_in\">date</span> &gt; d1.<span class=\"hljs-built_in\">date</span> - x0 ? d1 : d0;\n        focus.attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + x(d.<span class=\"hljs-built_in\">date</span>) + <span class=\"hljs-string\">\",\"</span> + y(d.likes) + <span class=\"hljs-string\">\")\"</span>);\n        focus.<span class=\"hljs-built_in\">select</span>(<span class=\"hljs-string\">\".tooltip-date\"</span>).text(dateFormatter(d.<span class=\"hljs-built_in\">date</span>));\n        focus.<span class=\"hljs-built_in\">select</span>(<span class=\"hljs-string\">\".tooltip-likes\"</span>).text(formatValue(d.likes));\n    }\n});\n//https://bl.ocks.org/Vvgupta/<span class=\"hljs-number\">62</span>d8a405260cb4d104cc1ba42b155e87</code></pre></div>",
    "fir_12.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_12\"><pre id=\"fir_12_code\" ><code class=\"javascript\"><span class=\"hljs-keyword\">var</span> dataset = [\n  [<span class=\"hljs-string\">'札幌'</span>,<span class=\"hljs-number\">703</span>, <span class=\"hljs-number\">1902</span>],\n  [<span class=\"hljs-string\">'清水'</span>,<span class=\"hljs-number\">1473</span>,<span class=\"hljs-number\">3341</span>],\n  [<span class=\"hljs-string\">'松本'</span>,<span class=\"hljs-number\">863</span>,<span class=\"hljs-number\">1935</span>],\n  [<span class=\"hljs-string\">'Ｃ大阪'</span>,<span class=\"hljs-number\">1494</span>,<span class=\"hljs-number\">3008</span>],\n  [<span class=\"hljs-string\">'京都'</span>,<span class=\"hljs-number\">965</span>,<span class=\"hljs-number\">1743</span>],\n  [<span class=\"hljs-string\">'岡山'</span>,<span class=\"hljs-number\">568</span>,<span class=\"hljs-number\">1271</span>],\n  [<span class=\"hljs-string\">'町田'</span>,<span class=\"hljs-number\">189</span>, <span class=\"hljs-number\">626</span>],\n  [<span class=\"hljs-string\">'横浜ＦＣ'</span>,<span class=\"hljs-number\">464</span>, <span class=\"hljs-number\">1064</span>],\n  [<span class=\"hljs-string\">'徳島'</span>,<span class=\"hljs-number\">731</span>, <span class=\"hljs-number\">1443</span>],\n  [<span class=\"hljs-string\">'愛媛'</span>,<span class=\"hljs-number\">306</span>, <span class=\"hljs-number\">630</span>],\n  [<span class=\"hljs-string\">'千葉'</span>,<span class=\"hljs-number\">899</span>, <span class=\"hljs-number\">2556</span>],\n  [<span class=\"hljs-string\">'山口'</span>,<span class=\"hljs-number\">231</span>, <span class=\"hljs-number\">880</span>],\n  [<span class=\"hljs-string\">'水戸'</span>,<span class=\"hljs-number\">262</span>, <span class=\"hljs-number\">589</span>],\n  [<span class=\"hljs-string\">'山形'</span>,<span class=\"hljs-number\">429</span>, <span class=\"hljs-number\">1497</span>],\n  [<span class=\"hljs-string\">'長崎'</span>,<span class=\"hljs-number\">322</span>, <span class=\"hljs-number\">749</span>],\n  [<span class=\"hljs-string\">'熊本'</span>,<span class=\"hljs-number\">315</span>, <span class=\"hljs-number\">720</span>],\n  [<span class=\"hljs-string\">'群馬'</span>,<span class=\"hljs-number\">228</span>, <span class=\"hljs-number\">522</span>],\n  [<span class=\"hljs-string\">'東京Ｖ'</span>,<span class=\"hljs-number\">436</span>, <span class=\"hljs-number\">1391</span>],\n  [<span class=\"hljs-string\">'讃岐'</span>,<span class=\"hljs-number\">287</span>, <span class=\"hljs-number\">613</span>],\n  [<span class=\"hljs-string\">'岐阜'</span>,<span class=\"hljs-number\">419</span>,<span class=\"hljs-number\">932</span>],\n  [<span class=\"hljs-string\">'金沢'</span>,<span class=\"hljs-number\">296</span>,<span class=\"hljs-number\">612</span>],\n  [<span class=\"hljs-string\">'北九州'</span>,<span class=\"hljs-number\">343</span>,<span class=\"hljs-number\">855</span>]\n];\n\n<span class=\"hljs-keyword\">var</span> margin = {<span class=\"hljs-attr\">top</span>: <span class=\"hljs-number\">20</span>, <span class=\"hljs-attr\">right</span>: <span class=\"hljs-number\">20</span>, <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">left</span>: <span class=\"hljs-number\">40</span>},\n    width = <span class=\"hljs-number\">960</span>,\n    height = <span class=\"hljs-number\">400</span>;\n\n<span class=\"hljs-keyword\"></span><span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> xScale = fir.scaleBand()\n              .rangeRound([<span class=\"hljs-number\">0</span>, width])\n              .padding(<span class=\"hljs-number\">0.1</span>)\n              .domain(dataset.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> d[<span class=\"hljs-number\">0</span>];\n              }));\n    yScale = fir.scaleLinear()\n              .rangeRound([height, <span class=\"hljs-number\">0</span>])\n              .domain([<span class=\"hljs-number\">0</span>, fir.max(dataset, (<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> d[<span class=\"hljs-number\">2</span>];\n              }))]);</div>\n\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">var</span> svg = fir.select(<span class=\"hljs-string\">\"body\"</span>).append(<span class=\"hljs-string\">\"svg\"</span>)\n          .attr(<span class=\"hljs-string\">\"width\"</span>, width + margin.left + margin.right)\n          .attr(<span class=\"hljs-string\">\"height\"</span>, height + margin.top + margin.bottom);\n\n<span class=\"hljs-keyword\">var</span> g = svg.append(<span class=\"hljs-string\">\"g\"</span>)\n          .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);</div>\n\n<span class=\"hljs-comment\">// axis-x</span>\n<div style=\"display: inline;\" id=\"Axis_1\" class=\"highlights fea_Axis\">g.append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"axis axis--x\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height + <span class=\"hljs-string\">\")\"</span>)\n    .call(fir.axisBottom(xScale));\n\n<span class=\"hljs-comment\">// axis-y</span>\ng.append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"axis axis--y\"</span>)\n    .call(fir.axisLeft(yScale));</div>\n\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">var</span> bar = g.selectAll(<span class=\"hljs-string\">\"rect\"</span>)\n  .data(dataset)\n  .enter().append(<span class=\"hljs-string\">\"g\"</span>);\n\n<span class=\"hljs-comment\">// bar chart</span>\nbar.append(<span class=\"hljs-string\">\"rect\"</span>)\n  .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> xScale(d[<span class=\"hljs-number\">0</span>]); })\n  .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> yScale(d[<span class=\"hljs-number\">2</span>]); })\n  .attr(<span class=\"hljs-string\">\"width\"</span>, xScale.bandwidth())\n  .attr(<span class=\"hljs-string\">\"height\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> height - yScale(d[<span class=\"hljs-number\">2</span>]); })\n  .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n    <span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-string\">\"bar \"</span>;\n    <span class=\"hljs-keyword\">if</span> (d[<span class=\"hljs-number\">1</span>] &lt; <span class=\"hljs-number\">400</span>) {\n      <span class=\"hljs-keyword\">return</span> s + <span class=\"hljs-string\">\"bar1\"</span>;\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (d[<span class=\"hljs-number\">1</span>] &lt; <span class=\"hljs-number\">800</span>) {\n      <span class=\"hljs-keyword\">return</span> s + <span class=\"hljs-string\">\"bar2\"</span>;\n    } <span class=\"hljs-keyword\">else</span> {\n      <span class=\"hljs-keyword\">return</span> s + <span class=\"hljs-string\">\"bar3\"</span>;\n    }\n  });</div>\n\n<span class=\"hljs-comment\">// labels on the bar chart</span>\n<div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">bar.append(<span class=\"hljs-string\">\"text\"</span>)\n  .attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\"1.3em\"</span>)\n  .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> xScale(d[<span class=\"hljs-number\">0</span>]) + xScale.bandwidth() / <span class=\"hljs-number\">2</span>; })\n  .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> yScale(d[<span class=\"hljs-number\">2</span>]); })\n  .attr(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"middle\"</span>)\n  .attr(<span class=\"hljs-string\">\"font-family\"</span>, <span class=\"hljs-string\">\"sans-serif\"</span>)\n  .attr(<span class=\"hljs-string\">\"font-size\"</span>, <span class=\"hljs-string\">\"11px\"</span>)\n  .attr(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"black\"</span>)\n  .text(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n    <span class=\"hljs-keyword\">return</span> d[<span class=\"hljs-number\">2</span>];\n  });</div>\n\n<span class=\"hljs-comment\">// line chart</span>\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">var</span> line = fir.line()\n    .x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d, i</span>) </span>{ <span class=\"hljs-keyword\">return</span> xScale(d[<span class=\"hljs-number\">0</span>]) + xScale.bandwidth() / <span class=\"hljs-number\">2</span>; })\n    .y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> yScale(d[<span class=\"hljs-number\">1</span>]); })\n    .curve(fir.curveMonotoneX);\n\nbar.append(<span class=\"hljs-string\">\"path\"</span>)\n  .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"line\"</span>) <span class=\"hljs-comment\">// Assign a class for styling</span>\n  .attr(<span class=\"hljs-string\">\"d\"</span>, line(dataset)); <span class=\"hljs-comment\">// 11. Calls the line generator</span>\n\nbar.append(<span class=\"hljs-string\">\"circle\"</span>) <span class=\"hljs-comment\">// Uses the enter().append() method</span>\n    .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"dot\"</span>) <span class=\"hljs-comment\">// Assign a class for styling</span>\n    .attr(<span class=\"hljs-string\">\"cx\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d, i</span>) </span>{ <span class=\"hljs-keyword\">return</span> xScale(d[<span class=\"hljs-number\">0</span>]) + xScale.bandwidth() / <span class=\"hljs-number\">2</span>; })\n    .attr(<span class=\"hljs-string\">\"cy\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> yScale(d[<span class=\"hljs-number\">1</span>]); })\n    .attr(<span class=\"hljs-string\">\"r\"</span>, <span class=\"hljs-number\">5</span>);</div>\n<span class=\"hljs-comment\">//https://bl.ocks.org/htakeuchi/a60c0ecb55713c06c054c26c6dbed57a</span></code></pre></div>",
    "fir_15.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_15\"><pre id=\"fir_15_code\" ><code class=\"javascript\"><span class=\"hljs-comment\">// set the dimensions and margins of the graph</span>\n<span class=\"hljs-keyword\">var</span> margin = {<span class=\"hljs-attr\">top</span>: <span class=\"hljs-number\">10</span>, <span class=\"hljs-attr\">right</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">left</span>: <span class=\"hljs-number\">60</span>},\n    width = <span class=\"hljs-number\">460</span> - margin.left - margin.right,\n    height = <span class=\"hljs-number\">400</span> - margin.top - margin.bottom;\n\n<span class=\"hljs-comment\">// append the svg object to the body of the page</span>\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">var</span> svg = fir.select(<span class=\"hljs-string\">\"#my_dataviz\"</span>)\n  .append(<span class=\"hljs-string\">\"svg\"</span>)\n    .attr(<span class=\"hljs-string\">\"width\"</span>, width + margin.left + margin.right)\n    .attr(<span class=\"hljs-string\">\"height\"</span>, height + margin.top + margin.bottom)\n  .append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>,\n          <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);</div>\n\n<span class=\"hljs-comment\">//Read the data</span>\n<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.csv(<span class=\"hljs-string\">\"https://raw.githubusercontent.com/holtzy/fir-graph-gallery/master/DATA/data_IC.csv\"</span></div><span class=\"hljs-string\"></span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{\n\n  <span class=\"hljs-comment\">// Add X axis --&gt; it is a date format</span>\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> x = fir.scaleLinear()\n    .domain([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>])\n    .range([ <span class=\"hljs-number\">0</span>, width ]);\n  svg.append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height + <span class=\"hljs-string\">\")\"</span>)\n    .call(fir.axisBottom(x));\n\n  <span class=\"hljs-comment\">// Add Y axis</span>\n  <span class=\"hljs-keyword\">var</span> y = fir.scaleLinear()\n    .domain([<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">13</span>])\n    .range([ height, <span class=\"hljs-number\">0</span> ]);\n  svg.append(<span class=\"hljs-string\">\"g\"</span>)\n    .call(fir.axisLeft(y));</div>\n\n  <span class=\"hljs-comment\">// This allows to find the closest X index of the mouse:</span>\n  <span class=\"hljs-keyword\">var</span> bisect = fir.bisector(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.x; }).left;\n\n  <span class=\"hljs-comment\">// Create the circle that travels along the curve of chart</span>\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">var</span> focus = svg\n    .append(<span class=\"hljs-string\">'g'</span>)\n    .append(<span class=\"hljs-string\">'circle'</span>)\n      .style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"none\"</span>)\n      .attr(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"black\"</span>)\n      .attr(<span class=\"hljs-string\">'r'</span>, <span class=\"hljs-number\">8.5</span>)\n      .style(<span class=\"hljs-string\">\"opacity\"</span>, <span class=\"hljs-number\">0</span>)</div>\n\n  <span class=\"hljs-comment\">// Create the text that travels along the curve of chart</span>\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\"><span class=\"hljs-keyword\">var</span> focusText = svg\n    .append(<span class=\"hljs-string\">'g'</span>)\n    .append(<span class=\"hljs-string\">'text'</span>)\n      .style(<span class=\"hljs-string\">\"opacity\"</span>, <span class=\"hljs-number\">0</span>)\n      .attr(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"left\"</span>)\n      .attr(<span class=\"hljs-string\">\"alignment-baseline\"</span>, <span class=\"hljs-string\">\"middle\"</span>)</div>\n\n  <span class=\"hljs-comment\">// Add the line</span>\n  <div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">svg\n    .append(<span class=\"hljs-string\">\"path\"</span>)\n    .datum(data)\n    .attr(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"none\"</span>)\n    .attr(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"steelblue\"</span>)\n    .attr(<span class=\"hljs-string\">\"stroke-width\"</span>, <span class=\"hljs-number\">1.5</span>)\n    .attr(<span class=\"hljs-string\">\"d\"</span>, fir.line()\n      .x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> x(d.x) })\n      .y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> y(d.y) })\n      )\n\n  <span class=\"hljs-comment\">// Create a rect on top of the svg area: this rectangle recovers mouse position</span>\n  svg\n    .append(<span class=\"hljs-string\">'rect'</span>)\n    .style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"none\"</span>)\n    .style(<span class=\"hljs-string\">\"pointer-events\"</span>, <span class=\"hljs-string\">\"all\"</span>)\n    .attr(<span class=\"hljs-string\">'width'</span>, width)\n    .attr(<span class=\"hljs-string\">'height'</span>, height)</div>\n    <div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\">.on(<span class=\"hljs-string\">'mouseover'</span>, mouseover)\n    .on(<span class=\"hljs-string\">'mousemove'</span>, mousemove)\n    .on(<span class=\"hljs-string\">'mouseout'</span>, mouseout);</div>\n\n\n  <span class=\"hljs-comment\">// What happens when the mouse move -&gt; show the annotations at the right positions.</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">mouseover</span>(<span class=\"hljs-params\"></span>) </span>{\n    focus.style(<span class=\"hljs-string\">\"opacity\"</span>, <span class=\"hljs-number\">1</span>)\n    focusText.style(<span class=\"hljs-string\">\"opacity\"</span>,<span class=\"hljs-number\">1</span>)\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">mousemove</span>(<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-comment\">// recover coordinate we need</span>\n    <span class=\"hljs-keyword\">var</span> x0 = x.invert(fir.mouse(<span class=\"hljs-built_in\">this</span>)[<span class=\"hljs-number\">0</span>]);\n    <span class=\"hljs-keyword\">var</span> i = bisect(data, x0, <span class=\"hljs-number\">1</span>);\n    selectedData = data[i]\n    focus\n      .attr(<span class=\"hljs-string\">\"cx\"</span>, x(selectedData.x))\n      .attr(<span class=\"hljs-string\">\"cy\"</span>, y(selectedData.y))\n    focusText\n      .html(<span class=\"hljs-string\">\"x:\"</span> + selectedData.x + <span class=\"hljs-string\">\"  -  \"</span> + <span class=\"hljs-string\">\"y:\"</span> + selectedData.y)\n      .attr(<span class=\"hljs-string\">\"x\"</span>, x(selectedData.x)+<span class=\"hljs-number\">15</span>)\n      .attr(<span class=\"hljs-string\">\"y\"</span>, y(selectedData.y))\n    }\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">mouseout</span>(<span class=\"hljs-params\"></span>) </span>{\n    focus.style(<span class=\"hljs-string\">\"opacity\"</span>, <span class=\"hljs-number\">0</span>)\n    focusText.style(<span class=\"hljs-string\">\"opacity\"</span>, <span class=\"hljs-number\">0</span>)\n  }\n\n})\n<span class=\"hljs-comment\">//https://www.fir-graph-gallery.com/graph/line_cursor.html</span></code></pre></div>",
    "fir_17.js": "<div class=\"codeBlock hljs lua\" id=\"fir_17\"><pre id=\"fir_17_code\" ><code class=\"javascript\">(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span> {\n  $(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">()</span></span> {\n    var bars, data, days, h, <span class=\"hljs-built_in\">lines</span>, <span class=\"hljs-built_in\">max</span>, pb, pl, pr, pt, ticks, tl, vis, w, x, xl, y, _ref;\n    days = [<span class=\"hljs-string\">'Sunday'</span>, <span class=\"hljs-string\">'Monday'</span>, <span class=\"hljs-string\">'Tuesday'</span>, <span class=\"hljs-string\">'Wednesday'</span>, <span class=\"hljs-string\">'Thursday'</span>, <span class=\"hljs-string\">'Friday'</span>, <span class=\"hljs-string\">'Saturday'</span>];\n    data = <span class=\"hljs-string\">[[10, 5, 10, 5, 8, 15, 18], [20, 10, 20, 40, 23, 20, 12]]</span>;\n    _ref = [<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">40</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">30</span>], pt = _ref[<span class=\"hljs-number\">0</span>], pl = _ref[<span class=\"hljs-number\">1</span>], pr = _ref[<span class=\"hljs-number\">2</span>], pb = _ref[<span class=\"hljs-number\">3</span>];\n    w = $(<span class=\"hljs-string\">'#chart'</span>).width() - (pl + pr);\n    h = $(<span class=\"hljs-string\">'#chart'</span>).height() - (pt + pb);\n    tl = <span class=\"hljs-number\">3</span>;\n    <span class=\"hljs-built_in\"></span><div style=\"display: inline;\" id=\"Data_Transformation_0\" class=\"highlights fea_Data_Transformation\"><span class=\"hljs-built_in\">max</span> = fir.<span class=\"hljs-built_in\">max</span>(fir.merge(data));</div>\n    <div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\">x = fir.scale.linear().domain([<span class=\"hljs-number\">0</span>, data[<span class=\"hljs-number\">0</span>].length - <span class=\"hljs-number\">1</span>]).range([<span class=\"hljs-number\">0</span>, w]);\n    y = fir.scale.linear().domain([<span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">max</span> + <span class=\"hljs-number\">5</span>]).range([h, <span class=\"hljs-number\">0</span>]);\n    xl = fir.scale.ordinal().domain(fir.range(days.length)).rangeRoundBands([<span class=\"hljs-number\">0</span>, w], <span class=\"hljs-number\">0</span>);</div>\n    <div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\">vis = fir.<span class=\"hljs-built_in\">select</span>(<span class=\"hljs-string\">'#chart'</span>).append(<span class=\"hljs-string\">'svg:svg'</span>).attr(<span class=\"hljs-string\">'width'</span>, w + (pl + pr)).attr(<span class=\"hljs-string\">'height'</span>, h + pt + pb).attr(<span class=\"hljs-string\">'class'</span>, <span class=\"hljs-string\">'viz'</span>).append(<span class=\"hljs-string\">'svg:g'</span>).attr(<span class=\"hljs-string\">'transform'</span>, <span class=\"hljs-string\">\"translate(\"</span> + pl + <span class=\"hljs-string\">\",\"</span> + pt + <span class=\"hljs-string\">\")\"</span>);</div>\n    <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">bars = vis.selectAll(<span class=\"hljs-string\">'g.bar'</span>).data(days).enter().append(<span class=\"hljs-string\">'svg:g'</span>).attr(<span class=\"hljs-string\">'transform'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d, i)</span></span> {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"translate(\"</span> + (xl(i)) + <span class=\"hljs-string\">\", 0)\"</span>;\n    }).attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d, i)</span></span> {\n      <span class=\"hljs-keyword\">if</span> (i % <span class=\"hljs-number\">2</span> === <span class=\"hljs-number\">0</span>) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'even'</span>;\n      } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'odd'</span>;\n      }\n    });\n    bars.append(<span class=\"hljs-string\">\"svg:rect\"</span>).attr(<span class=\"hljs-string\">\"width\"</span>, xl.rangeBand()).attr(<span class=\"hljs-string\">\"height\"</span>, h);</div>\n    <div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">bars.append(<span class=\"hljs-string\">'svg:text'</span>).text(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> {\n      <span class=\"hljs-keyword\">return</span> d;\n    }).attr(<span class=\"hljs-string\">'y'</span>, h).attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\"1.5em\"</span>).attr(<span class=\"hljs-string\">'dx'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> {\n      <span class=\"hljs-keyword\">return</span> (xl.rangeBand() / <span class=\"hljs-number\">2.0</span>) - (this.textLength.baseVal.value / <span class=\"hljs-number\">2.0</span>);\n    });</div>\n    ticks = vis.selectAll(<span class=\"hljs-string\">'.tick'</span>).data(y.ticks(<span class=\"hljs-number\">7</span>)).enter().append(<span class=\"hljs-string\">'svg:g'</span>).attr(<span class=\"hljs-string\">'transform'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"translate(-\"</span> + (tl * <span class=\"hljs-number\">1.5</span>) + <span class=\"hljs-string\">\", \"</span> + (y(d)) + <span class=\"hljs-string\">\")\"</span>;\n    }).attr(<span class=\"hljs-string\">'class'</span>, <span class=\"hljs-string\">'tick'</span>);\n    <div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">ticks.append(<span class=\"hljs-string\">'svg:line'</span>).attr(<span class=\"hljs-string\">'y1'</span>, <span class=\"hljs-number\">0</span>).attr(<span class=\"hljs-string\">'y2'</span>, <span class=\"hljs-number\">0</span>).attr(<span class=\"hljs-string\">'x1'</span>, <span class=\"hljs-number\">0</span>).attr(<span class=\"hljs-string\">'x2'</span>, w + tl);</div>\n    <div style=\"display: inline;\" id=\"Text_1\" class=\"highlights fea_Text\">ticks.append(<span class=\"hljs-string\">'svg:text'</span>).text(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> {\n      <span class=\"hljs-keyword\">return</span> d;\n    }).attr(<span class=\"hljs-string\">'text-anchor'</span>, <span class=\"hljs-string\">'end'</span>).attr(<span class=\"hljs-string\">'dy'</span>, <span class=\"hljs-number\">2</span>).attr(<span class=\"hljs-string\">'x'</span>, <span class=\"hljs-number\">-4</span>);</div>\n    <span class=\"hljs-built_in\">lines</span> = vis.selectAll(<span class=\"hljs-string\">'line.group'</span>).data(data).enter().append(<span class=\"hljs-string\">'svg:g'</span>).attr(<span class=\"hljs-string\">'class'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d, i)</span></span> {\n      <span class=\"hljs-keyword\">if</span> (i === <span class=\"hljs-number\">0</span>) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'cats'</span>;\n      } <span class=\"hljs-keyword\">else</span> {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'dogs'</span>;\n      }\n    });\n    <span class=\"hljs-built_in\"></span><div style=\"display: inline;\" id=\"Shapes_2\" class=\"highlights fea_Shapes\"><span class=\"hljs-built_in\">l</span><span class=\"hljs-built_in\">ines</span>.append(<span class=\"hljs-string\">\"svg:path\"</span>).attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> {\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'apath'</span>;\n    }).attr(<span class=\"hljs-string\">\"d\"</span>, fir.svg.line().x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d, i)</span></span> {\n      <span class=\"hljs-keyword\">return</span> x(i);\n    }).y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> {\n      <span class=\"hljs-keyword\">return</span> y(d);\n    }).interpolate(<span class=\"hljs-string\">'cardinal'</span>).tension(<span class=\"hljs-number\">.7</span>));\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">lines</span>.selectAll(<span class=\"hljs-string\">'.point'</span>).data(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> {\n      <span class=\"hljs-keyword\">return</span> d;\n    }).enter().append(<span class=\"hljs-string\">\"svg:circle\"</span>).attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"point\"</span>).attr(<span class=\"hljs-string\">\"cx\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d, i)</span></span> {\n      <span class=\"hljs-keyword\">return</span> x(i);\n    }).attr(<span class=\"hljs-string\">\"cy\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> {\n      <span class=\"hljs-keyword\">return</span> y(d);\n    }).attr(<span class=\"hljs-string\">\"r\"</span>, <span class=\"hljs-number\">3</span>);\n  });</div>\n}).call(this);\n//https://github.com/caged/firline/blob/master/js/app.js</code></pre></div>",
    "fir_24.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_24\"><pre id=\"fir_24_code\" ><code class=\"javascript\"><span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">var</span> svg = fir.select(<span class=\"hljs-string\">\"svg\"</span>),\n    width = +svg.attr(<span class=\"hljs-string\">\"width\"</span>),\n    height = +svg.attr(<span class=\"hljs-string\">\"height\"</span>),\n    g = svg.append(<span class=\"hljs-string\">\"g\"</span>).attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(40,0)\"</span>);\n</div>\n<span class=\"hljs-keyword\"></span><span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">var</span> tree = fir.tree()\n    .size([height - <span class=\"hljs-number\">400</span>, width - <span class=\"hljs-number\">160</span>]);\n\n<span class=\"hljs-keyword\">var</span> cluster = fir.cluster()\n    .size([height, width - <span class=\"hljs-number\">160</span>]);</div>\n\n<span class=\"hljs-keyword\">var</span> stratify = fir.stratify()\n    .parentId(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.id.substring(<span class=\"hljs-number\">0</span>, d.id.lastIndexOf(<span class=\"hljs-string\">\".\"</span>)); });\n\n<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.csv(<span class=\"hljs-string\">\"flare.csv\"</span></div><span class=\"hljs-string\"></span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, data</span>) </span>{\n  <span class=\"hljs-keyword\">if</span> (error) <span class=\"hljs-keyword\">throw</span> error;\n\n  <span class=\"hljs-keyword\">var</span> root = stratify(data)\n      .sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{ <span class=\"hljs-keyword\">return</span> (a.height - b.height) || a.id.localeCompare(b.id); });\n\n  cluster(root);\n\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">var</span> link = g.selectAll(<span class=\"hljs-string\">\".link\"</span>)\n      .data(root.descendants().slice(<span class=\"hljs-number\">1</span>))\n    .enter().append(<span class=\"hljs-string\">\"path\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"link\"</span>)\n      .attr(<span class=\"hljs-string\">\"d\"</span>, diagonal);\n\n  <span class=\"hljs-keyword\">var</span> node = g.selectAll(<span class=\"hljs-string\">\".node\"</span>)\n      .data(root.descendants())\n    .enter().append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"node\"</span> + (d.children ? <span class=\"hljs-string\">\" node--internal\"</span> : <span class=\"hljs-string\">\" node--leaf\"</span>); })\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"translate(\"</span> + d.y + <span class=\"hljs-string\">\",\"</span> + d.x + <span class=\"hljs-string\">\")\"</span>; });\n\n  node.append(<span class=\"hljs-string\">\"circle\"</span>)\n      .attr(<span class=\"hljs-string\">\"r\"</span>, <span class=\"hljs-number\">2.5</span>);</div>\n\n  <div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">node.append(<span class=\"hljs-string\">\"text\"</span>)\n      .attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-number\">3</span>)\n      .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.children ? -<span class=\"hljs-number\">8</span> : <span class=\"hljs-number\">8</span>; })\n      .style(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.children ? <span class=\"hljs-string\">\"end\"</span> : <span class=\"hljs-string\">\"start\"</span>; })\n      .text(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.id.substring(d.id.lastIndexOf(<span class=\"hljs-string\">\".\"</span>) + <span class=\"hljs-number\">1</span>); });</div>\n\n  fir.selectAll(<span class=\"hljs-string\">\"input\"</span>)\n      <div style=\"display: inline;\" id=\"Selection_0\" class=\"highlights fea_Selection\">.on(<span class=\"hljs-string\">\"change\"</span>, changed);</div>\n\n  <span class=\"hljs-keyword\">var</span> timeout = <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n    fir.select(<span class=\"hljs-string\">\"input[value=\\\"tree\\\"]\"</span>)\n        .property(<span class=\"hljs-string\">\"checked\"</span>, <span class=\"hljs-literal\">true</span>)\n        .dispatch(<span class=\"hljs-string\">\"change\"</span>);\n  }, <span class=\"hljs-number\">1000</span>);\n\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">changed</span>(<span class=\"hljs-params\"></span>) </span>{\n    timeout = <span class=\"hljs-built_in\">clearTimeout</span>(timeout);\n    (<span class=\"hljs-built_in\">this</span>.value === <span class=\"hljs-string\">\"tree\"</span> ? tree : cluster)(root);\n    <span class=\"hljs-keyword\">var</span> t = fir.transition().duration(<span class=\"hljs-number\">750</span>);\n    node.transition(t).attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"translate(\"</span> + d.y + <span class=\"hljs-string\">\",\"</span> + d.x + <span class=\"hljs-string\">\")\"</span>; });\n    link.transition(t).attr(<span class=\"hljs-string\">\"d\"</span>, diagonal);\n  }\n});\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">diagonal</span>(<span class=\"hljs-params\">d</span>) </span>{\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"M\"</span> + d.y + <span class=\"hljs-string\">\",\"</span> + d.x\n      + <span class=\"hljs-string\">\"C\"</span> + (d.parent.y + <span class=\"hljs-number\">100</span>) + <span class=\"hljs-string\">\",\"</span> + d.x\n      + <span class=\"hljs-string\">\" \"</span> + (d.parent.y + <span class=\"hljs-number\">100</span>) + <span class=\"hljs-string\">\",\"</span> + d.parent.x\n      + <span class=\"hljs-string\">\" \"</span> + d.parent.y + <span class=\"hljs-string\">\",\"</span> + d.parent.x;\n}\n#https:<span class=\"hljs-comment\">//bl.ocks.org/mbostock/e9ba78a2c1070980d1b530800ce7fa2b</span></code></pre></div>",
    "fir_25.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_25\"><pre id=\"fir_25_code\" ><code class=\"javascript\"><span class=\"hljs-comment\">// set the dimensions and margins of the graph</span>\n<span class=\"hljs-keyword\">var</span> margin = {<span class=\"hljs-attr\">top</span>: <span class=\"hljs-number\">20</span>, <span class=\"hljs-attr\">right</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-number\">20</span>, <span class=\"hljs-attr\">left</span>: <span class=\"hljs-number\">30</span>},\n  width = <span class=\"hljs-number\">450</span> - margin.left - margin.right,\n  height = <span class=\"hljs-number\">300</span> - margin.top - margin.bottom;\n\n<span class=\"hljs-comment\">// append the svg object to the body of the page</span>\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">var</span> svg = fir.select(<span class=\"hljs-string\">\"#my_dataviz\"</span>)\n  .append(<span class=\"hljs-string\">\"svg\"</span>)\n    .attr(<span class=\"hljs-string\">\"width\"</span>, width + margin.left + margin.right)\n    .attr(<span class=\"hljs-string\">\"height\"</span>, height + margin.top + margin.bottom)\n  .append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>,\n          <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);\n</div>\n<span class=\"hljs-comment\">// Read dummy data</span>\n<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.json(<span class=\"hljs-string\">\"https://raw.githubusercontent.com/holtzy/fir-graph-gallery/master/DATA/data_network.json\"</span></div><span class=\"hljs-string\"></span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"> data</span>) </span>{\n\n  <span class=\"hljs-comment\">// List of node names</span>\n  <span class=\"hljs-keyword\">var</span> allNodes = data.nodes.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{<span class=\"hljs-keyword\">return</span> d.name})\n\n  <span class=\"hljs-comment\">// A linear scale to position the nodes on the X axis</span>\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> x = fir.scalePoint()\n    .range([<span class=\"hljs-number\">0</span>, width])\n    .domain(allNodes)</div>\n\n  <span class=\"hljs-comment\">// Add the circle for the nodes</span>\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">var</span> nodes = svg\n    .selectAll(<span class=\"hljs-string\">\"mynodes\"</span>)\n    .data(data.nodes)\n    .enter()\n    .append(<span class=\"hljs-string\">\"circle\"</span>)\n      .attr(<span class=\"hljs-string\">\"cx\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{ <span class=\"hljs-keyword\">return</span>(x(d.name))})\n      .attr(<span class=\"hljs-string\">\"cy\"</span>, height-<span class=\"hljs-number\">30</span>)\n      .attr(<span class=\"hljs-string\">\"r\"</span>, <span class=\"hljs-number\">8</span>)\n      .style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"#69b3a2\"</span>)</div>\n\n  <span class=\"hljs-comment\">// And give them a label</span>\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\"><span class=\"hljs-keyword\">var</span> labels = svg\n    .selectAll(<span class=\"hljs-string\">\"mylabels\"</span>)\n    .data(data.nodes)\n    .enter()\n    .append(<span class=\"hljs-string\">\"text\"</span>)\n      .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{ <span class=\"hljs-keyword\">return</span>(x(d.name))})\n      .attr(<span class=\"hljs-string\">\"y\"</span>, height-<span class=\"hljs-number\">10</span>)\n      .text(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{ <span class=\"hljs-keyword\">return</span>(d.name)})\n      .style(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"middle\"</span>)</div>\n\n  <span class=\"hljs-comment\">// Add links between nodes. Here is the tricky part.</span>\n  <span class=\"hljs-comment\">// In my input data, links are provided between nodes -id-, NOT between node names.</span>\n  <span class=\"hljs-comment\">// So I have to do a link between this id and the name</span>\n  <span class=\"hljs-keyword\">var</span> idToNode = {};\n  data.nodes.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">n</span>) </span>{\n    idToNode[n.id] = n;\n  });\n  <span class=\"hljs-comment\">// Cool, now if I do idToNode[\"2\"].name I've got the name of the node with id 2</span>\n\n  <span class=\"hljs-comment\">// Add the links</span>\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">var</span> links = svg\n    .selectAll(<span class=\"hljs-string\">'mylinks'</span>)\n    .data(data.links)\n    .enter()\n    .append(<span class=\"hljs-string\">'path'</span>)\n    .attr(<span class=\"hljs-string\">'d'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{\n      start = x(idToNode[d.source].name)    <span class=\"hljs-comment\">// X position of start node on the X axis</span>\n      end = x(idToNode[d.target].name)      <span class=\"hljs-comment\">// X position of end node</span>\n      <span class=\"hljs-keyword\">return</span> [<span class=\"hljs-string\">'M'</span>, start, height-<span class=\"hljs-number\">30</span>,    <span class=\"hljs-comment\">// the arc starts at the coordinate x=start, y=height-30 (where the starting node is)</span>\n        <span class=\"hljs-string\">'A'</span>,                            <span class=\"hljs-comment\">// This means we're gonna build an elliptical arc</span>\n        (start - end)/<span class=\"hljs-number\">2</span>, <span class=\"hljs-string\">','</span>,    <span class=\"hljs-comment\">// Next 2 lines are the coordinates of the inflexion point. Height of this point is proportional with start - end distance</span>\n        (start - end)/<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">','</span>,\n        start &lt; end ? <span class=\"hljs-number\">1</span> : <span class=\"hljs-number\">0</span>, end, <span class=\"hljs-string\">','</span>, height-<span class=\"hljs-number\">30</span>] <span class=\"hljs-comment\">// We always want the arc on top. So if end is before start, putting 0 here turn the arc upside down.</span>\n        .join(<span class=\"hljs-string\">' '</span>);\n    })\n    .style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"none\"</span>)\n    .attr(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"black\"</span>)</div>\n\n    <span class=\"hljs-comment\">// Add the highlighting functionality</span>\n    nodes\n      <div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\">.on(<span class=\"hljs-string\">'mouseover'</span></div><span class=\"hljs-string\"></span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{\n        <span class=\"hljs-comment\">// Highlight the nodes: every node is green except of him</span>\n        nodes.style(<span class=\"hljs-string\">'fill'</span>, <span class=\"hljs-string\">\"#B8B8B8\"</span>)\n        fir.select(<span class=\"hljs-built_in\">this</span>).style(<span class=\"hljs-string\">'fill'</span>, <span class=\"hljs-string\">'#69b3b2'</span>)\n        <span class=\"hljs-comment\">// Highlight the connections</span>\n        links\n          .style(<span class=\"hljs-string\">'stroke'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">link_d</span>) </span>{ <span class=\"hljs-keyword\">return</span> link_d.source === d.id || link_d.target === d.id ? <span class=\"hljs-string\">'#69b3b2'</span> : <span class=\"hljs-string\">'#b8b8b8'</span>;})\n          .style(<span class=\"hljs-string\">'stroke-width'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">link_d</span>) </span>{ <span class=\"hljs-keyword\">return</span> link_d.source === d.id || link_d.target === d.id ? <span class=\"hljs-number\">4</span> : <span class=\"hljs-number\">1</span>;})\n      })\n      <div style=\"display: inline;\" id=\"Mouse_Events_1\" class=\"highlights fea_Mouse_Events\">.on(<span class=\"hljs-string\">'mouseout'</span></div><span class=\"hljs-string\"></span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{\n        nodes.style(<span class=\"hljs-string\">'fill'</span>, <span class=\"hljs-string\">\"#69b3a2\"</span>)\n        links\n          .style(<span class=\"hljs-string\">'stroke'</span>, <span class=\"hljs-string\">'black'</span>)\n          .style(<span class=\"hljs-string\">'stroke-width'</span>, <span class=\"hljs-string\">'1'</span>)\n      })\n})\n\n<span class=\"hljs-comment\">// text hover nodes</span>\n<div style=\"display: inline;\" id=\"Text_1\" class=\"highlights fea_Text\">svg\n  .append(<span class=\"hljs-string\">\"text\"</span>)\n    .attr(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"middle\"</span>)\n    .style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"#B8B8B8\"</span>)\n    .style(<span class=\"hljs-string\">\"font-size\"</span>, <span class=\"hljs-string\">\"17px\"</span>)\n    .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-number\">50</span>)\n    .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-number\">10</span>)\n    .html(<span class=\"hljs-string\">\"Hover nodes\"</span>)</div>\n#https:<span class=\"hljs-comment\">//www.fir-graph-gallery.com/graph/arc_highlight.html</span></code></pre></div>",
    "fir_26.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_26\"><pre id=\"fir_26_code\" ><code class=\"javascript\"><span class=\"hljs-keyword\">var</span> units = <span class=\"hljs-string\">\"Widgets\"</span>;\n\n<span class=\"hljs-comment\">// set the dimensions and margins of the graph</span>\n<span class=\"hljs-keyword\">var</span> margin = {<span class=\"hljs-attr\">top</span>: <span class=\"hljs-number\">10</span>, <span class=\"hljs-attr\">right</span>: <span class=\"hljs-number\">10</span>, <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-number\">10</span>, <span class=\"hljs-attr\">left</span>: <span class=\"hljs-number\">10</span>},\n    width = <span class=\"hljs-number\">700</span> - margin.left - margin.right,\n    height = <span class=\"hljs-number\">300</span> - margin.top - margin.bottom;\n\n<span class=\"hljs-comment\">// format variables</span>\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Data_Format_0\" class=\"highlights fea_Data_Format\"><span class=\"hljs-keyword\">var</span> formatNumber = fir.format(<span class=\"hljs-string\">\",.0f\"</span>),    <span class=\"hljs-comment\">// zero decimal places</span>\n    format = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> formatNumber(d) + <span class=\"hljs-string\">\" \"</span> + units; },\n    color = fir.scaleOrdinal(fir.schemeCategory10);</div>\n\n<span class=\"hljs-comment\">// append the svg object to the body of the page</span>\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">var</span> svg = fir.select(<span class=\"hljs-string\">\"body\"</span>).append(<span class=\"hljs-string\">\"svg\"</span>)\n    .attr(<span class=\"hljs-string\">\"width\"</span>, width + margin.left + margin.right)\n    .attr(<span class=\"hljs-string\">\"height\"</span>, height + margin.top + margin.bottom)\n  .append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>, \n          <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);</div>\n\n<span class=\"hljs-comment\">// Set the sankey diagram properties</span>\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">var</span> sankey = fir.sankey()\n    .nodeWidth(<span class=\"hljs-number\">36</span>)\n    .nodePadding(<span class=\"hljs-number\">40</span>)\n    .size([width, height]);</div>\n\n<span class=\"hljs-keyword\">var</span> path = sankey.link();\n\n<span class=\"hljs-comment\">// load the data</span>\n<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.csv(<span class=\"hljs-string\">\"sankey.csv\"</span>,</div> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, data</span>) </span>{\n \n  <span class=\"hljs-comment\">//set up graph in same style as original example but empty</span>\n  graph = {<span class=\"hljs-string\">\"nodes\"</span> : [], <span class=\"hljs-string\">\"links\"</span> : []};\n\n  <div style=\"display: inline;\" id=\"Data_Grouping_0\" class=\"highlights fea_Data_Grouping\">data.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{\n    graph.nodes.push({ <span class=\"hljs-string\">\"name\"</span>: d.source });\n    graph.nodes.push({ <span class=\"hljs-string\">\"name\"</span>: d.target });\n    graph.links.push({ <span class=\"hljs-string\">\"source\"</span>: d.source,\n                       <span class=\"hljs-string\">\"target\"</span>: d.target,\n                       <span class=\"hljs-string\">\"value\"</span>: +d.value });\n   });</div>\n\n  <span class=\"hljs-comment\">// return only the distinct / unique nodes</span>\n  <div style=\"display: inline;\" id=\"Data_Grouping_1\" class=\"highlights fea_Data_Grouping\">graph.nodes = fir.keys(fir.nest()\n    .key(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.name; })\n    .object(graph.nodes));</div>\n\n  <span class=\"hljs-comment\">// loop through each link replacing the text with its index from node</span>\n  graph.links.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d, i</span>) </span>{\n    graph.links[i].source = graph.nodes.indexOf(graph.links[i].source);\n    graph.links[i].target = graph.nodes.indexOf(graph.links[i].target);\n  });\n\n  <span class=\"hljs-comment\">// now loop through each nodes to make nodes an array of objects</span>\n  <span class=\"hljs-comment\">// rather than an array of strings</span>\n  graph.nodes.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">d, i</span>) </span>{\n    graph.nodes[i] = { <span class=\"hljs-string\">\"name\"</span>: d };\n  });\n\n  <div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">sankey\n      .nodes(graph.nodes)\n      .links(graph.links)\n      .layout(<span class=\"hljs-number\">32</span>);</div>\n\n  <span class=\"hljs-comment\">// add in the links</span>\n  <span class=\"hljs-keyword\"></span><span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_2\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">var</span> link = svg.append(<span class=\"hljs-string\">\"g\"</span>).selectAll(<span class=\"hljs-string\">\".link\"</span>)\n      .data(graph.links)\n    .enter().append(<span class=\"hljs-string\">\"path\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"link\"</span>)\n      .attr(<span class=\"hljs-string\">\"d\"</span>, path)\n      .style(<span class=\"hljs-string\">\"stroke-width\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Math</span>.max(<span class=\"hljs-number\">1</span>, d.dy); })\n      .sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{ <span class=\"hljs-keyword\">return</span> b.dy - a.dy; });</div>\n\n  <span class=\"hljs-comment\">// add the link titles</span>\n  <div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">link.append(<span class=\"hljs-string\">\"title\"</span>)\n        .text(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n    \t\t<span class=\"hljs-keyword\">return</span> d.source.name + <span class=\"hljs-string\">\" → \"</span> + \n                d.target.name + <span class=\"hljs-string\">\"\\n\"</span> + format(d.value); });</div>\n\n  <span class=\"hljs-comment\">// add in the nodes</span>\n  <span class=\"hljs-keyword\"></span><span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_3\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">var</span> node = svg.append(<span class=\"hljs-string\">\"g\"</span>).selectAll(<span class=\"hljs-string\">\".node\"</span>)\n      .data(graph.nodes)\n    .enter().append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"node\"</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ \n\t\t  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"translate(\"</span> + d.x + <span class=\"hljs-string\">\",\"</span> + d.y + <span class=\"hljs-string\">\")\"</span>; })</div>\n      <div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\">.call(fir.drag()</div>\n        .subject(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n          <span class=\"hljs-keyword\">return</span> d;\n        })\n        .on(<span class=\"hljs-string\">\"start\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n          <span class=\"hljs-built_in\">this</span>.parentNode.appendChild(<span class=\"hljs-built_in\">this</span>);\n        })\n        <div style=\"display: inline;\" id=\"Mouse_Events_1\" class=\"highlights fea_Mouse_Events\">.on(<span class=\"hljs-string\">\"drag\"</span>, dragmove));</div>\n\n  <span class=\"hljs-comment\">// add the rectangles for the nodes</span>\n <div style=\"display: inline;\" id=\"Shapes_4\" class=\"highlights fea_Shapes\"> node.append(<span class=\"hljs-string\">\"rect\"</span>)\n      .attr(<span class=\"hljs-string\">\"height\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.dy; })\n      .attr(<span class=\"hljs-string\">\"width\"</span>, sankey.nodeWidth())\n      .style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ \n\t\t  <span class=\"hljs-keyword\">return</span> d.color = color(d.name.replace(<span class=\"hljs-regexp\">/ .*/</span>, <span class=\"hljs-string\">\"\"</span>)); })\n      .style(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ \n\t\t  <span class=\"hljs-keyword\">return</span> fir.rgb(d.color).darker(<span class=\"hljs-number\">2</span>); })\n    .append(<span class=\"hljs-string\">\"title\"</span>)\n      .text(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ \n\t\t  <span class=\"hljs-keyword\">return</span> d.name + <span class=\"hljs-string\">\"\\n\"</span> + format(d.value); });\n</div>\n  <span class=\"hljs-comment\">// add in the title for the nodes</span>\n <div style=\"display: inline;\" id=\"Text_1\" class=\"highlights fea_Text\"> node.append(<span class=\"hljs-string\">\"text\"</span>)\n      .attr(<span class=\"hljs-string\">\"x\"</span>, -<span class=\"hljs-number\">6</span>)\n      .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.dy / <span class=\"hljs-number\">2</span>; })\n      .attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\".35em\"</span>)\n      .attr(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"end\"</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-literal\">null</span>)\n      .text(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.name; })\n    .filter(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.x &lt; width / <span class=\"hljs-number\">2</span>; })\n      .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-number\">6</span> + sankey.nodeWidth())\n      .attr(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"start\"</span>);\n</div>\n  <span class=\"hljs-comment\">// the function for moving the nodes</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">dragmove</span>(<span class=\"hljs-params\">d</span>) </span>{\n    fir.select(<span class=\"hljs-built_in\">this</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, \n            <span class=\"hljs-string\">\"translate(\"</span> \n               + d.x + <span class=\"hljs-string\">\",\"</span> \n               + (d.y = <span class=\"hljs-built_in\">Math</span>.max(\n                  <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">Math</span>.min(height - d.dy, fir.event.y))\n                 ) + <span class=\"hljs-string\">\")\"</span>);\n    sankey.relayout();\n    link.attr(<span class=\"hljs-string\">\"d\"</span>, path);\n  }\n});\n#https:<span class=\"hljs-comment\">//bl.ocks.org/firnoob/06e72deea99e7b4859841f305f63ba85</span></code></pre></div>",
    "fir_28.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_28\"><pre id=\"fir_28_code\" ><code class=\"javascript\"><span class=\"hljs-comment\">// set the dimensions and margins of the graph</span>\n<span class=\"hljs-keyword\">var</span> margin = {<span class=\"hljs-attr\">top</span>: <span class=\"hljs-number\">10</span>, <span class=\"hljs-attr\">right</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">left</span>: <span class=\"hljs-number\">40</span>},\n    width = <span class=\"hljs-number\">460</span> - margin.left - margin.right,\n    height = <span class=\"hljs-number\">400</span> - margin.top - margin.bottom;\n\n<span class=\"hljs-comment\">// append the svg object to the body of the page</span>\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">var</span> svg = fir.select(<span class=\"hljs-string\">\"#my_dataviz\"</span>)\n  .append(<span class=\"hljs-string\">\"svg\"</span>)\n    .attr(<span class=\"hljs-string\">\"width\"</span>, width + margin.left + margin.right)\n    .attr(<span class=\"hljs-string\">\"height\"</span>, height + margin.top + margin.bottom)\n  .append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>,\n          <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);</div>\n\n<span class=\"hljs-comment\">// get the data</span>\n<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.csv(<span class=\"hljs-string\">\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/1_OneNum.csv\"</span></div><span class=\"hljs-string\"></span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{\n\n  <span class=\"hljs-comment\">// X axis: scale and draw:</span>\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> x = fir.scaleLinear()\n      .domain([<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1000</span>])     <span class=\"hljs-comment\">// can use this instead of 1000 to have the max of data: fir.max(data, function(d) { return +d.price })</span>\n      .range([<span class=\"hljs-number\">0</span>, width]);\n  svg.append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height + <span class=\"hljs-string\">\")\"</span>)\n      .call(fir.axisBottom(x));</div>\n\n  <span class=\"hljs-comment\">// set the parameters for the histogram</span>\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">var</span> histogram = fir.histogram()\n      .value(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.price; })   <span class=\"hljs-comment\">// I need to give the vector of value</span>\n      .domain(x.domain())  <span class=\"hljs-comment\">// then the domain of the graphic</span>\n      .thresholds(x.ticks(<span class=\"hljs-number\">70</span>)); </div><span class=\"hljs-comment\">// then the numbers of bins</span>\n\n  <span class=\"hljs-comment\">// And apply this function to data to get the bins</span>\n  <span class=\"hljs-keyword\">var</span> bins = histogram(data);\n\n  <span class=\"hljs-comment\">// Y axis: scale and draw:</span>\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_1\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> y = fir.scaleLinear()\n      .range([height, <span class=\"hljs-number\">0</span>]);\n      y.domain([<span class=\"hljs-number\">0</span>, fir.max(bins, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.length; })]);   <span class=\"hljs-comment\">// fir.hist has to be called before the Y axis obviously</span>\n  svg.append(<span class=\"hljs-string\">\"g\"</span>)\n      .call(fir.axisLeft(y));</div>\n\n  <span class=\"hljs-comment\">// append the bar rectangles to the svg element</span>\n  <div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">svg.selectAll(<span class=\"hljs-string\">\"rect\"</span>)\n      .data(bins)\n      .enter()\n      .append(<span class=\"hljs-string\">\"rect\"</span>)\n        .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-number\">1</span>)\n        .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"translate(\"</span> + x(d.x0) + <span class=\"hljs-string\">\",\"</span> + y(d.length) + <span class=\"hljs-string\">\")\"</span>; })\n        .attr(<span class=\"hljs-string\">\"width\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> x(d.x1) - x(d.x0) -<span class=\"hljs-number\">1</span> ; })\n        .attr(<span class=\"hljs-string\">\"height\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> height - y(d.length); })\n        .style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{ <span class=\"hljs-keyword\">if</span>(d.x0&lt;<span class=\"hljs-number\">140</span>){<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"orange\"</span>} <span class=\"hljs-keyword\">else</span> {<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"#69b3a2\"</span>}})\n\n  <span class=\"hljs-comment\">// Append a vertical line to highlight the separation</span>\n  svg\n    .append(<span class=\"hljs-string\">\"line\"</span>)\n      .attr(<span class=\"hljs-string\">\"x1\"</span>, x(<span class=\"hljs-number\">140</span>) )\n      .attr(<span class=\"hljs-string\">\"x2\"</span>, x(<span class=\"hljs-number\">140</span>) )\n      .attr(<span class=\"hljs-string\">\"y1\"</span>, y(<span class=\"hljs-number\">0</span>))\n      .attr(<span class=\"hljs-string\">\"y2\"</span>, y(<span class=\"hljs-number\">1600</span>))\n      .attr(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"grey\"</span>)\n      .attr(<span class=\"hljs-string\">\"stroke-dasharray\"</span>, <span class=\"hljs-string\">\"4\"</span>)</div>\n  <div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">svg\n    .append(<span class=\"hljs-string\">\"text\"</span>)\n    .attr(<span class=\"hljs-string\">\"x\"</span>, x(<span class=\"hljs-number\">190</span>))\n    .attr(<span class=\"hljs-string\">\"y\"</span>, y(<span class=\"hljs-number\">1400</span>))\n    .text(<span class=\"hljs-string\">\"threshold: 140\"</span>)\n    .style(<span class=\"hljs-string\">\"font-size\"</span>, <span class=\"hljs-string\">\"15px\"</span>)</div>\n\n});\n#https:<span class=\"hljs-comment\">//www.fir-graph-gallery.com/graph/histogram_coloredTail.html</span></code></pre></div>",
    "fir_1.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_1\"><pre id=\"fir_1_code\" ><code class=\"javascript\"><span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">var</span> margin = {<span class=\"hljs-attr\">top</span>: <span class=\"hljs-number\">10</span>, <span class=\"hljs-attr\">right</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">left</span>: <span class=\"hljs-number\">60</span>},\n    width = <span class=\"hljs-number\">460</span> - margin.left - margin.right,\n    height = <span class=\"hljs-number\">400</span> - margin.top - margin.bottom;\n\n<span class=\"hljs-comment\">// append the svg object to the body of the page</span>\n<span class=\"hljs-keyword\">var</span> svg = fir.select(<span class=\"hljs-string\">\"#my_dataviz\"</span>)\n  .append(<span class=\"hljs-string\">\"svg\"</span>)\n    .attr(<span class=\"hljs-string\">\"width\"</span>, width + margin.left + margin.right)\n    .attr(<span class=\"hljs-string\">\"height\"</span>, height + margin.top + margin.bottom)\n  .append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>,\n          <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);</div>\n\n<span class=\"hljs-comment\">//Read the data</span>\n<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.csv(<span class=\"hljs-string\">\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/3_TwoNumOrdered_comma.csv\"</span></div><span class=\"hljs-string\"></span>,\n\n  <span class=\"hljs-comment\">// When reading the csv, I must format variables:</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{\n    <span class=\"hljs-keyword\">return</span> { <span class=\"hljs-attr\">date</span> : <div style=\"display: inline;\" id=\"Data_Format_0\" class=\"highlights fea_Data_Format\">fir.timeParse(<span class=\"hljs-string\">\"%Y-%m-%d\"</span>)(d.date)</div>, <span class=\"hljs-attr\">value</span> : d.value }\n  },\n\n  <span class=\"hljs-comment\">// Now I can use this dataset:</span>\n  <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{\n\n    <span class=\"hljs-comment\">// Add X axis --&gt; it is a date format</span>\n    <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">v</span><span class=\"hljs-keyword\">ar</span> x = fir.scaleTime()\n      .domain(fir.extent(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.date; }))\n      .range([ <span class=\"hljs-number\">0</span>, width ]);\n    svg.append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height + <span class=\"hljs-string\">\")\"</span>)\n      .call(fir.axisBottom(x));</div>\n\n    <span class=\"hljs-comment\">// Add Y axis</span>\n    <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_1\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> y = fir.scaleLinear()</div>\n      .domain([<span class=\"hljs-number\">0</span>, <div style=\"display: inline;\" id=\"Data_Transformation_0\" class=\"highlights fea_Data_Transformation\">fir.max(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> +d.value; })</div>])\n      .range([ height, <span class=\"hljs-number\">0</span> ]);\n    svg.append(<span class=\"hljs-string\">\"g\"</span>)\n      .call(fir.axisLeft(y));\n\n    <span class=\"hljs-comment\">// Add the line</span>\n    <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">svg.append(<span class=\"hljs-string\">\"path\"</span>)\n      .datum(data)\n      .attr(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"none\"</span>)\n      .attr(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"steelblue\"</span>)\n      .attr(<span class=\"hljs-string\">\"stroke-width\"</span>, <span class=\"hljs-number\">1.5</span>)\n      .attr(<span class=\"hljs-string\">\"d\"</span>, fir.line()\n        .x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> x(d.date) })\n        .y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> y(d.value) })\n        )</div>\n\n})</code></pre></div>",
    "fir_2.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_2\"><pre id=\"fir_2_code\" ><code class=\"javascript\"><span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">var</span> margin = {<span class=\"hljs-attr\">top</span>: <span class=\"hljs-number\">10</span>, <span class=\"hljs-attr\">right</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">left</span>: <span class=\"hljs-number\">60</span>},\n    width = <span class=\"hljs-number\">460</span> - margin.left - margin.right,\n    height = <span class=\"hljs-number\">400</span> - margin.top - margin.bottom;\n\n<span class=\"hljs-comment\">// append the svg object to the body of the page</span>\n<span class=\"hljs-keyword\">var</span> svg = fir.select(<span class=\"hljs-string\">\"#my_dataviz\"</span>)\n  .append(<span class=\"hljs-string\">\"svg\"</span>)\n    .attr(<span class=\"hljs-string\">\"width\"</span>, width + margin.left + margin.right)\n    .attr(<span class=\"hljs-string\">\"height\"</span>, height + margin.top + margin.bottom)\n  .append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>,\n          <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);</div>\n\n<span class=\"hljs-comment\">//Read the data</span>\n<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.csv(<span class=\"hljs-string\">\"https://raw.githubuser</span><span class=\"hljs-string\">content.com/holtzy/fir-graph-gallery/master/DATA/data_IC.csv\"</span></div><span class=\"hljs-string\"></span>,<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{\n\n    <span class=\"hljs-comment\">// Add X axis --&gt; it is a date format</span>\n    <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> x = fir.scaleLinear()\n      .domain([<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">100</span>])\n      .range([ <span class=\"hljs-number\">0</span>, width ]);\n    svg.append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height + <span class=\"hljs-string\">\")\"</span>)\n      .call(fir.axisBottom(x));</div>\n\n    <span class=\"hljs-comment\">// Add Y axis</span>\n    <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_1\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> y = fir.scaleLinear()\n      .domain([<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">13</span>])\n      .range([ height, <span class=\"hljs-number\">0</span> ]);\n    svg.append(<span class=\"hljs-string\">\"g\"</span>)\n      .call(fir.axisLeft(y));</div>\n\n    <span class=\"hljs-comment\">// Show confidence interval</span>\n    <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">svg.append(<span class=\"hljs-string\">\"path\"</span>)\n      .datum(data)\n      .attr(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"#cce5df\"</span>)\n      .attr(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"none\"</span>)\n      .attr(<span class=\"hljs-string\">\"d\"</span>, fir.area()\n        .x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> x(d.x) })\n        .y0(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> y(d.CI_right) })\n        .y1(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> y(d.CI_left) })\n        )</div>\n\n    <span class=\"hljs-comment\">// Add the line</span>\n    <div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">svg\n      .append(<span class=\"hljs-string\">\"path\"</span>)\n      .datum(data)\n      .attr(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"none\"</span>)\n      .attr(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"steelblue\"</span>)\n      .attr(<span class=\"hljs-string\">\"stroke-width\"</span>, <span class=\"hljs-number\">1.5</span>)\n      .attr(<span class=\"hljs-string\">\"d\"</span>, fir.line()\n        .x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> x(d.x) })\n        .y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> y(d.y) })\n        )</div>\n\n})</code></pre></div>",
    "fir_4.js": "<div class=\"codeBlock hljs lua\" id=\"fir_4\"><pre id=\"fir_4_code\" ><code class=\"javascript\"><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\">var svg = fir.<span class=\"hljs-built_in\">select</span>(<span class=\"hljs-string\">\"svg\"</span>),\n    margin = {top: <span class=\"hljs-number\">20</span>, right: <span class=\"hljs-number\">20</span>, bottom: <span class=\"hljs-number\">30</span>, left: <span class=\"hljs-number\">50</span>},\n    width = +svg.attr(<span class=\"hljs-string\">\"width\"</span>) - margin.left - margin.right,\n    height = +svg.attr(<span class=\"hljs-string\">\"height\"</span>) - margin.top - margin.bottom,\n    g = svg.append(<span class=\"hljs-string\">\"g\"</span>).attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);</div>\n\n<div style=\"display: inline;\" id=\"Data_Format_0\" class=\"highlights fea_Data_Format\">var parseTime = fir.timeParse(<span class=\"hljs-string\">\"%d-%b-%y\"</span>);</div>\n\n<div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\">var x = fir.scaleTime()\n    .rangeRound([<span class=\"hljs-number\">0</span>, width]);\n\nvar y = fir.scaleLinear()\n    .rangeRound([height, <span class=\"hljs-number\">0</span>]);</div>\n\n<div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">var line = fir.line()\n    .x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> x(d.<span class=\"hljs-built_in\">date</span>); })\n    .y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> y(d.<span class=\"hljs-built_in\">close</span>); });</div>\n\n<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.tsv(<span class=\"hljs-string\">\"data.tsv\"</span></div><span class=\"hljs-string\"></span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> {\n  <div style=\"display: inline;\" id=\"Data_Grouping_0\" class=\"highlights fea_Data_Grouping\">d.<span class=\"hljs-built_in\">date</span> = parseTime(d.<span class=\"hljs-built_in\">date</span>);\n  d.<span class=\"hljs-built_in\">close</span> = +d.<span class=\"hljs-built_in\">close</span>;</div>\n  <span class=\"hljs-keyword\">return</span> d;\n}, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(error, data)</span></span> {\n  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">error</span>) throw <span class=\"hljs-built_in\">error</span>;\n\n  x.domain(fir.extent(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> d.<span class=\"hljs-built_in\">date</span>; }));\n  y.domain(fir.extent(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> d.<span class=\"hljs-built_in\">close</span>; }));\n\n  <div style=\"display: inline;\" id=\"Axis_1\" class=\"highlights fea_Axis\">g.append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height + <span class=\"hljs-string\">\")\"</span>)\n      .call(fir.axisBottom(x))\n    .<span class=\"hljs-built_in\">select</span>(<span class=\"hljs-string\">\".domain\"</span>)\n      .<span class=\"hljs-built_in\">remove</span>();\n\n  g.append(<span class=\"hljs-string\">\"g\"</span>)\n      .call(fir.axisLeft(y))\n    .append(<span class=\"hljs-string\">\"text\"</span>)\n      .attr(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"#000\"</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"rotate(-90)\"</span>)\n      .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-number\">6</span>)\n      .attr(<span class=\"hljs-string\">\"dy\"</span>, <span class=\"hljs-string\">\"0.71em\"</span>)\n      .attr(<span class=\"hljs-string\">\"text-anchor\"</span>, <span class=\"hljs-string\">\"end\"</span>)\n      .text(<span class=\"hljs-string\">\"Price ($)\"</span>);</div>\n\n  <div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">g.append(<span class=\"hljs-string\">\"path\"</span>)\n      .datum(data)\n      .attr(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-string\">\"none\"</span>)\n      .attr(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"steelblue\"</span>)\n      .attr(<span class=\"hljs-string\">\"stroke-linejoin\"</span>, <span class=\"hljs-string\">\"round\"</span>)\n      .attr(<span class=\"hljs-string\">\"stroke-linecap\"</span>, <span class=\"hljs-string\">\"round\"</span>)\n      .attr(<span class=\"hljs-string\">\"stroke-width\"</span>, <span class=\"hljs-number\">1.5</span>)\n      .attr(<span class=\"hljs-string\">\"d\"</span>, line);</div>\n});\n//https://blocks.roadtolarissa.com/jeffcatania/c579aef999d70abdc2eed86bca4eab08</code></pre></div>",
    "fir_8.js": "<div class=\"codeBlock hljs lua\" id=\"fir_8\"><pre id=\"fir_8_code\" ><code class=\"javascript\">var margin = {top: <span class=\"hljs-number\">20</span>, right: <span class=\"hljs-number\">50</span>, bottom: <span class=\"hljs-number\">30</span>, left: <span class=\"hljs-number\">50</span>},\n    width = <span class=\"hljs-number\">630</span> - margin.left - margin.right,\n    height = <span class=\"hljs-number\">400</span> - margin.top - margin.bottom;\n\n<div style=\"display: inline;\" id=\"Data_Format_0\" class=\"highlights fea_Data_Format\">var parseDate = fir.<span class=\"hljs-built_in\">time</span>.<span class=\"hljs-built_in\">format</span>(<span class=\"hljs-string\">\"%Y-%m-%d\"</span>).parse;</div>\n\n<div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\">var x = fir.<span class=\"hljs-built_in\">time</span>.scale()\n    .range([<span class=\"hljs-number\">0</span>, width]);\n\nvar y = fir.scale.linear()\n    .range([height, <span class=\"hljs-number\">0</span>]);\n\nvar color = fir.scale.category10();\n\nvar xAxis = fir.svg.axis()\n    .scale(x)\n    .ticks(<span class=\"hljs-number\">5</span>)\n    .innerTickSize(<span class=\"hljs-number\">15</span>)\n    .outerTickSize(<span class=\"hljs-number\">0</span>)\n    .orient(<span class=\"hljs-string\">\"bottom\"</span>);\n\nvar yAxis = fir.svg.axis()\n    .scale(y)\n    .tickFormat(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> d + <span class=\"hljs-string\">\"%\"</span>;})\n    .ticks(<span class=\"hljs-number\">5</span>)\n    .innerTickSize(<span class=\"hljs-number\">15</span>)\n    .outerTickSize(<span class=\"hljs-number\">0</span>)\n    .orient(<span class=\"hljs-string\">\"left\"</span>);</div>\n\n<div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">var line = fir.svg.line()\n    .interpolate(<span class=\"hljs-string\">\"basis\"</span>)\n    .x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> x(d.<span class=\"hljs-built_in\">date</span>); })\n    .y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> y(d.price); });</div>\n\n<div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\">var svg = fir.<span class=\"hljs-built_in\">select</span>(<span class=\"hljs-string\">\"body\"</span>).append(<span class=\"hljs-string\">\"svg\"</span>)\n    .attr(<span class=\"hljs-string\">\"width\"</span>, width + margin.left + margin.right)\n    .attr(<span class=\"hljs-string\">\"height\"</span>, height + margin.top + margin.bottom)\n  .append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);</div>\n\n<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.tsv(<span class=\"hljs-string\">\"airbus_data.tsv\"</span></div><span class=\"hljs-string\"></span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(error, data)</span></span> {\n  <div style=\"display: inline;\" id=\"Data_Filtering_0\" class=\"highlights fea_Data_Filtering\">color.domain(fir.keys(data[<span class=\"hljs-number\">0</span>]).filter(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(key)</span></span> { <span class=\"hljs-keyword\">return</span> key !== <span class=\"hljs-string\">\"date\"</span>; }));</div>\n\n  data.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> {\n    d.<span class=\"hljs-built_in\">date</span> = parseDate(d.<span class=\"hljs-built_in\">date</span>);\n  });\n\n  <div style=\"display: inline;\" id=\"Data_Grouping_0\" class=\"highlights fea_Data_Grouping\">var companies = color.domain().map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(name)</span></span> {\n    <span class=\"hljs-keyword\">return</span> {\n      name: name,\n      values: data.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> {\n        <span class=\"hljs-keyword\">return</span> {<span class=\"hljs-built_in\">date</span>: d.<span class=\"hljs-built_in\">date</span>, price: +d[name]};\n      })\n    };\n  });</div>\n\n  x.domain(fir.extent(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> d.<span class=\"hljs-built_in\">date</span>; }));\n\n  y.domain([\n    <div style=\"display: inline;\" id=\"Data_Transformation_0\" class=\"highlights fea_Data_Transformation\">fir.<span class=\"hljs-built_in\">min</span>(companies, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(c)</span></span> { <span class=\"hljs-keyword\">return</span> fir.<span class=\"hljs-built_in\">min</span>(c.values, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(v)</span></span> { <span class=\"hljs-keyword\">return</span> v.price; }); }),\n    fir.<span class=\"hljs-built_in\">max</span>(companies, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(c)</span></span> { <span class=\"hljs-keyword\">return</span> fir.<span class=\"hljs-built_in\">max</span>(c.values, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(v)</span></span> { <span class=\"hljs-keyword\">return</span> v.price; }); })</div>\n  ]);\n\n  svg.append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"x axis\"</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height + <span class=\"hljs-string\">\")\"</span>)\n      .call(xAxis);\n\n  svg.append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"y axis\"</span>)\n      .call(yAxis);\n\n  <div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">svg.append(<span class=\"hljs-string\">\"line\"</span>)\n        .attr(\n        {\n            <span class=\"hljs-string\">\"class\"</span>:<span class=\"hljs-string\">\"horizontalGrid\"</span>,\n            <span class=\"hljs-string\">\"x1\"</span> : <span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-string\">\"x2\"</span> : width,\n            <span class=\"hljs-string\">\"y1\"</span> : y(<span class=\"hljs-number\">0</span>),\n            <span class=\"hljs-string\">\"y2\"</span> : y(<span class=\"hljs-number\">0</span>),\n            <span class=\"hljs-string\">\"fill\"</span> : <span class=\"hljs-string\">\"none\"</span>,\n            <span class=\"hljs-string\">\"shape-rendering\"</span> : <span class=\"hljs-string\">\"crispEdges\"</span>,\n            <span class=\"hljs-string\">\"stroke\"</span> : <span class=\"hljs-string\">\"black\"</span>,\n            <span class=\"hljs-string\">\"stroke-width\"</span> : <span class=\"hljs-string\">\"1px\"</span>,\n            <span class=\"hljs-string\">\"stroke-dasharray\"</span>: (<span class=\"hljs-string\">\"3, 3\"</span>)\n        });</div>\n\n  var company = svg.selectAll(<span class=\"hljs-string\">\".company\"</span>)\n      .data(companies)\n    .enter().append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"company\"</span>);\n\n  <div style=\"display: inline;\" id=\"Shapes_2\" class=\"highlights fea_Shapes\">var <span class=\"hljs-built_in\">path</span> = svg.selectAll(<span class=\"hljs-string\">\".company\"</span>).append(<span class=\"hljs-string\">\"path\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"line\"</span>)\n      .attr(<span class=\"hljs-string\">\"d\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> line(d.values); })\n      .style(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">if</span> (d.name == <span class=\"hljs-string\">\"Airbus\"</span>) \n                                        {<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"rgb(000,255,000)\"</span>}\n                                      <span class=\"hljs-keyword\">else</span> {<span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"#000\"</span>;}\n                                         });</div>\n\nvar totalLength = [<span class=\"hljs-built_in\">path</span>[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>].getTotalLength(), <span class=\"hljs-built_in\">path</span>[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>].getTotalLength()];\n\n\n   fir.<span class=\"hljs-built_in\">select</span>(<span class=\"hljs-built_in\">path</span>[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">0</span>])\n      .attr(<span class=\"hljs-string\">\"stroke-dasharray\"</span>, totalLength[<span class=\"hljs-number\">0</span>] + <span class=\"hljs-string\">\" \"</span> + totalLength[<span class=\"hljs-number\">0</span>] ) \n      .attr(<span class=\"hljs-string\">\"stroke-dashoffset\"</span>, totalLength[<span class=\"hljs-number\">0</span>])\n      <div style=\"display: inline;\" id=\"Animations_1\" class=\"highlights fea_Animations\">.transition()\n        .duration(<span class=\"hljs-number\">5000</span>)\n        .ease(<span class=\"hljs-string\">\"linear\"</span>)\n        .attr(<span class=\"hljs-string\">\"stroke-dashoffset\"</span>, <span class=\"hljs-number\">0</span>);</div>\n\n   fir.<span class=\"hljs-built_in\">select</span>(<span class=\"hljs-built_in\">path</span>[<span class=\"hljs-number\">0</span>][<span class=\"hljs-number\">1</span>])\n      .attr(<span class=\"hljs-string\">\"stroke-dasharray\"</span>, totalLength[<span class=\"hljs-number\">1</span>] + <span class=\"hljs-string\">\" \"</span> + totalLength[<span class=\"hljs-number\">1</span>] )\n      .attr(<span class=\"hljs-string\">\"stroke-dashoffset\"</span>, totalLength[<span class=\"hljs-number\">1</span>])\n      <div style=\"display: inline;\" id=\"Animations_0\" class=\"highlights fea_Animations\">.transition()\n        .duration(<span class=\"hljs-number\">5000</span>)\n        .ease(<span class=\"hljs-string\">\"linear\"</span>)\n        .attr(<span class=\"hljs-string\">\"stroke-dashoffset\"</span>, <span class=\"hljs-number\">0</span>);</div>\n\n});\n\n//http://bl.ocks.org/atmccann/<span class=\"hljs-number\">8966400</span></code></pre></div>",
    "fir_10.js": "<div class=\"codeBlock hljs lua\" id=\"fir_10\"><pre id=\"fir_10_code\" ><code class=\"javascript\"><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\">var svg = fir.<span class=\"hljs-built_in\">select</span>(<span class=\"hljs-string\">\"svg\"</span>),\n    margin = {top: <span class=\"hljs-number\">20</span>, right: <span class=\"hljs-number\">20</span>, bottom: <span class=\"hljs-number\">110</span>, left: <span class=\"hljs-number\">40</span>},\n    margin2 = {top: <span class=\"hljs-number\">430</span>, right: <span class=\"hljs-number\">20</span>, bottom: <span class=\"hljs-number\">30</span>, left: <span class=\"hljs-number\">40</span>},\n    width = +svg.attr(<span class=\"hljs-string\">\"width\"</span>) - margin.left - margin.right,\n    height = +svg.attr(<span class=\"hljs-string\">\"height\"</span>) - margin.top - margin.bottom,\n    height2 = +svg.attr(<span class=\"hljs-string\">\"height\"</span>) - margin2.top - margin2.bottom;</div>\n\n<div style=\"display: inline;\" id=\"Data_Format_0\" class=\"highlights fea_Data_Format\">var parseDate = fir.timeParse(<span class=\"hljs-string\">\"%m/%d/%Y %H:%M\"</span>);</div>\n\n<div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\">var x = fir.scaleTime().range([<span class=\"hljs-number\">0</span>, width]),\n    x2 = fir.scaleTime().range([<span class=\"hljs-number\">0</span>, width]),\n    y = fir.scaleLinear().range([height, <span class=\"hljs-number\">0</span>]),\n    y2 = fir.scaleLinear().range([height2, <span class=\"hljs-number\">0</span>]);\n\nvar xAxis = fir.axisBottom(x),\n    xAxis2 = fir.axisBottom(x2),\n    yAxis = fir.axisLeft(y);</div>\n\n<div style=\"display: inline;\" id=\"Zoom_0\" class=\"highlights fea_Zoom\">var brush = fir.brushX()\n    .extent(<span class=\"hljs-string\">[[0, 0], [width, height2]]</span>)\n    .on(<span class=\"hljs-string\">\"brush end\"</span>, brushed);\n\nvar zoom = fir.zoom()\n    .scaleExtent([<span class=\"hljs-number\">1</span>, Infinity])\n    .translateExtent(<span class=\"hljs-string\">[[0, 0], [width, height]]</span>)\n    .extent(<span class=\"hljs-string\">[[0, 0], [width, height]]</span>)\n    .on(<span class=\"hljs-string\">\"zoom\"</span>, zoomed);</div>\n\n<div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">var line = fir.line()\n    .x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> x(d.Date); })\n    .y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> y(d.Air_Temp); });\n\nvar line2 = fir.line()\n    .x(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> x2(d.Date); })\n    .y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> y2(d.Air_Temp); });\n\nvar clip = svg.append(<span class=\"hljs-string\">\"defs\"</span>).append(<span class=\"hljs-string\">\"svg:clipPath\"</span>)\n    .attr(<span class=\"hljs-string\">\"id\"</span>, <span class=\"hljs-string\">\"clip\"</span>)\n    .append(<span class=\"hljs-string\">\"svg:rect\"</span>)\n    .attr(<span class=\"hljs-string\">\"width\"</span>, width)\n    .attr(<span class=\"hljs-string\">\"height\"</span>, height)\n    .attr(<span class=\"hljs-string\">\"x\"</span>, <span class=\"hljs-number\">0</span>)\n    .attr(<span class=\"hljs-string\">\"y\"</span>, <span class=\"hljs-number\">0</span>); </div>\n\n\nvar Line_chart = svg.append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"focus\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>)\n    .attr(<span class=\"hljs-string\">\"clip-path\"</span>, <span class=\"hljs-string\">\"url(#clip)\"</span>);\n\n\nvar focus = svg.append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"focus\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);\n\nvar context = svg.append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"context\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + margin2.left + <span class=\"hljs-string\">\",\"</span> + margin2.top + <span class=\"hljs-string\">\")\"</span>);\n\n<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.csv(<span class=\"hljs-string\">\"CIMIS_Station_125.csv\"</span></div><span class=\"hljs-string\"></span>, <span class=\"hljs-built_in\">type</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(error, data)</span></span> {\n  <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">error</span>) throw <span class=\"hljs-built_in\">error</span>;\n\n  x.domain(fir.extent(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> d.Date; }));\n  y.domain([<span class=\"hljs-number\">0</span>, fir.<span class=\"hljs-built_in\">max</span>(data, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-params\">(d)</span></span> { <span class=\"hljs-keyword\">return</span> d.Air_Temp; })]);\n  x2.domain(x.domain());\n  y2.domain(y.domain());\n\n\n  focus.append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"axis axis--x\"</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height + <span class=\"hljs-string\">\")\"</span>)\n      .call(xAxis);\n\n  focus.append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"axis axis--y\"</span>)\n      .call(yAxis);\n\n  Line_chart.append(<span class=\"hljs-string\">\"path\"</span>)\n      .datum(data)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"line\"</span>)\n      .attr(<span class=\"hljs-string\">\"d\"</span>, line);\n\n  context.append(<span class=\"hljs-string\">\"path\"</span>)\n      .datum(data)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"line\"</span>)\n      .attr(<span class=\"hljs-string\">\"d\"</span>, line2);\n\n\n  context.append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"axis axis--x\"</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height2 + <span class=\"hljs-string\">\")\"</span>)\n      .call(xAxis2);\n\n  context.append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"brush\"</span>)\n      .call(brush)\n      .call(brush.move, x.range());\n\n  svg.append(<span class=\"hljs-string\">\"rect\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"zoom\"</span>)\n      .attr(<span class=\"hljs-string\">\"width\"</span>, width)\n      .attr(<span class=\"hljs-string\">\"height\"</span>, height)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>)\n      .call(zoom);\n\n\n  console.<span class=\"hljs-built_in\">log</span>(data);\n});\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\"></span></span><div style=\"display: inline;\" id=\"Zoom_1\" class=\"highlights fea_Zoom\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">brushed</span><span class=\"hljs-params\">()</span></span> {\n  <span class=\"hljs-keyword\">if</span> (fir.event.sourceEvent &amp;&amp; fir.event.sourceEvent.<span class=\"hljs-built_in\">type</span> === <span class=\"hljs-string\">\"zoom\"</span>) <span class=\"hljs-keyword\">return</span>; // ignore brush-by-zoom\n  var s = fir.event.selection || x2.range();\n  x.domain(s.map(x2.invert, x2));\n  Line_chart.<span class=\"hljs-built_in\">select</span>(<span class=\"hljs-string\">\".line\"</span>).attr(<span class=\"hljs-string\">\"d\"</span>, line);\n  focus.<span class=\"hljs-built_in\">select</span>(<span class=\"hljs-string\">\".axis--x\"</span>).call(xAxis);\n  svg.<span class=\"hljs-built_in\">select</span>(<span class=\"hljs-string\">\".zoom\"</span>).call(zoom.transform, fir.zoomIdentity\n      .scale(width / (s[<span class=\"hljs-number\">1</span>] - s[<span class=\"hljs-number\">0</span>]))\n      .translate(-s[<span class=\"hljs-number\">0</span>], <span class=\"hljs-number\">0</span>));\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">zoomed</span><span class=\"hljs-params\">()</span></span> {\n  <span class=\"hljs-keyword\">if</span> (fir.event.sourceEvent &amp;&amp; fir.event.sourceEvent.<span class=\"hljs-built_in\">type</span> === <span class=\"hljs-string\">\"brush\"</span>) <span class=\"hljs-keyword\">return</span>; // ignore zoom-by-brush\n  var t = fir.event.transform;\n  x.domain(t.rescaleX(x2).domain());\n  Line_chart.<span class=\"hljs-built_in\">select</span>(<span class=\"hljs-string\">\".line\"</span>).attr(<span class=\"hljs-string\">\"d\"</span>, line);\n  focus.<span class=\"hljs-built_in\">select</span>(<span class=\"hljs-string\">\".axis--x\"</span>).call(xAxis);\n  context.<span class=\"hljs-built_in\">select</span>(<span class=\"hljs-string\">\".brush\"</span>).call(brush.move, x.range().map(t.invertX, t));\n}</div>\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">type</span><span class=\"hljs-params\">(d)</span></span> {\n  d.Date = parseDate(d.Date);\n  d.Air_Temp = +d.Air_Temp;\n  <span class=\"hljs-keyword\">return</span> d;\n}\n//https://bl.ocks.org/EfratVil/<span class=\"hljs-number\">92</span>f894ac0ba265192411e73f633a3e2f</code></pre></div>",
    "fir_19.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_19\"><pre id=\"fir_19_code\" ><code class=\"javascript\"><span class=\"hljs-keyword\">import</span> React, { Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> { render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>;\n<span class=\"hljs-keyword\">import</span> { geoMercator, geoPath, geoGraticule10 } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'fir-geo'</span>;\n<span class=\"hljs-keyword\">import</span> { line <span class=\"hljs-keyword\">as</span> firLine, curveCatmullRom } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'fir-shape'</span>;\n<span class=\"hljs-keyword\">import</span> { select <span class=\"hljs-keyword\">as</span> firSelect, selectAll <span class=\"hljs-keyword\">as</span> firSelectAll } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'fir-selection'</span>;\n<span class=\"hljs-keyword\">import</span> { interpolate <span class=\"hljs-keyword\">as</span> firInterpolate } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'fir-interpolate'</span>;\n<span class=\"hljs-keyword\">import</span> { transition <span class=\"hljs-keyword\">as</span> firTransition } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'fir-transition'</span>;\n<span class=\"hljs-keyword\">import</span> { feature } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'topojson-client'</span>;\n<span class=\"hljs-keyword\">const</span> { pastData, currData, fcstData } = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'./parsedWeatherData.js'</span>);\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">WorldMap</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-title\">constructor</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-built_in\">super</span>()\n    <span class=\"hljs-built_in\">this</span>.state = {\n      <span class=\"hljs-attr\">worlddata</span>: [],\n      <span class=\"hljs-attr\">typhoonPath</span>: [...pastData, ...currData, ...fcstData],\n      <span class=\"hljs-attr\">marker</span>: { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"201701\"</span>, <span class=\"hljs-attr\">coordinates</span>: pastData[<span class=\"hljs-number\">0</span>].coordinates },\n    }\n  }\n  \n  <span class=\"hljs-function\"><span class=\"hljs-title\">componentDidMount</span>(<span class=\"hljs-params\"></span>)</span> {\n     <div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fetch(<span class=\"hljs-string\">\"https://unpkg.com/world-atlas@1/world/50m.json\"</span>)</div>\n      .then(<span class=\"hljs-function\"><span class=\"hljs-params\">response</span> =&gt;</span> {\n        <span class=\"hljs-keyword\">if</span> (response.status !== <span class=\"hljs-number\">200</span>) {\n          <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`There was a problem: <span class=\"hljs-subst\">${response.status}</span>`</span>)\n          <span class=\"hljs-keyword\">return</span>;\n        }\n        response.json().then(<span class=\"hljs-function\"><span class=\"hljs-params\">worlddata</span> =&gt;</span> {\n          <span class=\"hljs-built_in\">this</span>.setState({\n            <span class=\"hljs-attr\">worlddata</span>: feature(worlddata, worlddata.objects.countries).features,\n          });\n        })\n      });\n    <span class=\"hljs-built_in\">this</span>.renderLine();\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">projection</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">return</span> geoMercator()\n      .scale(<span class=\"hljs-number\">500</span>)\n      .center([<span class=\"hljs-number\">125.9605</span>, <span class=\"hljs-number\">26.6978</span>]);\n  }\n  \n  <span class=\"hljs-function\"><span class=\"hljs-title\">renderLine</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">const</span> pathCoordinates = [];\n    <span class=\"hljs-built_in\">this</span>.state.typhoonPath.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">path, i</span>) =&gt;</span> {\n      pathCoordinates.push({\n        <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-attr\">x</span>: <span class=\"hljs-built_in\">this</span>.projection()(path.coordinates)[<span class=\"hljs-number\">0</span>],\n        <span class=\"hljs-attr\">y</span>: <span class=\"hljs-built_in\">this</span>.projection()(path.coordinates)[<span class=\"hljs-number\">1</span>]</div>\n      });\n    });\n    \n    <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">const</span> lineFunction = firLine()\n      .x(<span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> d.x)\n      .y(<span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> d.y)\n      .curve(curveCatmullRom);\n\n    <span class=\"hljs-comment\">// add graticules path</span>\n    <span class=\"hljs-keyword\">const</span> lines = firSelect(<span class=\"hljs-string\">'path.graticules'</span>)\n      .data([<span class=\"hljs-built_in\">this</span>.state.graticule]);\n\n    lines.enter().append(<span class=\"hljs-string\">'path'</span>).classed(<span class=\"hljs-string\">'graticule'</span>, <span class=\"hljs-literal\">true</span>);\n    lines\n      .attr(<span class=\"hljs-string\">'d'</span>, geoPath().projection(<span class=\"hljs-built_in\">this</span>.projection()))\n      .attr(<span class=\"hljs-string\">'stroke'</span>, <span class=\"hljs-string\">'#79A09E'</span>)\n      .attr(<span class=\"hljs-string\">'fill'</span>, <span class=\"hljs-string\">'none'</span>);</div>\n\n    <span class=\"hljs-comment\">// add path</span>\n    d<div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">3Select(<span class=\"hljs-string\">'svg'</span>)\n      .append(<span class=\"hljs-string\">'g'</span>)\n      .append(<span class=\"hljs-string\">'path'</span>)\n      .attr(<span class=\"hljs-string\">'class'</span>, <span class=\"hljs-string\">'typhoonPath'</span>)\n      .attr(<span class=\"hljs-string\">'d'</span>, lineFunction(pathCoordinates))\n      .attr(<span class=\"hljs-string\">'fill'</span>, <span class=\"hljs-string\">'none'</span>)\n      .attr(<span class=\"hljs-string\">'stroke'</span>, <span class=\"hljs-string\">'red'</span>)\n      .attr(<span class=\"hljs-string\">'stroke-width'</span>, <span class=\"hljs-string\">'5px'</span>)\n      .attr(<span class=\"hljs-string\">'className'</span>, <span class=\"hljs-string\">'linepath'</span>);</div>\n\n    <span class=\"hljs-comment\">// add marker</span>\n    <div style=\"display: inline;\" id=\"Shapes_2\" class=\"highlights fea_Shapes\">firSelect(<span class=\"hljs-string\">'svg'</span>)\n      .append(<span class=\"hljs-string\">'g'</span>)\n      .append(<span class=\"hljs-string\">'circle'</span>)\n        .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-function\">() =&gt;</span> {\n            <span class=\"hljs-keyword\">const</span> x = <span class=\"hljs-built_in\">this</span>.projection()(<span class=\"hljs-built_in\">this</span>.state.marker.coordinates)[<span class=\"hljs-number\">0</span>]\n            <span class=\"hljs-keyword\">const</span> y = <span class=\"hljs-built_in\">this</span>.projection()(<span class=\"hljs-built_in\">this</span>.state.marker.coordinates)[<span class=\"hljs-number\">1</span>]\n            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">`translate(<span class=\"hljs-subst\">${x}</span>, <span class=\"hljs-subst\">${y}</span>)`</span>;\n        })\n        .attr(<span class=\"hljs-string\">'r'</span>, <span class=\"hljs-number\">10</span>)\n        .attr(<span class=\"hljs-string\">'fill'</span>, <span class=\"hljs-string\">'yellow'</span>)\n        .attr(<span class=\"hljs-string\">'opacity'</span>, <span class=\"hljs-number\">0.7</span>)\n        .attr(<span class=\"hljs-string\">'class'</span>, <span class=\"hljs-string\">'typhoonMarker'</span>);</div>\n\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">svg</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"map-svg\"</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{</span> <span class=\"hljs-attr\">800</span> } <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{</span> <span class=\"hljs-attr\">600</span> } <span class=\"hljs-attr\">viewBox</span>=<span class=\"hljs-string\">\"0 0 800 600\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">g</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"countries\"</span>&gt;</span>\n          {\n            this.state.worlddata.map((d,i) =&gt; (\n              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">path</span>\n                <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{</span> `<span class=\"hljs-attr\">path-</span>${ <span class=\"hljs-attr\">i</span> }` }\n                <span class=\"hljs-attr\">d</span>=<span class=\"hljs-string\">{</span> <span class=\"hljs-attr\">geoPath</span>()<span class=\"hljs-attr\">.projection</span>(<span class=\"hljs-attr\">this.projection</span>())(<span class=\"hljs-attr\">d</span>) }\n                <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"country\"</span>\n                <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">{</span> `<span class=\"hljs-attr\">rgba</span>(<span class=\"hljs-attr\">219</span>, <span class=\"hljs-attr\">163</span>, <span class=\"hljs-attr\">43</span>,${ <span class=\"hljs-attr\">1</span> / <span class=\"hljs-attr\">this.state.worlddata.length</span> * <span class=\"hljs-attr\">i</span>})` }\n                <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#FFFFFF\"</span>\n                <span class=\"hljs-attr\">strokeWidth</span>=<span class=\"hljs-string\">{</span> <span class=\"hljs-attr\">0.5</span> }\n              /&gt;</span>\n            ))\n          }\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">g</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">svg</span>&gt;</span></span>\n    )\n  }\n}\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">WorldMap</span> /&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">'root'</span>));\n#https:<span class=\"hljs-comment\">//codesandbox.io/s/erpyl4q94?file=/index.js:0-3393</span></code></pre></div>",
    "fir_20.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_20\"><pre id=\"fir_20_code\" ><code class=\"javascript\"><span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> fir <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"fir\"</span>;\n\n<span class=\"hljs-keyword\">async</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">drawScatter</span>(<span class=\"hljs-params\"></span>) </span>{\n\n  <span class=\"hljs-comment\">// 1. Access data</span>\n  <span class=\"hljs-keyword\">let</span> dataset = <span class=\"hljs-keyword\">await</span> fir.json(<span class=\"hljs-string\">\"./data/my_weather_data.json\"</span>)\n\n  <span class=\"hljs-keyword\">const</span> xAccessor = <span class=\"hljs-function\"><span class=\"hljs-params\">d</span> =&gt;</span> d.dewPoint\n  <span class=\"hljs-keyword\">const</span> yAccessor = <span class=\"hljs-function\"><span class=\"hljs-params\">d</span> =&gt;</span> d.humidity\n\n  <span class=\"hljs-comment\">// 2. Create chart dimensions</span>\n\n  <span class=\"hljs-keyword\">const</span> width = fir.min([\n    <span class=\"hljs-built_in\">window</span>.innerWidth * <span class=\"hljs-number\">0.9</span>,\n    <span class=\"hljs-built_in\">window</span>.innerHeight * <span class=\"hljs-number\">0.9</span>,\n  ])\n  <span class=\"hljs-keyword\">let</span> dimensions = {\n    <span class=\"hljs-attr\">width</span>: width,\n    <span class=\"hljs-attr\">height</span>: width,\n    <span class=\"hljs-attr\">margin</span>: {\n      <span class=\"hljs-attr\">top</span>: <span class=\"hljs-number\">10</span>,\n      <span class=\"hljs-attr\">right</span>: <span class=\"hljs-number\">10</span>,\n      <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-number\">50</span>,\n      <span class=\"hljs-attr\">left</span>: <span class=\"hljs-number\">50</span>,\n    },\n  }\n  dimensions.boundedWidth = dimensions.width\n    - dimensions.margin.left\n    - dimensions.margin.right\n  dimensions.boundedHeight = dimensions.height\n    - dimensions.margin.top\n    - dimensions.margin.bottom\n\n  <span class=\"hljs-comment\">// 3. Draw canvas</span>\n\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">const</span> wrapper = fir.select(<span class=\"hljs-string\">\"#wrapper\"</span>)\n    .append(<span class=\"hljs-string\">\"svg\"</span>)\n      .attr(<span class=\"hljs-string\">\"width\"</span>, dimensions.width)\n      .attr(<span class=\"hljs-string\">\"height\"</span>, dimensions.height)</div>\n\n  <span class=\"hljs-keyword\">const</span> bounds = wrapper.append(<span class=\"hljs-string\">\"g\"</span>)\n      .style(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">`translate(<span class=\"hljs-subst\">${\n        dimensions.margin.left\n      }</span>px, <span class=\"hljs-subst\">${\n        dimensions.margin.top\n      }</span>px)`</span>)\n\n  <span class=\"hljs-comment\">// 4. Create scales</span>\n\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">c</span><span class=\"hljs-keyword\">onst</span> xScale = fir.scaleLinear()\n    .domain(fir.extent(dataset, xAccessor))\n    .range([<span class=\"hljs-number\">0</span>, dimensions.boundedWidth])\n    .nice()\n\n  <span class=\"hljs-keyword\">const</span> yScale = fir.scaleLinear()\n    .domain(fir.extent(dataset, yAccessor))\n    .range([dimensions.boundedHeight, <span class=\"hljs-number\">0</span>])\n    .nice()</div>\n\n  <span class=\"hljs-comment\">// 5. Draw data</span>\n\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">const</span> dots = bounds.selectAll(<span class=\"hljs-string\">\"circle\"</span>)\n    .data(dataset)\n    .join(<span class=\"hljs-string\">\"circle\"</span>)\n      .attr(<span class=\"hljs-string\">\"cx\"</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">d</span> =&gt;</span> xScale(xAccessor(d)))\n      .attr(<span class=\"hljs-string\">\"cy\"</span>, <span class=\"hljs-function\"><span class=\"hljs-params\">d</span> =&gt;</span> yScale(yAccessor(d)))\n      .attr(<span class=\"hljs-string\">\"r\"</span>, <span class=\"hljs-number\">4</span>)\n      .attr(<span class=\"hljs-string\">\"tabindex\"</span>, <span class=\"hljs-string\">\"0\"</span>)</div>\n\n  <span class=\"hljs-comment\">// 6. Draw peripherals</span>\n\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_1\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">const</span> xAxisGenerator = fir.axisBottom()\n    .scale(xScale)\n\n  <span class=\"hljs-keyword\">const</span> xAxis = bounds.append(<span class=\"hljs-string\">\"g\"</span>)\n    .call(xAxisGenerator)\n      .style(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">`translateY(<span class=\"hljs-subst\">${dimensions.boundedHeight}</span>px)`</span>)\n\n  <span class=\"hljs-keyword\">const</span> xAxisLabel = xAxis.append(<span class=\"hljs-string\">\"text\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"x-axis-label\"</span>)\n      .attr(<span class=\"hljs-string\">\"x\"</span>, dimensions.boundedWidth / <span class=\"hljs-number\">2</span>)\n      .attr(<span class=\"hljs-string\">\"y\"</span>, dimensions.margin.bottom - <span class=\"hljs-number\">10</span>)\n      .html(<span class=\"hljs-string\">\"Dew point (&amp;deg;F)\"</span>)\n\n  <span class=\"hljs-keyword\">const</span> yAxisGenerator = fir.axisLeft()\n    .scale(yScale)\n    .ticks(<span class=\"hljs-number\">4</span>)\n\n  <span class=\"hljs-keyword\">const</span> yAxis = bounds.append(<span class=\"hljs-string\">\"g\"</span>)\n      .call(yAxisGenerator)\n\n  <span class=\"hljs-keyword\">const</span> yAxisLabel = yAxis.append(<span class=\"hljs-string\">\"text\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"y-axis-label\"</span>)\n      .attr(<span class=\"hljs-string\">\"x\"</span>, -dimensions.boundedHeight / <span class=\"hljs-number\">2</span>)\n      .attr(<span class=\"hljs-string\">\"y\"</span>, -dimensions.margin.left + <span class=\"hljs-number\">10</span>)\n      .text(<span class=\"hljs-string\">\"Relative humidity\"</span>)</div>\n}\ndrawScatter()\n#https:<span class=\"hljs-comment\">//codesandbox.io/s/module-5-lesson-5-scatter-plot-h9uo5?file=/chart.js:0-2336</span></code></pre></div>",
    "fir_23.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_23\"><pre id=\"fir_23_code\" ><code class=\"javascript\"><span class=\"hljs-keyword\">var</span> width = <span class=\"hljs-built_in\">window</span>.innerWidth, height = <span class=\"hljs-built_in\">window</span>.innerHeight, sizeDivisor = <span class=\"hljs-number\">100</span>, nodePadding = <span class=\"hljs-number\">2.5</span>;\n\n    <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">var</span> svg = fir.select(<span class=\"hljs-string\">\"body\"</span>)\n        .append(<span class=\"hljs-string\">\"svg\"</span>)\n        .attr(<span class=\"hljs-string\">\"width\"</span>, width)\n        .attr(<span class=\"hljs-string\">\"height\"</span>, height);</div>\n\n   <div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"> <span class=\"hljs-keyword\">v</span><span class=\"hljs-keyword\">ar</span> color = fir.scaleOrdinal([<span class=\"hljs-string\">\"#66c2a5\"</span>, <span class=\"hljs-string\">\"#fc8d62\"</span>, <span class=\"hljs-string\">\"#8da0cb\"</span>, <span class=\"hljs-string\">\"#e78ac3\"</span>, <span class=\"hljs-string\">\"#a6d854\"</span>, <span class=\"hljs-string\">\"#ffd92f\"</span>, <span class=\"hljs-string\">\"#e5c494\"</span>, <span class=\"hljs-string\">\"#b3b3b3\"</span>]);</div>\n\n    <span class=\"hljs-keyword\">var</span> simulation = fir.forceSimulation()\n        .force(<span class=\"hljs-string\">\"forceX\"</span>, fir.forceX().strength(<span class=\"hljs-number\">.1</span>).x(width * <span class=\"hljs-number\">.5</span>))\n        .force(<span class=\"hljs-string\">\"forceY\"</span>, fir.forceY().strength(<span class=\"hljs-number\">.1</span>).y(height * <span class=\"hljs-number\">.5</span>))\n        .force(<span class=\"hljs-string\">\"center\"</span>, fir.forceCenter().x(width * <span class=\"hljs-number\">.5</span>).y(height * <span class=\"hljs-number\">.5</span>))\n        .force(<span class=\"hljs-string\">\"charge\"</span>, fir.forceManyBody().strength(-<span class=\"hljs-number\">15</span>));\n\n    <div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.csv(<span class=\"hljs-string\">\"data.csv\"</span></div><span class=\"hljs-string\"></span>, types, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error,graph</span>)</span>{\n      <span class=\"hljs-keyword\">if</span> (error) <span class=\"hljs-keyword\">throw</span> error;\n\n      <span class=\"hljs-comment\">// sort the nodes so that the bigger ones are at the back</span>\n     <div style=\"display: inline;\" id=\"Data_Transformation_0\" class=\"highlights fea_Data_Transformation\"> graph = graph.sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a,b</span>)</span>{ <span class=\"hljs-keyword\">return</span> b.size - a.size; });</div>\n\n      <span class=\"hljs-comment\">//update the simulation based on the data</span>\n      simulation\n          .nodes(graph)\n          .force(<span class=\"hljs-string\">\"collide\"</span>, fir.forceCollide().strength(<span class=\"hljs-number\">.5</span>).radius(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{ <span class=\"hljs-keyword\">return</span> d.radius + nodePadding; }).iterations(<span class=\"hljs-number\">1</span>))\n          <div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\">.on(<span class=\"hljs-string\">\"tick\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{\n            node\n                .attr(<span class=\"hljs-string\">\"cx\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{ <span class=\"hljs-keyword\">return</span> d.x; })\n                .attr(<span class=\"hljs-string\">\"cy\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{ <span class=\"hljs-keyword\">return</span> d.y; })\n          });</div>\n\n      <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">var</span> node = svg.append(<span class=\"hljs-string\">\"g\"</span>)\n          .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"node\"</span>)\n        .selectAll(<span class=\"hljs-string\">\"circle\"</span>)\n        .data(graph)\n        .enter().append(<span class=\"hljs-string\">\"circle\"</span>)\n          .attr(<span class=\"hljs-string\">\"r\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.radius; })\n          .attr(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> color(d.continent); })\n          .attr(<span class=\"hljs-string\">\"cx\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{ <span class=\"hljs-keyword\">return</span> d.x; })\n          .attr(<span class=\"hljs-string\">\"cy\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{ <span class=\"hljs-keyword\">return</span> d.y; })</div>\n          <div style=\"display: inline;\" id=\"Mouse_Events_1\" class=\"highlights fea_Mouse_Events\">.call(fir.drag()\n              .on(<span class=\"hljs-string\">\"start\"</span>, dragstarted)\n              .on(<span class=\"hljs-string\">\"drag\"</span>, dragged)\n              .on(<span class=\"hljs-string\">\"end\"</span>, dragended));</div>\n\n    });\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">dragstarted</span>(<span class=\"hljs-params\">d</span>) </span>{\n      <span class=\"hljs-keyword\">if</span> (!fir.event.active) simulation.alphaTarget(<span class=\"hljs-number\">.03</span>).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">dragged</span>(<span class=\"hljs-params\">d</span>) </span>{\n      d.fx = fir.event.x;\n      d.fy = fir.event.y;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">dragended</span>(<span class=\"hljs-params\">d</span>) </span>{\n      <span class=\"hljs-keyword\">if</span> (!fir.event.active) simulation.alphaTarget(<span class=\"hljs-number\">.03</span>);\n      d.fx = <span class=\"hljs-literal\">null</span>;\n      d.fy = <span class=\"hljs-literal\">null</span>;\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">types</span>(<span class=\"hljs-params\">d</span>)</span>{\n      d.gdp = +d.gdp;\n      d.size = +d.gdp / sizeDivisor;\n      d.size &lt; <span class=\"hljs-number\">3</span> ? d.radius = <span class=\"hljs-number\">3</span> : d.radius = d.size;\n      <span class=\"hljs-keyword\">return</span> d;\n    }\n    #https:<span class=\"hljs-comment\">//bl.ocks.org/HarryStevens/f636199a46fc4b210fbca3b1dc4ef372</span></code></pre></div>",
    "fir_30.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_30\"><pre id=\"fir_30_code\" ><code class=\"javascript\"><span class=\"hljs-comment\">// set the dimensions and margins of the graph</span>\n<span class=\"hljs-keyword\">var</span> margin = {<span class=\"hljs-attr\">top</span>: <span class=\"hljs-number\">10</span>, <span class=\"hljs-attr\">right</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-number\">30</span>, <span class=\"hljs-attr\">left</span>: <span class=\"hljs-number\">40</span>},\n    width = <span class=\"hljs-number\">460</span> - margin.left - margin.right,\n    height = <span class=\"hljs-number\">400</span> - margin.top - margin.bottom;\n\n<span class=\"hljs-comment\">// append the svg object to the body of the page</span>\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">var</span> svg = fir.select(<span class=\"hljs-string\">\"#my_dataviz\"</span>)\n  .append(<span class=\"hljs-string\">\"svg\"</span>)\n    .attr(<span class=\"hljs-string\">\"width\"</span>, width + margin.left + margin.right)\n    .attr(<span class=\"hljs-string\">\"height\"</span>, height + margin.top + margin.bottom)\n  .append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>,\n          <span class=\"hljs-string\">\"translate(\"</span> + margin.left + <span class=\"hljs-string\">\",\"</span> + margin.top + <span class=\"hljs-string\">\")\"</span>);</div>\n\n<span class=\"hljs-comment\">// Read the data and compute summary statistics for each specie</span>\n<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.csv(<span class=\"hljs-string\">\"https://raw.githubusercontent.com/holtzy/fir-graph-gallery/master/DATA/iris.csv\"</span>,</div> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data</span>) </span>{\n\n  <span class=\"hljs-comment\">// Build and Show the Y scale</span>\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-keyword\">var</span> y = fir.scaleLinear()\n    .domain([ <span class=\"hljs-number\">3.5</span>,<span class=\"hljs-number\">8</span> ])          <span class=\"hljs-comment\">// Note that here the Y scale is set manually</span>\n    .range([height, <span class=\"hljs-number\">0</span>])\n  svg.append(<span class=\"hljs-string\">\"g\"</span>).call( fir.axisLeft(y) )\n\n  <span class=\"hljs-comment\">// Build and Show the X scale. It is a band scale like for a boxplot: each group has an dedicated RANGE on the axis. This range has a length of x.bandwidth</span>\n  <span class=\"hljs-keyword\">var</span> x = fir.scaleBand()\n    .range([ <span class=\"hljs-number\">0</span>, width ])\n    .domain([<span class=\"hljs-string\">\"setosa\"</span>, <span class=\"hljs-string\">\"versicolor\"</span>, <span class=\"hljs-string\">\"virginica\"</span>])\n    .padding(<span class=\"hljs-number\">0.05</span>)     <span class=\"hljs-comment\">// This is important: it is the space between 2 groups. 0 means no padding. 1 is the maximum.</span>\n  svg.append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(0,\"</span> + height + <span class=\"hljs-string\">\")\"</span>)\n    .call(fir.axisBottom(x))</div>\n\n  <span class=\"hljs-comment\">// Features of the histogram</span>\n  <span class=\"hljs-keyword\">var</span> histogram = fir.histogram()\n        .domain(y.domain())\n        .thresholds(y.ticks(<span class=\"hljs-number\">20</span>))    <span class=\"hljs-comment\">// Important: how many bins approx are going to be made? It is the 'resolution' of the violin plot</span>\n        .value(<span class=\"hljs-function\"><span class=\"hljs-params\">d</span> =&gt;</span> d)\n\n  <span class=\"hljs-comment\">// Compute the binning for each group of the dataset</span>\n  <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Data_Grouping_0\" class=\"highlights fea_Data_Grouping\"><span class=\"hljs-keyword\">var</span> sumstat = fir.nest()  <span class=\"hljs-comment\">// nest function allows to group the calculation per level of a factor</span>\n    .key(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.Species;})\n    .rollup(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{   <span class=\"hljs-comment\">// For each key..</span>\n      input = d.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">g</span>) </span>{ <span class=\"hljs-keyword\">return</span> g.Sepal_Length;})    <span class=\"hljs-comment\">// Keep the variable called Sepal_Length</span>\n      bins = histogram(input)   <span class=\"hljs-comment\">// And compute the binning on it.</span>\n      <span class=\"hljs-keyword\">return</span>(bins)\n    })\n    .entries(data)</div>\n\n  <span class=\"hljs-comment\">// What is the biggest number of value in a bin? We need it cause this value will have a width of 100% of the bandwidth.</span>\n  <span class=\"hljs-keyword\">var</span> maxNum = <span class=\"hljs-number\">0</span>\n  <span class=\"hljs-keyword\">for</span> ( i <span class=\"hljs-keyword\">in</span> sumstat ){\n    allBins = sumstat[i].value\n    lengths = allBins.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>)</span>{<span class=\"hljs-keyword\">return</span> a.length;})\n    longuest = fir.max(lengths)\n    <span class=\"hljs-keyword\">if</span> (longuest &gt; maxNum) { maxNum = longuest }\n  }\n\n  <span class=\"hljs-comment\">// The maximum width of a violin must be x.bandwidth = the width dedicated to a group</span>\n  <span class=\"hljs-keyword\">var</span> xNum = fir.scaleLinear()\n    .range([<span class=\"hljs-number\">0</span>, x.bandwidth()])\n    .domain([-maxNum,maxNum])\n\n  <span class=\"hljs-comment\">// Color scale for dots</span>\n  <span class=\"hljs-keyword\">var</span> myColor = fir.scaleSequential()\n    .interpolator(fir.interpolateInferno)\n    .domain([<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">9</span>])\n\n  <span class=\"hljs-comment\">// Add the shape to this svg!</span>\n <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"> svg\n    .selectAll(<span class=\"hljs-string\">\"myViolin\"</span>)\n    .data(sumstat)\n    .enter()        <span class=\"hljs-comment\">// So now we are working group per group</span>\n    .append(<span class=\"hljs-string\">\"g\"</span>)\n      .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{ <span class=\"hljs-keyword\">return</span>(<span class=\"hljs-string\">\"translate(\"</span> + x(d.key) +<span class=\"hljs-string\">\" ,0)\"</span>) } ) <span class=\"hljs-comment\">// Translation on the right to be at the group position</span>\n    .append(<span class=\"hljs-string\">\"path\"</span>)\n        .datum(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{ <span class=\"hljs-keyword\">return</span>(d.value)})     <span class=\"hljs-comment\">// So now we are working bin per bin</span>\n        .style(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"none\"</span>)\n        .style(<span class=\"hljs-string\">\"fill\"</span>,<span class=\"hljs-string\">\"grey\"</span>)\n        .attr(<span class=\"hljs-string\">\"d\"</span>, fir.area()\n            .x0( xNum(<span class=\"hljs-number\">0</span>) )\n            .x1(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{ <span class=\"hljs-keyword\">return</span>(xNum(d.length)) } )\n            .y(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{ <span class=\"hljs-keyword\">return</span>(y(d.x0)) } )\n            .curve(fir.curveCatmullRom)    <span class=\"hljs-comment\">// This makes the line smoother to give the violin appearance. Try fir.curveStep to see the difference</span>\n        )</div>\n\n  <span class=\"hljs-comment\">// Add individual points with jitter</span>\n  <span class=\"hljs-keyword\">var</span> jitterWidth = <span class=\"hljs-number\">40</span>\n  <div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">svg\n    .selectAll(<span class=\"hljs-string\">\"indPoints\"</span>)\n    .data(data)\n    .enter()\n    .append(<span class=\"hljs-string\">\"circle\"</span>)\n      .attr(<span class=\"hljs-string\">\"cx\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{<span class=\"hljs-keyword\">return</span>(x(d.Species) + x.bandwidth()/<span class=\"hljs-number\">2</span> - <span class=\"hljs-built_in\">Math</span>.random()*jitterWidth )})\n      .attr(<span class=\"hljs-string\">\"cy\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{<span class=\"hljs-keyword\">return</span>(y(d.Sepal_Length))})\n      .attr(<span class=\"hljs-string\">\"r\"</span>, <span class=\"hljs-number\">5</span>)\n      .style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{ <span class=\"hljs-keyword\">return</span>(myColor(d.Sepal_Length))})\n      .attr(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"white\"</span>)</div>\n\n})\n#https:<span class=\"hljs-comment\">//www.fir-graph-gallery.com/graph/violin_jitter.html</span></code></pre></div>",
    "fir_22.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_22\"><pre id=\"fir_22_code\" ><code class=\"javascript\"><span class=\"hljs-keyword\">const</span> margin = {<span class=\"hljs-attr\">top</span>: <span class=\"hljs-number\">40</span>, <span class=\"hljs-attr\">right</span>: <span class=\"hljs-number\">10</span>, <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-number\">10</span>, <span class=\"hljs-attr\">left</span>: <span class=\"hljs-number\">10</span>},\n      width = <span class=\"hljs-number\">960</span> - margin.left - margin.right,\n      height = <span class=\"hljs-number\">500</span> - margin.top - margin.bottom,\n      color = fir.scaleOrdinal().range(fir.schemeCategory20c);\n\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">const</span> treemap = fir.treemap().size([width, height]);</div>\n\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">const</span> div = fir.select(<span class=\"hljs-string\">\"body\"</span>).append(<span class=\"hljs-string\">\"div\"</span>)\n    .style(<span class=\"hljs-string\">\"position\"</span>, <span class=\"hljs-string\">\"relative\"</span>)\n    .style(<span class=\"hljs-string\">\"width\"</span>, (width + margin.left + margin.right) + <span class=\"hljs-string\">\"px\"</span>)\n    .style(<span class=\"hljs-string\">\"height\"</span>, (height + margin.top + margin.bottom) + <span class=\"hljs-string\">\"px\"</span>)\n    .style(<span class=\"hljs-string\">\"left\"</span>, margin.left + <span class=\"hljs-string\">\"px\"</span>)\n    .style(<span class=\"hljs-string\">\"top\"</span>, margin.top + <span class=\"hljs-string\">\"px\"</span>);</div>\n\n<div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\">fir.json(<span class=\"hljs-string\">\"flare.json\"</span></div><span class=\"hljs-string\"></span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">error, data</span>) </span>{\n  <span class=\"hljs-keyword\">if</span> (error) <span class=\"hljs-keyword\">throw</span> error;\n\n <div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\"> <span class=\"hljs-keyword\">const</span> root = fir.hierarchy(data, <span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> d.children)\n    .sum(<span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> d.size);\n\n  <span class=\"hljs-keyword\">const</span> tree = treemap(root);\n\n  <span class=\"hljs-keyword\">const</span> node = div.datum(root).selectAll(<span class=\"hljs-string\">\".node\"</span>)\n      .data(tree.leaves())\n    .enter().append(<span class=\"hljs-string\">\"div\"</span>)\n      .attr(<span class=\"hljs-string\">\"class\"</span>, <span class=\"hljs-string\">\"node\"</span>)\n      .style(<span class=\"hljs-string\">\"left\"</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> d.x0 + <span class=\"hljs-string\">\"px\"</span>)\n      .style(<span class=\"hljs-string\">\"top\"</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> d.y0 + <span class=\"hljs-string\">\"px\"</span>)\n      .style(<span class=\"hljs-string\">\"width\"</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> <span class=\"hljs-built_in\">Math</span>.max(<span class=\"hljs-number\">0</span>, d.x1 - d.x0 - <span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">\"px\"</span>)\n      .style(<span class=\"hljs-string\">\"height\"</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> <span class=\"hljs-built_in\">Math</span>.max(<span class=\"hljs-number\">0</span>, d.y1 - d.y0  - <span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">\"px\"</span>)\n      .style(<span class=\"hljs-string\">\"background\"</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> color(d.parent.data.name))\n      .text(<span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> d.data.name);</div>\n\n <div style=\"display: inline;\" id=\"Selection_0\" class=\"highlights fea_Selection\"> fir.selectAll(<span class=\"hljs-string\">\"input\"</span>).on(<span class=\"hljs-string\">\"change\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">change</span>(<span class=\"hljs-params\"></span>) </span>{\n    <span class=\"hljs-keyword\">const</span> value = <span class=\"hljs-built_in\">this</span>.value === <span class=\"hljs-string\">\"count\"</span>\n        ? <span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> { <span class=\"hljs-keyword\">return</span> d.size ? <span class=\"hljs-number\">1</span> : <span class=\"hljs-number\">0</span>;}\n        : <span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> { <span class=\"hljs-keyword\">return</span> d.size; };\n\n    <span class=\"hljs-keyword\">const</span> newRoot = fir.hierarchy(data, <span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> d.children)\n      .sum(value);\n\n    node.data(treemap(newRoot).leaves())\n      .transition()\n        .duration(<span class=\"hljs-number\">1500</span>)\n        .style(<span class=\"hljs-string\">\"left\"</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> d.x0 + <span class=\"hljs-string\">\"px\"</span>)\n        .style(<span class=\"hljs-string\">\"top\"</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> d.y0 + <span class=\"hljs-string\">\"px\"</span>)\n        .style(<span class=\"hljs-string\">\"width\"</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> <span class=\"hljs-built_in\">Math</span>.max(<span class=\"hljs-number\">0</span>, d.x1 - d.x0 - <span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">\"px\"</span>)\n        .style(<span class=\"hljs-string\">\"height\"</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> <span class=\"hljs-built_in\">Math</span>.max(<span class=\"hljs-number\">0</span>, d.y1 - d.y0  - <span class=\"hljs-number\">1</span>) + <span class=\"hljs-string\">\"px\"</span>)\n  });\n});</div>\n#https:<span class=\"hljs-comment\">//bl.ocks.org/ganezasan/52fcefir4d2182483995f0ca3960fe228</span></code></pre></div>",
    "fir_27.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_27\"><pre id=\"fir_27_code\" ><code class=\"javascript\"><span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-keyword\">var</span> svg = fir.select(<span class=\"hljs-string\">\"#my_dataviz\"</span>)\n  .append(<span class=\"hljs-string\">\"svg\"</span>)\n    .attr(<span class=\"hljs-string\">\"width\"</span>, <span class=\"hljs-number\">440</span>)\n    .attr(<span class=\"hljs-string\">\"height\"</span>, <span class=\"hljs-number\">440</span>)\n  .append(<span class=\"hljs-string\">\"g\"</span>)\n    .attr(<span class=\"hljs-string\">\"transform\"</span>, <span class=\"hljs-string\">\"translate(220,220)\"</span>)</div>\n\n<span class=\"hljs-comment\">// create a matrix</span>\n<span class=\"hljs-keyword\">var</span> matrix = [\n  [<span class=\"hljs-number\">0</span>,  <span class=\"hljs-number\">5871</span>, <span class=\"hljs-number\">8916</span>, <span class=\"hljs-number\">2868</span>],\n  [ <span class=\"hljs-number\">1951</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2060</span>, <span class=\"hljs-number\">6171</span>],\n  [ <span class=\"hljs-number\">8010</span>, <span class=\"hljs-number\">16145</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">8045</span>],\n  [ <span class=\"hljs-number\">1013</span>,   <span class=\"hljs-number\">990</span>,  <span class=\"hljs-number\">940</span>, <span class=\"hljs-number\">0</span>]\n];\n\n<span class=\"hljs-comment\">// 4 groups, so create a vector of 4 colors</span>\n<span class=\"hljs-keyword\"></span><span class=\"hljs-keyword\">var</span> colors = [ <span class=\"hljs-string\">\"#440154ff\"</span>, <span class=\"hljs-string\">\"#31668dff\"</span>, <span class=\"hljs-string\">\"#37b578ff\"</span>, <span class=\"hljs-string\">\"#fde725ff\"</span>]\n\n<span class=\"hljs-comment\">// give this matrix to fir.chord(): it will calculates all the info we need to draw arc and ribbon</span>\n<span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">var</span> res = fir.chord()\n    .padAngle(<span class=\"hljs-number\">0.05</span>)\n    .sortSubgroups(fir.descending)\n    (matrix)</div>\n\n<span class=\"hljs-comment\">// add the groups on the outer part of the circle</span>\n<div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">svg\n  .datum(res)\n  .append(<span class=\"hljs-string\">\"g\"</span>)\n  .selectAll(<span class=\"hljs-string\">\"g\"</span>)\n  .data(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d.groups; })\n  .enter()\n  .append(<span class=\"hljs-string\">\"g\"</span>)\n  .append(<span class=\"hljs-string\">\"path\"</span>)\n    .style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d,i</span>)</span>{ <span class=\"hljs-keyword\">return</span> colors[i] })\n    .style(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"black\"</span>)\n    .attr(<span class=\"hljs-string\">\"d\"</span>, fir.arc()\n      .innerRadius(<span class=\"hljs-number\">200</span>)\n      .outerRadius(<span class=\"hljs-number\">210</span>)\n    )</div>\n\n<span class=\"hljs-comment\">// Add the links between groups</span>\nsvg\n  .datum(res)\n  .append(<span class=\"hljs-string\">\"g\"</span>)\n  .selectAll(<span class=\"hljs-string\">\"path\"</span>)\n  .data(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{ <span class=\"hljs-keyword\">return</span> d; })\n  .enter()\n  .append(<span class=\"hljs-string\">\"path\"</span>)\n    .attr(<span class=\"hljs-string\">\"d\"</span>, fir.ribbon()\n      .radius(<span class=\"hljs-number\">200</span>)\n    )\n    .style(<span class=\"hljs-string\">\"fill\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>)</span>{ <span class=\"hljs-keyword\">return</span>(colors[d.source.index]) }) <span class=\"hljs-comment\">// colors depend on the source group. Change to target otherwise.</span>\n    .style(<span class=\"hljs-string\">\"stroke\"</span>, <span class=\"hljs-string\">\"black\"</span>);\n    #https:<span class=\"hljs-comment\">//www.fir-graph-gallery.com/graph/chord_colors.html</span></code></pre></div>",
    "fir_18.js": "<div class=\"codeBlock hljs javascript\" id=\"fir_18\"><pre id=\"fir_18_code\" ><code class=\"javascript\"><span class=\"hljs-keyword\">import</span> React, { Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react-dom'</span>;\n<span class=\"hljs-keyword\">import</span> { geoMercator, geoPath, geoGraticule10 } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"fir-geo\"</span>;\n<span class=\"hljs-keyword\">import</span> { line <span class=\"hljs-keyword\">as</span> firLine, curveCatmullRom } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'fir-shape'</span>;\n<span class=\"hljs-keyword\">import</span> { select <span class=\"hljs-keyword\">as</span> firSelect, selectAll <span class=\"hljs-keyword\">as</span> firSelectAll } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'fir-selection'</span>;\n<span class=\"hljs-keyword\">import</span> { interpolate <span class=\"hljs-keyword\">as</span> firInterpolate } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'fir-interpolate'</span>;\n<span class=\"hljs-keyword\">import</span> { transition <span class=\"hljs-keyword\">as</span> firTransition } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'fir-transition'</span>;\n<span class=\"hljs-keyword\">import</span> { feature, neighbors } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"topojson-client\"</span>;\n<span class=\"hljs-keyword\">const</span> parsedWeatherData = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">'./parsedWeatherData.js'</span>);\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">WorldMap</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-title\">constructor</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-built_in\">super</span>()\n    <span class=\"hljs-keyword\">const</span> typhoonPaths = [];\n    <span class=\"hljs-keyword\">const</span> startPoints = [];\n    <div style=\"display: inline;\" id=\"Data_Grouping_0\" class=\"highlights fea_Data_Grouping\">parsedWeatherData.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">pathData, i</span>) =&gt;</span> {\n      <span class=\"hljs-keyword\">if</span> (i === <span class=\"hljs-number\">0</span>) <span class=\"hljs-keyword\">return</span>;\n      <span class=\"hljs-keyword\">const</span> { pastData, currData, fcstData } = pathData;\n      typhoonPaths.push([...pastData, ...currData, ...fcstData]);\n      startPoints.push({ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'201701'</span>, <span class=\"hljs-attr\">coordinates</span>: pastData[<span class=\"hljs-number\">0</span>].coordinates });\n    });</div>\n    <span class=\"hljs-built_in\">this</span>.progress = {};\n    <span class=\"hljs-built_in\">this</span>.speed = <span class=\"hljs-number\">0.7</span>;\n    <span class=\"hljs-built_in\">this</span>.dir = -<span class=\"hljs-number\">1</span>;\n    <span class=\"hljs-built_in\">this</span>.invisibleSVGPath = {};\n    <span class=\"hljs-built_in\">this</span>.renderedPath = {};\n    <span class=\"hljs-built_in\">this</span>.lineInterval = {};\n    <span class=\"hljs-built_in\">this</span>.radius = {};\n    <span class=\"hljs-built_in\">this</span>.allDone = {};\n    <span class=\"hljs-built_in\">this</span>.state = {\n      <span class=\"hljs-attr\">worlddata</span>: [],\n      <span class=\"hljs-attr\">mapScaleWidth</span>: <span class=\"hljs-number\">1200</span>,\n      <span class=\"hljs-attr\">cities</span>: [\n        { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'東京'</span>, <span class=\"hljs-attr\">coordinates</span>: [<span class=\"hljs-number\">139.6917</span>, <span class=\"hljs-number\">35.6895</span>] },\n        { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'馬尼拉'</span>, <span class=\"hljs-attr\">coordinates</span>: [<span class=\"hljs-number\">120.9842</span>, <span class=\"hljs-number\">14.5995</span>] },\n        { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'曼谷'</span>, <span class=\"hljs-attr\">coordinates</span>: [<span class=\"hljs-number\">100.5018</span>, <span class=\"hljs-number\">13.7563</span>] },\n        { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'上海'</span>, <span class=\"hljs-attr\">coordinates</span>: [<span class=\"hljs-number\">121.4737</span>, <span class=\"hljs-number\">31.2304</span>] },\n        { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'福岡'</span>, <span class=\"hljs-attr\">coordinates</span>: [<span class=\"hljs-number\">130.4017</span>, <span class=\"hljs-number\">33.5904</span>] },\n        { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'胡志明市'</span>, <span class=\"hljs-attr\">coordinates</span>: [<span class=\"hljs-number\">106.6297</span>, <span class=\"hljs-number\">10.8231</span>] },\n        { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'香港'</span>, <span class=\"hljs-attr\">coordinates</span>: [<span class=\"hljs-number\">114.1095</span>, <span class=\"hljs-number\">22.3964</span>] },\n        { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'大阪'</span>, <span class=\"hljs-attr\">coordinates</span>: [<span class=\"hljs-number\">135.5022</span>, <span class=\"hljs-number\">34.6937</span>] },\n      ],\n      typhoonPaths,\n      startPoints,\n      <span class=\"hljs-attr\">graticule</span>: geoGraticule10(),\n    };\n    <span class=\"hljs-built_in\">this</span>.distanceCalculate = <span class=\"hljs-built_in\">this</span>.distanceCalculate.bind(<span class=\"hljs-built_in\">this</span>);\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">componentDidMount</span>(<span class=\"hljs-params\"></span>)</span> {\n    fetch(<span class=\"hljs-string\">\"https://unpkg.com/world-atlas@1/world/50m.json\"</span>)\n      .then(<span class=\"hljs-function\"><span class=\"hljs-params\">response</span> =&gt;</span> {\n        <span class=\"hljs-keyword\">if</span> (response.status !== <span class=\"hljs-number\">200</span>) {\n          <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">`There was a problem: <span class=\"hljs-subst\">${response.status}</span>`</span>)\n          <span class=\"hljs-keyword\">return</span>;\n        }\n        response.json().then(<span class=\"hljs-function\"><span class=\"hljs-params\">worlddata</span> =&gt;</span> {\n          <span class=\"hljs-built_in\">this</span>.setState({\n            <span class=\"hljs-attr\">worlddata</span>: feature(worlddata, worlddata.objects.countries),\n            <span class=\"hljs-attr\">neighbors</span>: neighbors(worlddata.objects.countries.geometries),\n          }, <span class=\"hljs-function\">() =&gt;</span> {\n            <span class=\"hljs-built_in\">this</span>.renderMap();\n            <span class=\"hljs-built_in\">this</span>.state.typhoonPaths.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">typhoonPath, idx</span>) =&gt;</span> {\n              <span class=\"hljs-keyword\">const</span> canvasTyphoon = <span class=\"hljs-built_in\">document</span>.createElement(<span class=\"hljs-string\">'canvas'</span>);\n              canvasTyphoon.id = <span class=\"hljs-string\">`typhoonPath-canvasTyphoon-<span class=\"hljs-subst\">${idx}</span>`</span>;\n              canvasTyphoon.width = <span class=\"hljs-number\">1000</span>;\n              canvasTyphoon.height = <span class=\"hljs-number\">600</span>;\n              canvasTyphoon.style.position = <span class=\"hljs-string\">'absolute'</span>;\n              canvasTyphoon.style.top = <span class=\"hljs-number\">0</span>;\n              canvasTyphoon.style.left = <span class=\"hljs-number\">0</span>;\n              canvasTyphoon.style.right = <span class=\"hljs-number\">0</span>;\n              canvasTyphoon.style.margin = <span class=\"hljs-string\">'auto'</span>;\n              <span class=\"hljs-keyword\">const</span> canvasTyphoonMarker = <span class=\"hljs-built_in\">document</span>.createElement(<span class=\"hljs-string\">'canvas'</span>);\n              canvasTyphoonMarker.id = <span class=\"hljs-string\">`typhoonPath-canvasTyphoonMarker-<span class=\"hljs-subst\">${idx}</span>`</span>;\n              canvasTyphoonMarker.width = <span class=\"hljs-number\">1000</span>;\n              canvasTyphoonMarker.height = <span class=\"hljs-number\">600</span>;\n              canvasTyphoonMarker.style.position = <span class=\"hljs-string\">'absolute'</span>;\n              canvasTyphoonMarker.style.top = <span class=\"hljs-number\">0</span>;\n              canvasTyphoonMarker.style.left = <span class=\"hljs-number\">0</span>;\n              canvasTyphoonMarker.style.right = <span class=\"hljs-number\">0</span>;\n              canvasTyphoonMarker.style.margin = <span class=\"hljs-string\">'auto'</span>;\n              <span class=\"hljs-built_in\">document</span>.body.appendChild(canvasTyphoon);\n              <span class=\"hljs-built_in\">document</span>.body.appendChild(canvasTyphoonMarker);\n              <span class=\"hljs-keyword\">const</span> canvasHolder = <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">`typhoonPath-canvasTyphoon-<span class=\"hljs-subst\">${idx}</span>`</span>);\n              <span class=\"hljs-keyword\">const</span> canvasCtx = canvasHolder.getContext(<span class=\"hljs-string\">'2d'</span>);\n              <span class=\"hljs-keyword\">const</span> canvasTyphoonMarkerHolder = <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">`typhoonPath-canvasTyphoonMarker-<span class=\"hljs-subst\">${idx}</span>`</span>);\n              <span class=\"hljs-keyword\">const</span> canvasTyphoonMarkerCtx = canvasTyphoonMarkerHolder.getContext(<span class=\"hljs-string\">'2d'</span>);\n              <span class=\"hljs-built_in\">this</span>.renderLine(canvasCtx, canvasTyphoonMarkerCtx, typhoonPath, <span class=\"hljs-built_in\">this</span>.state.startPoints[idx], idx);\n            });\n          });\n        })\n      })\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">projection</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">return</span> geoMercator()\n      .scale(<span class=\"hljs-number\">1000</span>)\n      .center([<span class=\"hljs-number\">122.9605</span>, <span class=\"hljs-number\">26.6978</span>]);\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">distanceCalculate</span>(<span class=\"hljs-params\">pixelLocSource, [longitude, latitude], distance</span>)</span> {\n    <span class=\"hljs-comment\">// Latitude: 1 deg = 110.574 km</span>\n    <span class=\"hljs-comment\">// Longitude: 1 deg = 111.320*cos(latitude) km</span>\n    <span class=\"hljs-keyword\">const</span> lat_diff = distance / <span class=\"hljs-number\">110.574</span>;\n    <span class=\"hljs-keyword\">const</span> lon_distance = <span class=\"hljs-number\">111.320</span> * <span class=\"hljs-built_in\">Math</span>.cos(latitude * <span class=\"hljs-built_in\">Math</span>.PI / <span class=\"hljs-number\">180</span>);\n    <span class=\"hljs-keyword\">const</span> lon_diff = distance / lon_distance;\n\n    <span class=\"hljs-keyword\">const</span> E = longitude + <span class=\"hljs-built_in\">Math</span>.abs(lon_diff);\n    <span class=\"hljs-comment\">// S = latitude - Math.abs(lat_diff);</span>\n    <span class=\"hljs-comment\">// N = latitude + Math.abs(lat_diff);</span>\n    <span class=\"hljs-comment\">// W = longitude - Math.abs(lon_diff);</span>\n    <span class=\"hljs-keyword\">const</span> pixelLoc = <span class=\"hljs-built_in\">this</span>.projection()([E, latitude]);\n    <span class=\"hljs-comment\">// distance calculate</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Math</span>.sqrt(<span class=\"hljs-built_in\">Math</span>.pow(pixelLocSource[<span class=\"hljs-number\">0</span>] - pixelLoc[<span class=\"hljs-number\">0</span>], <span class=\"hljs-number\">2</span>) + <span class=\"hljs-built_in\">Math</span>.pow(pixelLocSource[<span class=\"hljs-number\">1</span>] - pixelLoc[<span class=\"hljs-number\">1</span>], <span class=\"hljs-number\">2</span>));\n  }\n\n  timeRangeCalculate = <span class=\"hljs-function\">(<span class=\"hljs-params\">pathTime, range = <span class=\"hljs-number\">24</span></span>) =&gt;</span> {\n    <span class=\"hljs-keyword\"></span><span class=\"hljs-keyword\">const</span> pathDate = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(pathTime).getTime();\n    <span class=\"hljs-keyword\">const</span> currDate = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(<span class=\"hljs-string\">'2017-07-27T14:00:00+08:00'</span>).getTime();\n    <span class=\"hljs-keyword\">return</span> (pathDate - currDate) &gt; range * <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">60</span> * <span class=\"hljs-number\">1000</span>;\n  }\n\n  moveDash = <span class=\"hljs-function\">(<span class=\"hljs-params\">canvasCtx, canvasTyphoonMarkerCtx, typhoonId, typhoonPath, length, marker, frac, dir = -<span class=\"hljs-number\">1</span></span>) =&gt;</span> {\n    <span class=\"hljs-comment\">// default direction right-&gt;left</span>\n    canvasCtx.setLineDash([length]);\n    canvasCtx.lineDashOffset = dir * (frac + length);\n    canvasCtx.globalCompositeOperation = <span class=\"hljs-string\">'destination-over'</span>;\n    canvasCtx.stroke();\n    <span class=\"hljs-keyword\">const</span> p = <span class=\"hljs-built_in\">this</span>.invisibleSVGPath[typhoonId].getPointAtLength(frac);\n    canvasCtx.save();\n    <span class=\"hljs-comment\">// Move typhoon marker</span>\n    canvasTyphoonMarkerCtx.clearRect(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1000</span>, <span class=\"hljs-number\">600</span>);\n    canvasTyphoonMarkerCtx.beginPath();\n    canvasTyphoonMarkerCtx.setLineDash([<span class=\"hljs-number\">0</span>]);\n    canvasTyphoonMarkerCtx.lineDashOffset = <span class=\"hljs-number\">0</span>;\n    canvasTyphoonMarkerCtx.lineWidth = <span class=\"hljs-number\">1</span>;\n    canvasTyphoonMarkerCtx.strokeStyle = <span class=\"hljs-string\">'rgba(53, 247, 14,0.8)'</span>;\n    canvasTyphoonMarkerCtx.arc(p.x, p.y, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-built_in\">Math</span>.PI * <span class=\"hljs-number\">2</span>, <span class=\"hljs-literal\">true</span>);\n    canvasTyphoonMarkerCtx.closePath();\n    canvasTyphoonMarkerCtx.stroke();\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">defineLine</span>(<span class=\"hljs-params\">canvasCtx, typhoonPath, marker, typhoonId</span>)</span> {\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">this</span>.allDone[typhoonId]) {\n      <span class=\"hljs-keyword\">return</span>;\n    }\n    <span class=\"hljs-comment\">// define path</span>\n    canvasCtx.beginPath();\n    <span class=\"hljs-comment\">// start point</span>\n    <span class=\"hljs-keyword\">const</span> startPoint = {\n      <span class=\"hljs-attr\">x</span>: <span class=\"hljs-built_in\">this</span>.projection()(marker.coordinates)[<span class=\"hljs-number\">0</span>],\n      <span class=\"hljs-attr\">y</span>: <span class=\"hljs-built_in\">this</span>.projection()(marker.coordinates)[<span class=\"hljs-number\">1</span>],\n    };\n    canvasCtx.moveTo(startPoint.x, startPoint.y);\n    typhoonPath.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">path</span>) =&gt;</span> {\n      <span class=\"hljs-keyword\">const</span> x = <span class=\"hljs-built_in\">this</span>.projection()(path.coordinates)[<span class=\"hljs-number\">0</span>];\n      <span class=\"hljs-keyword\">const</span> y = <span class=\"hljs-built_in\">this</span>.projection()(path.coordinates)[<span class=\"hljs-number\">1</span>];\n      canvasCtx.lineTo(x, y);\n    });\n    canvasCtx.lineWidth = <span class=\"hljs-number\">2</span>;\n    canvasCtx.strokeStyle = <span class=\"hljs-string\">'rgba(17, 229, 13,0.7)'</span>;\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">updateLine</span>(<span class=\"hljs-params\">canvasCtx, canvasTyphoonMarkerCtx, typhoonPath, length, marker, typhoonId</span>)</span> {\n    <span class=\"hljs-comment\">// define the line</span>\n    <span class=\"hljs-built_in\">this</span>.defineLine(canvasCtx, typhoonPath, marker, typhoonId);\n    <span class=\"hljs-built_in\">this</span>.progress[typhoonId] = <span class=\"hljs-built_in\">this</span>.progress[typhoonId] || <span class=\"hljs-number\">0</span>;\n    <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-built_in\">this</span>.progress[typhoonId] &lt; length) {\n      <span class=\"hljs-built_in\">this</span>.progress[typhoonId] += <span class=\"hljs-built_in\">this</span>.speed;\n      <span class=\"hljs-built_in\">this</span>.moveDash(canvasCtx, canvasTyphoonMarkerCtx, typhoonId, typhoonPath, length, marker, <span class=\"hljs-built_in\">this</span>.progress[typhoonId], <span class=\"hljs-built_in\">this</span>.dir);\n      requestAnimationFrame(<span class=\"hljs-built_in\">this</span>.updateLine.bind(<span class=\"hljs-built_in\">this</span>, canvasCtx, canvasTyphoonMarkerCtx, typhoonPath, length, marker, typhoonId));\n    } <span class=\"hljs-keyword\">else</span> {\n    \n      canvasCtx.clearRect(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1000</span>, <span class=\"hljs-number\">600</span>);\n      <span class=\"hljs-built_in\">this</span>.progress[typhoonId] = <span class=\"hljs-number\">0</span>;\n      <span class=\"hljs-built_in\">this</span>.renderedPath = {};\n      <span class=\"hljs-built_in\">setTimeout</span>(<span class=\"hljs-function\">() =&gt;</span> requestAnimationFrame(<span class=\"hljs-built_in\">this</span>.updateLine.bind(<span class=\"hljs-built_in\">this</span>, canvasCtx, canvasTyphoonMarkerCtx, typhoonPath, <span class=\"hljs-number\">500</span>, marker, typhoonId)), <span class=\"hljs-number\">1000</span>);\n    }\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">renderMap</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">const</span> self = <span class=\"hljs-built_in\">this</span>;\n    <span class=\"hljs-keyword\"></span><span class=\"hljs-keyword\">const</span> canvasNode = firSelect(<span class=\"hljs-string\">'#mapCanvas'</span>).node();\n    <span class=\"hljs-keyword\">const</span> context = canvasNode.getContext(<span class=\"hljs-string\">'2d'</span>);\n    <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">const</span> path = geoPath().context(context);</div>\n    context.beginPath();\n    path.projection(<span class=\"hljs-built_in\">this</span>.projection());\n    <span class=\"hljs-built_in\">this</span>.state.worlddata.features.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">d, i</span>) =&gt;</span> {\n      context.fillStyle = <span class=\"hljs-string\">`rgba(38,50,56,<span class=\"hljs-subst\">${<span class=\"hljs-number\">1</span> / <span class=\"hljs-built_in\">this</span>.state.worlddata.features.length * i}</span>)`</span>\n      context.beginPath();\n      path(d);\n      context.fill();\n    });\n\n    <span class=\"hljs-comment\">// add graticules path</span>\n    context.beginPath();\n    path.projection(<span class=\"hljs-built_in\">this</span>.projection());\n    path(<span class=\"hljs-built_in\">this</span>.state.graticule);\n    context.fillStyle = <span class=\"hljs-string\">'none'</span>;\n    context.strokeStyle = <span class=\"hljs-string\">'#79A09E'</span>;\n    context.stroke();\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">renderLine</span>(<span class=\"hljs-params\">canvasCtx, canvasTyphoonMarker, typhoonPath, marker, typhoonId</span>)</span> {\n    <span class=\"hljs-keyword\">const</span> pathCoordinates = [];\n    typhoonPath.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">path</span>) =&gt;</span> {\n      pathCoordinates.push({\n        <span class=\"hljs-attr\">x</span>: <span class=\"hljs-built_in\">this</span>.projection()(path.coordinates)[<span class=\"hljs-number\">0</span>],\n        <span class=\"hljs-attr\">y</span>: <span class=\"hljs-built_in\">this</span>.projection()(path.coordinates)[<span class=\"hljs-number\">1</span>],\n      });\n    });\n    <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">const</span> lineFunction = firLine()\n      .x(<span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> d.x)\n      .y(<span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> d.y)\n      .curve(curveCatmullRom);</div>\n    <span class=\"hljs-comment\">// use svg path to get length</span>\n    <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_2\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">const</span> invisiblePath = firSelect(<span class=\"hljs-string\">'svg'</span>)\n      .append(<span class=\"hljs-string\">'g'</span>)\n      .append(<span class=\"hljs-string\">'path'</span>)\n      .attr(<span class=\"hljs-string\">'d'</span>, lineFunction(pathCoordinates))\n      .attr(<span class=\"hljs-string\">'fill'</span>, <span class=\"hljs-string\">'none'</span>)\n      .attr(<span class=\"hljs-string\">'stroke'</span>, <span class=\"hljs-string\">'none'</span>)\n      .attr(<span class=\"hljs-string\">'class'</span>, <span class=\"hljs-string\">'invisiblePath'</span>);</div>\n    <span class=\"hljs-built_in\">this</span>.invisibleSVGPath[typhoonId] = invisiblePath.node();\n    <span class=\"hljs-keyword\">const</span> length = <span class=\"hljs-built_in\">this</span>.invisibleSVGPath[typhoonId].getTotalLength();\n    <span class=\"hljs-comment\">// this clears itself once the line is drawn</span>\n    <span class=\"hljs-built_in\"></span><span class=\"hljs-built_in\">this</span>.radius[typhoonId] = <span class=\"hljs-built_in\">this</span>.distanceCalculate(marker.coordinates[<span class=\"hljs-number\">0</span>], marker.coordinates, marker.radius);\n    <span class=\"hljs-built_in\">this</span>.lineInterval[typhoonId] = requestAnimationFrame(<span class=\"hljs-built_in\">this</span>.updateLine.bind(<span class=\"hljs-built_in\">this</span>, canvasCtx, canvasTyphoonMarker, typhoonPath, length, marker, typhoonId));\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">svg</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">svg</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">canvas</span>\n          <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"mapCanvas\"</span>\n          <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">\"1000\"</span>\n          <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">\"600\"</span>\n          <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span>\n            <span class=\"hljs-attr\">position:</span> '<span class=\"hljs-attr\">absolute</span>',\n            <span class=\"hljs-attr\">margin:</span> '<span class=\"hljs-attr\">0</span> <span class=\"hljs-attr\">auto</span>',\n            <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">0</span>,\n            <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">0</span>,\n            <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">0</span>,\n            <span class=\"hljs-attr\">backgroundColor:</span> '#<span class=\"hljs-attr\">0c6d97</span>'\n          }}\n        &gt;</span>\n          Please update your browser\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">canvas</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n    )\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> WorldMap;\n\n\nReactDOM.render(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">WorldMap</span> /&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">'root'</span>));\n#https:<span class=\"hljs-comment\">//codesandbox.io/s/0xoy5yn4rp?file=/index.js:0-9817</span></code></pre></div>",
    "sec_8.js": "<div class=\"codeBlock hljs javascript\" id=\"sec_8\"><pre id=\"sec_8_code\" ><code class=\"json\"><span class=\"hljs-keyword\">var</span> canvas = <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"canvas\"</span>);\n\n<span class=\"hljs-comment\">// Apply multiply blend when drawing datasets</span>\n<span class=\"hljs-keyword\">var</span> multiply = {\n  <span class=\"hljs-attr\">beforeDatasetsDraw</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">chart, options, el</span>) </span>{\n    chart.ctx.globalCompositeOperation = <span class=\"hljs-string\">'multiply'</span>;\n  },\n  <span class=\"hljs-attr\">afterDatasetsDraw</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">chart, options</span>) </span>{\n    chart.ctx.globalCompositeOperation = <span class=\"hljs-string\">'source-over'</span>;\n  },\n};\n\n<span class=\"hljs-comment\">// Gradient color - this week</span>\n<span class=\"hljs-keyword\">var</span> gradientThisWeek = canvas.getContext(<span class=\"hljs-string\">'2d'</span>).createLinearGradient(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">150</span>);\ngradientThisWeek.addColorStop(<span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">'#5555FF'</span>);\ngradientThisWeek.addColorStop(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'#9787FF'</span>);\n\n<span class=\"hljs-comment\">// Gradient color - previous week</span>\n<span class=\"hljs-keyword\">var</span> gradientPrevWeek = canvas.getContext(<span class=\"hljs-string\">'2d'</span>).createLinearGradient(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">150</span>);\ngradientPrevWeek.addColorStop(<span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">'#FF55B8'</span>);\ngradientPrevWeek.addColorStop(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'#FF8787'</span>);\n\n<span class=\"hljs-keyword\">var</span> config = {\n    <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">'line'</span>,</div>\n    <span class=\"hljs-attr\">data</span>: {\n        <span class=\"hljs-attr\">labels</span>: [<span class=\"hljs-string\">\"SUN\"</span>, <span class=\"hljs-string\">\"MON\"</span>, <span class=\"hljs-string\">\"TUE\"</span>, <span class=\"hljs-string\">\"WED\"</span>, <span class=\"hljs-string\">\"THU\"</span>, <span class=\"hljs-string\">\"FRI\"</span>, <span class=\"hljs-string\">\"SAT\"</span>, <span class=\"hljs-string\">\"SUN\"</span>, <span class=\"hljs-string\">\"MON\"</span>],\n        <span class=\"hljs-attr\">datasets</span>: [\n          {\n              <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'Temperature'</span>,\n              <span class=\"hljs-attr\">data</span>: [<span class=\"hljs-number\">18</span>, <span class=\"hljs-number\">26</span>, <span class=\"hljs-number\">14</span>, <span class=\"hljs-number\">22</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">18</span>, <span class=\"hljs-number\">10</span>],\n              <span class=\"hljs-attr\">fill</span>: <span class=\"hljs-literal\">false</span>,\n              <span class=\"hljs-attr\">borderColor</span>: <span class=\"hljs-string\">'rgba(255, 255, 255, 0.2)'</span>,\n              <span class=\"hljs-attr\">borderWidth</span>: <span class=\"hljs-number\">2</span>,\n              <span class=\"hljs-attr\">pointBackgroundColor</span>: <span class=\"hljs-string\">'transparent'</span>,\n              <span class=\"hljs-attr\">pointBorderColor</span>: <span class=\"hljs-string\">'#FFFFFF'</span>,\n              <span class=\"hljs-attr\">pointBorderWidth</span>: <span class=\"hljs-number\">3</span>,\n              <span class=\"hljs-attr\">pointHoverBorderColor</span>: <span class=\"hljs-string\">'rgba(255, 255, 255, 0.2)'</span>,\n              <span class=\"hljs-attr\">pointHoverBorderWidth</span>: <span class=\"hljs-number\">10</span>,\n              <span class=\"hljs-attr\">lineTension</span>: <span class=\"hljs-number\">0</span>,\n          }\n        ]\n    },\n    <span class=\"hljs-attr\">options</span>: {\n    \t<span class=\"hljs-attr\">responsive</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">elements</span>: { \n        <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">point</span>: {\n          <span class=\"hljs-attr\">radius</span>: <span class=\"hljs-number\">6</span>,\n          <span class=\"hljs-attr\">hitRadius</span>: <span class=\"hljs-number\">6</span>, \n          <span class=\"hljs-attr\">hoverRadius</span>: <span class=\"hljs-number\">6</span> \n        }</div> \n      },\n      <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\"><span class=\"hljs-attr\">legend</span>: {\n        <span class=\"hljs-attr\">display</span>: <span class=\"hljs-literal\">false</span>,\n      },</div>\n      <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\"><span class=\"hljs-attr\">tooltips</span>: {\n      \t<span class=\"hljs-attr\">backgroundColor</span>: <span class=\"hljs-string\">'transparent'</span>,\n        <span class=\"hljs-attr\">displayColors</span>: <span class=\"hljs-literal\">false</span>,\n        <span class=\"hljs-attr\">bodyFontSize</span>: <span class=\"hljs-number\">14</span>,\n        <span class=\"hljs-attr\">callbacks</span>: {\n          <span class=\"hljs-attr\">label</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">tooltipItems, data</span>) </span>{ \n            <span class=\"hljs-keyword\">return</span> tooltipItems.yLabel + <span class=\"hljs-string\">'°C'</span>;\n          }\n        }\n      },</div>\n     <div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"> <span class=\"hljs-attr\">scales</span>: {\n        <span class=\"hljs-attr\">xAxes</span>: [{\n          <span class=\"hljs-attr\">display</span>: <span class=\"hljs-literal\">false</span>,\n        }],\n        <span class=\"hljs-attr\">yAxes</span>: [{\n          <span class=\"hljs-attr\">display</span>: <span class=\"hljs-literal\">false</span>,\n          <span class=\"hljs-attr\">ticks</span>: {\n            <span class=\"hljs-attr\">beginAtZero</span>: <span class=\"hljs-literal\">true</span>,\n          },\n        }]\n      }\n    },</div>\n    <span class=\"hljs-attr\">plugins</span>: [multiply],\n};\n\n<span class=\"hljs-built_in\">window</span>.chart = <span class=\"hljs-keyword\">new</span> Chart(canvas, config);</code></pre></div>",
    "sec_14.js": "<div class=\"codeBlock hljs yaml\" id=\"sec_14\"><pre id=\"sec_14_code\" ><code class=\"json\"><span class=\"hljs-string\">//</span> <span class=\"hljs-string\">============================================</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">As</span> <span class=\"hljs-string\">of</span> <span class=\"hljs-string\">Chart.js</span> <span class=\"hljs-string\">v2.5.0</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">http://www.chartjs.org/docs</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">============================================</span>\n\n<span class=\"hljs-string\">var</span> <span class=\"hljs-string\">chart</span>    <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">document.getElementById('chart').getContext('2d'),</span>\n    <span class=\"hljs-string\">gradient</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">chart.createLinearGradient(0,</span> <span class=\"hljs-number\">0</span><span class=\"hljs-string\">,</span> <span class=\"hljs-number\">0</span><span class=\"hljs-string\">,</span> <span class=\"hljs-number\">450</span><span class=\"hljs-string\">);</span>\n\n<span class=\"hljs-string\">gradient.addColorStop(0,</span> <span class=\"hljs-string\">'rgba(255, 0,0, 0.5)'</span><span class=\"hljs-string\">);</span>\n<span class=\"hljs-string\">gradient.addColorStop(0.5,</span> <span class=\"hljs-string\">'rgba(255, 0, 0, 0.25)'</span><span class=\"hljs-string\">);</span>\n<span class=\"hljs-string\">gradient.addColorStop(1,</span> <span class=\"hljs-string\">'rgba(255, 0, 0, 0)'</span><span class=\"hljs-string\">);</span>\n\n\n<span class=\"hljs-string\">var</span> <span class=\"hljs-string\">data</span>  <span class=\"hljs-string\">=</span> {\n    <span class=\"hljs-attr\">labels:</span> [ <span class=\"hljs-string\">'January'</span>, <span class=\"hljs-string\">'February'</span>, <span class=\"hljs-string\">'March'</span>, <span class=\"hljs-string\">'April'</span>, <span class=\"hljs-string\">'May'</span>, <span class=\"hljs-string\">'June'</span> ],\n    <span class=\"hljs-attr\">datasets:</span> [{\n\t\t\t<span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">'Custom Label Name'</span>,\n\t\t\t<span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">gradient</span>,\n\t\t\t<span class=\"hljs-attr\">pointBackgroundColor:</span> <span class=\"hljs-string\">'white'</span>,\n\t\t\t<span class=\"hljs-attr\">borderWidth:</span> <span class=\"hljs-number\">1</span>,\n\t\t\t<span class=\"hljs-attr\">borderColor:</span> <span class=\"hljs-string\">'#911215'</span>,\n\t\t\t<span class=\"hljs-attr\">data:</span> [<span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">55</span>, <span class=\"hljs-number\">80</span>, <span class=\"hljs-number\">81</span>, <span class=\"hljs-number\">54</span>, <span class=\"hljs-number\">50</span>]\n    }]\n}<span class=\"hljs-string\">;</span>\n\n\n<span class=\"hljs-string\">var</span> <span class=\"hljs-string\">options</span> <span class=\"hljs-string\">=</span> {\n\t<span class=\"hljs-attr\">responsive:</span> <span class=\"hljs-literal\">true</span>,\n\t<span class=\"hljs-attr\">maintainAspectRatio:</span> <span class=\"hljs-literal\">true</span>,\n\t<span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Animations_0\" class=\"highlights fea_Animations\"><span class=\"hljs-attr\">animation:</span> {\n\t\t<span class=\"hljs-attr\">easing:</span> <span class=\"hljs-string\">'easeInOutQuad'</span>,\n\t\t<span class=\"hljs-attr\">duration:</span> <span class=\"hljs-number\">520</span>\n\t},</div>\n\t<span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-attr\">scales:</span> {\n\t\t<span class=\"hljs-attr\">xAxes:</span> [{\n\t\t\t<span class=\"hljs-attr\">gridLines:</span> {\n\t\t\t\t<span class=\"hljs-attr\">color:</span> <span class=\"hljs-string\">'rgba(200, 200, 200, 0.05)'</span>,\n\t\t\t\t<span class=\"hljs-attr\">lineWidth:</span> <span class=\"hljs-number\">1</span>\n\t\t\t}\n\t\t}],\n\t\t<span class=\"hljs-attr\">yAxes:</span> [{\n\t\t\t<span class=\"hljs-attr\">gridLines:</span> {\n\t\t\t\t<span class=\"hljs-attr\">color:</span> <span class=\"hljs-string\">'rgba(200, 200, 200, 0.08)'</span>,\n\t\t\t\t<span class=\"hljs-attr\">lineWidth:</span> <span class=\"hljs-number\">1</span>\n\t\t\t}\n\t\t}]\n\t},</div>\n\t<span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">elements:</span> {\n\t\t<span class=\"hljs-attr\">line:</span> {\n\t\t\t<span class=\"hljs-attr\">tension:</span> <span class=\"hljs-number\">0.4</span>\n\t\t}\n\t}</div>,\n\t<span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\"><span class=\"hljs-attr\">legend:</span> {\n\t\t<span class=\"hljs-attr\">display:</span> <span class=\"hljs-literal\">false</span>\n\t},</div>\n\t<span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-attr\">point:</span> {\n\t\t<span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">'white'</span>\n\t},</div>\n\t<span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\"><span class=\"hljs-attr\">tooltips:</span> {\n\t\t<span class=\"hljs-attr\">titleFontFamily:</span> <span class=\"hljs-string\">'Open Sans'</span>,\n\t\t<span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">'rgba(0,0,0,0.3)'</span>,\n\t\t<span class=\"hljs-attr\">titleFontColor:</span> <span class=\"hljs-string\">'red'</span>,\n\t\t<span class=\"hljs-attr\">caretSize:</span> <span class=\"hljs-number\">5</span>,\n\t\t<span class=\"hljs-attr\">cornerRadius:</span> <span class=\"hljs-number\">2</span>,\n\t\t<span class=\"hljs-attr\">xPadding:</span> <span class=\"hljs-number\">10</span>,\n\t\t<span class=\"hljs-attr\">yPadding:</span> <span class=\"hljs-number\">10</span>\n\t}</div>\n}<span class=\"hljs-string\">;</span>\n\n\n<span class=\"hljs-string\">var</span> <span class=\"hljs-string\">chartInstance</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">new</span> <span class=\"hljs-string\">Chart(chart,</span> {\n    <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">'line'</span>,\n    <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">data</span>,\n\t\t<span class=\"hljs-attr\">options:</span> <span class=\"hljs-string\">options</span>\n}<span class=\"hljs-string\">);</span></code></pre></div>",
    "sec_17.js": "<div class=\"codeBlock hljs javascript\" id=\"sec_17\"><pre id=\"sec_17_code\" ><code class=\"json\"><span class=\"hljs-comment\">// &lt;block:setup:3&gt;</span>\n<span class=\"hljs-keyword\">const</span> DATA_COUNT = <span class=\"hljs-number\">5</span>;\nUtils.srand(<span class=\"hljs-number\">110</span>);\n\n<span class=\"hljs-keyword\">const</span> chartColors = Utils.CHART_COLORS;\n<span class=\"hljs-keyword\">const</span> colors = [chartColors.red, chartColors.orange, chartColors.yellow, chartColors.green, chartColors.blue];\n\n<span class=\"hljs-keyword\">const</span> cache = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Map</span>();\n<span class=\"hljs-keyword\">let</span> width = <span class=\"hljs-literal\">null</span>;\n<span class=\"hljs-keyword\">let</span> height = <span class=\"hljs-literal\">null</span>;\n\n<span class=\"hljs-keyword\">const</span> actions = [\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Randomize'</span>,\n    <span class=\"hljs-function\"><span class=\"hljs-title\">handler</span>(<span class=\"hljs-params\">chart</span>)</span> {\n      chart.data.datasets.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">dataset</span> =&gt;</span> {\n        dataset.data = generateData();\n      });\n      chart.update();\n    }\n  },\n];\n<span class=\"hljs-comment\">// &lt;/block:setup&gt;</span>\n\n<span class=\"hljs-comment\">// &lt;block:createRadialGradient3:0&gt;</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">createRadialGradient3</span>(<span class=\"hljs-params\">context, c1, c2, c3</span>) </span>{\n  <span class=\"hljs-keyword\">const</span> chartArea = context.chart.chartArea;\n  <span class=\"hljs-keyword\">if</span> (!chartArea) {\n    <span class=\"hljs-comment\">// This case happens on initial chart load</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;\n  }\n\n  <span class=\"hljs-keyword\">const</span> chartWidth = chartArea.right - chartArea.left;\n  <span class=\"hljs-keyword\">const</span> chartHeight = chartArea.bottom - chartArea.top;\n  <span class=\"hljs-keyword\">if</span> (width !== chartWidth || height !== chartHeight) {\n    cache.clear();\n  }\n  <span class=\"hljs-keyword\">var</span> gradient = cache.get(c1 + c2 + c3);\n  <span class=\"hljs-keyword\">if</span> (!gradient) {\n    <span class=\"hljs-comment\">// Create the gradient because this is either the first render</span>\n    <span class=\"hljs-comment\">// or the size of the chart has changed</span>\n    <div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\">width = chartWidth;\n    height = chartHeight;</div>\n    <span class=\"hljs-keyword\">const</span> centerX = (chartArea.left + chartArea.right) / <span class=\"hljs-number\">2</span>;\n    <span class=\"hljs-keyword\">const</span> centerY = (chartArea.top + chartArea.bottom) / <span class=\"hljs-number\">2</span>;\n    <span class=\"hljs-keyword\">const</span> r = <span class=\"hljs-built_in\">Math</span>.min(\n      (chartArea.right - chartArea.left) / <span class=\"hljs-number\">2</span>,\n      (chartArea.bottom - chartArea.top) / <span class=\"hljs-number\">2</span>\n    );\n    <span class=\"hljs-keyword\">var</span> ctx = context.chart.ctx;\n    gradient = ctx.createRadialGradient(centerX, centerY, <span class=\"hljs-number\">0</span>, centerX, centerY, r);\n    gradient.addColorStop(<span class=\"hljs-number\">0</span>, c1);\n    gradient.addColorStop(<span class=\"hljs-number\">0.5</span>, c2);\n    gradient.addColorStop(<span class=\"hljs-number\">1</span>, c3);\n    cache.set(c1 + c2 + c3, gradient);\n  }\n\n  <span class=\"hljs-keyword\">return</span> gradient;\n}\n<span class=\"hljs-comment\">// &lt;/block:createRadialGradient3&gt;</span>\n\n<span class=\"hljs-comment\">// &lt;block:data:2&gt;</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">generateData</span>(<span class=\"hljs-params\"></span>) </span>{\n  <span class=\"hljs-keyword\">return</span> Utils.numbers({\n    <span class=\"hljs-attr\">count</span>: DATA_COUNT,\n    <span class=\"hljs-attr\">min</span>: <span class=\"hljs-number\">0</span>,\n    <span class=\"hljs-attr\">max</span>: <span class=\"hljs-number\">100</span>\n  });\n}\n\n<span class=\"hljs-keyword\">const</span> data = {\n  <span class=\"hljs-attr\">labels</span>: Utils.months({<span class=\"hljs-attr\">count</span>: DATA_COUNT}),\n  <span class=\"hljs-attr\">datasets</span>: [{\n    <span class=\"hljs-attr\">data</span>: generateData()\n  }]\n};\n<span class=\"hljs-comment\">// &lt;/block:data&gt;</span>\n\n<span class=\"hljs-comment\">// &lt;block:config:1&gt;</span>\n<span class=\"hljs-keyword\">const</span> config = {\n  <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">'polarArea'</span>,</div>\n  <span class=\"hljs-attr\">data</span>: data,\n  <span class=\"hljs-attr\">options</span>: {\n    <span class=\"hljs-attr\">plugins</span>: {\n      <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\"><span class=\"hljs-attr\">legend</span>: <span class=\"hljs-literal\">false</span>,</div>\n      <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\"><span class=\"hljs-attr\">tooltip</span>: <span class=\"hljs-literal\">false</span>,</div>\n    },\n    <span class=\"hljs-attr\">elements</span>: {\n      <span class=\"hljs-attr\">arc</span>: {\n        <span class=\"hljs-attr\">backgroundColor</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">context</span>) </span>{\n          <span class=\"hljs-keyword\">let</span> c = colors[context.dataIndex];\n          <span class=\"hljs-keyword\">if</span> (!c) {\n            <span class=\"hljs-keyword\">return</span>;\n          }\n          <span class=\"hljs-keyword\">if</span> (context.active) {\n            c = helpers.getHoverColor(c);\n          }\n          <span class=\"hljs-keyword\">const</span> mid = helpers.color(c).desaturate(<span class=\"hljs-number\">0.2</span>).darken(<span class=\"hljs-number\">0.2</span>).rgbString();\n          <span class=\"hljs-keyword\">const</span> start = helpers.color(c).lighten(<span class=\"hljs-number\">0.2</span>).rotate(<span class=\"hljs-number\">270</span>).rgbString();\n          <span class=\"hljs-keyword\">const</span> end = helpers.color(c).lighten(<span class=\"hljs-number\">0.1</span>).rgbString();\n          <span class=\"hljs-keyword\">return</span> createRadialGradient3(context, start, mid, end);\n        },\n      }\n    }\n  }\n};\n<span class=\"hljs-comment\">// &lt;/block:config&gt;</span>\n\n<span class=\"hljs-built_in\">module</span>.exports = {\n  actions,\n  config,\n};\n<span class=\"hljs-comment\">//https://www.chartjs.org/docs/latest/samples/advanced/radial-gradient.html</span></code></pre></div>",
    "sec_18.js": "<div class=\"codeBlock hljs javascript\" id=\"sec_18\"><pre id=\"sec_18_code\" ><code class=\"json\">\n<span class=\"hljs-comment\">// &lt;block:data:2&gt;</span>\n<span class=\"hljs-keyword\">const</span> data = [];\n<span class=\"hljs-keyword\">const</span> data2 = [];\n<span class=\"hljs-keyword\">let</span> prev = <span class=\"hljs-number\">100</span>;\n<span class=\"hljs-keyword\">let</span> prev2 = <span class=\"hljs-number\">80</span>;\n<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {\n  prev += <span class=\"hljs-number\">5</span> - <span class=\"hljs-built_in\">Math</span>.random() * <span class=\"hljs-number\">10</span>;\n  data.push({<span class=\"hljs-attr\">x</span>: i, <span class=\"hljs-attr\">y</span>: prev});\n  prev2 += <span class=\"hljs-number\">5</span> - <span class=\"hljs-built_in\">Math</span>.random() * <span class=\"hljs-number\">10</span>;\n  data2.push({<span class=\"hljs-attr\">x</span>: i, <span class=\"hljs-attr\">y</span>: prev2});\n}\n<span class=\"hljs-comment\">// &lt;/block:data&gt;</span>\n\n<span class=\"hljs-comment\">// &lt;block:animation:1&gt;</span>\n<span class=\"hljs-keyword\">const</span> totalDuration = <span class=\"hljs-number\">10000</span>;\n<span class=\"hljs-keyword\">const</span> delayBetweenPoints = totalDuration / data.length;\n<span class=\"hljs-keyword\">const</span> previousY = <span class=\"hljs-function\">(<span class=\"hljs-params\">ctx</span>) =&gt;</span> ctx.index === <span class=\"hljs-number\">0</span> ? ctx.chart.scales.y.getPixelForValue(<span class=\"hljs-number\">100</span>) : ctx.chart.getDatasetMeta(ctx.datasetIndex).data[ctx.index - <span class=\"hljs-number\">1</span>].getProps([<span class=\"hljs-string\">'y'</span>], <span class=\"hljs-literal\">true</span>).y;\n<span class=\"hljs-keyword\">const</span> animation = {\n  <span class=\"hljs-attr\">x</span>: {\n    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">'number'</span>,\n    <span class=\"hljs-attr\">easing</span>: <span class=\"hljs-string\">'linear'</span>,\n    <span class=\"hljs-attr\">duration</span>: delayBetweenPoints,\n    <span class=\"hljs-attr\">from</span>: <span class=\"hljs-literal\">NaN</span>, <span class=\"hljs-comment\">// the point is initially skipped</span>\n    <span class=\"hljs-function\"><span class=\"hljs-title\">delay</span>(<span class=\"hljs-params\">ctx</span>)</span> {\n      <span class=\"hljs-keyword\">if</span> (ctx.type !== <span class=\"hljs-string\">'data'</span> || ctx.xStarted) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n      }\n      ctx.xStarted = <span class=\"hljs-literal\">true</span>;\n      <span class=\"hljs-keyword\">return</span> ctx.index * delayBetweenPoints;\n    }\n  },\n  <span class=\"hljs-attr\">y</span>: {\n    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">'number'</span>,\n    <span class=\"hljs-attr\">easing</span>: <span class=\"hljs-string\">'linear'</span>,\n    <span class=\"hljs-attr\">duration</span>: delayBetweenPoints,\n    <span class=\"hljs-attr\">from</span>: previousY,\n    <span class=\"hljs-function\"><span class=\"hljs-title\">delay</span>(<span class=\"hljs-params\">ctx</span>)</span> {\n      <span class=\"hljs-keyword\">if</span> (ctx.type !== <span class=\"hljs-string\">'data'</span> || ctx.yStarted) {\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n      }\n      ctx.yStarted = <span class=\"hljs-literal\">true</span>;\n      <span class=\"hljs-keyword\">return</span> ctx.index * delayBetweenPoints;\n    }\n  }\n};\n<span class=\"hljs-comment\">// &lt;/block:animation&gt;</span>\n\n<span class=\"hljs-comment\">// &lt;block:config:0&gt;</span>\n<span class=\"hljs-keyword\">const</span> config = {\n  <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">'line'</span>,</div>\n  <span class=\"hljs-attr\">data</span>: {\n    <span class=\"hljs-attr\">datasets</span>: [{\n      <span class=\"hljs-attr\">borderColor</span>: Utils.CHART_COLORS.red,\n      <span class=\"hljs-attr\">borderWidth</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">radius</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">data</span>: data,\n    },\n    {\n      <span class=\"hljs-attr\">borderColor</span>: Utils.CHART_COLORS.blue,\n      <span class=\"hljs-attr\">borderWidth</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">radius</span>: <span class=\"hljs-number\">0</span>,\n      <span class=\"hljs-attr\">data</span>: data2,\n    }]\n  },\n  <span class=\"hljs-attr\">options</span>: {\n    <div style=\"display: inline;\" id=\"Animations_0\" class=\"highlights fea_Animations\">animation</div>,\n    <span class=\"hljs-attr\">interaction</span>: {\n      <span class=\"hljs-attr\">intersect</span>: <span class=\"hljs-literal\">false</span>\n    },\n    <span class=\"hljs-attr\">plugins</span>: {\n      <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\"><span class=\"hljs-attr\">legend</span>: <span class=\"hljs-literal\">false</span></div><span class=\"hljs-literal\"></span>\n    },\n    <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-attr\">scales</span>: {\n      <span class=\"hljs-attr\">x</span>: {\n        <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">'linear'</span>\n      }\n    }</div>\n  }\n};\n<span class=\"hljs-comment\">// &lt;/block:config&gt;</span>\n\n<span class=\"hljs-built_in\">module</span>.exports = {\n  config\n};\n\n<span class=\"hljs-comment\">//https://www.chartjs.org/docs/latest/samples/animations/progressive-line.html</span></code></pre></div>",
    "sec_21.js": "<div class=\"codeBlock hljs javascript\" id=\"sec_21\"><pre id=\"sec_21_code\" ><code class=\"json\"><span class=\"hljs-comment\">// &lt;block:setup:2&gt;</span>\n<span class=\"hljs-keyword\">const</span> DATA_COUNT = <span class=\"hljs-number\">16</span>;\n<span class=\"hljs-keyword\">const</span> MIN_XY = -<span class=\"hljs-number\">150</span>;\n<span class=\"hljs-keyword\">const</span> MAX_XY = <span class=\"hljs-number\">100</span>;\nUtils.srand(<span class=\"hljs-number\">110</span>);\n\n<span class=\"hljs-keyword\">const</span> actions = [\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Randomize'</span>,\n    <span class=\"hljs-function\"><span class=\"hljs-title\">handler</span>(<span class=\"hljs-params\">chart</span>)</span> {\n      chart.data.datasets.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">dataset</span> =&gt;</span> {\n        dataset.data = generateData();\n      });\n      chart.update();\n    }\n  },\n];\n<span class=\"hljs-comment\">// &lt;/block:setup&gt;</span>\n\n<span class=\"hljs-comment\">// &lt;block:data:1&gt;</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">generateData</span>(<span class=\"hljs-params\"></span>) </span>{\n  <span class=\"hljs-keyword\">var</span> data = [];\n  <span class=\"hljs-keyword\">var</span> i;\n\n  <span class=\"hljs-keyword\">for</span> (i = <span class=\"hljs-number\">0</span>; i &lt; DATA_COUNT; ++i) {\n    data.push({\n      <span class=\"hljs-attr\">x</span>: Utils.rand(MIN_XY, MAX_XY),\n      <span class=\"hljs-attr\">y</span>: Utils.rand(MIN_XY, MAX_XY),\n      <span class=\"hljs-attr\">v</span>: Utils.rand(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1000</span>)\n    });\n  }\n\n  <span class=\"hljs-keyword\">return</span> data;\n}\n\n<span class=\"hljs-keyword\">const</span> data = {\n  <span class=\"hljs-attr\">datasets</span>: [{\n    <span class=\"hljs-attr\">data</span>: generateData()\n  }, {\n    <span class=\"hljs-attr\">data</span>: generateData()\n  }]\n};\n<span class=\"hljs-comment\">// &lt;/block:data&gt;</span>\n\n<span class=\"hljs-comment\">// &lt;block:options:0&gt;</span>\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">channelValue</span>(<span class=\"hljs-params\">x, y, values</span>) </span>{\n  <span class=\"hljs-keyword\">return</span> x &lt; <span class=\"hljs-number\">0</span> &amp;&amp; y &lt; <span class=\"hljs-number\">0</span> ? values[<span class=\"hljs-number\">0</span>] : x &lt; <span class=\"hljs-number\">0</span> ? values[<span class=\"hljs-number\">1</span>] : y &lt; <span class=\"hljs-number\">0</span> ? values[<span class=\"hljs-number\">2</span>] : values[<span class=\"hljs-number\">3</span>];\n}\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">colorize</span>(<span class=\"hljs-params\">opaque, context</span>) </span>{\n  <span class=\"hljs-keyword\">var</span> value = context.raw;\n  <span class=\"hljs-keyword\">var</span> x = value.x / <span class=\"hljs-number\">100</span>;\n  <span class=\"hljs-keyword\">var</span> y = value.y / <span class=\"hljs-number\">100</span>;\n  <span class=\"hljs-keyword\">var</span> r = channelValue(x, y, [<span class=\"hljs-number\">250</span>, <span class=\"hljs-number\">150</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">0</span>]);\n  <span class=\"hljs-keyword\">var</span> g = channelValue(x, y, [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">150</span>, <span class=\"hljs-number\">250</span>]);\n  <span class=\"hljs-keyword\">var</span> b = channelValue(x, y, [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">150</span>, <span class=\"hljs-number\">150</span>, <span class=\"hljs-number\">250</span>]);\n  <span class=\"hljs-keyword\">var</span> a = opaque ? <span class=\"hljs-number\">1</span> : <span class=\"hljs-number\">0.5</span> * value.v / <span class=\"hljs-number\">1000</span>;\n\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'rgba('</span> + r + <span class=\"hljs-string\">','</span> + g + <span class=\"hljs-string\">','</span> + b + <span class=\"hljs-string\">','</span> + a + <span class=\"hljs-string\">')'</span>;\n}\n\n<span class=\"hljs-keyword\">const</span> config = {\n  <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">'bubble'</span>,</div>\n  <span class=\"hljs-attr\">data</span>: data,\n  <span class=\"hljs-attr\">options</span>: {\n    <span class=\"hljs-attr\">aspectRatio</span>: <span class=\"hljs-number\">1</span>,\n    <span class=\"hljs-attr\">plugins</span>: {\n      <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\"><span class=\"hljs-attr\">legend</span>: <span class=\"hljs-literal\">false</span>,</div>\n      <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\"><span class=\"hljs-attr\">tooltip</span>: <span class=\"hljs-literal\">false</span>,</div>\n    },\n    <span class=\"hljs-attr\">elements</span>: {\n      <span class=\"hljs-attr\">point</span>: {\n        <span class=\"hljs-attr\">backgroundColor</span>: colorize.bind(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-literal\">false</span>),\n\n        <span class=\"hljs-attr\">borderColor</span>: colorize.bind(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-literal\">true</span>),\n\n        <span class=\"hljs-attr\">borderWidth</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">context</span>) </span>{\n          <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Math</span>.min(<span class=\"hljs-built_in\">Math</span>.max(<span class=\"hljs-number\">1</span>, context.datasetIndex + <span class=\"hljs-number\">1</span>), <span class=\"hljs-number\">8</span>);\n        },\n\n        <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\"><span class=\"hljs-attr\">hoverBackgroundColor</span>: <span class=\"hljs-string\">'transparent'</span>,\n\n        <span class=\"hljs-attr\">hoverBorderColor</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">context</span>) </span>{\n          <span class=\"hljs-keyword\">return</span> Utils.color(context.datasetIndex);\n        },\n\n        <span class=\"hljs-attr\">hoverBorderWidth</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">context</span>) </span>{\n          <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Math</span>.round(<span class=\"hljs-number\">8</span> * context.raw.v / <span class=\"hljs-number\">1000</span>);\n        },</div>\n\n        <span class=\"hljs-attr\">radius</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">context</span>) </span>{\n          <span class=\"hljs-keyword\">var</span> size = context.chart.width;\n          <span class=\"hljs-keyword\">var</span> base = <span class=\"hljs-built_in\">Math</span>.abs(context.raw.v) / <span class=\"hljs-number\">1000</span>;\n          <span class=\"hljs-keyword\">return</span> (size / <span class=\"hljs-number\">24</span>) * base;\n        }\n      }\n    }\n  }\n};\n<span class=\"hljs-comment\">// &lt;/block:options&gt;</span>\n\n<span class=\"hljs-built_in\">module</span>.exports = {\n  actions,\n  config,\n};\n<span class=\"hljs-comment\">//https://www.chartjs.org/docs/latest/samples/scriptable/bubble.html</span></code></pre></div>",
    "sec_25.js": "<div class=\"codeBlock hljs javascript\" id=\"sec_25\"><pre id=\"sec_25_code\" ><code class=\"json\"><span class=\"hljs-comment\">// &lt;block:setup:1&gt;</span>\n<span class=\"hljs-keyword\">const</span> DATA_COUNT = <span class=\"hljs-number\">5</span>;\n<span class=\"hljs-keyword\">const</span> NUMBER_CFG = {<span class=\"hljs-attr\">count</span>: DATA_COUNT, <span class=\"hljs-attr\">min</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">max</span>: <span class=\"hljs-number\">100</span>};\n\n<span class=\"hljs-keyword\">const</span> labels = Utils.months({<span class=\"hljs-attr\">count</span>: <span class=\"hljs-number\">7</span>});\n<span class=\"hljs-keyword\">const</span> data = {\n  <span class=\"hljs-attr\">labels</span>: [<span class=\"hljs-string\">'Overall Yay'</span>, <span class=\"hljs-string\">'Overall Nay'</span>, <span class=\"hljs-string\">'Group A Yay'</span>, <span class=\"hljs-string\">'Group A Nay'</span>, <span class=\"hljs-string\">'Group B Yay'</span>, <span class=\"hljs-string\">'Group B Nay'</span>, <span class=\"hljs-string\">'Group C Yay'</span>, <span class=\"hljs-string\">'Group C Nay'</span>],\n  <span class=\"hljs-attr\">datasets</span>: [\n    {\n      <span class=\"hljs-attr\">backgroundColor</span>: [<span class=\"hljs-string\">'#AAA'</span>, <span class=\"hljs-string\">'#777'</span>],\n      <span class=\"hljs-attr\">data</span>: [<span class=\"hljs-number\">21</span>, <span class=\"hljs-number\">79</span>]\n    },\n    {\n      <span class=\"hljs-attr\">backgroundColor</span>: [<span class=\"hljs-string\">'hsl(0, 100%, 60%)'</span>, <span class=\"hljs-string\">'hsl(0, 100%, 35%)'</span>],\n      <span class=\"hljs-attr\">data</span>: [<span class=\"hljs-number\">33</span>, <span class=\"hljs-number\">67</span>]\n    },\n    {\n      <span class=\"hljs-attr\">backgroundColor</span>: [<span class=\"hljs-string\">'hsl(100, 100%, 60%)'</span>, <span class=\"hljs-string\">'hsl(100, 100%, 35%)'</span>],\n      <span class=\"hljs-attr\">data</span>: [<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">80</span>]\n    },\n    {\n      <span class=\"hljs-attr\">backgroundColor</span>: [<span class=\"hljs-string\">'hsl(180, 100%, 60%)'</span>, <span class=\"hljs-string\">'hsl(180, 100%, 35%)'</span>],\n      <span class=\"hljs-attr\">data</span>: [<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">90</span>]\n    }\n  ]\n};\n<span class=\"hljs-comment\">// &lt;/block:setup&gt;</span>\n\n<span class=\"hljs-comment\">// &lt;block:config:0&gt;</span>\n<span class=\"hljs-keyword\">const</span> config = {\n  <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">'pie'</span>,</div>\n  <span class=\"hljs-attr\">data</span>: data,\n  <span class=\"hljs-attr\">options</span>: {\n    <span class=\"hljs-attr\">responsive</span>: <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">plugins</span>: {\n      <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\"><span class=\"hljs-attr\">legend</span>:</div> {\n        <span class=\"hljs-attr\">labels</span>: {\n          <span class=\"hljs-attr\">generateLabels</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">chart</span>) </span>{\n            <span class=\"hljs-comment\">// Get the default label list</span>\n            <span class=\"hljs-keyword\">const</span> original = Chart.overrides.pie.plugins.legend.labels.generateLabels;\n            <span class=\"hljs-keyword\">const</span> labelsOriginal = original.call(<span class=\"hljs-built_in\">this</span>, chart);\n\n            <span class=\"hljs-comment\">// Build an array of colors used in the datasets of the chart</span>\n            <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Data_Grouping_0\" class=\"highlights fea_Data_Grouping\"><span class=\"hljs-keyword\">var</span> datasetColors = chart.data.datasets.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">e</span>) </span>{\n              <span class=\"hljs-keyword\">return</span> e.backgroundColor;\n            });</div>\n            datasetColors = datasetColors.flat();\n\n            <span class=\"hljs-comment\">// Modify the color and hide state of each label</span>\n            labelsOriginal.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">label</span> =&gt;</span> {\n              <span class=\"hljs-comment\">// There are twice as many labels as there are datasets. This converts the label index into the corresponding dataset index</span>\n              <div style=\"display: inline;\" id=\"Data_Transformation_0\" class=\"highlights fea_Data_Transformation\">label.datasetIndex = (label.index - label.index % <span class=\"hljs-number\">2</span>) / <span class=\"hljs-number\">2</span>;</div>\n\n              <span class=\"hljs-comment\">// The hidden state must match the dataset's hidden state</span>\n              label.hidden = !chart.isDatasetVisible(label.datasetIndex);\n\n              <span class=\"hljs-comment\">// Change the color to match the dataset</span>\n              label.fillStyle = datasetColors[label.index];\n            });\n\n            <span class=\"hljs-keyword\">return</span> labelsOriginal;\n          }\n        },\n        <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\"><span class=\"hljs-attr\">onClick</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">mouseEvent, legendItem, legend</span>) </span></div><span class=\"hljs-function\"></span>{\n          <span class=\"hljs-comment\">// toggle the visibility of the dataset from what it currently is</span>\n          legend.chart.getDatasetMeta(\n            legendItem.datasetIndex\n          ).hidden = legend.chart.isDatasetVisible(legendItem.datasetIndex);\n          legend.chart.update();\n        }\n      },\n      <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\"><span class=\"hljs-attr\">tooltip</span>: {\n        <span class=\"hljs-attr\">callbacks</span>: {\n          <span class=\"hljs-attr\">label</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">context</span>) </span>{\n            <span class=\"hljs-keyword\">const</span> labelIndex = (context.datasetIndex * <span class=\"hljs-number\">2</span>) + context.dataIndex;\n            <span class=\"hljs-keyword\">return</span> context.chart.data.labels[labelIndex] + <span class=\"hljs-string\">': '</span> + context.formattedValue;\n          }\n        }\n      }</div>\n    }\n  },\n};\n<span class=\"hljs-comment\">// &lt;/block:config&gt;</span>\n\n<span class=\"hljs-built_in\">module</span>.exports = {\n  <span class=\"hljs-attr\">config</span>: config,\n};\n<span class=\"hljs-comment\">//https://www.chartjs.org/docs/latest/samples/other-charts/multi-series-pie.html</span></code></pre></div>",
    "sec_26.js": "<div class=\"codeBlock hljs kotlin\" id=\"sec_26\"><pre id=\"sec_26_code\" ><code class=\"json\"><span class=\"hljs-comment\">// &lt;block:actions:2&gt;</span>\n<span class=\"hljs-keyword\">const</span> actions = [\n  {\n    name: <span class=\"hljs-string\">'Randomize'</span>,\n    handler(chart) {\n      chart.<span class=\"hljs-keyword\">data</span>.datasets.forEach(dataset =&gt; {\n        dataset.<span class=\"hljs-keyword\">data</span> = Utils.bubbles({count: chart.<span class=\"hljs-keyword\">data</span>.labels.length, rmin: <span class=\"hljs-number\">1</span>, rmax: <span class=\"hljs-number\">1</span>, min: <span class=\"hljs-number\">0</span>, max: <span class=\"hljs-number\">100</span>});\n      });\n      chart.update();\n    }\n  },\n  {\n    name: <span class=\"hljs-string\">'Add Dataset'</span>,\n    handler(chart) {\n      <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">data</span> = chart.<span class=\"hljs-keyword\">data</span>;\n      <span class=\"hljs-keyword\">const</span> dsColor = Utils.namedColor(chart.<span class=\"hljs-keyword\">data</span>.datasets.length);\n      <span class=\"hljs-keyword\">const</span> newDataset = {\n        label: <span class=\"hljs-string\">'Dataset '</span> + (<span class=\"hljs-keyword\">data</span>.datasets.length + <span class=\"hljs-number\">1</span>),\n        backgroundColor: Utils.transparentize(dsColor, <span class=\"hljs-number\">0.5</span>),\n        borderColor: dsColor,\n        <span class=\"hljs-keyword\">data</span>: Utils.bubbles({count: <span class=\"hljs-keyword\">data</span>.labels.length, rmin: <span class=\"hljs-number\">1</span>, rmax: <span class=\"hljs-number\">1</span>, min: <span class=\"hljs-number\">0</span>, max: <span class=\"hljs-number\">100</span>}),\n      };\n      chart.<span class=\"hljs-keyword\">data</span>.datasets.push(newDataset);\n      chart.update();\n    }\n  },\n  {\n    name: <span class=\"hljs-string\">'Add Data'</span>,\n    handler(chart) {\n      <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">data</span> = chart.<span class=\"hljs-keyword\">data</span>;\n      <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">data</span>.datasets.length &gt; <span class=\"hljs-number\">0</span>) {\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> index = <span class=\"hljs-number\">0</span>; index &lt; <span class=\"hljs-keyword\">data</span>.datasets.length; ++index) {\n          <span class=\"hljs-keyword\">data</span>.datasets[index].<span class=\"hljs-keyword\">data</span>.push(Utils.bubbles({count: <span class=\"hljs-number\">1</span>, rmin: <span class=\"hljs-number\">1</span>, rmax: <span class=\"hljs-number\">1</span>, min: <span class=\"hljs-number\">0</span>, max: <span class=\"hljs-number\">100</span>})[<span class=\"hljs-number\">0</span>]);\n        }\n\n        chart.update();\n      }\n    }\n  },\n  {\n    name: <span class=\"hljs-string\">'Remove Dataset'</span>,\n    handler(chart) {\n      chart.<span class=\"hljs-keyword\">data</span>.datasets.pop();\n      chart.update();\n    }\n  },\n  {\n    name: <span class=\"hljs-string\">'Remove Data'</span>,\n    handler(chart) {\n      chart.<span class=\"hljs-keyword\">data</span>.labels.splice(-<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>); <span class=\"hljs-comment\">// remove the label first</span>\n\n      chart.<span class=\"hljs-keyword\">data</span>.datasets.forEach(dataset =&gt; {\n        dataset.<span class=\"hljs-keyword\">data</span>.pop();\n      });\n\n      chart.update();\n    }\n  }\n];\n<span class=\"hljs-comment\">// &lt;/block:actions&gt;</span>\n\n<span class=\"hljs-comment\">// &lt;block:setup:1&gt;</span>\n<span class=\"hljs-keyword\">const</span> DATA_COUNT = <span class=\"hljs-number\">7</span>;\n<span class=\"hljs-keyword\">const</span> NUMBER_CFG = {count: DATA_COUNT, rmin: <span class=\"hljs-number\">1</span>, rmax: <span class=\"hljs-number\">1</span>, min: <span class=\"hljs-number\">0</span>, max: <span class=\"hljs-number\">100</span>};\n\n<span class=\"hljs-keyword\">const</span> labels = Utils.months({count: <span class=\"hljs-number\">7</span>});\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">data</span> = {\n  labels: labels,\n  datasets: [\n    {\n      label: <span class=\"hljs-string\">'Dataset 1'</span>,\n      <span class=\"hljs-keyword\">data</span>: Utils.bubbles(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.red,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, <span class=\"hljs-number\">0.5</span>),\n    },\n    {\n      label: <span class=\"hljs-string\">'Dataset 2'</span>,\n      <span class=\"hljs-keyword\">data</span>: Utils.bubbles(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.orange,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.orange, <span class=\"hljs-number\">0.5</span>),\n    }\n  ]\n};\n<span class=\"hljs-comment\">// &lt;/block:setup&gt;</span>\n\n<span class=\"hljs-comment\">// &lt;block:config:0&gt;</span>\n<span class=\"hljs-keyword\">const</span> config = {\n <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"> type: <span class=\"hljs-string\">'scatter'</span>,</div>\n  <span class=\"hljs-keyword\">data</span>: <span class=\"hljs-keyword\">data</span>,\n  options: {\n    responsive: <span class=\"hljs-literal\">true</span>,\n    plugins: {\n      <div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\">legend: {\n        position: <span class=\"hljs-string\">'top'</span>,\n      },</div>\n      <div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">title: {\n        display: <span class=\"hljs-literal\">true</span>,\n        text: <span class=\"hljs-string\">'Chart.js Scatter Chart'</span>\n      }</div>\n    }\n  },\n};\n<span class=\"hljs-comment\">// &lt;/block:config&gt;</span>\n\nmodule.exports = {\n  actions: actions,\n  config: config,\n};\n<span class=\"hljs-comment\">//https://www.chartjs.org/docs/latest/samples/other-charts/scatter.html</span></code></pre></div>",
    "sec_27.js": "<div class=\"codeBlock hljs kotlin\" id=\"sec_27\"><pre id=\"sec_27_code\" ><code class=\"json\"><span class=\"hljs-comment\">// &lt;block:actions:2&gt;</span>\n<span class=\"hljs-keyword\">const</span> actions = [\n  {\n    name: <span class=\"hljs-string\">'Randomize'</span>,\n    handler(chart) {\n      chart.<span class=\"hljs-keyword\">data</span>.datasets.forEach(dataset =&gt; {\n        dataset.<span class=\"hljs-keyword\">data</span> = Utils.bubbles({count: chart.<span class=\"hljs-keyword\">data</span>.labels.length, rmin: <span class=\"hljs-number\">5</span>, rmax: <span class=\"hljs-number\">15</span>, min: <span class=\"hljs-number\">0</span>, max: <span class=\"hljs-number\">100</span>});\n      });\n      chart.update();\n    }\n  },\n  {\n    name: <span class=\"hljs-string\">'Add Dataset'</span>,\n    handler(chart) {\n      <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">data</span> = chart.<span class=\"hljs-keyword\">data</span>;\n      <span class=\"hljs-keyword\">const</span> dsColor = Utils.namedColor(chart.<span class=\"hljs-keyword\">data</span>.datasets.length);\n      <span class=\"hljs-keyword\">const</span> newDataset = {\n        label: <span class=\"hljs-string\">'Dataset '</span> + (<span class=\"hljs-keyword\">data</span>.datasets.length + <span class=\"hljs-number\">1</span>),\n        backgroundColor: Utils.transparentize(dsColor, <span class=\"hljs-number\">0.5</span>),\n        borderColor: dsColor,\n        <span class=\"hljs-keyword\">data</span>: Utils.bubbles({count: <span class=\"hljs-keyword\">data</span>.labels.length, rmin: <span class=\"hljs-number\">5</span>, rmax: <span class=\"hljs-number\">15</span>, min: <span class=\"hljs-number\">0</span>, max: <span class=\"hljs-number\">100</span>}),\n      };\n      chart.<span class=\"hljs-keyword\">data</span>.datasets.push(newDataset);\n      chart.update();\n    }\n  },\n  {\n    name: <span class=\"hljs-string\">'Add Data'</span>,\n    handler(chart) {\n      <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">data</span> = chart.<span class=\"hljs-keyword\">data</span>;\n      <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">data</span>.datasets.length &gt; <span class=\"hljs-number\">0</span>) {\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> index = <span class=\"hljs-number\">0</span>; index &lt; <span class=\"hljs-keyword\">data</span>.datasets.length; ++index) {\n          <span class=\"hljs-keyword\">data</span>.datasets[index].<span class=\"hljs-keyword\">data</span>.push(Utils.bubbles({count: <span class=\"hljs-number\">1</span>, rmin: <span class=\"hljs-number\">5</span>, rmax: <span class=\"hljs-number\">15</span>, min: <span class=\"hljs-number\">0</span>, max: <span class=\"hljs-number\">100</span>})[<span class=\"hljs-number\">0</span>]);\n        }\n\n        chart.update();\n      }\n    }\n  },\n  {\n    name: <span class=\"hljs-string\">'Remove Dataset'</span>,\n    handler(chart) {\n      chart.<span class=\"hljs-keyword\">data</span>.datasets.pop();\n      chart.update();\n    }\n  },\n  {\n    name: <span class=\"hljs-string\">'Remove Data'</span>,\n    handler(chart) {\n      chart.<span class=\"hljs-keyword\">data</span>.labels.splice(-<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>); <span class=\"hljs-comment\">// remove the label first</span>\n\n      chart.<span class=\"hljs-keyword\">data</span>.datasets.forEach(dataset =&gt; {\n        dataset.<span class=\"hljs-keyword\">data</span>.pop();\n      });\n\n      chart.update();\n    }\n  }\n];\n<span class=\"hljs-comment\">// &lt;/block:actions&gt;</span>\n\n<span class=\"hljs-comment\">// &lt;block:setup:1&gt;</span>\n<span class=\"hljs-keyword\">const</span> DATA_COUNT = <span class=\"hljs-number\">7</span>;\n<span class=\"hljs-keyword\">const</span> NUMBER_CFG = {count: DATA_COUNT, rmin: <span class=\"hljs-number\">5</span>, rmax: <span class=\"hljs-number\">15</span>, min: <span class=\"hljs-number\">0</span>, max: <span class=\"hljs-number\">100</span>};\n\n<span class=\"hljs-keyword\">const</span> labels = Utils.months({count: <span class=\"hljs-number\">7</span>});\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">data</span> = {\n  labels: labels,\n  datasets: [\n    {\n      label: <span class=\"hljs-string\">'Dataset 1'</span>,\n      <span class=\"hljs-keyword\">data</span>: Utils.bubbles(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.red,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, <span class=\"hljs-number\">0.5</span>),\n    },\n    {\n      label: <span class=\"hljs-string\">'Dataset 2'</span>,\n      <span class=\"hljs-keyword\">data</span>: Utils.bubbles(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.orange,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.orange, <span class=\"hljs-number\">0.5</span>),\n    }\n  ]\n};\n<span class=\"hljs-comment\">// &lt;/block:setup&gt;</span>\n\n<span class=\"hljs-comment\">// &lt;block:config:0&gt;</span>\n<span class=\"hljs-keyword\">const</span> config = {\n  <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">type: <span class=\"hljs-string\">'bubble'</span>,</div>\n  <span class=\"hljs-keyword\">data</span>: <span class=\"hljs-keyword\">data</span>,\n  options: {\n    responsive: <span class=\"hljs-literal\">true</span>,\n    plugins: {\n      <div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\">legend: {\n        position: <span class=\"hljs-string\">'top'</span>,\n      }</div>,\n      <div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">title: {\n        display: <span class=\"hljs-literal\">true</span>,\n        text: <span class=\"hljs-string\">'Chart.js Bubble Chart'</span>\n      }\n    }</div>\n  },\n};\n<span class=\"hljs-comment\">// &lt;/block:config&gt;</span>\n\nmodule.exports = {\n  actions: actions,\n  config: config,\n};\n<span class=\"hljs-comment\">//https://www.chartjs.org/docs/latest/samples/other-charts/bubble.html</span></code></pre></div>",
    "sec_30.js": "<div class=\"codeBlock hljs kotlin\" id=\"sec_30\"><pre id=\"sec_30_code\" ><code class=\"json\"><span class=\"hljs-comment\">// &lt;block:actions:2&gt;</span>\n<span class=\"hljs-keyword\">const</span> actions = [\n  {\n    name: <span class=\"hljs-string\">'Randomize'</span>,\n    handler(chart) {\n      chart.<span class=\"hljs-keyword\">data</span>.datasets.forEach(dataset =&gt; {\n        dataset.<span class=\"hljs-keyword\">data</span> = Utils.numbers({count: chart.<span class=\"hljs-keyword\">data</span>.labels.length, min: -<span class=\"hljs-number\">100</span>, max: <span class=\"hljs-number\">100</span>});\n      });\n      chart.update();\n    }\n  },\n  {\n    name: <span class=\"hljs-string\">'Add Dataset'</span>,\n    handler(chart) {\n      <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">data</span> = chart.<span class=\"hljs-keyword\">data</span>;\n      <span class=\"hljs-keyword\">const</span> dsColor = Utils.namedColor(chart.<span class=\"hljs-keyword\">data</span>.datasets.length);\n      <span class=\"hljs-keyword\">const</span> newDataset = {\n        label: <span class=\"hljs-string\">'Dataset '</span> + (<span class=\"hljs-keyword\">data</span>.datasets.length + <span class=\"hljs-number\">1</span>),\n        backgroundColor: Utils.transparentize(dsColor, <span class=\"hljs-number\">0.5</span>),\n        borderColor: dsColor,\n        borderWidth: <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-keyword\">data</span>: Utils.numbers({count: <span class=\"hljs-keyword\">data</span>.labels.length, min: -<span class=\"hljs-number\">100</span>, max: <span class=\"hljs-number\">100</span>}),\n      };\n      chart.<span class=\"hljs-keyword\">data</span>.datasets.push(newDataset);\n      chart.update();\n    }\n  },\n  {\n    name: <span class=\"hljs-string\">'Add Data'</span>,\n    handler(chart) {\n      <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">data</span> = chart.<span class=\"hljs-keyword\">data</span>;\n      <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">data</span>.datasets.length &gt; <span class=\"hljs-number\">0</span>) {\n        <span class=\"hljs-keyword\">data</span>.labels = Utils.months({count: <span class=\"hljs-keyword\">data</span>.labels.length + <span class=\"hljs-number\">1</span>});\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> index = <span class=\"hljs-number\">0</span>; index &lt; <span class=\"hljs-keyword\">data</span>.datasets.length; ++index) {\n          <span class=\"hljs-keyword\">data</span>.datasets[index].<span class=\"hljs-keyword\">data</span>.push(Utils.rand(-<span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">100</span>));\n        }\n\n        chart.update();\n      }\n    }\n  },\n  {\n    name: <span class=\"hljs-string\">'Remove Dataset'</span>,\n    handler(chart) {\n      chart.<span class=\"hljs-keyword\">data</span>.datasets.pop();\n      chart.update();\n    }\n  },\n  {\n    name: <span class=\"hljs-string\">'Remove Data'</span>,\n    handler(chart) {\n      chart.<span class=\"hljs-keyword\">data</span>.labels.splice(-<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>); <span class=\"hljs-comment\">// remove the label first</span>\n\n      chart.<span class=\"hljs-keyword\">data</span>.datasets.forEach(dataset =&gt; {\n        dataset.<span class=\"hljs-keyword\">data</span>.pop();\n      });\n\n      chart.update();\n    }\n  }\n];\n<span class=\"hljs-comment\">// &lt;/block:actions&gt;</span>\n\n<span class=\"hljs-comment\">// &lt;block:setup:1&gt;</span>\n<span class=\"hljs-keyword\">const</span> DATA_COUNT = <span class=\"hljs-number\">7</span>;\n<span class=\"hljs-keyword\">const</span> NUMBER_CFG = {count: DATA_COUNT, min: -<span class=\"hljs-number\">100</span>, max: <span class=\"hljs-number\">100</span>};\n\n<span class=\"hljs-keyword\">const</span> labels = Utils.months({count: <span class=\"hljs-number\">7</span>});\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">data</span> = {\n  labels: labels,\n  datasets: [\n    {\n      label: <span class=\"hljs-string\">'Dataset 1'</span>,\n      <span class=\"hljs-keyword\">data</span>: Utils.numbers(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.red,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, <span class=\"hljs-number\">0.5</span>),\n    },\n    {\n      label: <span class=\"hljs-string\">'Dataset 2'</span>,\n      <span class=\"hljs-keyword\">data</span>: Utils.numbers(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.blue,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.blue, <span class=\"hljs-number\">0.5</span>),\n    }\n  ]\n};\n<span class=\"hljs-comment\">// &lt;/block:setup&gt;</span>\n\n<span class=\"hljs-comment\">// &lt;block:config:0&gt;</span>\n<span class=\"hljs-keyword\">const</span> config = {\n  <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">type: <span class=\"hljs-string\">'bar'</span>,</div>\n  <span class=\"hljs-keyword\">data</span>: <span class=\"hljs-keyword\">data</span>,\n  options: {\n    responsive: <span class=\"hljs-literal\">true</span>,\n    plugins: {\n      <div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\">legend: {\n        position: <span class=\"hljs-string\">'top'</span>,\n      }</div>,\n      <div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">title: {\n        display: <span class=\"hljs-literal\">true</span>,\n        text: <span class=\"hljs-string\">'Chart.js Bar Chart'</span>\n      }</div>\n    }\n  },\n};\n<span class=\"hljs-comment\">// &lt;/block:config&gt;</span>\n\nmodule.exports = {\n  actions: actions,\n  config: config,\n};\n<span class=\"hljs-comment\">//https://www.chartjs.org/docs/latest/samples/bar/vertical.html</span></code></pre></div>",
    "sec_2.js": "<div class=\"codeBlock hljs yaml\" id=\"sec_2\"><pre id=\"sec_2_code\" ><code class=\"json\"><span class=\"hljs-string\">var</span> <span class=\"hljs-string\">data</span> <span class=\"hljs-string\">=</span> {\n    <span class=\"hljs-attr\">labels :</span> [<span class=\"hljs-string\">\"SUN\"</span>,<span class=\"hljs-string\">\"MON\"</span>,<span class=\"hljs-string\">\"TUE\"</span>,<span class=\"hljs-string\">\"WED\"</span>,<span class=\"hljs-string\">\"THU\"</span>,<span class=\"hljs-string\">\"FRI\"</span>,<span class=\"hljs-string\">\"SAT\"</span>],\n    <span class=\"hljs-attr\">datasets :</span> [\n        {\n            <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">fillColor :</span> <span class=\"hljs-string\">\"rgba(255,255,255,0.1)\"</span>,\n            <span class=\"hljs-attr\">strokeColor :</span> <span class=\"hljs-string\">\"rgba(0,0,0,0.25)\"</span>,\n            <span class=\"hljs-attr\">pointColor :</span> <span class=\"hljs-string\">\"rgba(255,255,255,1)\"</span>,\n            <span class=\"hljs-attr\">pointStrokeColor :</span> <span class=\"hljs-string\">\"#fe9fir7\"</span>,\n            <span class=\"hljs-attr\">data :</span> [<span class=\"hljs-number\">135</span>,<span class=\"hljs-number\">185</span>,<span class=\"hljs-number\">225</span>,<span class=\"hljs-number\">385</span>,<span class=\"hljs-number\">275</span>,<span class=\"hljs-number\">215</span>,<span class=\"hljs-number\">265</span>]</div>\n        }\n    ]\n}\n\n<span class=\"hljs-string\">var</span> <span class=\"hljs-string\">options</span> <span class=\"hljs-string\">=</span> {\n    <span class=\"hljs-attr\">scaleFontColor :</span> <span class=\"hljs-string\">\"rgba(0,0,0,1)\"</span>,\n    <span class=\"hljs-attr\">scaleLineColor :</span> <span class=\"hljs-string\">\"rgba(0,0,0,0.1)\"</span>,\n    <span class=\"hljs-attr\">scaleGridLineColor :</span> <span class=\"hljs-string\">\"rgba(0,0,0,0.1)\"</span>,\n    <span class=\"hljs-attr\">scaleShowLabels :</span> <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">scaleShowHorizontalLines :</span> <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">bezierCurve :</span> <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">pointDot :</span> <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">pointDotRadius :</span> <span class=\"hljs-number\">5</span>,\n    <span class=\"hljs-attr\">pointDotStrokeWidth :</span> <span class=\"hljs-number\">2</span>,\n    <span class=\"hljs-attr\">scaleOverride :</span> <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">scaleSteps :</span> <span class=\"hljs-number\">6</span>,\n    <span class=\"hljs-attr\">scaleStepWidth :</span> <span class=\"hljs-number\">100</span>,\n    <span class=\"hljs-attr\">responsive :</span> <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">showTooltips:</span> <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\"><span class=\"hljs-attr\">tooltipTemplate:</span> <span class=\"hljs-string\">\"&lt;%= value %&gt; \"</span> <span class=\"hljs-string\">+</span> <span class=\"hljs-string\">\"Students\"</span>,\n    <span class=\"hljs-attr\">tooltipFontSize:</span> <span class=\"hljs-number\">16</span>,\n    <span class=\"hljs-attr\">tooltipYPadding:</span> <span class=\"hljs-number\">12</span>,\n    <span class=\"hljs-attr\">tooltipXPadding:</span> <span class=\"hljs-number\">12</span>,\n    <span class=\"hljs-attr\">tooltipCornerRadius:</span> <span class=\"hljs-number\">3</span>,\n    <span class=\"hljs-attr\">tooltipFillColor:</span> <span class=\"hljs-string\">\"#3797fir\"</span>,</div>\n        \n    <span class=\"hljs-attr\"><div style=\"display: inline;\" id=\"Animations_0\" class=\"highlights fea_Animations\">onAnimationComplete</div> :</span> <span class=\"hljs-string\">function()</span> {\n        <span class=\"hljs-string\">var</span> <span class=\"hljs-string\">arrSelector</span> <span class=\"hljs-string\">=</span> []<span class=\"hljs-string\">;</span>\n        <span class=\"hljs-string\">this.datasets</span>[<span class=\"hljs-number\">0</span>]<span class=\"hljs-string\">.points.forEach(function(point)</span>{\n            <span class=\"hljs-string\">if(point.label</span> <span class=\"hljs-string\">==</span> <span class=\"hljs-string\">'WED'</span><span class=\"hljs-string\">)</span>{\n                <span class=\"hljs-string\">arrSelector.push(point);</span>\n            }\n        }<span class=\"hljs-string\">);</span>\n\n        <span class=\"hljs-string\">this.showTooltip(arrSelector</span>, <span class=\"hljs-literal\">true</span><span class=\"hljs-string\">);</span>          \n    },\n    <span class=\"hljs-attr\">tooltipEvents:</span> []\n}\n\n<span class=\"hljs-string\">new</span> <span class=\"hljs-string\">Chart(c1.getContext(\"2d\")).Line(data,options);</span></code></pre></div>",
    "sec_5.js": "<div class=\"codeBlock hljs php\" id=\"sec_5\"><pre id=\"sec_5_code\" ><code class=\"json\">Chart.defaults.<span class=\"hljs-keyword\">global</span> = {\n    <span class=\"hljs-comment\">// Boolean - Whether to animate the chart</span>\n    <div style=\"display: inline;\" id=\"Animations_0\" class=\"highlights fea_Animations\">animation: <span class=\"hljs-literal\">true</span>,</div>\n\n    <span class=\"hljs-comment\">// Number - Number of animation steps</span>\n    animationSteps: <span class=\"hljs-number\">60</span>,\n\n    <span class=\"hljs-comment\">// String - Animation easing effect</span>\n    <span class=\"hljs-comment\">// Possible effects are:</span>\n    <span class=\"hljs-comment\">// [easeInOutQuart, linear, easeOutBounce, easeInBack, easeInOutQuad,</span>\n    <span class=\"hljs-comment\">//  easeOutQuart, easeOutQuad, easeInOutBounce, easeOutSine, easeInOutCubic,</span>\n    <span class=\"hljs-comment\">//  easeInExpo, easeInOutBack, easeInCirc, easeInOutElastic, easeOutBack,</span>\n    <span class=\"hljs-comment\">//  easeInQuad, easeInOutExpo, easeInQuart, easeOutQuint, easeInOutCirc,</span>\n    <span class=\"hljs-comment\">//  easeInSine, easeOutExpo, easeOutCirc, easeOutCubic, easeInQuint,</span>\n    <span class=\"hljs-comment\">//  easeInElastic, easeInOutSine, easeInOutQuint, easeInBounce,</span>\n    <span class=\"hljs-comment\">//  easeOutElastic, easeInCubic]</span>\n    <div style=\"display: inline;\" id=\"Animations_1\" class=\"highlights fea_Animations\">animationEasing: <span class=\"hljs-string\">\"easeOutBack\"</span>,</div>\n\n    <span class=\"hljs-comment\">// Boolean - If we should show the scale at all</span>\n    showScale: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">// Boolean - If we want to override with a hard coded scale</span>\n    scaleOverride: <span class=\"hljs-literal\">false</span>,\n\n    <span class=\"hljs-comment\">// ** Required if scaleOverride is true **</span>\n    <span class=\"hljs-comment\">// Number - The number of steps in a hard coded scale</span>\n    scaleSteps: <span class=\"hljs-literal\">null</span>,\n    <span class=\"hljs-comment\">// Number - The value jump in the hard coded scale</span>\n    scaleStepWidth: <span class=\"hljs-literal\">null</span>,\n    <span class=\"hljs-comment\">// Number - The scale starting value</span>\n    scaleStartValue: <span class=\"hljs-literal\">null</span>,\n\n    <span class=\"hljs-comment\">// String - Colour of the scale line</span>\n    <div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\">scaleLineColor: <span class=\"hljs-string\">\"rgba(0,0,0,.1)\"</span>,</div>\n\n    <span class=\"hljs-comment\">// Number - Pixel width of the scale line</span>\n    <div style=\"display: inline;\" id=\"Axis_2\" class=\"highlights fea_Axis\">scaleLineWidth: <span class=\"hljs-number\">1</span>,</div>\n\n    <span class=\"hljs-comment\">// Boolean - Whether to show labels on the scale</span>\n    scaleShowLabels: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">// Interpolated JS string - can access value</span>\n    <div style=\"display: inline;\" id=\"Axis_1\" class=\"highlights fea_Axis\">scaleLabel: <span class=\"hljs-string\">\"&lt;%=value%&gt;\"</span>,</div>\n\n    <span class=\"hljs-comment\">// Boolean - Whether the scale should stick to integers, not floats even if drawing space is there</span>\n    scaleIntegersOnly: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">// Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value</span>\n    scaleBeginAtZero: <span class=\"hljs-literal\">false</span>,\n\n    <span class=\"hljs-comment\">// String - Scale label font declaration for the scale label</span>\n    scaleFontFamily: <span class=\"hljs-string\">\"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\"</span>,\n\n    <span class=\"hljs-comment\">// Number - Scale label font size in pixels</span>\n    scaleFontSize: <span class=\"hljs-number\">12</span>,\n\n    <span class=\"hljs-comment\">// String - Scale label font weight style</span>\n    scaleFontStyle: <span class=\"hljs-string\">\"normal\"</span>,\n\n    <span class=\"hljs-comment\">// String - Scale label font colour</span>\n    scaleFontColor: <span class=\"hljs-string\">\"#666\"</span>,\n\n    <span class=\"hljs-comment\">// Boolean - whether or not the chart should be responsive and resize when the browser does.</span>\n    responsive: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">// Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container</span>\n    maintainAspectRatio: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">// Boolean - Determines whether to draw tooltips on the canvas or not</span>\n    <div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\">showTooltips: <span class=\"hljs-literal\">true</span>,</div>\n\n    <span class=\"hljs-comment\">// Function - Determines whether to execute the customTooltips function instead of drawing the built in tooltips (See [Advanced - External Tooltips](#advanced-usage-custom-tooltips))</span>\n    customTooltips: <span class=\"hljs-literal\">false</span>,\n\n    <span class=\"hljs-comment\">// Array - Array of string names to attach tooltip events</span>\n    <div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\">tooltipEvents: [<span class=\"hljs-string\">\"mousemove\"</span>, <span class=\"hljs-string\">\"touchstart\"</span>, <span class=\"hljs-string\">\"touchmove\"</span>]</div>,\n\n    <span class=\"hljs-comment\">// String - Tooltip background colour</span>\n    tooltipFillColor: <span class=\"hljs-string\">\"rgba(0,0,0,0.8)\"</span>,\n\n    <span class=\"hljs-comment\">// String - Tooltip label font declaration for the scale label</span>\n    <div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">tooltipFontFamily: <span class=\"hljs-string\">\"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\"</span>,</div>\n\n    <span class=\"hljs-comment\">// Number - Tooltip label font size in pixels</span>\n    tooltipFontSize: <span class=\"hljs-number\">14</span>,\n\n    <span class=\"hljs-comment\">// String - Tooltip font weight style</span>\n    tooltipFontStyle: <span class=\"hljs-string\">\"normal\"</span>,\n\n    <span class=\"hljs-comment\">// String - Tooltip label font colour</span>\n    tooltipFontColor: <span class=\"hljs-string\">\"#fff\"</span>,\n\n    <span class=\"hljs-comment\">// String - Tooltip title font declaration for the scale label</span>\n    tooltipTitleFontFamily:\n        <span class=\"hljs-string\">\"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\"</span>,\n\n    <span class=\"hljs-comment\">// Number - Tooltip title font size in pixels</span>\n    tooltipTitleFontSize: <span class=\"hljs-number\">14</span>,\n\n    <span class=\"hljs-comment\">// String - Tooltip title font weight style</span>\n    tooltipTitleFontStyle: <span class=\"hljs-string\">\"bold\"</span>,\n\n    <span class=\"hljs-comment\">// String - Tooltip title font colour</span>\n    tooltipTitleFontColor: <span class=\"hljs-string\">\"#fff\"</span>,\n\n    <span class=\"hljs-comment\">// Number - pixel width of padding around tooltip text</span>\n    tooltipYPadding: <span class=\"hljs-number\">6</span>,\n\n    <span class=\"hljs-comment\">// Number - pixel width of padding around tooltip text</span>\n    tooltipXPadding: <span class=\"hljs-number\">6</span>,\n\n    <span class=\"hljs-comment\">// Number - Size of the caret on the tooltip</span>\n    tooltipCaretSize: <span class=\"hljs-number\">8</span>,\n\n    <span class=\"hljs-comment\">// Number - Pixel radius of the tooltip border</span>\n    tooltipCornerRadius: <span class=\"hljs-number\">6</span>,\n\n    <span class=\"hljs-comment\">// Number - Pixel offset from point x to tooltip edge</span>\n    tooltipXOffset: <span class=\"hljs-number\">10</span>,\n\n    <span class=\"hljs-comment\">// String - Template string for single tooltips</span>\n    tooltipTemplate: <span class=\"hljs-string\">\"&lt;%if (label){%&gt;&lt;%=label%&gt;: &lt;%}%&gt;&lt;%= value %&gt;\"</span>,\n\n    <span class=\"hljs-comment\">// String - Template string for multiple tooltips</span>\n    multiTooltipTemplate: <span class=\"hljs-string\">\"&lt;%= value %&gt;\"</span>,\n\n    <span class=\"hljs-comment\">// Function - Will fire on animation progression.</span>\n    onAnimationProgress: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{},\n\n    <span class=\"hljs-comment\">// Function - Will fire on animation completion.</span>\n    onAnimationComplete: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\"></span>) </span>{}\n};\n\n<span class=\"hljs-comment\">// BEGIN POLAR DATA ============================================</span>\n\n<span class=\"hljs-keyword\">const</span> barData = {\n    labels: [<span class=\"hljs-string\">\"January\"</span>, <span class=\"hljs-string\">\"February\"</span>, <span class=\"hljs-string\">\"March\"</span>, <span class=\"hljs-string\">\"April\"</span>, <span class=\"hljs-string\">\"May\"</span>, <span class=\"hljs-string\">\"June\"</span>, <span class=\"hljs-string\">\"July\"</span>],\n    datasets: [\n        {\n            label: <span class=\"hljs-string\">\"My First dataset\"</span>,\n            fillColor: <span class=\"hljs-string\">\"rgba(220,220,220,0.5)\"</span>,\n            strokeColor: <span class=\"hljs-string\">\"rgba(220,220,220,0.8)\"</span>,\n            highlightFill: <span class=\"hljs-string\">\"rgba(220,220,220,0.75)\"</span>,\n            highlightStroke: <span class=\"hljs-string\">\"rgba(220,220,220,1)\"</span>,\n            data: [<span class=\"hljs-number\">35</span>, <span class=\"hljs-number\">59</span>, <span class=\"hljs-number\">80</span>, <span class=\"hljs-number\">81</span>, <span class=\"hljs-number\">56</span>, <span class=\"hljs-number\">55</span>, <span class=\"hljs-number\">40</span>]\n        },\n        {\n            label: <span class=\"hljs-string\">\"My Second dataset\"</span>,\n            fillColor: <span class=\"hljs-string\">\"rgba(151,187,205,0.5)\"</span>,\n            strokeColor: <span class=\"hljs-string\">\"rgba(151,187,205,0.8)\"</span>,\n            highlightFill: <span class=\"hljs-string\">\"rgba(151,187,205,0.75)\"</span>,\n            highlightStroke: <span class=\"hljs-string\">\"rgba(151,187,205,1)\"</span>,\n            data: [<span class=\"hljs-number\">28</span>, <span class=\"hljs-number\">48</span>, <span class=\"hljs-number\">40</span>, <span class=\"hljs-number\">19</span>, <span class=\"hljs-number\">86</span>, <span class=\"hljs-number\">27</span>, <span class=\"hljs-number\">90</span>]\n        }\n    ]\n};\n\n<span class=\"hljs-keyword\">const</span> barOptions = {\n    <span class=\"hljs-comment\">//Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value</span>\n    scaleBeginAtZero: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether grid lines are shown across the chart</span>\n    scaleShowGridLines: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//String - Colour of the grid lines</span>\n    scaleGridLineColor: <span class=\"hljs-string\">\"rgba(0,0,0,.05)\"</span>,\n\n    <span class=\"hljs-comment\">//Number - Width of the grid lines</span>\n    scaleGridLineWidth: <span class=\"hljs-number\">1</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether to show horizontal lines (except X axis)</span>\n    scaleShowHorizontalLines: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether to show vertical lines (except Y axis)</span>\n    scaleShowVerticalLines: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//Boolean - If there is a stroke on each bar</span>\n    <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">barShowStroke: <span class=\"hljs-literal\">true</span>,</div>\n\n    <span class=\"hljs-comment\">//Number - Pixel width of the bar stroke</span>\n    barStrokeWidth: <span class=\"hljs-number\">2</span>,\n\n    <span class=\"hljs-comment\">//Number - Spacing between each of the X value sets</span>\n    barValueSpacing: <span class=\"hljs-number\">5</span>,\n\n    <span class=\"hljs-comment\">//Number - Spacing between data sets within X values</span>\n    barDatasetSpacing: <span class=\"hljs-number\">1</span>,\n\n    <span class=\"hljs-comment\">//String - A legend template</span>\n    legendTemplate:\n        <span class=\"hljs-string\">'&lt;ul class=\"&lt;%=name.toLowerCase()%&gt;-legend\"&gt;&lt;% for (var i=0; i&lt;datasets.length; i++){%&gt;&lt;li&gt;&lt;span style=\"background-color:&lt;%=datasets[i].fillColor%&gt;\"&gt;&lt;/span&gt;&lt;%if(datasets[i].label){%&gt;&lt;%=datasets[i].label%&gt;&lt;%}%&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;'</span>\n};\n\n<span class=\"hljs-keyword\">const</span> barCtx = document.getElementById(<span class=\"hljs-string\">\"myBarGraph\"</span>).getContext(<span class=\"hljs-string\">\"2d\"</span>);\n\n<span class=\"hljs-keyword\">const</span> myBarChart = <span class=\"hljs-keyword\">new</span> Chart(barCtx).Bar(barData, barOptions);\n\n<span class=\"hljs-comment\">// BEGIN POLAR DATA ============================================</span>\n\n<span class=\"hljs-keyword\">const</span> polarData = [\n    {\n        value: <span class=\"hljs-number\">300</span>,\n        color: <span class=\"hljs-string\">\"#F7464A\"</span>,\n        highlight: <span class=\"hljs-string\">\"#FF5A5E\"</span>,\n        label: <span class=\"hljs-string\">\"Red\"</span>\n    },\n    {\n        value: <span class=\"hljs-number\">50</span>,\n        color: <span class=\"hljs-string\">\"#46BFBD\"</span>,\n        highlight: <span class=\"hljs-string\">\"#5AfirD1\"</span>,\n        label: <span class=\"hljs-string\">\"Green\"</span>\n    },\n    {\n        value: <span class=\"hljs-number\">100</span>,\n        color: <span class=\"hljs-string\">\"#FDB45C\"</span>,\n        highlight: <span class=\"hljs-string\">\"#FFC870\"</span>,\n        label: <span class=\"hljs-string\">\"Yellow\"</span>\n    },\n    {\n        value: <span class=\"hljs-number\">40</span>,\n        color: <span class=\"hljs-string\">\"#949FB1\"</span>,\n        highlight: <span class=\"hljs-string\">\"#A8B3C5\"</span>,\n        label: <span class=\"hljs-string\">\"Grey\"</span>\n    },\n    {\n        value: <span class=\"hljs-number\">120</span>,\n        color: <span class=\"hljs-string\">\"#4D5360\"</span>,\n        highlight: <span class=\"hljs-string\">\"#616774\"</span>,\n        label: <span class=\"hljs-string\">\"Dark Grey\"</span>\n    }\n];\n\n<span class=\"hljs-keyword\">const</span> polarOptions = {\n    <span class=\"hljs-comment\">//Boolean - Show a backdrop to the scale label</span>\n    scaleShowLabelBackdrop: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//String - The colour of the label backdrop</span>\n    scaleBackdropColor: <span class=\"hljs-string\">\"rgba(255,255,255,0.75)\"</span>,\n\n    <span class=\"hljs-comment\">// Boolean - Whether the scale should begin at zero</span>\n    scaleBeginAtZero: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//Number - The backdrop padding above &amp; below the label in pixels</span>\n    scaleBackdropPaddingY: <span class=\"hljs-number\">2</span>,\n\n    <span class=\"hljs-comment\">//Number - The backdrop padding to the side of the label in pixels</span>\n    scaleBackdropPaddingX: <span class=\"hljs-number\">2</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Show line for each value in the scale</span>\n    scaleShowLine: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Stroke a line around each segment in the chart</span>\n    segmentShowStroke: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//String - The colour of the stroke on each segement.</span>\n    segmentStrokeColor: <span class=\"hljs-string\">\"#fff\"</span>,\n\n    <span class=\"hljs-comment\">//Number - The width of the stroke value in pixels</span>\n    segmentStrokeWidth: <span class=\"hljs-number\">2</span>,\n\n    <span class=\"hljs-comment\">//Number - Amount of animation steps</span>\n    animationSteps: <span class=\"hljs-number\">100</span>,\n\n    <span class=\"hljs-comment\">//String - Animation easing effect.</span>\n    animationEasing: <span class=\"hljs-string\">\"easeOutBounce\"</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether to animate the rotation of the chart</span>\n    animateRotate: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether to animate scaling the chart from the centre</span>\n    animateScale: <span class=\"hljs-literal\">false</span>,\n\n    <span class=\"hljs-comment\">//String - A legend template</span>\n    legendTemplate:\n        <span class=\"hljs-string\">'&lt;ul class=\"&lt;%=name.toLowerCase()%&gt;-legend\"&gt;&lt;% for (var i=0; i&lt;segments.length; i++){%&gt;&lt;li&gt;&lt;span style=\"background-color:&lt;%=segments[i].fillColor%&gt;\"&gt;&lt;/span&gt;&lt;%if(segments[i].label){%&gt;&lt;%=segments[i].label%&gt;&lt;%}%&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;'</span>\n};\n\n<span class=\"hljs-keyword\">const</span> polarCtx = document.getElementById(<span class=\"hljs-string\">\"myPolarGraph\"</span>).getContext(<span class=\"hljs-string\">\"2d\"</span>);\n<span class=\"hljs-keyword\">const</span> myPolarChart = <span class=\"hljs-keyword\">new</span> Chart(polarCtx).PolarArea(polarData, polarOptions);\n\n<span class=\"hljs-comment\">// BEGIN LINE CHART ============================================</span>\n\n<span class=\"hljs-keyword\">const</span> lineGraphData = {\n    labels: [<span class=\"hljs-string\">\"January\"</span>, <span class=\"hljs-string\">\"February\"</span>, <span class=\"hljs-string\">\"March\"</span>, <span class=\"hljs-string\">\"April\"</span>, <span class=\"hljs-string\">\"May\"</span>, <span class=\"hljs-string\">\"June\"</span>, <span class=\"hljs-string\">\"July\"</span>],\n    datasets: [\n        {\n            label: <span class=\"hljs-string\">\"My First dataset\"</span>,\n            fillColor: <span class=\"hljs-string\">\"rgba(220,220,220,0.2)\"</span>,\n            strokeColor: <span class=\"hljs-string\">\"rgba(220,220,220,1)\"</span>,\n            pointColor: <span class=\"hljs-string\">\"rgba(220,220,220,1)\"</span>,\n            pointStrokeColor: <span class=\"hljs-string\">\"#fff\"</span>,\n            pointHighlightFill: <span class=\"hljs-string\">\"#fff\"</span>,\n            pointHighlightStroke: <span class=\"hljs-string\">\"rgba(220,220,220,1)\"</span>,\n            data: [<span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">59</span>, <span class=\"hljs-number\">80</span>, <span class=\"hljs-number\">81</span>, <span class=\"hljs-number\">56</span>, <span class=\"hljs-number\">55</span>, <span class=\"hljs-number\">40</span>]\n        },\n        {\n            label: <span class=\"hljs-string\">\"My Second dataset\"</span>,\n            fillColor: <span class=\"hljs-string\">\"rgba(151,187,205,0.2)\"</span>,\n            strokeColor: <span class=\"hljs-string\">\"rgba(151,187,205,1)\"</span>,\n            pointColor: <span class=\"hljs-string\">\"rgba(151,187,205,1)\"</span>,\n            pointStrokeColor: <span class=\"hljs-string\">\"#fff\"</span>,\n            pointHighlightFill: <span class=\"hljs-string\">\"#fff\"</span>,\n            pointHighlightStroke: <span class=\"hljs-string\">\"rgba(151,187,205,1)\"</span>,\n            data: [<span class=\"hljs-number\">28</span>, <span class=\"hljs-number\">48</span>, <span class=\"hljs-number\">40</span>, <span class=\"hljs-number\">19</span>, <span class=\"hljs-number\">86</span>, <span class=\"hljs-number\">27</span>, <span class=\"hljs-number\">90</span>]\n        }\n    ]\n};\n\n<span class=\"hljs-keyword\">const</span> lineGraphOptions = {\n    <span class=\"hljs-comment\">///Boolean - Whether grid lines are shown across the chart</span>\n    scaleShowGridLines: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//String - Colour of the grid lines</span>\n    scaleGridLineColor: <span class=\"hljs-string\">\"rgba(0,0,0,.05)\"</span>,\n\n    <span class=\"hljs-comment\">//Number - Width of the grid lines</span>\n    scaleGridLineWidth: <span class=\"hljs-number\">1</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether to show horizontal lines (except X axis)</span>\n    scaleShowHorizontalLines: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether to show vertical lines (except Y axis)</span>\n    scaleShowVerticalLines: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether the line is curved between points</span>\n    bezierCurve: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//Number - Tension of the bezier curve between points</span>\n    bezierCurveTension: <span class=\"hljs-number\">0.4</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether to show a dot for each point</span>\n    pointDot: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//Number - Radius of each point dot in pixels</span>\n    pointDotRadius: <span class=\"hljs-number\">4</span>,\n\n    <span class=\"hljs-comment\">//Number - Pixel width of point dot stroke</span>\n    pointDotStrokeWidth: <span class=\"hljs-number\">1</span>,\n\n    <span class=\"hljs-comment\">//Number - amount extra to add to the radius to cater for hit detection outside the drawn point</span>\n    pointHitDetectionRadius: <span class=\"hljs-number\">20</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether to show a stroke for datasets</span>\n    datasetStroke: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//Number - Pixel width of dataset stroke</span>\n    datasetStrokeWidth: <span class=\"hljs-number\">2</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether to fill the dataset with a colour</span>\n    datasetFill: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//String - A legend template</span>\n    legendTemplate:\n        <span class=\"hljs-string\">'&lt;ul class=\"&lt;%=name.toLowerCase()%&gt;-legend\"&gt;&lt;% for (var i=0; i&lt;datasets.length; i++){%&gt;&lt;li&gt;&lt;span style=\"background-color:&lt;%=datasets[i].strokeColor%&gt;\"&gt;&lt;/span&gt;&lt;%if(datasets[i].label){%&gt;&lt;%=datasets[i].label%&gt;&lt;%}%&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;'</span>\n};\n\n<span class=\"hljs-keyword\">const</span> lineCtx = document.getElementById(<span class=\"hljs-string\">\"myGraph\"</span>).getContext(<span class=\"hljs-string\">\"2d\"</span>);\n<span class=\"hljs-keyword\">const</span> myLineChart = <span class=\"hljs-keyword\">new</span> Chart(lineCtx).Line(lineGraphData, lineGraphOptions);\n\n<span class=\"hljs-comment\">// BEGIN RADAR CHART ============================================</span>\n\n<span class=\"hljs-keyword\">const</span> radarData = {\n    labels: [<span class=\"hljs-string\">\"Ford\"</span>, <span class=\"hljs-string\">\"Chevy\"</span>, <span class=\"hljs-string\">\"Toyota\"</span>, <span class=\"hljs-string\">\"Honda\"</span>, <span class=\"hljs-string\">\"Mazda\"</span>],\n    datasets: [\n        {\n            label: <span class=\"hljs-string\">\"My First dataset\"</span>,\n            fillColor: <span class=\"hljs-string\">\"rgba(22,170,133,0.2)\"</span>,\n            strokeColor: <span class=\"hljs-string\">\"rgba(22,160,133,1)\"</span>,\n            pointColor: <span class=\"hljs-string\">\"rgba(22,160,133,1)\"</span>,\n            pointStrokeColor: <span class=\"hljs-string\">\"#fff\"</span>,\n            pointHighlightFill: <span class=\"hljs-string\">\"#ccc\"</span>,\n            pointHighlightStroke: <span class=\"hljs-string\">\"rgba(22,160,133,1)\"</span>,\n            data: [<span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">18</span>, <span class=\"hljs-number\">7</span>]\n        }\n    ]\n};\n\n<span class=\"hljs-keyword\">const</span> radarOptions = {\n    <span class=\"hljs-comment\">///Boolean - Whether grid lines are shown across the chart</span>\n    scaleShowGridLines: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//String - Colour of the grid lines</span>\n    scaleGridLineColor: <span class=\"hljs-string\">\"rgba(0,0,0,.2)\"</span>,\n\n    <span class=\"hljs-comment\">//Number - Width of the grid lines</span>\n    scaleGridLineWidth: <span class=\"hljs-number\">1</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether to show horizontal lines (except X axis)</span>\n    scaleShowHorizontalLines: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether to show vertical lines (except Y axis)</span>\n    scaleShowVerticalLines: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether the line is curved between points</span>\n    bezierCurve: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//Number - Tension of the bezier curve between points</span>\n    bezierCurveTension: <span class=\"hljs-number\">0.4</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether to show a dot for each point</span>\n    pointDot: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//Number - Radius of each point dot in pixels</span>\n    pointDotRadius: <span class=\"hljs-number\">4</span>,\n\n    <span class=\"hljs-comment\">//Number - Pixel width of point dot stroke</span>\n    pointDotStrokeWidth: <span class=\"hljs-number\">1</span>,\n\n    <span class=\"hljs-comment\">//Number - amount extra to add to the radius to cater for hit detection outside the drawn point</span>\n    pointHitDetectionRadius: <span class=\"hljs-number\">20</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether to show a stroke for datasets</span>\n    datasetStroke: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//Number - Pixel width of dataset stroke</span>\n    datasetStrokeWidth: <span class=\"hljs-number\">2</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether to fill the dataset with a colour</span>\n    datasetFill: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//String - A legend template</span>\n    legendTemplate:\n        <span class=\"hljs-string\">'&lt;ul class=\"&lt;%=name.toLowerCase()%&gt;-legend\"&gt;&lt;% for (var i=0; i&lt;datasets.length; i++){%&gt;&lt;li&gt;&lt;span style=\"background-color:&lt;%=datasets[i].strokeColor%&gt;\"&gt;&lt;/span&gt;&lt;%if(datasets[i].label){%&gt;&lt;%=datasets[i].label%&gt;&lt;%}%&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;'</span>\n};\n\n<span class=\"hljs-keyword\">const</span> radarCtx = document.getElementById(<span class=\"hljs-string\">\"myRadarGraph\"</span>).getContext(<span class=\"hljs-string\">\"2d\"</span>);\n<span class=\"hljs-keyword\">const</span> myRadarChart = <span class=\"hljs-keyword\">new</span> Chart(radarCtx).Radar(radarData, radarOptions);\n\n<span class=\"hljs-comment\">// BEGIN PIE CHART ============================================</span>\n\n<span class=\"hljs-keyword\">const</span> pieData = [\n    {\n        value: <span class=\"hljs-number\">300</span>,\n        color: <span class=\"hljs-string\">\"#F7464A\"</span>,\n        highlight: <span class=\"hljs-string\">\"#FF5A5E\"</span>,\n        label: <span class=\"hljs-string\">\"Red\"</span>\n    },\n    {\n        value: <span class=\"hljs-number\">50</span>,\n        color: <span class=\"hljs-string\">\"#46BFBD\"</span>,\n        highlight: <span class=\"hljs-string\">\"#5AfirD1\"</span>,\n        label: <span class=\"hljs-string\">\"Green\"</span>\n    },\n    {\n        value: <span class=\"hljs-number\">100</span>,\n        color: <span class=\"hljs-string\">\"#FDB45C\"</span>,\n        highlight: <span class=\"hljs-string\">\"#FFC870\"</span>,\n        label: <span class=\"hljs-string\">\"Yellow\"</span>\n    }\n];\n\n<span class=\"hljs-keyword\">const</span> pieOptions = {\n    <span class=\"hljs-comment\">//Boolean - Whether we should show a stroke on each segment</span>\n    segmentShowStroke: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//String - The colour of each segment stroke</span>\n    segmentStrokeColor: <span class=\"hljs-string\">\"#fff\"</span>,\n\n    <span class=\"hljs-comment\">//Number - The width of each segment stroke</span>\n    segmentStrokeWidth: <span class=\"hljs-number\">2</span>,\n\n    <span class=\"hljs-comment\">//Number - The percentage of the chart that we cut out of the middle</span>\n    percentageInnerCutout: <span class=\"hljs-number\">0</span>, <span class=\"hljs-comment\">// This is 0 for Pie charts</span>\n\n    <span class=\"hljs-comment\">//Number - Amount of animation steps</span>\n    animationSteps: <span class=\"hljs-number\">100</span>,\n\n    <span class=\"hljs-comment\">//String - Animation easing effect</span>\n    animationEasing: <span class=\"hljs-string\">\"easeOutBounce\"</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether we animate the rotation of the Doughnut</span>\n    animateRotate: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether we animate scaling the Doughnut from the centre</span>\n    animateScale: <span class=\"hljs-literal\">false</span>,\n\n    <span class=\"hljs-comment\">//String - A legend template</span>\n    legendTemplate:\n        <span class=\"hljs-string\">'&lt;ul class=\"&lt;%=name.toLowerCase()%&gt;-legend\"&gt;&lt;% for (var i=0; i&lt;segments.length; i++){%&gt;&lt;li&gt;&lt;span style=\"background-color:&lt;%=segments[i].fillColor%&gt;\"&gt;&lt;/span&gt;&lt;%if(segments[i].label){%&gt;&lt;%=segments[i].label%&gt;&lt;%}%&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;'</span>\n};\n\n<span class=\"hljs-keyword\">const</span> pieCtx = document.getElementById(<span class=\"hljs-string\">\"myPieGraph\"</span>).getContext(<span class=\"hljs-string\">\"2d\"</span>);\n<span class=\"hljs-keyword\">const</span> myPieChart = <span class=\"hljs-keyword\">new</span> Chart(pieCtx).Pie(pieData, pieOptions);\n\n<span class=\"hljs-comment\">// BEGIN DOUGHNUT CHART ============================================</span>\n\n<span class=\"hljs-keyword\">const</span> doughnutData = [\n    {\n        value: <span class=\"hljs-number\">300</span>,\n        color: <span class=\"hljs-string\">\"#F7464A\"</span>,\n        highlight: <span class=\"hljs-string\">\"#FF5A5E\"</span>,\n        label: <span class=\"hljs-string\">\"Red\"</span>\n    },\n    {\n        value: <span class=\"hljs-number\">50</span>,\n        color: <span class=\"hljs-string\">\"#46BFBD\"</span>,\n        highlight: <span class=\"hljs-string\">\"#5AfirD1\"</span>,\n        label: <span class=\"hljs-string\">\"Green\"</span>\n    },\n    {\n        value: <span class=\"hljs-number\">100</span>,\n        color: <span class=\"hljs-string\">\"#FDB45C\"</span>,\n        highlight: <span class=\"hljs-string\">\"#FFC870\"</span>,\n        label: <span class=\"hljs-string\">\"Yellow\"</span>\n    }\n];\n\n<span class=\"hljs-keyword\">const</span> doughnutOptions = {\n    <span class=\"hljs-comment\">//Boolean - Whether we should show a stroke on each segment</span>\n    segmentShowStroke: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//String - The colour of each segment stroke</span>\n    segmentStrokeColor: <span class=\"hljs-string\">\"#fff\"</span>,\n\n    <span class=\"hljs-comment\">//Number - The width of each segment stroke</span>\n    segmentStrokeWidth: <span class=\"hljs-number\">2</span>,\n\n    <span class=\"hljs-comment\">//Number - The percentage of the chart that we cut out of the middle</span>\n    percentageInnerCutout: <span class=\"hljs-number\">50</span>, <span class=\"hljs-comment\">// This is 0 for Pie charts</span>\n\n    <span class=\"hljs-comment\">//Number - Amount of animation steps</span>\n    animationSteps: <span class=\"hljs-number\">100</span>,\n\n    <span class=\"hljs-comment\">//String - Animation easing effect</span>\n    animationEasing: <span class=\"hljs-string\">\"easeOutBounce\"</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether we animate the rotation of the Doughnut</span>\n    animateRotate: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">//Boolean - Whether we animate scaling the Doughnut from the centre</span>\n    animateScale: <span class=\"hljs-literal\">false</span>,\n\n    <span class=\"hljs-comment\">//String - A legend template</span>\n    legendTemplate:\n        <span class=\"hljs-string\">'&lt;ul class=\"&lt;%=name.toLowerCase()%&gt;-legend\"&gt;&lt;% for (var i=0; i&lt;segments.length; i++){%&gt;&lt;li&gt;&lt;span style=\"background-color:&lt;%=segments[i].fillColor%&gt;\"&gt;&lt;/span&gt;&lt;%if(segments[i].label){%&gt;&lt;%=segments[i].label%&gt;&lt;%}%&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;'</span>\n};\n\n<span class=\"hljs-keyword\">const</span> doughnutCtx = document.getElementById(<span class=\"hljs-string\">\"myDoughnutGraph\"</span>).getContext(<span class=\"hljs-string\">\"2d\"</span>);\n\n<span class=\"hljs-keyword\">const</span> myDoughnutChart = <span class=\"hljs-keyword\">new</span> Chart(doughnutCtx).Doughnut(\n    doughnutData,\n    doughnutOptions\n);\n\n</code></pre></div>",
    "sec_9.js": "<div class=\"codeBlock hljs javascript\" id=\"sec_9\"><pre id=\"sec_9_code\" ><code class=\"json\"><span class=\"hljs-comment\">// Navigation Variables</span>\n<span class=\"hljs-keyword\">var</span> caret = $(<span class=\"hljs-string\">\".fa.fa-caret-down\"</span>);\n<span class=\"hljs-keyword\">var</span> box = $(<span class=\"hljs-string\">\".account-box\"</span>).hide();\n\n<span class=\"hljs-keyword\">var</span> nav = $(<span class=\"hljs-string\">\".fa.fa-bars\"</span>);\n<span class=\"hljs-keyword\">var</span> menu = $(<span class=\"hljs-string\">\".menu\"</span>).hide();\n\n<span class=\"hljs-comment\">// Trigger Click Event For Navigation</span>\ncaret.click(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">e</span>) </span>{\n\n  e.preventDefault();\n\n  box.fadeToggle();\n\n});\n\nnav.click(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n\n  menu.fadeToggle();\n\n});\n\n<span class=\"hljs-comment\">// Line Chart</span>\n<span class=\"hljs-keyword\">var</span> lineChartData = {\n  <span class=\"hljs-attr\">labels</span>: [<span class=\"hljs-string\">\"January\"</span>, <span class=\"hljs-string\">\"February\"</span>, <span class=\"hljs-string\">\"March\"</span>, <span class=\"hljs-string\">\"April\"</span>, <span class=\"hljs-string\">\"May\"</span>, <span class=\"hljs-string\">\"June\"</span>, <span class=\"hljs-string\">\"July\"</span>, <span class=\"hljs-string\">\"August\"</span>, <span class=\"hljs-string\">\"September\"</span>, <span class=\"hljs-string\">\"October\"</span>, <span class=\"hljs-string\">\"November\"</span>, <span class=\"hljs-string\">\"December\"</span>],\n  <span class=\"hljs-attr\">datasets</span>: [{\n    <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"My First dataset\"</span>,\n    <span class=\"hljs-attr\">fillColor</span>: <span class=\"hljs-string\">\"rgba(41, 128, 185, 0.5)\"</span>,\n    <span class=\"hljs-attr\">strokeColor</span>: <span class=\"hljs-string\">\"none\"</span>,\n    <span class=\"hljs-attr\">pointColor</span>: <span class=\"hljs-string\">\"rgba(41, 128, 185, 0.9)\"</span>,\n    <span class=\"hljs-attr\">pointStrokeColor</span>: <span class=\"hljs-string\">\"rgba(41, 128, 185, 0)\"</span>,\n    <span class=\"hljs-attr\">pointHighlightFill</span>: <span class=\"hljs-string\">\"rgba(41, 128, 185, 0.9)\"</span>,\n    <span class=\"hljs-attr\">pointHighlightStroke</span>: <span class=\"hljs-string\">\"rgba(41, 128, 185, 0)\"</span>,\n    <span class=\"hljs-attr\">data</span>: [<span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">70</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">120</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">70</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">90</span>]</div>\n  }, {\n    <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"My Second dataset\"</span>,\n    <span class=\"hljs-attr\">fillColor</span>: <span class=\"hljs-string\">\"rgba(155, 89, 182, 0.5)\"</span>,\n    <span class=\"hljs-attr\">strokeColor</span>: <span class=\"hljs-string\">\"none\"</span>,\n    <span class=\"hljs-attr\">pointColor</span>: <span class=\"hljs-string\">\"rgba(155, 89, 182, 0.9)\"</span>,\n    <span class=\"hljs-attr\">pointStrokeColor</span>: <span class=\"hljs-string\">\"rgba(231, 76, 60, 255, 0)\"</span>,\n    <span class=\"hljs-attr\">pointHighlightFill</span>: <span class=\"hljs-string\">\"rgba(155, 89, 182, 0.9)\"</span>,\n    <span class=\"hljs-attr\">pointHighlightStroke</span>: <span class=\"hljs-string\">\"rgba(231, 76, 60, 0)\"</span>,\n    <span class=\"hljs-attr\">data</span>: [<span class=\"hljs-number\">28</span>, <span class=\"hljs-number\">48</span>, <span class=\"hljs-number\">40</span>, <span class=\"hljs-number\">19</span>, <span class=\"hljs-number\">86</span>, <span class=\"hljs-number\">27</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">90</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">90</span>, <span class=\"hljs-number\">20</span>]\n  }]\n};\n\n<span class=\"hljs-built_in\">window</span>.onload = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n  <span class=\"hljs-keyword\">var</span> ctx1 = <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"myChart\"</span>).getContext(<span class=\"hljs-string\">\"2d\"</span>);\n  <span class=\"hljs-built_in\">window</span>.myLine = <span class=\"hljs-keyword\">new</span> Chart(ctx1).Line(lineChartData, {\n\n    <span class=\"hljs-attr\">responsive</span>: <span class=\"hljs-literal\">true</span>\n  });\n};\n\nChart.defaults.global = {\n    <span class=\"hljs-comment\">// Boolean - Whether to animate the chart</span>\n    <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Animations_0\" class=\"highlights fea_Animations\"><span class=\"hljs-attr\">animation</span>: <span class=\"hljs-literal\">true</span>,</div>\n\n    <span class=\"hljs-comment\">// Number - Number of animation steps</span>\n    <span class=\"hljs-attr\">animationSteps</span>: <span class=\"hljs-number\">60</span>,\n\n    <span class=\"hljs-comment\">// String - Animation easing effect</span>\n    <span class=\"hljs-comment\">// Possible effects are:</span>\n    <span class=\"hljs-comment\">// [easeInOutQuart, linear, easeOutBounce, easeInBack, easeInOutQuad,</span>\n    <span class=\"hljs-comment\">//  easeOutQuart, easeOutQuad, easeInOutBounce, easeOutSine, easeInOutCubic,</span>\n    <span class=\"hljs-comment\">//  easeInExpo, easeInOutBack, easeInCirc, easeInOutElastic, easeOutBack,</span>\n    <span class=\"hljs-comment\">//  easeInQuad, easeInOutExpo, easeInQuart, easeOutQuint, easeInOutCirc,</span>\n    <span class=\"hljs-comment\">//  easeInSine, easeOutExpo, easeOutCirc, easeOutCubic, easeInQuint,</span>\n    <span class=\"hljs-comment\">//  easeInElastic, easeInOutSine, easeInOutQuint, easeInBounce,</span>\n    <span class=\"hljs-comment\">//  easeOutElastic, easeInCubic]</span>\n    <span class=\"hljs-attr\">animationEasing</span>: <span class=\"hljs-string\">\"easeOutQuart\"</span>,\n\n    <span class=\"hljs-comment\">// Boolean - If we should show the scale at all</span>\n    <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-attr\">showScale</span>: <span class=\"hljs-literal\">false</span>,</div>\n\n    <span class=\"hljs-comment\">// Boolean - If we want to override with a hard coded scale</span>\n    <span class=\"hljs-attr\">scaleOverride</span>: <span class=\"hljs-literal\">false</span>,\n\n    <span class=\"hljs-comment\">// ** Required if scaleOverride is true **</span>\n    <span class=\"hljs-comment\">// Number - The number of steps in a hard coded scale</span>\n    <span class=\"hljs-attr\">scaleSteps</span>: <span class=\"hljs-literal\">null</span>,\n    <span class=\"hljs-comment\">// Number - The value jump in the hard coded scale</span>\n    <span class=\"hljs-attr\">scaleStepWidth</span>: <span class=\"hljs-literal\">null</span>,\n    <span class=\"hljs-comment\">// Number - The scale starting value</span>\n    <span class=\"hljs-attr\">scaleStartValue</span>: <span class=\"hljs-literal\">null</span>,\n\n    <span class=\"hljs-comment\">// String - Colour of the scale line</span>\n    <span class=\"hljs-attr\">scaleLineColor</span>: <span class=\"hljs-string\">\"rgba(0,0,0,.1)\"</span>,\n\n    <span class=\"hljs-comment\">// Number - Pixel width of the scale line</span>\n    <span class=\"hljs-attr\">scaleLineWidth</span>: <span class=\"hljs-number\">1</span>,\n\n    <span class=\"hljs-comment\">// Boolean - Whether to show labels on the scale</span>\n    <span class=\"hljs-attr\">scaleShowLabels</span>: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">// Interpolated JS string - can access value</span>\n    <span class=\"hljs-attr\">scaleLabel</span>: <span class=\"hljs-string\">\"&lt;%=value%&gt;\"</span>,\n\n    <span class=\"hljs-comment\">// Boolean - Whether the scale should stick to integers, not floats even if drawing space is there</span>\n    <span class=\"hljs-attr\">scaleIntegersOnly</span>: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">// Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value</span>\n    <span class=\"hljs-attr\">scaleBeginAtZero</span>: <span class=\"hljs-literal\">false</span>,\n\n    <span class=\"hljs-comment\">// String - Scale label font declaration for the scale label</span>\n    <span class=\"hljs-attr\">scaleFontFamily</span>: <span class=\"hljs-string\">\"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\"</span>,\n\n    <span class=\"hljs-comment\">// Number - Scale label font size in pixels</span>\n    <span class=\"hljs-attr\">scaleFontSize</span>: <span class=\"hljs-number\">12</span>,\n\n    <span class=\"hljs-comment\">// String - Scale label font weight style</span>\n    <span class=\"hljs-attr\">scaleFontStyle</span>: <span class=\"hljs-string\">\"normal\"</span>,\n\n    <span class=\"hljs-comment\">// String - Scale label font colour</span>\n    <span class=\"hljs-attr\">scaleFontColor</span>: <span class=\"hljs-string\">\"#666\"</span>,\n\n    <span class=\"hljs-comment\">// Boolean - whether or not the chart should be responsive and resize when the browser does.</span>\n    <span class=\"hljs-attr\">responsive</span>: <span class=\"hljs-literal\">false</span>,\n\n    <span class=\"hljs-comment\">// Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container</span>\n    <span class=\"hljs-attr\">maintainAspectRatio</span>: <span class=\"hljs-literal\">true</span>,\n\n    <span class=\"hljs-comment\">// Boolean - Determines whether to draw tooltips on the canvas or not</span>\n    <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\"><span class=\"hljs-attr\">showTooltips</span>: <span class=\"hljs-literal\">true</span>,</div>\n\n    <span class=\"hljs-comment\">// Function - Determines whether to execute the customTooltips function instead of drawing the built in tooltips (See [Advanced - External Tooltips](#advanced-usage-custom-tooltips))</span>\n    <span class=\"hljs-attr\">customTooltips</span>: <span class=\"hljs-literal\">false</span>,\n\n    <span class=\"hljs-comment\">// Array - Array of string names to attach tooltip events</span>\n    <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\"><span class=\"hljs-attr\">tooltipEvents</span>: [<span class=\"hljs-string\">\"mousemove\"</span>, <span class=\"hljs-string\">\"touchstart\"</span>, <span class=\"hljs-string\">\"touchmove\"</span>],</div>\n\n    <span class=\"hljs-comment\">// String - Tooltip background colour</span>\n    <span class=\"hljs-attr\">tooltipFillColor</span>: <span class=\"hljs-string\">\"rgba(0,0,0,0.8)\"</span>,\n\n    <span class=\"hljs-comment\">// String - Tooltip label font declaration for the scale label</span>\n   <div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\"> <span class=\"hljs-attr\">t</span><span class=\"hljs-attr\">ooltipFontFamily</span>: <span class=\"hljs-string\">\"'</span><span class=\"hljs-string\">Helvetica Neue', 'Helvetica', 'Arial', sans-serif\"</span>,</div>\n\n    <span class=\"hljs-comment\">// Number - Tooltip label font size in pixels</span>\n    <span class=\"hljs-attr\">tooltipFontSize</span>: <span class=\"hljs-number\">14</span>,\n\n    <span class=\"hljs-comment\">// String - Tooltip font weight style</span>\n    <span class=\"hljs-attr\">tooltipFontStyle</span>: <span class=\"hljs-string\">\"normal\"</span>,\n\n    <span class=\"hljs-comment\">// String - Tooltip label font colour</span>\n    <span class=\"hljs-attr\">tooltipFontColor</span>: <span class=\"hljs-string\">\"#fff\"</span>,\n\n    <span class=\"hljs-comment\">// String - Tooltip title font declaration for the scale label</span>\n    <span class=\"hljs-attr\">tooltipTitleFontFamily</span>: <span class=\"hljs-string\">\"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\"</span>,\n\n    <span class=\"hljs-comment\">// Number - Tooltip title font size in pixels</span>\n    <span class=\"hljs-attr\">tooltipTitleFontSize</span>: <span class=\"hljs-number\">14</span>,\n\n    <span class=\"hljs-comment\">// String - Tooltip title font weight style</span>\n    <span class=\"hljs-attr\">tooltipTitleFontStyle</span>: <span class=\"hljs-string\">\"bold\"</span>,\n\n    <span class=\"hljs-comment\">// String - Tooltip title font colour</span>\n    <span class=\"hljs-attr\">tooltipTitleFontColor</span>: <span class=\"hljs-string\">\"#fff\"</span>,\n\n    <span class=\"hljs-comment\">// Number - pixel width of padding around tooltip text</span>\n    <span class=\"hljs-attr\">tooltipYPadding</span>: <span class=\"hljs-number\">6</span>,\n\n    <span class=\"hljs-comment\">// Number - pixel width of padding around tooltip text</span>\n    <span class=\"hljs-attr\">tooltipXPadding</span>: <span class=\"hljs-number\">6</span>,\n\n    <span class=\"hljs-comment\">// Number - Size of the caret on the tooltip</span>\n    <span class=\"hljs-attr\">tooltipCaretSize</span>: <span class=\"hljs-number\">8</span>,\n\n    <span class=\"hljs-comment\">// Number - Pixel radius of the tooltip border</span>\n    <span class=\"hljs-attr\">tooltipCornerRadius</span>: <span class=\"hljs-number\">6</span>,\n\n    <span class=\"hljs-comment\">// Number - Pixel offset from point x to tooltip edge</span>\n    <span class=\"hljs-attr\">tooltipXOffset</span>: <span class=\"hljs-number\">10</span>,\n\n    <span class=\"hljs-comment\">// String - Template string for single tooltips</span>\n    <span class=\"hljs-attr\">tooltipTemplate</span>: <span class=\"hljs-string\">\"&lt;%if (label){%&gt;&lt;%=label%&gt;: &lt;%}%&gt;&lt;%= value %&gt;\"</span>,\n\n    <span class=\"hljs-comment\">// String - Template string for multiple tooltips</span>\n    <span class=\"hljs-attr\">multiTooltipTemplate</span>: <span class=\"hljs-string\">\"&lt;%= value %&gt;\"</span>,\n\n    <span class=\"hljs-comment\">// Function - Will fire on animation progression.</span>\n    <span class=\"hljs-attr\">onAnimationProgress</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{},\n\n    <span class=\"hljs-comment\">// Function - Will fire on animation completion.</span>\n    <span class=\"hljs-attr\">onAnimationComplete</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{}\n}</code></pre></div>",
    "sec_12.js": "<div class=\"codeBlock hljs javascript\" id=\"sec_12\"><pre id=\"sec_12_code\" ><code class=\"json\"><span class=\"hljs-keyword\">var</span> chartData = {\n  <span class=\"hljs-attr\">labels</span>: [<span class=\"hljs-string\">\"January\"</span>, <span class=\"hljs-string\">\"February\"</span>, <span class=\"hljs-string\">\"March\"</span>, <span class=\"hljs-string\">\"April\"</span>, <span class=\"hljs-string\">\"May\"</span>, <span class=\"hljs-string\">\"June\"</span>, <span class=\"hljs-string\">\"July\"</span>],\n  <span class=\"hljs-attr\">datasets</span>: [\n    {\n      <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"line\"</span>,</div>\n      <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"Dataset 1\"</span>,\n      <span class=\"hljs-attr\">borderColor</span>: <span class=\"hljs-built_in\">window</span>.chartColors.blue,\n      <span class=\"hljs-attr\">borderWidth</span>: <span class=\"hljs-number\">2</span>,\n      <span class=\"hljs-attr\">fill</span>: <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">data</span>: [\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor()\n      ]\n    },\n    {\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"bar\"</span>,\n      <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"Dataset 2\"</span>,\n      <span class=\"hljs-attr\">backgroundColor</span>: <span class=\"hljs-built_in\">window</span>.chartColors.red,\n      <span class=\"hljs-attr\">data</span>: [\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor()\n      ],\n      <span class=\"hljs-attr\">borderColor</span>: <span class=\"hljs-string\">\"white\"</span>,\n      <span class=\"hljs-attr\">borderWidth</span>: <span class=\"hljs-number\">2</span>\n    },\n    {\n      <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"bar\"</span>,\n      <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"Dataset 3\"</span>,\n      <span class=\"hljs-attr\">backgroundColor</span>: <span class=\"hljs-built_in\">window</span>.chartColors.green,\n      <span class=\"hljs-attr\">data</span>: [\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor()\n      ]\n    }\n  ]\n};\n<span class=\"hljs-built_in\">window</span>.onload = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n  <span class=\"hljs-keyword\">var</span> ctx = <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"canvas\"</span>).getContext(<span class=\"hljs-string\">\"2d\"</span>);\n  <span class=\"hljs-built_in\">window</span>.myMixedChart = <span class=\"hljs-keyword\">new</span> Chart(ctx, {\n    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"bar\"</span>,\n    <span class=\"hljs-attr\">data</span>: chartData,\n    <span class=\"hljs-attr\">options</span>: {\n      <span class=\"hljs-attr\">responsive</span>: <span class=\"hljs-literal\">true</span>,\n      <span class=\"hljs-attr\">title</span>: {\n        <span class=\"hljs-attr\">display</span>: <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">text</span>: <span class=\"hljs-string\">\"Chart.js Combo Bar Line Chart\"</span>\n      },\n      <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\"><span class=\"hljs-attr\">tooltips</span>: {\n        <span class=\"hljs-attr\">mode</span>: <span class=\"hljs-string\">\"index\"</span>,\n        <span class=\"hljs-attr\">intersect</span>: <span class=\"hljs-literal\">true</span>\n      }</div>,\n      <span class=\"hljs-attr\">annotation</span>: {\n        <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\"><span class=\"hljs-attr\">events</span>: [<span class=\"hljs-string\">\"click\"</span>],</div>\n        <span class=\"hljs-attr\">annotations</span>: [\n          {\n            <span class=\"hljs-attr\">drawTime</span>: <span class=\"hljs-string\">\"afterDatasetsDraw\"</span>,\n            <span class=\"hljs-attr\">id</span>: <span class=\"hljs-string\">\"hline\"</span>,\n            <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"line\"</span>,\n            <span class=\"hljs-attr\">mode</span>: <span class=\"hljs-string\">\"horizontal\"</span>,\n            <span class=\"hljs-attr\">scaleID</span>: <span class=\"hljs-string\">\"y-axis-0\"</span>,\n            <span class=\"hljs-attr\">value</span>: randomScalingFactor(),\n            <span class=\"hljs-attr\">borderColor</span>: <span class=\"hljs-string\">\"black\"</span>,\n            <span class=\"hljs-attr\">borderWidth</span>: <span class=\"hljs-number\">5</span>,\n            <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\"><span class=\"hljs-attr\">label</span>: {\n              <span class=\"hljs-attr\">backgroundColor</span>: <span class=\"hljs-string\">\"red\"</span>,\n              <span class=\"hljs-attr\">content</span>: <span class=\"hljs-string\">\"Test Label\"</span>,\n              <span class=\"hljs-attr\">enabled</span>: <span class=\"hljs-literal\">true</span>\n            },</div>\n            <span class=\"hljs-attr\">onClick</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">e</span>) </span>{\n              <span class=\"hljs-comment\">// The annotation is is bound to the `this` variable</span>\n              <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"Annotation\"</span>, e.type, <span class=\"hljs-built_in\">this</span>);\n            }\n          },\n          {\n            <span class=\"hljs-attr\">drawTime</span>: <span class=\"hljs-string\">\"beforeDatasetsDraw\"</span>,\n            <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"box\"</span>,\n            <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-attr\">xScaleID</span>: <span class=\"hljs-string\">\"x-axis-0\"</span>,\n            <span class=\"hljs-attr\">yScaleID</span>: <span class=\"hljs-string\">\"y-axis-0\"</span>,\n            <span class=\"hljs-attr\">xMin</span>: <span class=\"hljs-string\">\"February\"</span>,\n            <span class=\"hljs-attr\">xMax</span>: <span class=\"hljs-string\">\"April\"</span>,\n            <span class=\"hljs-attr\">yMin</span>: randomScalingFactor(),\n            <span class=\"hljs-attr\">yMax</span>: randomScalingFactor(),</div>\n            <span class=\"hljs-attr\">backgroundColor</span>: <span class=\"hljs-string\">\"rgba(101, 33, 171, 0.5)\"</span>,\n            <span class=\"hljs-attr\">borderColor</span>: <span class=\"hljs-string\">\"rgb(101, 33, 171)\"</span>,\n            <span class=\"hljs-attr\">borderWidth</span>: <span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">onClick</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">e</span>) </span>{\n              <span class=\"hljs-built_in\">console</span>.log(<span class=\"hljs-string\">\"Box\"</span>, e.type, <span class=\"hljs-built_in\">this</span>);\n            }\n          }\n        ]\n      }\n    }\n  });\n};\n\n<span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"randomizeData\"</span>).addEventListener(<span class=\"hljs-string\">\"click\"</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n  chartData.datasets.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">dataset</span>) </span>{\n    <div style=\"display: inline;\" id=\"Data_Grouping_0\" class=\"highlights fea_Data_Grouping\">dataset.data = dataset.data.map(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n      <span class=\"hljs-keyword\">return</span> randomScalingFactor();\n    });</div>\n  });\n  <span class=\"hljs-built_in\">window</span>.myMixedChart.update();\n});\n\n</code></pre></div>",
    "sec_16.js": "<div class=\"codeBlock hljs yaml\" id=\"sec_16\"><pre id=\"sec_16_code\" ><code class=\"json\"><span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;block:hover:0&gt;</span>\n<span class=\"hljs-string\">function</span> <span class=\"hljs-string\">triggerHover(chart)</span> {\n  <span class=\"hljs-string\">if</span> <span class=\"hljs-string\">(chart.getActiveElements().length</span> <span class=\"hljs-string\">&gt;</span> <span class=\"hljs-number\">0</span><span class=\"hljs-string\">)</span> {\n    <span class=\"hljs-string\">chart.setActiveElements(</span>[]<span class=\"hljs-string\">);</span>\n  } <span class=\"hljs-string\">else</span> {\n    <span class=\"hljs-string\">chart.setActiveElements(</span>[\n      {\n        <span class=\"hljs-attr\">datasetIndex:</span> <span class=\"hljs-number\">0</span>,\n        <span class=\"hljs-attr\">index:</span> <span class=\"hljs-number\">0</span>,\n      }, {\n        <span class=\"hljs-attr\">datasetIndex:</span> <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">index:</span> <span class=\"hljs-number\">0</span>,\n      }\n    ]<span class=\"hljs-string\">);</span>\n  }\n  <span class=\"hljs-string\">chart.update();</span>\n}\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;/block:hover&gt;</span>\n\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;block:tooltip:1&gt;</span>\n<span class=\"hljs-string\">function</span> <span class=\"hljs-string\">triggerTooltip(chart)</span> {\n <div style=\"display: inline;\" id=\"Tooltip_1\" class=\"highlights fea_Tooltip\"> <span class=\"hljs-string\">const</span> <span class=\"hljs-string\">tooltip</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">chart.tooltip;</span></div><span class=\"hljs-string\"></span>\n  <span class=\"hljs-string\">if</span> <span class=\"hljs-string\">(tooltip.getActiveElements().length</span> <span class=\"hljs-string\">&gt;</span> <span class=\"hljs-number\">0</span><span class=\"hljs-string\">)</span> {\n    <span class=\"hljs-string\">tooltip.setActiveElements(</span>[], {<span class=\"hljs-attr\">x:</span> <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">y:</span> <span class=\"hljs-number\">0</span>}<span class=\"hljs-string\">);</span>\n  } <span class=\"hljs-string\">else</span> {\n    <span class=\"hljs-string\">const</span> <span class=\"hljs-string\">chartArea</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">chart.chartArea;</span>\n    <span class=\"hljs-string\"></span><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\"><span class=\"hljs-string\">tooltip.setActiveElements(</span>[\n      {\n        <span class=\"hljs-attr\">datasetIndex:</span> <span class=\"hljs-number\">0</span>,\n        <span class=\"hljs-attr\">index:</span> <span class=\"hljs-number\">2</span>,\n      }, {\n        <span class=\"hljs-attr\">datasetIndex:</span> <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">index:</span> <span class=\"hljs-number\">2</span>,\n      }\n    ],</div>\n    {\n      <span class=\"hljs-attr\">x:</span> <span class=\"hljs-string\">(chartArea.left</span> <span class=\"hljs-string\">+</span> <span class=\"hljs-string\">chartArea.right)</span> <span class=\"hljs-string\">/</span> <span class=\"hljs-number\">2</span>,\n      <span class=\"hljs-attr\">y:</span> <span class=\"hljs-string\">(chartArea.top</span> <span class=\"hljs-string\">+</span> <span class=\"hljs-string\">chartArea.bottom)</span> <span class=\"hljs-string\">/</span> <span class=\"hljs-number\">2</span>,\n    }<span class=\"hljs-string\">);</span>\n  }\n\n  <span class=\"hljs-string\">chart.update();</span>\n}\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;/block:tooltip&gt;</span>\n\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;block:actions:2&gt;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">actions</span> <span class=\"hljs-string\">=</span> [\n  {\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Trigger Hover'</span>,\n    <span class=\"hljs-attr\">handler:</span> <span class=\"hljs-string\">triggerHover</span>\n  },\n  {\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Trigger Tooltip'</span>,\n    <span class=\"hljs-attr\">handler:</span> <span class=\"hljs-string\">triggerTooltip</span>\n  }\n]<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;/block:actions&gt;</span>\n\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;block:setup:4&gt;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">DATA_COUNT</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-number\">7</span><span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">NUMBER_CFG</span> <span class=\"hljs-string\">=</span> {<span class=\"hljs-attr\">count:</span> <span class=\"hljs-string\">DATA_COUNT</span>, <span class=\"hljs-attr\">min:</span> <span class=\"hljs-number\">-100</span>, <span class=\"hljs-attr\">max:</span> <span class=\"hljs-number\">100</span>}<span class=\"hljs-string\">;</span>\n\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">labels</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">Utils.months({count:</span> <span class=\"hljs-number\">7</span><span class=\"hljs-string\">});</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">data</span> <span class=\"hljs-string\">=</span> {\n  <span class=\"hljs-attr\">labels:</span> <span class=\"hljs-string\">labels</span>,\n  <span class=\"hljs-attr\">datasets:</span> [\n    {\n      <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">'Dataset 1'</span>,\n      <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">Utils.numbers(NUMBER_CFG)</span>,\n      <span class=\"hljs-attr\">borderColor:</span> <span class=\"hljs-string\">Utils.CHART_COLORS.red</span>,\n      <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">Utils.transparentize(Utils.CHART_COLORS.red</span>, <span class=\"hljs-number\">0.5</span><span class=\"hljs-string\">)</span>,\n      <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\"><span class=\"hljs-attr\">h</span><span class=\"hljs-attr\">overBorderWidth:</span> <span class=\"hljs-number\">5</span>,\n      <span class=\"hljs-attr\">hoverBorderColor:</span> <span class=\"hljs-string\">'gre</span><span class=\"hljs-string\">en'</span>,</div>\n    },\n    {\n      <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">'Dataset 2'</span>,\n      <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">Utils.numbers(NUMBER_CFG)</span>,\n      <span class=\"hljs-attr\">borderColor:</span> <span class=\"hljs-string\">Utils.CHART_COLORS.blue</span>,\n      <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">Utils.transparentize(Utils.CHART_COLORS.blue</span>, <span class=\"hljs-number\">0.5</span><span class=\"hljs-string\">)</span>,\n      <span class=\"hljs-attr\">hoverBorderWidth:</span> <span class=\"hljs-number\">5</span>,\n      <span class=\"hljs-attr\">hoverBorderColor:</span> <span class=\"hljs-string\">'green'</span>,\n    }\n  ]\n}<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;/block:setup&gt;</span>\n\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;block:config:3&gt;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">config</span> <span class=\"hljs-string\">=</span> {\n  <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">t</span><span class=\"hljs-attr\">ype:</span> <span class=\"hljs-string\">'</span><span class=\"hljs-string\">bar'</span>,</div>\n  <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">data</span>,\n  <span class=\"hljs-attr\">options:</span> {\n  },\n}<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;/block:config&gt;</span>\n\n<span class=\"hljs-string\">module.exports</span> <span class=\"hljs-string\">=</span> {\n  <span class=\"hljs-attr\">actions:</span> <span class=\"hljs-string\">actions</span>,\n  <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">config</span>,\n}<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//https://www.chartjs.org/docs/latest/samples/advanced/programmatic-events.html</span></code></pre></div>",
    "sec_19.js": "<div class=\"codeBlock hljs yaml\" id=\"sec_19\"><pre id=\"sec_19_code\" ><code class=\"json\"><span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;block:actions:2&gt;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">actions</span> <span class=\"hljs-string\">=</span> [\n  {\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Randomize'</span>,\n    <span class=\"hljs-string\">handler(chart)</span> {\n      <span class=\"hljs-string\">chart.data.datasets.forEach(dataset</span> <span class=\"hljs-string\">=&gt;</span> {\n        <span class=\"hljs-string\"></span><div style=\"display: inline;\" id=\"Data_Transformation_0\" class=\"highlights fea_Data_Transformation\"><span class=\"hljs-string\">dataset.data</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">Utils.bubbles(</span>{<span class=\"hljs-attr\"></span><span class=\"hljs-attr\">count:</span> <span class=\"hljs-string\">chart.data.labels.length</span>, <span class=\"hljs-attr\">rmin:</span> <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">rmax:</span> <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">min:</span> <span class=\"hljs-number\">-100</span>, <span class=\"hljs-attr\">max:</span> <span class=\"hljs-number\">100</span><span class=\"hljs-number\"></span>}<span class=\"hljs-string\">);</span></div><span class=\"hljs-string\"></span>\n      }<span class=\"hljs-string\">);</span>\n      <span class=\"hljs-string\">chart.update();</span>\n    }\n  },\n  {\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Add Dataset'</span>,\n    <span class=\"hljs-string\">handler(chart)</span> {\n      <span class=\"hljs-string\">const</span> <span class=\"hljs-string\">data</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">chart.data;</span>\n      <span class=\"hljs-string\">const</span> <span class=\"hljs-string\">dsColor</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">Utils.namedColor(chart.data.datasets.length);</span>\n      <span class=\"hljs-string\">const</span> <span class=\"hljs-string\">newDataset</span> <span class=\"hljs-string\">=</span> {\n        <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">'Dataset '</span> <span class=\"hljs-string\">+</span> <span class=\"hljs-string\">(data.datasets.length</span> <span class=\"hljs-string\">+</span> <span class=\"hljs-number\">1</span><span class=\"hljs-string\">)</span>,\n        <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">Utils.transparentize(dsColor</span>, <span class=\"hljs-number\">0.5</span><span class=\"hljs-string\">)</span>,\n        <span class=\"hljs-attr\">borderColor:</span> <span class=\"hljs-string\">dsColor</span>,\n        <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">Utils.bubbles(</span>{<span class=\"hljs-attr\">count:</span> <span class=\"hljs-string\">data.labels.length</span>, <span class=\"hljs-attr\">rmin:</span> <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">rmax:</span> <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">min:</span> <span class=\"hljs-number\">-100</span>, <span class=\"hljs-attr\">max:</span> <span class=\"hljs-number\">100</span>}<span class=\"hljs-string\">)</span>,\n      }<span class=\"hljs-string\">;</span>\n      <span class=\"hljs-string\">chart.data.datasets.push(newDataset);</span>\n      <span class=\"hljs-string\">chart.update();</span>\n    }\n  },\n  {\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Add Data'</span>,\n    <span class=\"hljs-string\">handler(chart)</span> {\n      <span class=\"hljs-string\">const</span> <span class=\"hljs-string\">data</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">chart.data;</span>\n      <span class=\"hljs-string\">if</span> <span class=\"hljs-string\">(data.datasets.length</span> <span class=\"hljs-string\">&gt;</span> <span class=\"hljs-number\">0</span><span class=\"hljs-string\">)</span> {\n\n        <span class=\"hljs-string\">for</span> <span class=\"hljs-string\">(var</span> <span class=\"hljs-string\">index</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-number\">0</span><span class=\"hljs-string\">;</span> <span class=\"hljs-string\">index</span> <span class=\"hljs-string\">&lt;</span> <span class=\"hljs-string\">data.datasets.length;</span> <span class=\"hljs-string\">++index)</span> {\n          <span class=\"hljs-string\">data.datasets</span>[<span class=\"hljs-string\">index</span>]<span class=\"hljs-string\">.data.push(Utils.bubbles(</span>{<span class=\"hljs-attr\">count:</span> <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">rmin:</span> <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">rmax:</span> <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">min:</span> <span class=\"hljs-number\">-100</span>, <span class=\"hljs-attr\">max:</span> <span class=\"hljs-number\">100</span>}<span class=\"hljs-string\">)</span>[<span class=\"hljs-number\">0</span>]<span class=\"hljs-string\">);</span>\n        }\n\n        <span class=\"hljs-string\">chart.update();</span>\n      }\n    }\n  },\n  {\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Remove Dataset'</span>,\n    <span class=\"hljs-string\">handler(chart)</span> {\n      <span class=\"hljs-string\">chart.data.datasets.pop();</span>\n      <span class=\"hljs-string\">chart.update();</span>\n    }\n  },\n  {\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Remove Data'</span>,\n    <span class=\"hljs-string\">handler(chart)</span> {\n      <span class=\"hljs-string\">chart.data.labels.splice(-1</span>, <span class=\"hljs-number\">1</span><span class=\"hljs-string\">);</span> <span class=\"hljs-string\">//</span> <span class=\"hljs-string\">remove</span> <span class=\"hljs-string\">the</span> <span class=\"hljs-string\">label</span> <span class=\"hljs-string\">first</span>\n\n      <span class=\"hljs-string\">chart.data.datasets.forEach(dataset</span> <span class=\"hljs-string\">=&gt;</span> {\n        <span class=\"hljs-string\">dataset.data.pop();</span>\n      }<span class=\"hljs-string\">);</span>\n\n      <span class=\"hljs-string\">chart.update();</span>\n    }\n  }\n]<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;/block:actions&gt;</span>\n\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;block:setup:1&gt;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">DATA_COUNT</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-number\">7</span><span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">NUMBER_CFG</span> <span class=\"hljs-string\">=</span> {<span class=\"hljs-attr\">count:</span> <span class=\"hljs-string\">DATA_COUNT</span>, <span class=\"hljs-attr\">rmin:</span> <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">rmax:</span> <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">min:</span> <span class=\"hljs-number\">-100</span>, <span class=\"hljs-attr\">max:</span> <span class=\"hljs-number\">100</span>}<span class=\"hljs-string\">;</span>\n\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">labels</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">Utils.months({count:</span> <span class=\"hljs-number\">7</span><span class=\"hljs-string\">});</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">data</span> <span class=\"hljs-string\">=</span> {\n  <span class=\"hljs-attr\">labels:</span> <span class=\"hljs-string\">labels</span>,\n  <span class=\"hljs-attr\">datasets:</span> [\n    {\n      <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">'Dataset 1'</span>,\n      <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">Utils.bubbles(NUMBER_CFG)</span>,\n      <span class=\"hljs-attr\">borderColor:</span> <span class=\"hljs-string\">Utils.CHART_COLORS.red</span>,\n      <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">Utils.transparentize(Utils.CHART_COLORS.red</span>, <span class=\"hljs-number\">0.5</span><span class=\"hljs-string\">)</span>,\n      <span class=\"hljs-attr\">yAxisID:</span> <span class=\"hljs-string\">'y'</span>,\n    },\n    {\n      <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">'Dataset 2'</span>,\n      <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">Utils.bubbles(NUMBER_CFG)</span>,\n      <span class=\"hljs-attr\">borderColor:</span> <span class=\"hljs-string\">Utils.CHART_COLORS.orange</span>,\n      <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">Utils.transparentize(Utils.CHART_COLORS.orange</span>, <span class=\"hljs-number\">0.5</span><span class=\"hljs-string\">)</span>,\n      <span class=\"hljs-attr\">yAxisID:</span> <span class=\"hljs-string\">'y2'</span>,\n    }\n  ]\n}<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;/block:setup&gt;</span>\n\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;block:config:0&gt;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">config</span> <span class=\"hljs-string\">=</span> {\n  <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">'scatter'</span>,</div>\n  <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">data</span>,\n  <span class=\"hljs-attr\">options:</span> {\n    <span class=\"hljs-attr\">responsive:</span> <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">plugins:</span> {\n      <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\"><span class=\"hljs-attr\">legend:</span> {\n        <span class=\"hljs-attr\">position:</span> <span class=\"hljs-string\">'top'</span>,\n      }</div>,\n      <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\"><span class=\"hljs-attr\">t</span><span class=\"hljs-attr\">itle:</span> {\n        <span class=\"hljs-attr\">display:</span> <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">text:</span> <span class=\"hljs-string\">'Chart.js Scatter Multi Axis Chart'</span>\n      }</div>\n    },\n    <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-attr\">scales:</span> {\n      <span class=\"hljs-attr\">y:</span> {\n        <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">'linear'</span>, <span class=\"hljs-string\">//</span> <span class=\"hljs-string\">only</span> <span class=\"hljs-string\">linear</span> <span class=\"hljs-string\">but</span> <span class=\"hljs-string\">allow</span> <span class=\"hljs-string\">scale</span> <span class=\"hljs-string\">type</span> <span class=\"hljs-string\">registration.</span> <span class=\"hljs-string\">This</span> <span class=\"hljs-string\">allows</span> <span class=\"hljs-string\">extensions</span> <span class=\"hljs-string\">to</span> <span class=\"hljs-string\">exist</span> <span class=\"hljs-string\">solely</span> <span class=\"hljs-string\">for</span> <span class=\"hljs-string\">log</span> <span class=\"hljs-string\">scale</span> <span class=\"hljs-string\">for</span> <span class=\"hljs-string\">instance</span>\n        <span class=\"hljs-attr\">position:</span> <span class=\"hljs-string\">'left'</span>,\n        <span class=\"hljs-attr\">ticks:</span> {\n          <span class=\"hljs-attr\">color:</span> <span class=\"hljs-string\">Utils.CHART_COLORS.red</span>\n        }\n      },\n      <span class=\"hljs-attr\">y2:</span> {\n        <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">'linear'</span>, <span class=\"hljs-string\">//</span> <span class=\"hljs-string\">only</span> <span class=\"hljs-string\">linear</span> <span class=\"hljs-string\">but</span> <span class=\"hljs-string\">allow</span> <span class=\"hljs-string\">scale</span> <span class=\"hljs-string\">type</span> <span class=\"hljs-string\">registration.</span> <span class=\"hljs-string\">This</span> <span class=\"hljs-string\">allows</span> <span class=\"hljs-string\">extensions</span> <span class=\"hljs-string\">to</span> <span class=\"hljs-string\">exist</span> <span class=\"hljs-string\">solely</span> <span class=\"hljs-string\">for</span> <span class=\"hljs-string\">log</span> <span class=\"hljs-string\">scale</span> <span class=\"hljs-string\">for</span> <span class=\"hljs-string\">instance</span>\n        <span class=\"hljs-attr\">position:</span> <span class=\"hljs-string\">'right'</span>,\n        <span class=\"hljs-attr\">reverse:</span> <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">ticks:</span> {\n          <span class=\"hljs-attr\">color:</span> <span class=\"hljs-string\">Utils.CHART_COLORS.blue</span>\n        },\n        <span class=\"hljs-attr\">grid:</span> {\n          <span class=\"hljs-attr\">drawOnChartArea:</span> <span class=\"hljs-literal\">false</span> <span class=\"hljs-string\">//</span> <span class=\"hljs-string\">only</span> <span class=\"hljs-string\">want</span> <span class=\"hljs-string\">the</span> <span class=\"hljs-string\">grid</span> <span class=\"hljs-string\">lines</span> <span class=\"hljs-string\">for</span> <span class=\"hljs-string\">one</span> <span class=\"hljs-string\">axis</span> <span class=\"hljs-string\">to</span> <span class=\"hljs-string\">show</span> <span class=\"hljs-string\">up</span>\n        }\n      }</div>\n    }\n  },\n}<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;/block:config&gt;</span>\n\n<span class=\"hljs-string\">module.exports</span> <span class=\"hljs-string\">=</span> {\n  <span class=\"hljs-attr\">actions:</span> <span class=\"hljs-string\">actions</span>,\n  <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">config</span>,\n}<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//https://www.chartjs.org/docs/latest/samples/other-charts/scatter-multi-axis.html</span></code></pre></div>",
    "sec_11.js": "<div class=\"codeBlock hljs javascript\" id=\"sec_11\"><pre id=\"sec_11_code\" ><code class=\"json\">$(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n  $(<span class=\"hljs-string\">\"#doughnutChart\"</span>).drawDoughnutChart([\n    { <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">\"Tokyo\"</span>,         <span class=\"hljs-attr\">value</span> : <span class=\"hljs-number\">120</span>,  <span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\">\"#2C3E50\"</span> },\n    { <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">\"San Francisco\"</span>, <span class=\"hljs-attr\">value</span>:  <span class=\"hljs-number\">80</span>,   <span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\">\"#FC4349\"</span> },\n    { <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">\"New York\"</span>,      <span class=\"hljs-attr\">value</span>:  <span class=\"hljs-number\">70</span>,   <span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\">\"#6DBCDB\"</span> },\n    { <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">\"London\"</span>,        <span class=\"hljs-attr\">value</span> : <span class=\"hljs-number\">50</span>,   <span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\">\"#F7E248\"</span> },\n    { <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">\"Sydney\"</span>,        <span class=\"hljs-attr\">value</span> : <span class=\"hljs-number\">40</span>,   <span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\">\"#D7DADB\"</span> },\n    { <span class=\"hljs-attr\">title</span>: <span class=\"hljs-string\">\"Berlin\"</span>,        <span class=\"hljs-attr\">value</span> : <span class=\"hljs-number\">20</span>,   <span class=\"hljs-attr\">color</span>: <span class=\"hljs-string\">\"#FFF\"</span> }\n  ]);\n});\n<span class=\"hljs-comment\">/*!\n * jquery.drawDoughnutChart.js\n * Version: 0.4.1(Beta)\n * Inspired by Chart.js(http://www.chartjs.org/)\n *\n * Copyright 2014 hiro\n * https://github.com/githiro/drawDoughnutChart\n * Released under the MIT license.\n * \n */</span>\n;(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">$, <span class=\"hljs-literal\">undefined</span></span>) </span>{\n  $.fn.drawDoughnutChart = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">data, options</span>) </span>{\n    <span class=\"hljs-keyword\">var</span> $this = <span class=\"hljs-built_in\">this</span>,\n      W = $this.width(),\n      H = $this.height(),\n      centerX = W/<span class=\"hljs-number\">2</span>,\n      centerY = H/<span class=\"hljs-number\">2</span>,\n      cos = <span class=\"hljs-built_in\">Math</span>.cos,\n      sin = <span class=\"hljs-built_in\">Math</span>.sin,\n      PI = <span class=\"hljs-built_in\">Math</span>.PI,\n      settings = $.extend({\n        <span class=\"hljs-attr\">segmentShowStroke</span> : <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">segmentStrokeColor</span> : <span class=\"hljs-string\">\"#0C1013\"</span>,\n        <span class=\"hljs-attr\">segmentStrokeWidth</span> : <span class=\"hljs-number\">1</span>,\n        <span class=\"hljs-attr\">baseColor</span>: <span class=\"hljs-string\">\"rgba(0,0,0,0.5)\"</span>,\n        <span class=\"hljs-attr\">baseOffset</span>: <span class=\"hljs-number\">4</span>,\n        <span class=\"hljs-attr\">edgeOffset</span> : <span class=\"hljs-number\">10</span>,<span class=\"hljs-comment\">//offset from edge of $this</span>\n        <span class=\"hljs-attr\">percentageInnerCutout</span> : <span class=\"hljs-number\">75</span>,\n        <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Animations_0\" class=\"highlights fea_Animations\"><span class=\"hljs-attr\">animation</span> : <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">animationSteps</span> : <span class=\"hljs-number\">90</span>,\n        <span class=\"hljs-attr\">animationEasing</span> : <span class=\"hljs-string\">\"easeInOutExpo\"</span>,\n        <span class=\"hljs-attr\">animateRotate</span> : <span class=\"hljs-literal\">true</span>,</div>\n        <span class=\"hljs-attr\">tipOffsetX</span>: -<span class=\"hljs-number\">8</span>,\n        <span class=\"hljs-attr\">tipOffsetY</span>: -<span class=\"hljs-number\">45</span>,\n        <span class=\"hljs-attr\">tipClass</span>: <span class=\"hljs-string\">\"doughnutTip\"</span>,\n        <span class=\"hljs-attr\">summaryClass</span>: <span class=\"hljs-string\">\"doughnutSummary\"</span>,\n        <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\"><span class=\"hljs-attr\">summaryTitle</span>: <span class=\"hljs-string\">\"TOTAL:\"</span></div><span class=\"hljs-string\"></span>,\n        <span class=\"hljs-attr\">summaryTitleClass</span>: <span class=\"hljs-string\">\"doughnutSummaryTitle\"</span>,\n        <span class=\"hljs-attr\">summaryNumberClass</span>: <span class=\"hljs-string\">\"doughnutSummaryNumber\"</span>,\n        <span class=\"hljs-attr\">beforeDraw</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{  },\n        <span class=\"hljs-attr\">afterDrawed</span> : <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{  },\n        <span class=\"hljs-attr\">onPathEnter</span> : <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">e,data</span>) </span>{  },\n        <span class=\"hljs-attr\">onPathLeave</span> : <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">e,data</span>) </span>{  }\n      }, options),\n      animationOptions = {\n        <span class=\"hljs-attr\">linear</span> : <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">t</span>) </span>{\n          <span class=\"hljs-keyword\">return</span> t;\n        },\n        <span class=\"hljs-attr\">easeInOutExpo</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> (<span class=\"hljs-params\">t</span>) </span>{\n          <span class=\"hljs-keyword\">var</span> v = t&lt;<span class=\"hljs-number\">.5</span> ? <span class=\"hljs-number\">8</span>*t*t*t*t : <span class=\"hljs-number\">1</span>-<span class=\"hljs-number\">8</span>*(--t)*t*t*t;\n          <span class=\"hljs-keyword\">return</span> (v&gt;<span class=\"hljs-number\">1</span>) ? <span class=\"hljs-number\">1</span> : v;\n        }\n      },\n      requestAnimFrame = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">window</span>.requestAnimationFrame ||\n          <span class=\"hljs-built_in\">window</span>.webkitRequestAnimationFrame ||\n          <span class=\"hljs-built_in\">window</span>.mozRequestAnimationFrame ||\n          <span class=\"hljs-built_in\">window</span>.oRequestAnimationFrame ||\n          <span class=\"hljs-built_in\">window</span>.msRequestAnimationFrame ||\n          <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">callback</span>) </span>{\n            <span class=\"hljs-built_in\">window</span>.setTimeout(callback, <span class=\"hljs-number\">1000</span> / <span class=\"hljs-number\">60</span>);\n          };\n      }();\n\n    settings.beforeDraw.call($this);\n\n    <span class=\"hljs-keyword\">var</span> $svg = $(<span class=\"hljs-string\">'&lt;svg width=\"'</span> + W + <span class=\"hljs-string\">'\" height=\"'</span> + H + <span class=\"hljs-string\">'\" viewBox=\"0 0 '</span> + W + <span class=\"hljs-string\">' '</span> + H + <span class=\"hljs-string\">'\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"&gt;&lt;/svg&gt;'</span>).appendTo($this),\n        $paths = [],\n        easingFunction = animationOptions[settings.animationEasing],\n        doughnutRadius = Min([H / <span class=\"hljs-number\">2</span>,W / <span class=\"hljs-number\">2</span>]) - settings.edgeOffset,\n        cutoutRadius = doughnutRadius * (settings.percentageInnerCutout / <span class=\"hljs-number\">100</span>),\n        segmentTotal = <span class=\"hljs-number\">0</span>;\n\n    <span class=\"hljs-comment\">//Draw base doughnut</span>\n    <span class=\"hljs-keyword\">var</span> baseDoughnutRadius = doughnutRadius + settings.baseOffset,\n        baseCutoutRadius = cutoutRadius - settings.baseOffset;\n    $(<span class=\"hljs-built_in\">document</span>.createElementNS(<span class=\"hljs-string\">'http://www.w3.org/2000/svg'</span>, <span class=\"hljs-string\">'path'</span>))\n      .attr({\n        <span class=\"hljs-string\">\"d\"</span>: getHollowCirclePath(baseDoughnutRadius, baseCutoutRadius),\n        <span class=\"hljs-string\">\"fill\"</span>: settings.baseColor\n      })\n      .appendTo($svg);\n\n    <span class=\"hljs-comment\">//Set up pie segments wrapper</span>\n    <span class=\"hljs-keyword\">var</span> $pathGroup = $(<span class=\"hljs-built_in\">document</span>.createElementNS(<span class=\"hljs-string\">'http://www.w3.org/2000/svg'</span>, <span class=\"hljs-string\">'g'</span>));\n    $pathGroup.attr({<span class=\"hljs-attr\">opacity</span>: <span class=\"hljs-number\">0</span>}).appendTo($svg);\n\n    <span class=\"hljs-comment\">//Set up tooltip</span>\n    <span class=\"hljs-keyword\">var</span> $tip = $(<span class=\"hljs-string\">'&lt;div class=\"'</span> + settings.tipClass + <span class=\"hljs-string\">'\" /&gt;'</span>).appendTo(<span class=\"hljs-string\">'body'</span>).hide(),\n        tipW = $tip.width(),\n        tipH = $tip.height();\n\n    <span class=\"hljs-comment\">//Set up center text area</span>\n    <span class=\"hljs-keyword\">var</span> summarySize = (cutoutRadius - (doughnutRadius - cutoutRadius)) * <span class=\"hljs-number\">2</span>,\n        $summary = $(<span class=\"hljs-string\">'&lt;div class=\"'</span> + settings.summaryClass + <span class=\"hljs-string\">'\" /&gt;'</span>)\n                   .appendTo($this)\n                   .css({ \n                     <span class=\"hljs-attr\">width</span>: summarySize + <span class=\"hljs-string\">\"px\"</span>,\n                     <span class=\"hljs-attr\">height</span>: summarySize + <span class=\"hljs-string\">\"px\"</span>,\n                     <span class=\"hljs-string\">\"margin-left\"</span>: -(summarySize / <span class=\"hljs-number\">2</span>) + <span class=\"hljs-string\">\"px\"</span>,\n                     <span class=\"hljs-string\">\"margin-top\"</span>: -(summarySize / <span class=\"hljs-number\">2</span>) + <span class=\"hljs-string\">\"px\"</span>\n                   });\n    <span class=\"hljs-keyword\">var</span> $summaryTitle = $(<span class=\"hljs-string\">'&lt;p class=\"'</span> + settings.summaryTitleClass + <span class=\"hljs-string\">'\"&gt;'</span> + settings.summaryTitle + <span class=\"hljs-string\">'&lt;/p&gt;'</span>).appendTo($summary);\n    <span class=\"hljs-keyword\">var</span> $summaryNumber = $(<span class=\"hljs-string\">'&lt;p class=\"'</span> + settings.summaryNumberClass + <span class=\"hljs-string\">'\"&gt;&lt;/p&gt;'</span>).appendTo($summary).css({<span class=\"hljs-attr\">opacity</span>: <span class=\"hljs-number\">0</span>});\n\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>, len = data.length; i &lt; len; i++) {\n      segmentTotal += data[i].value;\n      <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">$paths[i] = $(<span class=\"hljs-built_in\">document</span>.createElementNS(<span class=\"hljs-string\">'http://www.w3.org/2000/svg'</span>, <span class=\"hljs-string\">'path'</span>))\n        .attr({\n          <span class=\"hljs-string\">\"stroke-width\"</span>: settings.segmentStrokeWidth,\n          <span class=\"hljs-string\">\"stroke\"</span>: settings.segmentStrokeColor,\n          <span class=\"hljs-string\">\"fill\"</span>: data[i].color,\n          <span class=\"hljs-string\">\"data-order\"</span>: i\n        })</div>\n        .appendTo($pathGroup)\n        <div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\">.on(<span class=\"hljs-string\">\"mouseenter\"</span>, pathMouseEnter)\n        .on(<span class=\"hljs-string\">\"mouseleave\"</span>, pathMouseLeave)\n        .on(<span class=\"hljs-string\">\"mousemove\"</span>, pathMouseMove);</div>\n    }\n\n    <span class=\"hljs-comment\">//Animation start</span>\n    animationLoop(drawPieSegments);\n\n    <span class=\"hljs-comment\">//Functions</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">getHollowCirclePath</span>(<span class=\"hljs-params\">doughnutRadius, cutoutRadius</span>) </span>{\n        <span class=\"hljs-comment\">//Calculate values for the path.</span>\n        <span class=\"hljs-comment\">//We needn't calculate startRadius, segmentAngle and endRadius, because base doughnut doesn't animate.</span>\n        <span class=\"hljs-keyword\">var</span> startRadius = -<span class=\"hljs-number\">1.570</span>,<span class=\"hljs-comment\">// -Math.PI/2</span>\n            segmentAngle = <span class=\"hljs-number\">6.2831</span>,<span class=\"hljs-comment\">// 1 * ((99.9999/100) * (PI*2)),</span>\n            endRadius = <span class=\"hljs-number\">4.7131</span>,<span class=\"hljs-comment\">// startRadius + segmentAngle</span>\n            startX = centerX + cos(startRadius) * doughnutRadius,\n            startY = centerY + sin(startRadius) * doughnutRadius,\n            endX2 = centerX + cos(startRadius) * cutoutRadius,\n            endY2 = centerY + sin(startRadius) * cutoutRadius,\n            endX = centerX + cos(endRadius) * doughnutRadius,\n            endY = centerY + sin(endRadius) * doughnutRadius,\n            startX2 = centerX + cos(endRadius) * cutoutRadius,\n            startY2 = centerY + sin(endRadius) * cutoutRadius;\n        <span class=\"hljs-keyword\">var</span> cmd = [\n          <span class=\"hljs-string\">'M'</span>, startX, startY,\n          <span class=\"hljs-string\">'A'</span>, doughnutRadius, doughnutRadius, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>, endX, endY,<span class=\"hljs-comment\">//Draw outer circle</span>\n          <span class=\"hljs-string\">'Z'</span>,<span class=\"hljs-comment\">//Close path</span>\n          <span class=\"hljs-string\">'M'</span>, startX2, startY2,<span class=\"hljs-comment\">//Move pointer</span>\n          <span class=\"hljs-string\">'A'</span>, cutoutRadius, cutoutRadius, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>, endX2, endY2,<span class=\"hljs-comment\">//Draw inner circle</span>\n          <span class=\"hljs-string\">'Z'</span>\n        ];\n        cmd = cmd.join(<span class=\"hljs-string\">' '</span>);\n        <span class=\"hljs-keyword\">return</span> cmd;\n    };\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">pathMouseEnter</span>(<span class=\"hljs-params\">e</span>) </span>{\n      <span class=\"hljs-keyword\">var</span> order = $(<span class=\"hljs-built_in\">this</span>).data().order;\n      $tip.text(data[order].title + <span class=\"hljs-string\">\": \"</span> + data[order].value)\n          .fadeIn(<span class=\"hljs-number\">200</span>);\n      settings.onPathEnter.apply($(<span class=\"hljs-built_in\">this</span>),[e,data]);\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">pathMouseLeave</span>(<span class=\"hljs-params\">e</span>) </span>{\n      $tip.hide();\n      settings.onPathLeave.apply($(<span class=\"hljs-built_in\">this</span>),[e,data]);\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">pathMouseMove</span>(<span class=\"hljs-params\">e</span>) </span>{\n      $tip.css({\n        <span class=\"hljs-attr\">top</span>: e.pageY + settings.tipOffsetY,\n        <span class=\"hljs-attr\">left</span>: e.pageX - $tip.width() / <span class=\"hljs-number\">2</span> + settings.tipOffsetX\n      });\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">drawPieSegments</span> (<span class=\"hljs-params\">animationDecimal</span>) </span>{\n      <span class=\"hljs-keyword\">var</span> startRadius = -PI / <span class=\"hljs-number\">2</span>,<span class=\"hljs-comment\">//-90 degree</span>\n          rotateAnimation = <span class=\"hljs-number\">1</span>;\n      <span class=\"hljs-keyword\">if</span> (settings.animation &amp;&amp; settings.animateRotate) rotateAnimation = animationDecimal;<span class=\"hljs-comment\">//count up between0~1</span>\n\n      drawDoughnutText(animationDecimal, segmentTotal);\n\n      $pathGroup.attr(<span class=\"hljs-string\">\"opacity\"</span>, animationDecimal);\n\n      <span class=\"hljs-comment\">//If data have only one value, we draw hollow circle(#1).</span>\n      <span class=\"hljs-keyword\">if</span> (data.length === <span class=\"hljs-number\">1</span> &amp;&amp; (<span class=\"hljs-number\">4.7122</span> &lt; (rotateAnimation * ((data[<span class=\"hljs-number\">0</span>].value / segmentTotal) * (PI * <span class=\"hljs-number\">2</span>)) + startRadius))) {\n        $paths[<span class=\"hljs-number\">0</span>].attr(<span class=\"hljs-string\">\"d\"</span>, getHollowCirclePath(doughnutRadius, cutoutRadius));\n        <span class=\"hljs-keyword\">return</span>;\n      }\n      <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>, len = data.length; i &lt; len; i++) {\n        <span class=\"hljs-keyword\">var</span> segmentAngle = rotateAnimation * ((data[i].value / segmentTotal) * (PI * <span class=\"hljs-number\">2</span>)),\n            endRadius = startRadius + segmentAngle,\n            largeArc = ((endRadius - startRadius) % (PI * <span class=\"hljs-number\">2</span>)) &gt; PI ? <span class=\"hljs-number\">1</span> : <span class=\"hljs-number\">0</span>,\n            startX = centerX + cos(startRadius) * doughnutRadius,\n            startY = centerY + sin(startRadius) * doughnutRadius,\n            endX2 = centerX + cos(startRadius) * cutoutRadius,\n            endY2 = centerY + sin(startRadius) * cutoutRadius,\n            endX = centerX + cos(endRadius) * doughnutRadius,\n            endY = centerY + sin(endRadius) * doughnutRadius,\n            startX2 = centerX + cos(endRadius) * cutoutRadius,\n            startY2 = centerY + sin(endRadius) * cutoutRadius;\n        <span class=\"hljs-keyword\">var</span> cmd = [\n          <span class=\"hljs-string\">'M'</span>, startX, startY,<span class=\"hljs-comment\">//Move pointer</span>\n          <span class=\"hljs-string\">'A'</span>, doughnutRadius, doughnutRadius, <span class=\"hljs-number\">0</span>, largeArc, <span class=\"hljs-number\">1</span>, endX, endY,<span class=\"hljs-comment\">//Draw outer arc path</span>\n          <span class=\"hljs-string\">'L'</span>, startX2, startY2,<span class=\"hljs-comment\">//Draw line path(this line connects outer and innner arc paths)</span>\n          <span class=\"hljs-string\">'A'</span>, cutoutRadius, cutoutRadius, <span class=\"hljs-number\">0</span>, largeArc, <span class=\"hljs-number\">0</span>, endX2, endY2,<span class=\"hljs-comment\">//Draw inner arc path</span>\n          <span class=\"hljs-string\">'Z'</span><span class=\"hljs-comment\">//Cloth path</span>\n        ];\n        $paths[i].attr(<span class=\"hljs-string\">\"d\"</span>, cmd.join(<span class=\"hljs-string\">' '</span>));\n        startRadius += segmentAngle;\n      }\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">drawDoughnutText</span>(<span class=\"hljs-params\">animationDecimal, segmentTotal</span>) </span>{\n      $summaryNumber\n        .css({<span class=\"hljs-attr\">opacity</span>: animationDecimal})\n        .text((segmentTotal * animationDecimal).toFixed(<span class=\"hljs-number\">1</span>));\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">animateFrame</span>(<span class=\"hljs-params\">cnt, drawData</span>) </span>{\n      <span class=\"hljs-keyword\">var</span> easeAdjustedAnimationPercent =(settings.animation)? CapValue(easingFunction(cnt), <span class=\"hljs-literal\">null</span>, <span class=\"hljs-number\">0</span>) : <span class=\"hljs-number\">1</span>;\n      drawData(easeAdjustedAnimationPercent);\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">animationLoop</span>(<span class=\"hljs-params\">drawData</span>) </span>{\n      <span class=\"hljs-keyword\">var</span> animFrameAmount = (settings.animation)? <span class=\"hljs-number\">1</span> / CapValue(settings.animationSteps, <span class=\"hljs-built_in\">Number</span>.MAX_VALUE, <span class=\"hljs-number\">1</span>) : <span class=\"hljs-number\">1</span>,\n          cnt =(settings.animation)? <span class=\"hljs-number\">0</span> : <span class=\"hljs-number\">1</span>;\n      requestAnimFrame(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n          cnt += animFrameAmount;\n          animateFrame(cnt, drawData);\n          <span class=\"hljs-keyword\">if</span> (cnt &lt;= <span class=\"hljs-number\">1</span>) {\n            requestAnimFrame(<span class=\"hljs-built_in\">arguments</span>.callee);\n          } <span class=\"hljs-keyword\">else</span> {\n            settings.afterDrawed.call($this);\n          }\n      });\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Max</span>(<span class=\"hljs-params\">arr</span>) </span>{\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Math</span>.max.apply(<span class=\"hljs-literal\">null</span>, arr);\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">Min</span>(<span class=\"hljs-params\">arr</span>) </span>{\n      <span class=\"hljs-keyword\">return</span> <span class=\"hljs-built_in\">Math</span>.min.apply(<span class=\"hljs-literal\">null</span>, arr);\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">isNumber</span>(<span class=\"hljs-params\">n</span>) </span>{\n      <span class=\"hljs-keyword\">return</span> !<span class=\"hljs-built_in\">isNaN</span>(<span class=\"hljs-built_in\">parseFloat</span>(n)) &amp;&amp; <span class=\"hljs-built_in\">isFinite</span>(n);\n    }\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">CapValue</span>(<span class=\"hljs-params\">valueToCap, maxValue, minValue</span>) </span>{\n      <span class=\"hljs-keyword\">if</span> (isNumber(maxValue) &amp;&amp; valueToCap &gt; maxValue) <span class=\"hljs-keyword\">return</span> maxValue;\n      <span class=\"hljs-keyword\">if</span> (isNumber(minValue) &amp;&amp; valueToCap &lt; minValue) <span class=\"hljs-keyword\">return</span> minValue;\n      <span class=\"hljs-keyword\">return</span> valueToCap;\n    }\n    <span class=\"hljs-keyword\">return</span> $this;\n  };\n})(jQuery);</code></pre></div>",
    "sec_15.js": "<div class=\"codeBlock hljs javascript\" id=\"sec_15\"><pre id=\"sec_15_code\" ><code class=\"json\">$(<span class=\"hljs-built_in\">document</span>).ready(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n  <span class=\"hljs-keyword\">var</span> count = <span class=\"hljs-number\">10</span>;\n  <span class=\"hljs-keyword\">var</span> data = {\n\t  <span class=\"hljs-attr\">labels</span> : [<span class=\"hljs-string\">\"1\"</span>,<span class=\"hljs-string\">\"2\"</span>,<span class=\"hljs-string\">\"3\"</span>,<span class=\"hljs-string\">\"4\"</span>,<span class=\"hljs-string\">\"5\"</span>, <span class=\"hljs-string\">\"6\"</span>, <span class=\"hljs-string\">\"7\"</span>, <span class=\"hljs-string\">\"8\"</span>, <span class=\"hljs-string\">\"9\"</span>, <span class=\"hljs-string\">\"10\"</span>],\n\t\t<span class=\"hljs-attr\">datasets</span> : [\n\t\t  {\n\t\t\t\t<span class=\"hljs-attr\">fillColor</span> : <span class=\"hljs-string\">\"rgba(220,220,220,0.5)\"</span>,\n\t\t\t\t<span class=\"hljs-attr\">strokeColor</span> : <span class=\"hljs-string\">\"rgba(220,220,220,1)\"</span>,\n\t\t\t\t<span class=\"hljs-attr\">pointColor</span> : <span class=\"hljs-string\">\"rgba(220,220,220,1)\"</span>,\n\t\t\t\t<span class=\"hljs-attr\">pointStrokeColor</span> : <span class=\"hljs-string\">\"#fff\"</span>,\n\t\t\t\t<span class=\"hljs-attr\">data</span> : [<span class=\"hljs-number\">65</span>,<span class=\"hljs-number\">59</span>,<span class=\"hljs-number\">90</span>,<span class=\"hljs-number\">81</span>,<span class=\"hljs-number\">56</span>,<span class=\"hljs-number\">45</span>,<span class=\"hljs-number\">30</span>,<span class=\"hljs-number\">20</span>,<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">37</span>]\n\t\t\t},\n\t\t\t{\n\t\t\t\t<span class=\"hljs-attr\">fillColor</span> : <span class=\"hljs-string\">\"rgba(151,187,205,0.5)\"</span>,\n\t\t\t\t<span class=\"hljs-attr\">strokeColor</span> : <span class=\"hljs-string\">\"rgba(151,187,205,1)\"</span>,\n\t\t\t\t<span class=\"hljs-attr\">pointColor</span> : <span class=\"hljs-string\">\"rgba(151,187,205,1)\"</span>,\n\t\t\t\t<span class=\"hljs-attr\">pointStrokeColor</span> : <span class=\"hljs-string\">\"#fff\"</span>,\n\t\t\t\t<span class=\"hljs-attr\">data</span> : [<span class=\"hljs-number\">28</span>,<span class=\"hljs-number\">48</span>,<span class=\"hljs-number\">40</span>,<span class=\"hljs-number\">19</span>,<span class=\"hljs-number\">96</span>,<span class=\"hljs-number\">87</span>,<span class=\"hljs-number\">66</span>,<span class=\"hljs-number\">97</span>,<span class=\"hljs-number\">92</span>,<span class=\"hljs-number\">85</span>]\n\t\t\t}\n\t\t]\n  }\n  <span class=\"hljs-comment\">// this is ugly, don't judge me</span>\n  <span class=\"hljs-keyword\">var</span> updateData = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">oldData</span>)</span>{\n    <span class=\"hljs-keyword\">var</span> labels = oldData[<span class=\"hljs-string\">\"labels\"</span>];\n    <span class=\"hljs-keyword\">var</span> dataSetA = oldData[<span class=\"hljs-string\">\"datasets\"</span>][<span class=\"hljs-number\">0</span>][<span class=\"hljs-string\">\"data\"</span>];\n    <span class=\"hljs-keyword\">var</span> dataSetB = oldData[<span class=\"hljs-string\">\"datasets\"</span>][<span class=\"hljs-number\">1</span>][<span class=\"hljs-string\">\"data\"</span>];\n    \n    labels.shift();\n    count++;\n    labels.push(count.toString());\n    <span class=\"hljs-keyword\">var</span> newDataA = dataSetA[<span class=\"hljs-number\">9</span>] + (<span class=\"hljs-number\">20</span> - <span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-built_in\">Math</span>.random() * (<span class=\"hljs-number\">41</span>)));\n    <span class=\"hljs-keyword\">var</span> newDataB = dataSetB[<span class=\"hljs-number\">9</span>] + (<span class=\"hljs-number\">20</span> - <span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-built_in\">Math</span>.random() * (<span class=\"hljs-number\">41</span>)));\n    dataSetA.push(newDataA);\n    dataSetB.push(newDataB);\n    dataSetA.shift();\n    dataSetB.shift();    };\n      \n  <span class=\"hljs-keyword\">var</span> optionsAnimation = {\n    <span class=\"hljs-comment\">//Boolean - If we want to override with a hard coded scale</span>\n    <span class=\"hljs-attr\">scaleOverride</span> : <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-comment\">//** Required if scaleOverride is true **</span>\n    <span class=\"hljs-comment\">//Number - The number of steps in a hard coded scale</span>\n    <span class=\"hljs-attr\">scaleSteps</span> : <span class=\"hljs-number\">10</span>,\n    <span class=\"hljs-comment\">//Number - The value jump in the hard coded scale</span>\n    <span class=\"hljs-attr\">scaleStepWidth</span> : <span class=\"hljs-number\">10</span>,\n    <span class=\"hljs-comment\">//Number - The scale starting value</span>\n    <span class=\"hljs-attr\">scaleStartValue</span> : <span class=\"hljs-number\">0</span>\n  }\n  \n  <span class=\"hljs-comment\">// Not sure why the scaleOverride isn't working...</span>\n  <span class=\"hljs-keyword\">var</span> optionsNoAnimation = {\n    <span class=\"hljs-attr\">animation</span> : <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-comment\">//Boolean - If we want to override with a hard coded scale</span>\n    <span class=\"hljs-attr\">scaleOverride</span> : <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-comment\">//** Required if scaleOverride is true **</span>\n    <span class=\"hljs-comment\">//Number - The number of steps in a hard coded scale</span>\n    <span class=\"hljs-attr\">scaleSteps</span> : <span class=\"hljs-number\">20</span>,\n    <span class=\"hljs-comment\">//Number - The value jump in the hard coded scale</span>\n    <span class=\"hljs-attr\">scaleStepWidth</span> : <span class=\"hljs-number\">10</span>,\n    <span class=\"hljs-comment\">//Number - The scale starting value</span>\n    <span class=\"hljs-attr\">scaleStartValue</span> : <span class=\"hljs-number\">0</span>\n  }\n  \n  <span class=\"hljs-comment\">//Get the context of the canvas element we want to select</span>\n  <span class=\"hljs-keyword\">var</span> ctx = <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"myChart\"</span>).getContext(<span class=\"hljs-string\">\"2d\"</span>);\n  <span class=\"hljs-keyword\">var</span> optionsNoAnimation = {<span class=\"hljs-attr\">animation</span> : <span class=\"hljs-literal\">false</span>}\n  <span class=\"hljs-keyword\">var</span> myNewChart = <span class=\"hljs-keyword\">new</span> Chart(ctx);\n  myNewChart.Line(data, optionsAnimation);\t\n  \n  <span class=\"hljs-built_in\">setInterval</span>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>)</span>{\n    updateData(data);\n    myNewChart.Line(data, optionsNoAnimation)\n    ;}, <span class=\"hljs-number\">2000</span>\n  );\n});\n\n\n<span class=\"hljs-comment\">// ChartJS</span>\n<span class=\"hljs-keyword\">var</span> Chart = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">s</span>) </span>{\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">v</span>(<span class=\"hljs-params\">a, c, b</span>) </span>{\n        a = A((a - c.graphMin) / (c.steps * c.stepValue), <span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">0</span>);\n        <span class=\"hljs-keyword\">return</span> b * c.steps * a\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">x</span>(<span class=\"hljs-params\">a, c, b, e</span>) </span>{\n        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">h</span>(<span class=\"hljs-params\"></span>) </span>{\n            g += f;\n            <span class=\"hljs-keyword\">var</span> k = a.animation ? A(d(g), <span class=\"hljs-literal\">null</span>, <span class=\"hljs-number\">0</span>) : <span class=\"hljs-number\">1</span>;\n            e.clearRect(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, q, u);\n            a.scaleOverlay ? (b(k), c()) : (c(), b(k));\n            <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-number\">1</span> &gt;= g) D(h);\n            <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-string\">\"function\"</span> == <span class=\"hljs-keyword\">typeof</span> a.onAnimationComplete) a.onAnimationComplete()\n        }\n        <span class=\"hljs-keyword\">var</span> f = a.animation ? <span class=\"hljs-number\">1</span> / A(a.animationSteps, <span class=\"hljs-built_in\">Number</span>.MAX_VALUE, <span class=\"hljs-number\">1</span>) : <span class=\"hljs-number\">1</span>,\n            d = B[a.animationEasing],\n            g = a.animation ? <span class=\"hljs-number\">0</span> : <span class=\"hljs-number\">1</span>;\n        <span class=\"hljs-string\">\"function\"</span> !== <span class=\"hljs-keyword\">typeof</span> c &amp;&amp; (c = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});\n        D(h)\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">C</span>(<span class=\"hljs-params\">a, c, b, e, h, f</span>) </span>{\n        <span class=\"hljs-keyword\">var</span> d;\n        a =\n            <span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-built_in\">Math</span>.log(e - h) / <span class=\"hljs-built_in\">Math</span>.LN10);\n        h = <span class=\"hljs-built_in\">Math</span>.floor(h / (<span class=\"hljs-number\">1</span> * <span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">10</span>, a))) * <span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">10</span>, a);\n        e = <span class=\"hljs-built_in\">Math</span>.ceil(e / (<span class=\"hljs-number\">1</span> * <span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">10</span>, a))) * <span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">10</span>, a) - h;\n        a = <span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">10</span>, a);\n        <span class=\"hljs-keyword\">for</span> (d = <span class=\"hljs-built_in\">Math</span>.round(e / a); d &lt; b || d &gt; c;) a = d &lt; b ? a / <span class=\"hljs-number\">2</span> : <span class=\"hljs-number\">2</span> * a, d = <span class=\"hljs-built_in\">Math</span>.round(e / a);\n        c = [];\n        z(f, c, d, h, a);\n        <span class=\"hljs-keyword\">return</span> {\n            <span class=\"hljs-attr\">steps</span>: d,\n            <span class=\"hljs-attr\">stepValue</span>: a,\n            <span class=\"hljs-attr\">graphMin</span>: h,\n            <span class=\"hljs-attr\">labels</span>: c\n        }\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">z</span>(<span class=\"hljs-params\">a, c, b, e, h</span>) </span>{\n        <span class=\"hljs-keyword\">if</span> (a)\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> f = <span class=\"hljs-number\">1</span>; f &lt; b + <span class=\"hljs-number\">1</span>; f++) c.push(E(a, {\n                <span class=\"hljs-attr\">value</span>: (e + h * f).toFixed(<span class=\"hljs-number\">0</span> != h % <span class=\"hljs-number\">1</span> ? h.toString().split(<span class=\"hljs-string\">\".\"</span>)[<span class=\"hljs-number\">1</span>].length : <span class=\"hljs-number\">0</span>)\n            }))\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">A</span>(<span class=\"hljs-params\">a, c, b</span>) </span>{\n        <span class=\"hljs-keyword\">return</span> !<span class=\"hljs-built_in\">isNaN</span>(<span class=\"hljs-built_in\">parseFloat</span>(c)) &amp;&amp; <span class=\"hljs-built_in\">isFinite</span>(c) &amp;&amp; a &gt; c ? c : !<span class=\"hljs-built_in\">isNaN</span>(<span class=\"hljs-built_in\">parseFloat</span>(b)) &amp;&amp;\n            <span class=\"hljs-built_in\">isFinite</span>(b) &amp;&amp; a &lt; b ? b : a\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">y</span>(<span class=\"hljs-params\">a, c</span>) </span>{\n        <span class=\"hljs-keyword\">var</span> b = {},\n            e;\n        <span class=\"hljs-keyword\">for</span> (e <span class=\"hljs-keyword\">in</span> a) b[e] = a[e];\n        <span class=\"hljs-keyword\">for</span> (e <span class=\"hljs-keyword\">in</span> c) b[e] = c[e];\n        <span class=\"hljs-keyword\">return</span> b\n    }\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">E</span>(<span class=\"hljs-params\">a, c</span>) </span>{\n        <span class=\"hljs-keyword\">var</span> b = !<span class=\"hljs-regexp\">/\\W/</span>.test(a) ? F[a] = F[a] || E(<span class=\"hljs-built_in\">document</span>.getElementById(a).innerHTML) : <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Function</span>(<span class=\"hljs-string\">\"obj\"</span>, <span class=\"hljs-string\">\"var p=[],print=function(){p.push.apply(p,arguments);};with(obj){p.push('\"</span> + a.replace(<span class=\"hljs-regexp\">/[\\r\\t\\n]/g</span>, <span class=\"hljs-string\">\" \"</span>).split(<span class=\"hljs-string\">\"&lt;%\"</span>).join(<span class=\"hljs-string\">\"\\t\"</span>).replace(<span class=\"hljs-regexp\">/((^|%&gt;)[^\\t]*)'/g</span>, <span class=\"hljs-string\">\"$1\\r\"</span>).replace(<span class=\"hljs-regexp\">/\\t=(.*?)%&gt;/g</span>, <span class=\"hljs-string\">\"',$1,'\"</span>).split(<span class=\"hljs-string\">\"\\t\"</span>).join(<span class=\"hljs-string\">\"');\"</span>).split(<span class=\"hljs-string\">\"%&gt;\"</span>).join(<span class=\"hljs-string\">\"p.push('\"</span>).split(<span class=\"hljs-string\">\"\\r\"</span>).join(<span class=\"hljs-string\">\"\\\\'\"</span>) + <span class=\"hljs-string\">\"');}return p.join('');\"</span>);\n        <span class=\"hljs-keyword\">return</span> c ?\n            b(c) : b\n    }\n    <span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-built_in\">this</span>,\n        B = {\n            <span class=\"hljs-attr\">linear</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> a\n            },\n            <span class=\"hljs-attr\">easeInQuad</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> a * a\n            },\n            <span class=\"hljs-attr\">easeOutQuad</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span> * a * (a - <span class=\"hljs-number\">2</span>)\n            },\n            <span class=\"hljs-attr\">easeInOutQuad</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> &gt; (a /= <span class=\"hljs-number\">0.5</span>) ? <span class=\"hljs-number\">0.5</span> * a * a : -<span class=\"hljs-number\">0.5</span> * (--a * (a - <span class=\"hljs-number\">2</span>) - <span class=\"hljs-number\">1</span>)\n            },\n            <span class=\"hljs-attr\">easeInCubic</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> a * a * a\n            },\n            <span class=\"hljs-attr\">easeOutCubic</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> * ((a = a / <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">1</span>) * a * a + <span class=\"hljs-number\">1</span>)\n            },\n            <span class=\"hljs-attr\">easeInOutCubic</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> &gt; (a /= <span class=\"hljs-number\">0.5</span>) ? <span class=\"hljs-number\">0.5</span> * a * a * a : <span class=\"hljs-number\">0.5</span> * ((a -= <span class=\"hljs-number\">2</span>) * a * a + <span class=\"hljs-number\">2</span>)\n            },\n            <span class=\"hljs-attr\">easeInQuart</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> a * a * a * a\n            },\n            <span class=\"hljs-attr\">easeOutQuart</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span> * ((a = a / <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">1</span>) * a * a * a - <span class=\"hljs-number\">1</span>)\n            },\n            <span class=\"hljs-attr\">easeInOutQuart</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> &gt; (a /= <span class=\"hljs-number\">0.5</span>) ?\n                    <span class=\"hljs-number\">0.5</span> * a * a * a * a : -<span class=\"hljs-number\">0.5</span> * ((a -= <span class=\"hljs-number\">2</span>) * a * a * a - <span class=\"hljs-number\">2</span>)\n            },\n            <span class=\"hljs-attr\">easeInQuint</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> * (a /= <span class=\"hljs-number\">1</span>) * a * a * a * a\n            },\n            <span class=\"hljs-attr\">easeOutQuint</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> * ((a = a / <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">1</span>) * a * a * a * a + <span class=\"hljs-number\">1</span>)\n            },\n            <span class=\"hljs-attr\">easeInOutQuint</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> &gt; (a /= <span class=\"hljs-number\">0.5</span>) ? <span class=\"hljs-number\">0.5</span> * a * a * a * a * a : <span class=\"hljs-number\">0.5</span> * ((a -= <span class=\"hljs-number\">2</span>) * a * a * a * a + <span class=\"hljs-number\">2</span>)\n            },\n            <span class=\"hljs-attr\">easeInSine</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">1</span> * <span class=\"hljs-built_in\">Math</span>.cos(a / <span class=\"hljs-number\">1</span> * (<span class=\"hljs-built_in\">Math</span>.PI / <span class=\"hljs-number\">2</span>)) + <span class=\"hljs-number\">1</span>\n            },\n            <span class=\"hljs-attr\">easeOutSine</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> * <span class=\"hljs-built_in\">Math</span>.sin(a / <span class=\"hljs-number\">1</span> * (<span class=\"hljs-built_in\">Math</span>.PI / <span class=\"hljs-number\">2</span>))\n            },\n            <span class=\"hljs-attr\">easeInOutSine</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> -<span class=\"hljs-number\">0.5</span> * (<span class=\"hljs-built_in\">Math</span>.cos(<span class=\"hljs-built_in\">Math</span>.PI * a / <span class=\"hljs-number\">1</span>) - <span class=\"hljs-number\">1</span>)\n            },\n            <span class=\"hljs-attr\">easeInExpo</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span> == a ? <span class=\"hljs-number\">1</span> : <span class=\"hljs-number\">1</span> * <span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">10</span> * (a / <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">1</span>))\n            },\n            <span class=\"hljs-attr\">easeOutExpo</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> ==\n                    a ? <span class=\"hljs-number\">1</span> : <span class=\"hljs-number\">1</span> * (-<span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">2</span>, -<span class=\"hljs-number\">10</span> * a / <span class=\"hljs-number\">1</span>) + <span class=\"hljs-number\">1</span>)\n            },\n            <span class=\"hljs-attr\">easeInOutExpo</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span> == a ? <span class=\"hljs-number\">0</span> : <span class=\"hljs-number\">1</span> == a ? <span class=\"hljs-number\">1</span> : <span class=\"hljs-number\">1</span> &gt; (a /= <span class=\"hljs-number\">0.5</span>) ? <span class=\"hljs-number\">0.5</span> * <span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">10</span> * (a - <span class=\"hljs-number\">1</span>)) : <span class=\"hljs-number\">0.5</span> * (-<span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">2</span>, -<span class=\"hljs-number\">10</span> * --a) + <span class=\"hljs-number\">2</span>)\n            },\n            <span class=\"hljs-attr\">easeInCirc</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> &lt;= a ? a : -<span class=\"hljs-number\">1</span> * (<span class=\"hljs-built_in\">Math</span>.sqrt(<span class=\"hljs-number\">1</span> - (a /= <span class=\"hljs-number\">1</span>) * a) - <span class=\"hljs-number\">1</span>)\n            },\n            <span class=\"hljs-attr\">easeOutCirc</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> * <span class=\"hljs-built_in\">Math</span>.sqrt(<span class=\"hljs-number\">1</span> - (a = a / <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">1</span>) * a)\n            },\n            <span class=\"hljs-attr\">easeInOutCirc</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> &gt; (a /= <span class=\"hljs-number\">0.5</span>) ? -<span class=\"hljs-number\">0.5</span> * (<span class=\"hljs-built_in\">Math</span>.sqrt(<span class=\"hljs-number\">1</span> - a * a) - <span class=\"hljs-number\">1</span>) : <span class=\"hljs-number\">0.5</span> * (<span class=\"hljs-built_in\">Math</span>.sqrt(<span class=\"hljs-number\">1</span> - (a -= <span class=\"hljs-number\">2</span>) * a) + <span class=\"hljs-number\">1</span>)\n            },\n            <span class=\"hljs-attr\">easeInElastic</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-number\">1.70158</span>,\n                    b = <span class=\"hljs-number\">0</span>,\n                    e = <span class=\"hljs-number\">1</span>;\n                <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-number\">0</span> == a) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n                <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-number\">1</span> == (a /= <span class=\"hljs-number\">1</span>)) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\n                b || (b = <span class=\"hljs-number\">0.3</span>);\n                e &lt; <span class=\"hljs-built_in\">Math</span>.abs(<span class=\"hljs-number\">1</span>) ? (e = <span class=\"hljs-number\">1</span>, c = b / <span class=\"hljs-number\">4</span>) : c = b / (<span class=\"hljs-number\">2</span> *\n                    <span class=\"hljs-built_in\">Math</span>.PI) * <span class=\"hljs-built_in\">Math</span>.asin(<span class=\"hljs-number\">1</span> / e);\n                <span class=\"hljs-keyword\">return</span> -(e * <span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">10</span> * (a -= <span class=\"hljs-number\">1</span>)) * <span class=\"hljs-built_in\">Math</span>.sin((<span class=\"hljs-number\">1</span> * a - c) * <span class=\"hljs-number\">2</span> * <span class=\"hljs-built_in\">Math</span>.PI / b))\n            },\n            <span class=\"hljs-attr\">easeOutElastic</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-number\">1.70158</span>,\n                    b = <span class=\"hljs-number\">0</span>,\n                    e = <span class=\"hljs-number\">1</span>;\n                <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-number\">0</span> == a) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n                <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-number\">1</span> == (a /= <span class=\"hljs-number\">1</span>)) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\n                b || (b = <span class=\"hljs-number\">0.3</span>);\n                e &lt; <span class=\"hljs-built_in\">Math</span>.abs(<span class=\"hljs-number\">1</span>) ? (e = <span class=\"hljs-number\">1</span>, c = b / <span class=\"hljs-number\">4</span>) : c = b / (<span class=\"hljs-number\">2</span> * <span class=\"hljs-built_in\">Math</span>.PI) * <span class=\"hljs-built_in\">Math</span>.asin(<span class=\"hljs-number\">1</span> / e);\n                <span class=\"hljs-keyword\">return</span> e * <span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">2</span>, -<span class=\"hljs-number\">10</span> * a) * <span class=\"hljs-built_in\">Math</span>.sin((<span class=\"hljs-number\">1</span> * a - c) * <span class=\"hljs-number\">2</span> * <span class=\"hljs-built_in\">Math</span>.PI / b) + <span class=\"hljs-number\">1</span>\n            },\n            <span class=\"hljs-attr\">easeInOutElastic</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-number\">1.70158</span>,\n                    b = <span class=\"hljs-number\">0</span>,\n                    e = <span class=\"hljs-number\">1</span>;\n                <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-number\">0</span> == a) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0</span>;\n                <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-number\">2</span> == (a /= <span class=\"hljs-number\">0.5</span>)) <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\n                b || (b = <span class=\"hljs-number\">1</span> * <span class=\"hljs-number\">0.3</span> * <span class=\"hljs-number\">1.5</span>);\n                e &lt; <span class=\"hljs-built_in\">Math</span>.abs(<span class=\"hljs-number\">1</span>) ? (e = <span class=\"hljs-number\">1</span>, c = b / <span class=\"hljs-number\">4</span>) : c = b / (<span class=\"hljs-number\">2</span> * <span class=\"hljs-built_in\">Math</span>.PI) * <span class=\"hljs-built_in\">Math</span>.asin(<span class=\"hljs-number\">1</span> / e);\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> &gt; a ? -<span class=\"hljs-number\">0.5</span> * e * <span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">10</span> *\n                    (a -= <span class=\"hljs-number\">1</span>)) * <span class=\"hljs-built_in\">Math</span>.sin((<span class=\"hljs-number\">1</span> * a - c) * <span class=\"hljs-number\">2</span> * <span class=\"hljs-built_in\">Math</span>.PI / b) : <span class=\"hljs-number\">0.5</span> * e * <span class=\"hljs-built_in\">Math</span>.pow(<span class=\"hljs-number\">2</span>, -<span class=\"hljs-number\">10</span> * (a -= <span class=\"hljs-number\">1</span>)) * <span class=\"hljs-built_in\">Math</span>.sin((<span class=\"hljs-number\">1</span> * a - c) * <span class=\"hljs-number\">2</span> * <span class=\"hljs-built_in\">Math</span>.PI / b) + <span class=\"hljs-number\">1</span>\n            },\n            <span class=\"hljs-attr\">easeInBack</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> * (a /= <span class=\"hljs-number\">1</span>) * a * (<span class=\"hljs-number\">2.70158</span> * a - <span class=\"hljs-number\">1.70158</span>)\n            },\n            <span class=\"hljs-attr\">easeOutBack</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> * ((a = a / <span class=\"hljs-number\">1</span> - <span class=\"hljs-number\">1</span>) * a * (<span class=\"hljs-number\">2.70158</span> * a + <span class=\"hljs-number\">1.70158</span>) + <span class=\"hljs-number\">1</span>)\n            },\n            <span class=\"hljs-attr\">easeInOutBack</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-number\">1.70158</span>;\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> &gt; (a /= <span class=\"hljs-number\">0.5</span>) ? <span class=\"hljs-number\">0.5</span> * a * a * (((c *= <span class=\"hljs-number\">1.525</span>) + <span class=\"hljs-number\">1</span>) * a - c) : <span class=\"hljs-number\">0.5</span> * ((a -= <span class=\"hljs-number\">2</span>) * a * (((c *= <span class=\"hljs-number\">1.525</span>) + <span class=\"hljs-number\">1</span>) * a + c) + <span class=\"hljs-number\">2</span>)\n            },\n            <span class=\"hljs-attr\">easeInBounce</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span> - B.easeOutBounce(<span class=\"hljs-number\">1</span> - a)\n            },\n            <span class=\"hljs-attr\">easeOutBounce</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> (a /= <span class=\"hljs-number\">1</span>) &lt; <span class=\"hljs-number\">1</span> / <span class=\"hljs-number\">2.75</span> ? <span class=\"hljs-number\">1</span> * <span class=\"hljs-number\">7.5625</span> * a * a : a &lt; <span class=\"hljs-number\">2</span> / <span class=\"hljs-number\">2.75</span> ? <span class=\"hljs-number\">1</span> * (<span class=\"hljs-number\">7.5625</span> * (a -= <span class=\"hljs-number\">1.5</span> / <span class=\"hljs-number\">2.75</span>) *\n                    a + <span class=\"hljs-number\">0.75</span>) : a &lt; <span class=\"hljs-number\">2.5</span> / <span class=\"hljs-number\">2.75</span> ? <span class=\"hljs-number\">1</span> * (<span class=\"hljs-number\">7.5625</span> * (a -= <span class=\"hljs-number\">2.25</span> / <span class=\"hljs-number\">2.75</span>) * a + <span class=\"hljs-number\">0.9375</span>) : <span class=\"hljs-number\">1</span> * (<span class=\"hljs-number\">7.5625</span> * (a -= <span class=\"hljs-number\">2.625</span> / <span class=\"hljs-number\">2.75</span>) * a + <span class=\"hljs-number\">0.984375</span>)\n            },\n            <span class=\"hljs-attr\">easeInOutBounce</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n                <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">0.5</span> &gt; a ? <span class=\"hljs-number\">0.5</span> * B.easeInBounce(<span class=\"hljs-number\">2</span> * a) : <span class=\"hljs-number\">0.5</span> * B.easeOutBounce(<span class=\"hljs-number\">2</span> * a - <span class=\"hljs-number\">1</span>) + <span class=\"hljs-number\">0.5</span>\n            }\n        },\n        q = s.canvas.width,\n        u = s.canvas.height;\n    <span class=\"hljs-built_in\">window</span>.devicePixelRatio &amp;&amp; (s.canvas.style.width = q + <span class=\"hljs-string\">\"px\"</span>, s.canvas.style.height = u + <span class=\"hljs-string\">\"px\"</span>, s.canvas.height = u * <span class=\"hljs-built_in\">window</span>.devicePixelRatio, s.canvas.width = q * <span class=\"hljs-built_in\">window</span>.devicePixelRatio, s.scale(<span class=\"hljs-built_in\">window</span>.devicePixelRatio, <span class=\"hljs-built_in\">window</span>.devicePixelRatio));\n    <span class=\"hljs-built_in\">this</span>.PolarArea = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, c</span>) </span>{\n        r.PolarArea.defaults = {\n            <span class=\"hljs-attr\">scaleOverlay</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">scaleOverride</span>: !<span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">scaleSteps</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-attr\">scaleStepWidth</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-attr\">scaleStartValue</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-attr\">scaleShowLine</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">scaleLineColor</span>: <span class=\"hljs-string\">\"rgba(0,0,0,.1)\"</span>,\n            <span class=\"hljs-attr\">scaleLineWidth</span>: <span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">scaleShowLabels</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">scaleLabel</span>: <span class=\"hljs-string\">\"&lt;%=value%&gt;\"</span>,\n            <span class=\"hljs-attr\">scaleFontFamily</span>: <span class=\"hljs-string\">\"'Arial'\"</span>,\n            <span class=\"hljs-attr\">scaleFontSize</span>: <span class=\"hljs-number\">12</span>,\n            <span class=\"hljs-attr\">scaleFontStyle</span>: <span class=\"hljs-string\">\"normal\"</span>,\n            <span class=\"hljs-attr\">scaleFontColor</span>: <span class=\"hljs-string\">\"#666\"</span>,\n            <span class=\"hljs-attr\">scaleShowLabelBackdrop</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">scaleBackdropColor</span>: <span class=\"hljs-string\">\"rgba(255,255,255,0.75)\"</span>,\n            <span class=\"hljs-attr\">scaleBackdropPaddingY</span>: <span class=\"hljs-number\">2</span>,\n            <span class=\"hljs-attr\">scaleBackdropPaddingX</span>: <span class=\"hljs-number\">2</span>,\n            <span class=\"hljs-attr\">segmentShowStroke</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">segmentStrokeColor</span>: <span class=\"hljs-string\">\"#fff\"</span>,\n            <span class=\"hljs-attr\">segmentStrokeWidth</span>: <span class=\"hljs-number\">2</span>,\n            <span class=\"hljs-attr\">animation</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">animationSteps</span>: <span class=\"hljs-number\">100</span>,\n            <span class=\"hljs-attr\">animationEasing</span>: <span class=\"hljs-string\">\"easeOutBounce\"</span>,\n            <span class=\"hljs-attr\">animateRotate</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">animateScale</span>: !<span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">onAnimationComplete</span>: <span class=\"hljs-literal\">null</span>\n        };\n        <span class=\"hljs-keyword\">var</span> b = c ? y(r.PolarArea.defaults, c) : r.PolarArea.defaults;\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> G(a, b, s)\n    };\n    <span class=\"hljs-built_in\">this</span>.Radar = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, c</span>) </span>{\n        r.Radar.defaults = {\n            <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-attr\">s</span><span class=\"hljs-attr\">caleOverlay</span>: !<span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">scaleOverride</span>: !<span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">scaleSteps</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-attr\">scaleStepWidth</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-attr\">scaleStartValue</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-attr\">scaleShowLine</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">scaleLineColor</span>: <span class=\"hljs-string\">\"rgba(0,0,0,.1)\"</span>,\n            <span class=\"hljs-attr\">scaleLineWidth</span>: <span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">scaleShowLabels</span>: !<span class=\"hljs-number\">1</span><span class=\"hljs-number\"></span>,\n            <span class=\"hljs-attr\">scaleLabel</span>: <span class=\"hljs-string\">\"&lt;%=value%&gt;\"</span>,\n            <span class=\"hljs-attr\">scaleFontFamily</span>: <span class=\"hljs-string\">\"'Arial'\"</span>,\n            <span class=\"hljs-attr\">scaleFontSize</span>: <span class=\"hljs-number\">12</span>,\n            <span class=\"hljs-attr\">scaleFontStyle</span>: <span class=\"hljs-string\">\"normal\"</span>,\n            <span class=\"hljs-attr\">scaleFontColor</span>: <span class=\"hljs-string\">\"#666\"</span>,\n            <span class=\"hljs-attr\">scaleShowLabelBackdrop</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">scaleBackdropColor</span>: <span class=\"hljs-string\">\"rgba(255,255,255,0.75)\"</span>,\n            <span class=\"hljs-attr\">scaleBackdropPaddingY</span>: <span class=\"hljs-number\">2</span>,\n            <span class=\"hljs-attr\">scaleBackdropPaddingX</span>: <span class=\"hljs-number\">2</span>,</div>\n            <span class=\"hljs-attr\">angleShowLineOut</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">angleLineColor</span>: <span class=\"hljs-string\">\"rgba(0,0,0,.1)\"</span>,\n            <span class=\"hljs-attr\">angleLineWidth</span>: <span class=\"hljs-number\">1</span>,\n           <div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\"> <span class=\"hljs-attr\">p</span><span class=\"hljs-attr\">ointLabelFontFamily</span>: <span class=\"hljs-string\">\"'Arial'\"</span>,\n            <span class=\"hljs-attr\">pointLabelFontStyle</span>: <span class=\"hljs-string\">\"normal\"</span>,\n            <span class=\"hljs-attr\">pointLabelFon</span><span class=\"hljs-attr\">tSize</span>: <span class=\"hljs-number\">12</span>,\n            <span class=\"hljs-attr\">pointLabelFontColor</span>: <span class=\"hljs-string\">\"#666\"</span>,</div>\n            <span class=\"hljs-attr\">pointDot</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">pointDotRadius</span>: <span class=\"hljs-number\">3</span>,\n            <span class=\"hljs-attr\">pointDotStrokeWidth</span>: <span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">datasetStroke</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">datasetStrokeWidth</span>: <span class=\"hljs-number\">2</span>,\n            <span class=\"hljs-attr\">datasetFill</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Animations_0\" class=\"highlights fea_Animations\"><span class=\"hljs-attr\">animation</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">animationSteps</span>: <span class=\"hljs-number\">60</span>,\n            <span class=\"hljs-attr\">animationEasing</span>: <span class=\"hljs-string\">\"easeOutQuart\"</span>,\n            <span class=\"hljs-attr\">onAnimationComplete</span>: <span class=\"hljs-literal\">null</span></div><span class=\"hljs-literal\"></span>\n        };\n        <span class=\"hljs-keyword\">var</span> b = c ? y(r.Radar.defaults, c) : r.Radar.defaults;\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> H(a, b, s)\n    };\n    <span class=\"hljs-built_in\">this</span>.Pie = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a,\n        c</span>) </span>{\n        r.Pie.defaults = {\n            <span class=\"hljs-attr\">segmentShowStroke</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">segmentStrokeColor</span>: <span class=\"hljs-string\">\"#fff\"</span>,\n            <span class=\"hljs-attr\">segmentStrokeWidth</span>: <span class=\"hljs-number\">2</span>,\n            <span class=\"hljs-attr\">animation</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">animationSteps</span>: <span class=\"hljs-number\">100</span>,\n            <span class=\"hljs-attr\">animationEasing</span>: <span class=\"hljs-string\">\"easeOutBounce\"</span>,\n            <span class=\"hljs-attr\">animateRotate</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">animateScale</span>: !<span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">onAnimationComplete</span>: <span class=\"hljs-literal\">null</span>\n        };\n        <span class=\"hljs-keyword\">var</span> b = c ? y(r.Pie.defaults, c) : r.Pie.defaults;\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> I(a, b, s)\n    };\n    <span class=\"hljs-built_in\">this</span>.Doughnut = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, c</span>) </span>{\n        r.Doughnut.defaults = {\n            <span class=\"hljs-attr\">segmentShowStroke</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">segmentStrokeColor</span>: <span class=\"hljs-string\">\"#fff\"</span>,\n            <span class=\"hljs-attr\">segmentStrokeWidth</span>: <span class=\"hljs-number\">2</span>,\n            <span class=\"hljs-attr\">percentageInnerCutout</span>: <span class=\"hljs-number\">50</span>,\n            <span class=\"hljs-attr\">animation</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">animationSteps</span>: <span class=\"hljs-number\">100</span>,\n            <span class=\"hljs-attr\">animationEasing</span>: <span class=\"hljs-string\">\"easeOutBounce\"</span>,\n            <span class=\"hljs-attr\">animateRotate</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">animateScale</span>: !<span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">onAnimationComplete</span>: <span class=\"hljs-literal\">null</span>\n        };\n        <span class=\"hljs-keyword\">var</span> b = c ? y(r.Doughnut.defaults, c) : r.Doughnut.defaults;\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> J(a, b, s)\n    };\n    <span class=\"hljs-built_in\">this</span>.Line = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, c</span>) </span>{\n        r.Line.defaults = {\n            <span class=\"hljs-attr\">scaleOverlay</span>: !<span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">scaleOverride</span>: !<span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">scaleSteps</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-attr\">scaleStepWidth</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-attr\">scaleStartValue</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-attr\">scaleLineColor</span>: <span class=\"hljs-string\">\"rgba(0,0,0,.1)\"</span>,\n            <span class=\"hljs-attr\">scaleLineWidth</span>: <span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">scaleShowLabels</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">scaleLabel</span>: <span class=\"hljs-string\">\"&lt;%=value%&gt;\"</span>,\n            <span class=\"hljs-attr\">scaleFontFamily</span>: <span class=\"hljs-string\">\"'Arial'\"</span>,\n            <span class=\"hljs-attr\">scaleFontSize</span>: <span class=\"hljs-number\">12</span>,\n            <span class=\"hljs-attr\">scaleFontStyle</span>: <span class=\"hljs-string\">\"normal\"</span>,\n            <span class=\"hljs-attr\">scaleFontColor</span>: <span class=\"hljs-string\">\"#666\"</span>,\n            <span class=\"hljs-attr\">scaleShowGridLines</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">scaleGridLineColor</span>: <span class=\"hljs-string\">\"rgba(0,0,0,.05)\"</span>,\n            <span class=\"hljs-attr\">scaleGridLineWidth</span>: <span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">bezierCurve</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">pointDot</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">pointDotRadius</span>: <span class=\"hljs-number\">4</span>,\n            <span class=\"hljs-attr\">pointDotStrokeWidth</span>: <span class=\"hljs-number\">2</span>,\n            <span class=\"hljs-attr\">datasetStroke</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">datasetStrokeWidth</span>: <span class=\"hljs-number\">2</span>,\n            <span class=\"hljs-attr\">datasetFill</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">animation</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">animationSteps</span>: <span class=\"hljs-number\">60</span>,\n            <span class=\"hljs-attr\">animationEasing</span>: <span class=\"hljs-string\">\"easeOutQuart\"</span>,\n            <span class=\"hljs-attr\">onAnimationComplete</span>: <span class=\"hljs-literal\">null</span>\n        };\n        <span class=\"hljs-keyword\">var</span> b = c ? y(r.Line.defaults, c) : r.Line.defaults;\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> K(a, b, s)\n    };\n    <span class=\"hljs-built_in\">this</span>.Bar = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, c</span>) </span>{\n        r.Bar.defaults = {\n            <span class=\"hljs-attr\">scaleOverlay</span>: !<span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">scaleOverride</span>: !<span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">scaleSteps</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-attr\">scaleStepWidth</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-attr\">scaleStartValue</span>: <span class=\"hljs-literal\">null</span>,\n            <span class=\"hljs-attr\">scaleLineColor</span>: <span class=\"hljs-string\">\"rgba(0,0,0,.1)\"</span>,\n            <span class=\"hljs-attr\">scaleLineWidth</span>: <span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">scaleShowLabels</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">scaleLabel</span>: <span class=\"hljs-string\">\"&lt;%=value%&gt;\"</span>,\n            <span class=\"hljs-attr\">scaleFontFamily</span>: <span class=\"hljs-string\">\"'Arial'\"</span>,\n            <span class=\"hljs-attr\">scaleFontSize</span>: <span class=\"hljs-number\">12</span>,\n            <span class=\"hljs-attr\">scaleFontStyle</span>: <span class=\"hljs-string\">\"normal\"</span>,\n            <span class=\"hljs-attr\">scaleFontColor</span>: <span class=\"hljs-string\">\"#666\"</span>,\n            <span class=\"hljs-attr\">scaleShowGridLines</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">scaleGridLineColor</span>: <span class=\"hljs-string\">\"rgba(0,0,0,.05)\"</span>,\n            <span class=\"hljs-attr\">scaleGridLineWidth</span>: <span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">barShowStroke</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">barStrokeWidth</span>: <span class=\"hljs-number\">2</span>,\n            <span class=\"hljs-attr\">barValueSpacing</span>: <span class=\"hljs-number\">5</span>,\n            <span class=\"hljs-attr\">barDatasetSpacing</span>: <span class=\"hljs-number\">1</span>,\n            <span class=\"hljs-attr\">animation</span>: !<span class=\"hljs-number\">0</span>,\n            <span class=\"hljs-attr\">animationSteps</span>: <span class=\"hljs-number\">60</span>,\n            <span class=\"hljs-attr\">animationEasing</span>: <span class=\"hljs-string\">\"easeOutQuart\"</span>,\n            <span class=\"hljs-attr\">onAnimationComplete</span>: <span class=\"hljs-literal\">null</span>\n        };\n        <span class=\"hljs-keyword\">var</span> b = c ? y(r.Bar.defaults, c) : r.Bar.defaults;\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> L(a, b, s)\n    };\n    <span class=\"hljs-keyword\">var</span> G = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, c, b</span>) </span>{\n            <span class=\"hljs-keyword\">var</span> e, h, f, d, g, k, j, l, m;\n            g = <span class=\"hljs-built_in\">Math</span>.min.apply(<span class=\"hljs-built_in\">Math</span>, [q, u]) / <span class=\"hljs-number\">2</span>;\n            g -= <span class=\"hljs-built_in\">Math</span>.max.apply(<span class=\"hljs-built_in\">Math</span>, [<span class=\"hljs-number\">0.5</span> * c.scaleFontSize, <span class=\"hljs-number\">0.5</span> * c.scaleLineWidth]);\n            d = <span class=\"hljs-number\">2</span> * c.scaleFontSize;\n            c.scaleShowLabelBackdrop &amp;&amp; (d += <span class=\"hljs-number\">2</span> * c.scaleBackdropPaddingY, g -= <span class=\"hljs-number\">1.5</span> * c.scaleBackdropPaddingY);\n            l = g;\n            d = d ? d : <span class=\"hljs-number\">5</span>;\n            e = <span class=\"hljs-built_in\">Number</span>.MIN_VALUE;\n            h = <span class=\"hljs-built_in\">Number</span>.MAX_VALUE;\n            <span class=\"hljs-keyword\">for</span> (f = <span class=\"hljs-number\">0</span>; f &lt; a.length; f++) a[f].value &gt; e &amp;&amp; (e = a[f].value), a[f].value &lt; h &amp;&amp; (h = a[f].value);\n            f = <span class=\"hljs-built_in\">Math</span>.floor(l / (<span class=\"hljs-number\">0.66</span> * d));\n            d = <span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-number\">0.5</span> * (l / d));\n            m = c.scaleShowLabels ? c.scaleLabel : <span class=\"hljs-literal\">null</span>;\n            c.scaleOverride ? (j = {\n                <span class=\"hljs-attr\">steps</span>: c.scaleSteps,\n                <span class=\"hljs-attr\">stepValue</span>: c.scaleStepWidth,\n                <span class=\"hljs-attr\">graphMin</span>: c.scaleStartValue,\n                <span class=\"hljs-attr\">labels</span>: []\n            }, z(m, j.labels, j.steps, c.scaleStartValue, c.scaleStepWidth)) : j = C(l, f, d, e, h,\n                m);\n            k = g / j.steps;\n            x(c, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> a = <span class=\"hljs-number\">0</span>; a &lt; j.steps; a++)\n                    <span class=\"hljs-keyword\">if</span> (c.scaleShowLine &amp;&amp; (b.beginPath(), b.arc(q / <span class=\"hljs-number\">2</span>, u / <span class=\"hljs-number\">2</span>, k * (a + <span class=\"hljs-number\">1</span>), <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2</span> * <span class=\"hljs-built_in\">Math</span>.PI, !<span class=\"hljs-number\">0</span>), b.strokeStyle = c.scaleLineColor, b.lineWidth = c.scaleLineWidth, b.stroke()), c.scaleShowLabels) {\n                        b.textAlign = <span class=\"hljs-string\">\"center\"</span>;\n                        b.font = c.scaleFontStyle + <span class=\"hljs-string\">\" \"</span> + c.scaleFontSize + <span class=\"hljs-string\">\"px \"</span> + c.scaleFontFamily;\n                        <span class=\"hljs-keyword\">var</span> e = j.labels[a];\n                        <span class=\"hljs-keyword\">if</span> (c.scaleShowLabelBackdrop) {\n                            <span class=\"hljs-keyword\">var</span> d = b.measureText(e).width;\n                            b.fillStyle = c.scaleBackdropColor;\n                            b.beginPath();\n                            b.rect(<span class=\"hljs-built_in\">Math</span>.round(q / <span class=\"hljs-number\">2</span> - d / <span class=\"hljs-number\">2</span> - c.scaleBackdropPaddingX), <span class=\"hljs-built_in\">Math</span>.round(u / <span class=\"hljs-number\">2</span> - k * (a +\n                                <span class=\"hljs-number\">1</span>) - <span class=\"hljs-number\">0.5</span> * c.scaleFontSize - c.scaleBackdropPaddingY), <span class=\"hljs-built_in\">Math</span>.round(d + <span class=\"hljs-number\">2</span> * c.scaleBackdropPaddingX), <span class=\"hljs-built_in\">Math</span>.round(c.scaleFontSize + <span class=\"hljs-number\">2</span> * c.scaleBackdropPaddingY));\n                            b.fill()\n                        }\n                        b.textBaseline = <span class=\"hljs-string\">\"middle\"</span>;\n                        b.fillStyle = c.scaleFontColor;\n                        b.fillText(e, q / <span class=\"hljs-number\">2</span>, u / <span class=\"hljs-number\">2</span> - k * (a + <span class=\"hljs-number\">1</span>))\n                    }\n            }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">e</span>) </span>{\n                <span class=\"hljs-keyword\">var</span> d = -<span class=\"hljs-built_in\">Math</span>.PI / <span class=\"hljs-number\">2</span>,\n                    g = <span class=\"hljs-number\">2</span> * <span class=\"hljs-built_in\">Math</span>.PI / a.length,\n                    f = <span class=\"hljs-number\">1</span>,\n                    h = <span class=\"hljs-number\">1</span>;\n                c.animation &amp;&amp; (c.animateScale &amp;&amp; (f = e), c.animateRotate &amp;&amp; (h = e));\n                <span class=\"hljs-keyword\">for</span> (e = <span class=\"hljs-number\">0</span>; e &lt; a.length; e++) b.beginPath(), b.arc(q / <span class=\"hljs-number\">2</span>, u / <span class=\"hljs-number\">2</span>, f * v(a[e].value, j, k), d, d + h * g, !<span class=\"hljs-number\">1</span>), b.lineTo(q / <span class=\"hljs-number\">2</span>, u / <span class=\"hljs-number\">2</span>), b.closePath(), b.fillStyle = a[e].color, b.fill(),\n                    c.segmentShowStroke &amp;&amp; (b.strokeStyle = c.segmentStrokeColor, b.lineWidth = c.segmentStrokeWidth, b.stroke()), d += h * g\n            }, b)\n        },\n        H = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, c, b</span>) </span>{\n            <span class=\"hljs-keyword\">var</span> e, h, f, d, g, k, j, l, m;\n            a.labels || (a.labels = []);\n            g = <span class=\"hljs-built_in\">Math</span>.min.apply(<span class=\"hljs-built_in\">Math</span>, [q, u]) / <span class=\"hljs-number\">2</span>;\n            d = <span class=\"hljs-number\">2</span> * c.scaleFontSize;\n            <span class=\"hljs-keyword\">for</span> (e = l = <span class=\"hljs-number\">0</span>; e &lt; a.labels.length; e++) b.font = c.pointLabelFontStyle + <span class=\"hljs-string\">\" \"</span> + c.pointLabelFontSize + <span class=\"hljs-string\">\"px \"</span> + c.pointLabelFontFamily, h = b.measureText(a.labels[e]).width, h &gt; l &amp;&amp; (l = h);\n            g -= <span class=\"hljs-built_in\">Math</span>.max.apply(<span class=\"hljs-built_in\">Math</span>, [l, <span class=\"hljs-number\">1.5</span> * (c.pointLabelFontSize / <span class=\"hljs-number\">2</span>)]);\n            g -= c.pointLabelFontSize;\n            l = g = A(g, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-number\">0</span>);\n            d = d ? d : <span class=\"hljs-number\">5</span>;\n            e = <span class=\"hljs-built_in\">Number</span>.MIN_VALUE;\n            h = <span class=\"hljs-built_in\">Number</span>.MAX_VALUE;\n            <span class=\"hljs-keyword\">for</span> (f = <span class=\"hljs-number\">0</span>; f &lt; a.datasets.length; f++)\n                <span class=\"hljs-keyword\">for</span> (m = <span class=\"hljs-number\">0</span>; m &lt; a.datasets[f].data.length; m++) a.datasets[f].data[m] &gt; e &amp;&amp; (e = a.datasets[f].data[m]), a.datasets[f].data[m] &lt; h &amp;&amp; (h = a.datasets[f].data[m]);\n            f = <span class=\"hljs-built_in\">Math</span>.floor(l / (<span class=\"hljs-number\">0.66</span> * d));\n            d = <span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-number\">0.5</span> * (l / d));\n            m = c.scaleShowLabels ? c.scaleLabel : <span class=\"hljs-literal\">null</span>;\n            c.scaleOverride ? (j = {\n                <span class=\"hljs-attr\">steps</span>: c.scaleSteps,\n                <span class=\"hljs-attr\">stepValue</span>: c.scaleStepWidth,\n                <span class=\"hljs-attr\">graphMin</span>: c.scaleStartValue,\n                <span class=\"hljs-attr\">labels</span>: []\n            }, z(m, j.labels, j.steps, c.scaleStartValue, c.scaleStepWidth)) : j = C(l, f, d, e, h, m);\n            k = g / j.steps;\n            x(c, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n                <span class=\"hljs-keyword\">var</span> e = <span class=\"hljs-number\">2</span> * <span class=\"hljs-built_in\">Math</span>.PI /\n                    a.datasets[<span class=\"hljs-number\">0</span>].data.length;\n                b.save();\n                b.translate(q / <span class=\"hljs-number\">2</span>, u / <span class=\"hljs-number\">2</span>);\n                <span class=\"hljs-keyword\">if</span> (c.angleShowLineOut) {\n                    b.strokeStyle = c.angleLineColor;\n                    b.lineWidth = c.angleLineWidth;\n                    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> d = <span class=\"hljs-number\">0</span>; d &lt; a.datasets[<span class=\"hljs-number\">0</span>].data.length; d++) b.rotate(e), b.beginPath(), b.moveTo(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>), b.lineTo(<span class=\"hljs-number\">0</span>, -g), b.stroke()\n                }\n                <span class=\"hljs-keyword\">for</span> (d = <span class=\"hljs-number\">0</span>; d &lt; j.steps; d++) {\n                    b.beginPath();\n                    <span class=\"hljs-keyword\">if</span> (c.scaleShowLine) {\n                        b.strokeStyle = c.scaleLineColor;\n                        b.lineWidth = c.scaleLineWidth;\n                        b.moveTo(<span class=\"hljs-number\">0</span>, -k * (d + <span class=\"hljs-number\">1</span>));\n                        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> f = <span class=\"hljs-number\">0</span>; f &lt; a.datasets[<span class=\"hljs-number\">0</span>].data.length; f++) b.rotate(e), b.lineTo(<span class=\"hljs-number\">0</span>, -k * (d + <span class=\"hljs-number\">1</span>));\n                        b.closePath();\n                        b.stroke()\n                    }\n                    c.scaleShowLabels &amp;&amp;\n                        (b.textAlign = <span class=\"hljs-string\">\"center\"</span>, b.font = c.scaleFontStyle + <span class=\"hljs-string\">\" \"</span> + c.scaleFontSize + <span class=\"hljs-string\">\"px \"</span> + c.scaleFontFamily, b.textBaseline = <span class=\"hljs-string\">\"middle\"</span>, c.scaleShowLabelBackdrop &amp;&amp; (f = b.measureText(j.labels[d]).width, b.fillStyle = c.scaleBackdropColor, b.beginPath(), b.rect(<span class=\"hljs-built_in\">Math</span>.round(-f / <span class=\"hljs-number\">2</span> - c.scaleBackdropPaddingX), <span class=\"hljs-built_in\">Math</span>.round(-k * (d + <span class=\"hljs-number\">1</span>) - <span class=\"hljs-number\">0.5</span> * c.scaleFontSize - c.scaleBackdropPaddingY), <span class=\"hljs-built_in\">Math</span>.round(f + <span class=\"hljs-number\">2</span> * c.scaleBackdropPaddingX), <span class=\"hljs-built_in\">Math</span>.round(c.scaleFontSize + <span class=\"hljs-number\">2</span> * c.scaleBackdropPaddingY)), b.fill()), b.fillStyle = c.scaleFontColor, b.fillText(j.labels[d], <span class=\"hljs-number\">0</span>, -k * (d +\n                            <span class=\"hljs-number\">1</span>)))\n                }\n                <span class=\"hljs-keyword\">for</span> (d = <span class=\"hljs-number\">0</span>; d &lt; a.labels.length; d++) {\n                    b.font = c.pointLabelFontStyle + <span class=\"hljs-string\">\" \"</span> + c.pointLabelFontSize + <span class=\"hljs-string\">\"px \"</span> + c.pointLabelFontFamily;\n                    b.fillStyle = c.pointLabelFontColor;\n                    <span class=\"hljs-keyword\">var</span> f = <span class=\"hljs-built_in\">Math</span>.sin(e * d) * (g + c.pointLabelFontSize),\n                        h = <span class=\"hljs-built_in\">Math</span>.cos(e * d) * (g + c.pointLabelFontSize);\n                    b.textAlign = e * d == <span class=\"hljs-built_in\">Math</span>.PI || <span class=\"hljs-number\">0</span> == e * d ? <span class=\"hljs-string\">\"center\"</span> : e * d &gt; <span class=\"hljs-built_in\">Math</span>.PI ? <span class=\"hljs-string\">\"right\"</span> : <span class=\"hljs-string\">\"left\"</span>;\n                    b.textBaseline = <span class=\"hljs-string\">\"middle\"</span>;\n                    b.fillText(a.labels[d], f, -h)\n                }\n                b.restore()\n            }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n                <span class=\"hljs-keyword\">var</span> e = <span class=\"hljs-number\">2</span> * <span class=\"hljs-built_in\">Math</span>.PI / a.datasets[<span class=\"hljs-number\">0</span>].data.length;\n                b.save();\n                b.translate(q / <span class=\"hljs-number\">2</span>, u / <span class=\"hljs-number\">2</span>);\n                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> g = <span class=\"hljs-number\">0</span>; g &lt; a.datasets.length; g++) {\n                    b.beginPath();\n                    b.moveTo(<span class=\"hljs-number\">0</span>, d * -<span class=\"hljs-number\">1</span> * v(a.datasets[g].data[<span class=\"hljs-number\">0</span>], j, k));\n                    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> f = <span class=\"hljs-number\">1</span>; f &lt; a.datasets[g].data.length; f++) b.rotate(e), b.lineTo(<span class=\"hljs-number\">0</span>, d * -<span class=\"hljs-number\">1</span> * v(a.datasets[g].data[f], j, k));\n                    b.closePath();\n                    b.fillStyle = a.datasets[g].fillColor;\n                    b.strokeStyle = a.datasets[g].strokeColor;\n                    b.lineWidth = c.datasetStrokeWidth;\n                    b.fill();\n                    b.stroke();\n                    <span class=\"hljs-keyword\">if</span> (c.pointDot) {\n                        b.fillStyle = a.datasets[g].pointColor;\n                        b.strokeStyle = a.datasets[g].pointStrokeColor;\n                        b.lineWidth = c.pointDotStrokeWidth;\n                        <span class=\"hljs-keyword\">for</span> (f = <span class=\"hljs-number\">0</span>; f &lt; a.datasets[g].data.length; f++) b.rotate(e), b.beginPath(), b.arc(<span class=\"hljs-number\">0</span>, d * -<span class=\"hljs-number\">1</span> *\n                            v(a.datasets[g].data[f], j, k), c.pointDotRadius, <span class=\"hljs-number\">2</span> * <span class=\"hljs-built_in\">Math</span>.PI, !<span class=\"hljs-number\">1</span>), b.fill(), b.stroke()\n                    }\n                    b.rotate(e)\n                }\n                b.restore()\n            }, b)\n        },\n        I = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, c, b</span>) </span>{\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> e = <span class=\"hljs-number\">0</span>, h = <span class=\"hljs-built_in\">Math</span>.min.apply(<span class=\"hljs-built_in\">Math</span>, [u / <span class=\"hljs-number\">2</span>, q / <span class=\"hljs-number\">2</span>]) - <span class=\"hljs-number\">5</span>, f = <span class=\"hljs-number\">0</span>; f &lt; a.length; f++) e += a[f].value;\n            x(c, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n                <span class=\"hljs-keyword\">var</span> g = -<span class=\"hljs-built_in\">Math</span>.PI / <span class=\"hljs-number\">2</span>,\n                    f = <span class=\"hljs-number\">1</span>,\n                    j = <span class=\"hljs-number\">1</span>;\n                c.animation &amp;&amp; (c.animateScale &amp;&amp; (f = d), c.animateRotate &amp;&amp; (j = d));\n                <span class=\"hljs-keyword\">for</span> (d = <span class=\"hljs-number\">0</span>; d &lt; a.length; d++) {\n                    <span class=\"hljs-keyword\">var</span> l = j * a[d].value / e * <span class=\"hljs-number\">2</span> * <span class=\"hljs-built_in\">Math</span>.PI;\n                    b.beginPath();\n                    b.arc(q / <span class=\"hljs-number\">2</span>, u / <span class=\"hljs-number\">2</span>, f * h, g, g + l);\n                    b.lineTo(q / <span class=\"hljs-number\">2</span>, u / <span class=\"hljs-number\">2</span>);\n                    b.closePath();\n                    b.fillStyle = a[d].color;\n                    b.fill();\n                    c.segmentShowStroke &amp;&amp; (b.lineWidth =\n                        c.segmentStrokeWidth, b.strokeStyle = c.segmentStrokeColor, b.stroke());\n                    g += l\n                }\n            }, b)\n        },\n        J = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, c, b</span>) </span>{\n            <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> e = <span class=\"hljs-number\">0</span>, h = <span class=\"hljs-built_in\">Math</span>.min.apply(<span class=\"hljs-built_in\">Math</span>, [u / <span class=\"hljs-number\">2</span>, q / <span class=\"hljs-number\">2</span>]) - <span class=\"hljs-number\">5</span>, f = h * (c.percentageInnerCutout / <span class=\"hljs-number\">100</span>), d = <span class=\"hljs-number\">0</span>; d &lt; a.length; d++) e += a[d].value;\n            x(c, <span class=\"hljs-literal\">null</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n                <span class=\"hljs-keyword\">var</span> k = -<span class=\"hljs-built_in\">Math</span>.PI / <span class=\"hljs-number\">2</span>,\n                    j = <span class=\"hljs-number\">1</span>,\n                    l = <span class=\"hljs-number\">1</span>;\n                c.animation &amp;&amp; (c.animateScale &amp;&amp; (j = d), c.animateRotate &amp;&amp; (l = d));\n                <span class=\"hljs-keyword\">for</span> (d = <span class=\"hljs-number\">0</span>; d &lt; a.length; d++) {\n                    <span class=\"hljs-keyword\">var</span> m = l * a[d].value / e * <span class=\"hljs-number\">2</span> * <span class=\"hljs-built_in\">Math</span>.PI;\n                    b.beginPath();\n                    b.arc(q / <span class=\"hljs-number\">2</span>, u / <span class=\"hljs-number\">2</span>, j * h, k, k + m, !<span class=\"hljs-number\">1</span>);\n                    b.arc(q / <span class=\"hljs-number\">2</span>, u / <span class=\"hljs-number\">2</span>, j * f, k + m, k, !<span class=\"hljs-number\">0</span>);\n                    b.closePath();\n                    b.fillStyle = a[d].color;\n                    b.fill();\n                    c.segmentShowStroke &amp;&amp;\n                        (b.lineWidth = c.segmentStrokeWidth, b.strokeStyle = c.segmentStrokeColor, b.stroke());\n                    k += m\n                }\n            }, b)\n        },\n        K = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, c, b</span>) </span>{\n            <span class=\"hljs-keyword\">var</span> e, h, f, d, g, k, j, l, m, t, r, n, p, s = <span class=\"hljs-number\">0</span>;\n            g = u;\n            b.font = c.scaleFontStyle + <span class=\"hljs-string\">\" \"</span> + c.scaleFontSize + <span class=\"hljs-string\">\"px \"</span> + c.scaleFontFamily;\n            t = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">for</span> (d = <span class=\"hljs-number\">0</span>; d &lt; a.labels.length; d++) e = b.measureText(a.labels[d]).width, t = e &gt; t ? e : t;\n            q / a.labels.length &lt; t ? (s = <span class=\"hljs-number\">45</span>, q / a.labels.length &lt; <span class=\"hljs-built_in\">Math</span>.cos(s) * t ? (s = <span class=\"hljs-number\">90</span>, g -= t) : g -= <span class=\"hljs-built_in\">Math</span>.sin(s) * t) : g -= c.scaleFontSize;\n            d = c.scaleFontSize;\n            g = g - <span class=\"hljs-number\">5</span> - d;\n            e = <span class=\"hljs-built_in\">Number</span>.MIN_VALUE;\n            h = <span class=\"hljs-built_in\">Number</span>.MAX_VALUE;\n            <span class=\"hljs-keyword\">for</span> (f = <span class=\"hljs-number\">0</span>; f &lt; a.datasets.length; f++)\n                <span class=\"hljs-keyword\">for</span> (l =\n                    <span class=\"hljs-number\">0</span>; l &lt; a.datasets[f].data.length; l++) a.datasets[f].data[l] &gt; e &amp;&amp; (e = a.datasets[f].data[l]), a.datasets[f].data[l] &lt; h &amp;&amp; (h = a.datasets[f].data[l]);\n            f = <span class=\"hljs-built_in\">Math</span>.floor(g / (<span class=\"hljs-number\">0.66</span> * d));\n            d = <span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-number\">0.5</span> * (g / d));\n            l = c.scaleShowLabels ? c.scaleLabel : <span class=\"hljs-string\">\"\"</span>;\n            c.scaleOverride ? (j = {\n                <span class=\"hljs-attr\">steps</span>: c.scaleSteps,\n                <span class=\"hljs-attr\">stepValue</span>: c.scaleStepWidth,\n                <span class=\"hljs-attr\">graphMin</span>: c.scaleStartValue,\n                <span class=\"hljs-attr\">labels</span>: []\n            }, z(l, j.labels, j.steps, c.scaleStartValue, c.scaleStepWidth)) : j = C(g, f, d, e, h, l);\n            k = <span class=\"hljs-built_in\">Math</span>.floor(g / j.steps);\n            d = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">if</span> (c.scaleShowLabels) {\n                b.font = c.scaleFontStyle + <span class=\"hljs-string\">\" \"</span> + c.scaleFontSize + <span class=\"hljs-string\">\"px \"</span> + c.scaleFontFamily;\n                <span class=\"hljs-keyword\">for</span> (e = <span class=\"hljs-number\">0</span>; e &lt; j.labels.length; e++) h = b.measureText(j.labels[e]).width, d = h &gt; d ? h : d;\n                d += <span class=\"hljs-number\">10</span>\n            }\n            r = q - d - t;\n            m = <span class=\"hljs-built_in\">Math</span>.floor(r / (a.labels.length - <span class=\"hljs-number\">1</span>));\n            n = q - t / <span class=\"hljs-number\">2</span> - r;\n            p = g + c.scaleFontSize / <span class=\"hljs-number\">2</span>;\n            x(c, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n                b.lineWidth = c.scaleLineWidth;\n                b.strokeStyle = c.scaleLineColor;\n                b.beginPath();\n                b.moveTo(q - t / <span class=\"hljs-number\">2</span> + <span class=\"hljs-number\">5</span>, p);\n                b.lineTo(q - t / <span class=\"hljs-number\">2</span> - r - <span class=\"hljs-number\">5</span>, p);\n                b.stroke();\n                <span class=\"hljs-number\">0</span> &lt; s ? (b.save(), b.textAlign = <span class=\"hljs-string\">\"right\"</span>) : b.textAlign = <span class=\"hljs-string\">\"center\"</span>;\n                b.fillStyle = c.scaleFontColor;\n                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> d = <span class=\"hljs-number\">0</span>; d &lt; a.labels.length; d++) b.save(), <span class=\"hljs-number\">0</span> &lt; s ? (b.translate(n + d * m, p + c.scaleFontSize), b.rotate(-(s * (<span class=\"hljs-built_in\">Math</span>.PI / <span class=\"hljs-number\">180</span>))), b.fillText(a.labels[d],\n                    <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>), b.restore()) : b.fillText(a.labels[d], n + d * m, p + c.scaleFontSize + <span class=\"hljs-number\">3</span>), b.beginPath(), b.moveTo(n + d * m, p + <span class=\"hljs-number\">3</span>), c.scaleShowGridLines &amp;&amp; <span class=\"hljs-number\">0</span> &lt; d ? (b.lineWidth = c.scaleGridLineWidth, b.strokeStyle = c.scaleGridLineColor, b.lineTo(n + d * m, <span class=\"hljs-number\">5</span>)) : b.lineTo(n + d * m, p + <span class=\"hljs-number\">3</span>), b.stroke();\n                b.lineWidth = c.scaleLineWidth;\n                b.strokeStyle = c.scaleLineColor;\n                b.beginPath();\n                b.moveTo(n, p + <span class=\"hljs-number\">5</span>);\n                b.lineTo(n, <span class=\"hljs-number\">5</span>);\n                b.stroke();\n                b.textAlign = <span class=\"hljs-string\">\"right\"</span>;\n                b.textBaseline = <span class=\"hljs-string\">\"middle\"</span>;\n                <span class=\"hljs-keyword\">for</span> (d = <span class=\"hljs-number\">0</span>; d &lt; j.steps; d++) b.beginPath(), b.moveTo(n - <span class=\"hljs-number\">3</span>, p - (d + <span class=\"hljs-number\">1</span>) * k), c.scaleShowGridLines ? (b.lineWidth = c.scaleGridLineWidth,\n                    b.strokeStyle = c.scaleGridLineColor, b.lineTo(n + r + <span class=\"hljs-number\">5</span>, p - (d + <span class=\"hljs-number\">1</span>) * k)) : b.lineTo(n - <span class=\"hljs-number\">0.5</span>, p - (d + <span class=\"hljs-number\">1</span>) * k), b.stroke(), c.scaleShowLabels &amp;&amp; b.fillText(j.labels[d], n - <span class=\"hljs-number\">8</span>, p - (d + <span class=\"hljs-number\">1</span>) * k)\n            }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n                <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">e</span>(<span class=\"hljs-params\">b, c</span>) </span>{\n                    <span class=\"hljs-keyword\">return</span> p - d * v(a.datasets[b].data[c], j, k)\n                }\n                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> f = <span class=\"hljs-number\">0</span>; f &lt; a.datasets.length; f++) {\n                    b.strokeStyle = a.datasets[f].strokeColor;\n                    b.lineWidth = c.datasetStrokeWidth;\n                    b.beginPath();\n                    b.moveTo(n, p - d * v(a.datasets[f].data[<span class=\"hljs-number\">0</span>], j, k));\n                    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> g = <span class=\"hljs-number\">1</span>; g &lt; a.datasets[f].data.length; g++) c.bezierCurve ? b.bezierCurveTo(n + m * (g - <span class=\"hljs-number\">0.5</span>), e(f, g - <span class=\"hljs-number\">1</span>), n + m * (g - <span class=\"hljs-number\">0.5</span>),\n                        e(f, g), n + m * g, e(f, g)) : b.lineTo(n + m * g, e(f, g));\n                    b.stroke();\n                    c.datasetFill ? (b.lineTo(n + m * (a.datasets[f].data.length - <span class=\"hljs-number\">1</span>), p), b.lineTo(n, p), b.closePath(), b.fillStyle = a.datasets[f].fillColor, b.fill()) : b.closePath();\n                    <span class=\"hljs-keyword\">if</span> (c.pointDot) {\n                        b.fillStyle = a.datasets[f].pointColor;\n                        b.strokeStyle = a.datasets[f].pointStrokeColor;\n                        b.lineWidth = c.pointDotStrokeWidth;\n                        <span class=\"hljs-keyword\">for</span> (g = <span class=\"hljs-number\">0</span>; g &lt; a.datasets[f].data.length; g++) b.beginPath(), b.arc(n + m * g, p - d * v(a.datasets[f].data[g], j, k), c.pointDotRadius, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2</span> * <span class=\"hljs-built_in\">Math</span>.PI, !<span class=\"hljs-number\">0</span>), b.fill(), b.stroke()\n                    }\n                }\n            }, b)\n        },\n        L = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a,\n            c, b</span>) </span>{\n            <span class=\"hljs-keyword\">var</span> e, h, f, d, g, k, j, l, m, t, r, n, p, s, w = <span class=\"hljs-number\">0</span>;\n            g = u;\n            b.font = c.scaleFontStyle + <span class=\"hljs-string\">\" \"</span> + c.scaleFontSize + <span class=\"hljs-string\">\"px \"</span> + c.scaleFontFamily;\n            t = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">for</span> (d = <span class=\"hljs-number\">0</span>; d &lt; a.labels.length; d++) e = b.measureText(a.labels[d]).width, t = e &gt; t ? e : t;\n            q / a.labels.length &lt; t ? (w = <span class=\"hljs-number\">45</span>, q / a.labels.length &lt; <span class=\"hljs-built_in\">Math</span>.cos(w) * t ? (w = <span class=\"hljs-number\">90</span>, g -= t) : g -= <span class=\"hljs-built_in\">Math</span>.sin(w) * t) : g -= c.scaleFontSize;\n            d = c.scaleFontSize;\n            g = g - <span class=\"hljs-number\">5</span> - d;\n            e = <span class=\"hljs-built_in\">Number</span>.MIN_VALUE;\n            h = <span class=\"hljs-built_in\">Number</span>.MAX_VALUE;\n            <span class=\"hljs-keyword\">for</span> (f = <span class=\"hljs-number\">0</span>; f &lt; a.datasets.length; f++)\n                <span class=\"hljs-keyword\">for</span> (l = <span class=\"hljs-number\">0</span>; l &lt; a.datasets[f].data.length; l++) a.datasets[f].data[l] &gt; e &amp;&amp; (e = a.datasets[f].data[l]), a.datasets[f].data[l] &lt;\n                    h &amp;&amp; (h = a.datasets[f].data[l]);\n            f = <span class=\"hljs-built_in\">Math</span>.floor(g / (<span class=\"hljs-number\">0.66</span> * d));\n            d = <span class=\"hljs-built_in\">Math</span>.floor(<span class=\"hljs-number\">0.5</span> * (g / d));\n            l = c.scaleShowLabels ? c.scaleLabel : <span class=\"hljs-string\">\"\"</span>;\n            c.scaleOverride ? (j = {\n                <span class=\"hljs-attr\">steps</span>: c.scaleSteps,\n                <span class=\"hljs-attr\">stepValue</span>: c.scaleStepWidth,\n                <span class=\"hljs-attr\">graphMin</span>: c.scaleStartValue,\n                <span class=\"hljs-attr\">labels</span>: []\n            }, z(l, j.labels, j.steps, c.scaleStartValue, c.scaleStepWidth)) : j = C(g, f, d, e, h, l);\n            k = <span class=\"hljs-built_in\">Math</span>.floor(g / j.steps);\n            d = <span class=\"hljs-number\">1</span>;\n            <span class=\"hljs-keyword\">if</span> (c.scaleShowLabels) {\n                b.font = c.scaleFontStyle + <span class=\"hljs-string\">\" \"</span> + c.scaleFontSize + <span class=\"hljs-string\">\"px \"</span> + c.scaleFontFamily;\n                <span class=\"hljs-keyword\">for</span> (e = <span class=\"hljs-number\">0</span>; e &lt; j.labels.length; e++) h = b.measureText(j.labels[e]).width, d = h &gt; d ? h : d;\n                d += <span class=\"hljs-number\">10</span>\n            }\n            r = q - d - t;\n            m =\n                <span class=\"hljs-built_in\">Math</span>.floor(r / a.labels.length);\n            s = (m - <span class=\"hljs-number\">2</span> * c.scaleGridLineWidth - <span class=\"hljs-number\">2</span> * c.barValueSpacing - (c.barDatasetSpacing * a.datasets.length - <span class=\"hljs-number\">1</span>) - (c.barStrokeWidth / <span class=\"hljs-number\">2</span> * a.datasets.length - <span class=\"hljs-number\">1</span>)) / a.datasets.length;\n            n = q - t / <span class=\"hljs-number\">2</span> - r;\n            p = g + c.scaleFontSize / <span class=\"hljs-number\">2</span>;\n            x(c, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n                b.lineWidth = c.scaleLineWidth;\n                b.strokeStyle = c.scaleLineColor;\n                b.beginPath();\n                b.moveTo(q - t / <span class=\"hljs-number\">2</span> + <span class=\"hljs-number\">5</span>, p);\n                b.lineTo(q - t / <span class=\"hljs-number\">2</span> - r - <span class=\"hljs-number\">5</span>, p);\n                b.stroke();\n                <span class=\"hljs-number\">0</span> &lt; w ? (b.save(), b.textAlign = <span class=\"hljs-string\">\"right\"</span>) : b.textAlign = <span class=\"hljs-string\">\"center\"</span>;\n                b.fillStyle = c.scaleFontColor;\n                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> d = <span class=\"hljs-number\">0</span>; d &lt; a.labels.length; d++) b.save(), <span class=\"hljs-number\">0</span> &lt; w ? (b.translate(n +\n                    d * m, p + c.scaleFontSize), b.rotate(-(w * (<span class=\"hljs-built_in\">Math</span>.PI / <span class=\"hljs-number\">180</span>))), b.fillText(a.labels[d], <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>), b.restore()) : b.fillText(a.labels[d], n + d * m + m / <span class=\"hljs-number\">2</span>, p + c.scaleFontSize + <span class=\"hljs-number\">3</span>), b.beginPath(), b.moveTo(n + (d + <span class=\"hljs-number\">1</span>) * m, p + <span class=\"hljs-number\">3</span>), b.lineWidth = c.scaleGridLineWidth, b.strokeStyle = c.scaleGridLineColor, b.lineTo(n + (d + <span class=\"hljs-number\">1</span>) * m, <span class=\"hljs-number\">5</span>), b.stroke();\n                b.lineWidth = c.scaleLineWidth;\n                b.strokeStyle = c.scaleLineColor;\n                b.beginPath();\n                b.moveTo(n, p + <span class=\"hljs-number\">5</span>);\n                b.lineTo(n, <span class=\"hljs-number\">5</span>);\n                b.stroke();\n                b.textAlign = <span class=\"hljs-string\">\"right\"</span>;\n                b.textBaseline = <span class=\"hljs-string\">\"middle\"</span>;\n                <span class=\"hljs-keyword\">for</span> (d = <span class=\"hljs-number\">0</span>; d &lt; j.steps; d++) b.beginPath(), b.moveTo(n - <span class=\"hljs-number\">3</span>, p - (d + <span class=\"hljs-number\">1</span>) *\n                    k), c.scaleShowGridLines ? (b.lineWidth = c.scaleGridLineWidth, b.strokeStyle = c.scaleGridLineColor, b.lineTo(n + r + <span class=\"hljs-number\">5</span>, p - (d + <span class=\"hljs-number\">1</span>) * k)) : b.lineTo(n - <span class=\"hljs-number\">0.5</span>, p - (d + <span class=\"hljs-number\">1</span>) * k), b.stroke(), c.scaleShowLabels &amp;&amp; b.fillText(j.labels[d], n - <span class=\"hljs-number\">8</span>, p - (d + <span class=\"hljs-number\">1</span>) * k)\n            }, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">d</span>) </span>{\n                b.lineWidth = c.barStrokeWidth;\n                <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> e = <span class=\"hljs-number\">0</span>; e &lt; a.datasets.length; e++) {\n                    b.fillStyle = a.datasets[e].fillColor;\n                    b.strokeStyle = a.datasets[e].strokeColor;\n                    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> f = <span class=\"hljs-number\">0</span>; f &lt; a.datasets[e].data.length; f++) {\n                        <span class=\"hljs-keyword\">var</span> g = n + c.barValueSpacing + m * f + s * e + c.barDatasetSpacing * e + c.barStrokeWidth * e;\n                        b.beginPath();\n                        b.moveTo(g, p);\n                        b.lineTo(g, p - d * v(a.datasets[e].data[f], j, k) + c.barStrokeWidth / <span class=\"hljs-number\">2</span>);\n                        b.lineTo(g + s, p - d * v(a.datasets[e].data[f], j, k) + c.barStrokeWidth / <span class=\"hljs-number\">2</span>);\n                        b.lineTo(g + s, p);\n                        c.barShowStroke &amp;&amp; b.stroke();\n                        b.closePath();\n                        b.fill()\n                    }\n                }\n            }, b)\n        },\n        D = <span class=\"hljs-built_in\">window</span>.requestAnimationFrame || <span class=\"hljs-built_in\">window</span>.webkitRequestAnimationFrame || <span class=\"hljs-built_in\">window</span>.mozRequestAnimationFrame || <span class=\"hljs-built_in\">window</span>.oRequestAnimationFrame || <span class=\"hljs-built_in\">window</span>.msRequestAnimationFrame || <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a</span>) </span>{\n            <span class=\"hljs-built_in\">window</span>.setTimeout(a, <span class=\"hljs-number\">1E3</span> / <span class=\"hljs-number\">60</span>)\n        },\n        F = {}\n};</code></pre></div>",
    "sec_22.js": "<div class=\"codeBlock hljs yaml\" id=\"sec_22\"><pre id=\"sec_22_code\" ><code class=\"json\"><span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;block:actions:2&gt;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">actions</span> <span class=\"hljs-string\">=</span> [\n  {\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Randomize'</span>,\n    <span class=\"hljs-string\">handler(chart)</span> {\n      <span class=\"hljs-string\">chart.data.datasets.forEach(dataset</span> <span class=\"hljs-string\">=&gt;</span> {\n        <span class=\"hljs-string\">dataset.data</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">Utils.numbers(</span>{<span class=\"hljs-attr\">count:</span> <span class=\"hljs-string\">chart.data.labels.length</span>, <span class=\"hljs-attr\">min:</span> <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">max:</span> <span class=\"hljs-number\">100</span>}<span class=\"hljs-string\">);</span>\n      }<span class=\"hljs-string\">);</span>\n      <span class=\"hljs-string\">chart.update();</span>\n    }\n  },\n]<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;/block:actions&gt;</span>\n\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;block:setup:1&gt;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">DATA_COUNT</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-number\">7</span><span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">NUMBER_CFG</span> <span class=\"hljs-string\">=</span> {<span class=\"hljs-attr\">count:</span> <span class=\"hljs-string\">DATA_COUNT</span>, <span class=\"hljs-attr\">min:</span> <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">max:</span> <span class=\"hljs-number\">100</span>}<span class=\"hljs-string\">;</span>\n\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">labels</span> <span class=\"hljs-string\">=</span> []<span class=\"hljs-string\">;</span>\n\n<span class=\"hljs-string\">for</span> <span class=\"hljs-string\">(let</span> <span class=\"hljs-string\">i</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-number\">0</span><span class=\"hljs-string\">;</span> <span class=\"hljs-string\">i</span> <span class=\"hljs-string\">&lt;</span> <span class=\"hljs-string\">DATA_COUNT;</span> <span class=\"hljs-string\">++i)</span> {\n  <span class=\"hljs-string\">labels.push(Utils.newDate(i));</span>\n}\n\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">data</span> <span class=\"hljs-string\">=</span> {\n  <span class=\"hljs-attr\">labels:</span> <span class=\"hljs-string\">labels</span>,\n  <span class=\"hljs-attr\">datasets:</span> [{\n   <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"> <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">'bar'</span>,</div>\n    <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">'Dataset 1'</span>,\n    <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">Utils.transparentize(Utils.CHART_COLORS.red</span>, <span class=\"hljs-number\">0.5</span><span class=\"hljs-string\">)</span>,\n    <span class=\"hljs-attr\">borderColor:</span> <span class=\"hljs-string\">Utils.CHART_COLORS.red</span>,\n    <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">Utils.numbers(NUMBER_CFG)</span>,\n  }, {\n    <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">'bar'</span>,</div>\n    <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">'Dataset 2'</span>,\n    <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">Utils.transparentize(Utils.CHART_COLORS.blue</span>, <span class=\"hljs-number\">0.5</span><span class=\"hljs-string\">)</span>,\n    <span class=\"hljs-attr\">borderColor:</span> <span class=\"hljs-string\">Utils.CHART_COLORS.blue</span>,\n    <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">Utils.numbers(NUMBER_CFG)</span>,\n  }, {\n    <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_2\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">'line'</span>,</div>\n    <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">'Dataset 3'</span>,\n    <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">Utils.transparentize(Utils.CHART_COLORS.green</span>, <span class=\"hljs-number\">0.5</span><span class=\"hljs-string\">)</span>,\n    <span class=\"hljs-attr\">borderColor:</span> <span class=\"hljs-string\">Utils.CHART_COLORS.green</span>,\n    <span class=\"hljs-attr\">fill:</span> <span class=\"hljs-literal\">false</span>,\n    <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">Utils.numbers(NUMBER_CFG)</span>,\n  }]\n}<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;/block:setup&gt;</span>\n\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;block:config:0&gt;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">config</span> <span class=\"hljs-string\">=</span> {\n  <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">'line'</span>,\n  <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">data</span>,\n  <span class=\"hljs-attr\">options:</span> {\n    <span class=\"hljs-attr\">plugins:</span> {\n      <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\"><span class=\"hljs-attr\">title:</span> {\n        <span class=\"hljs-attr\">text:</span> <span class=\"hljs-string\">'Chart.js Combo Time Scale'</span>,\n        <span class=\"hljs-attr\">display:</span> <span class=\"hljs-literal\">true</span>\n      }</div>\n    },\n    <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-attr\">scales:</span> {\n      <span class=\"hljs-attr\">x:</span> {\n        <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">'time'</span>,\n        <span class=\"hljs-attr\">display:</span> <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">offset:</span> <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">time:</span> {\n          <span class=\"hljs-attr\">unit:</span> <span class=\"hljs-string\">'day'</span>\n        }\n      },\n    }</div>,\n  },\n}<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;/block:config&gt;</span>\n\n<span class=\"hljs-string\">module.exports</span> <span class=\"hljs-string\">=</span> {\n  <span class=\"hljs-attr\">actions:</span> <span class=\"hljs-string\">actions</span>,\n  <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">config</span>,\n}<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//https://www.chartjs.org/docs/latest/samples/scales/time-combo.html</span></code></pre></div>",
    "sec_23.js": "<div class=\"codeBlock hljs kotlin\" id=\"sec_23\"><pre id=\"sec_23_code\" ><code class=\"json\"><span class=\"hljs-comment\">// &lt;block:actions:2&gt;</span>\n<span class=\"hljs-keyword\">const</span> actions = [\n  {\n    name: <span class=\"hljs-string\">'Randomize'</span>,\n    handler(chart) {\n      chart.<span class=\"hljs-keyword\">data</span>.datasets.forEach(dataset =&gt; {\n        <div style=\"display: inline;\" id=\"Data_Transformation_0\" class=\"highlights fea_Data_Transformation\">dataset.<span class=\"hljs-keyword\">data</span> = Utils.numbers({count: chart.<span class=\"hljs-keyword\">data</span>.labels.length, min: <span class=\"hljs-number\">0</span>, max: <span class=\"hljs-number\">100</span>});</div>\n      });\n      chart.update();\n    }\n  },\n  {\n    name: <span class=\"hljs-string\">'Add Dataset'</span>,\n    handler(chart) {\n      <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">data</span> = chart.<span class=\"hljs-keyword\">data</span>;\n      <span class=\"hljs-keyword\">const</span> dsColor = Utils.namedColor(chart.<span class=\"hljs-keyword\">data</span>.datasets.length);\n      <span class=\"hljs-keyword\">const</span> newDataset = {\n        label: <span class=\"hljs-string\">'Dataset '</span> + (<span class=\"hljs-keyword\">data</span>.datasets.length + <span class=\"hljs-number\">1</span>),\n        backgroundColor: Utils.transparentize(dsColor, <span class=\"hljs-number\">0.5</span>),\n        borderColor: dsColor,\n        borderWidth: <span class=\"hljs-number\">1</span>,\n        stack: <span class=\"hljs-string\">'combined'</span>,\n        <span class=\"hljs-keyword\">data</span>: Utils.numbers({count: <span class=\"hljs-keyword\">data</span>.labels.length, min: <span class=\"hljs-number\">0</span>, max: <span class=\"hljs-number\">100</span>}),\n      };\n      chart.<span class=\"hljs-keyword\">data</span>.datasets.push(newDataset);\n      chart.update();\n    }\n  },\n  {\n    name: <span class=\"hljs-string\">'Add Data'</span>,\n    handler(chart) {\n      <span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">data</span> = chart.<span class=\"hljs-keyword\">data</span>;\n      <span class=\"hljs-keyword\">if</span> (<span class=\"hljs-keyword\">data</span>.datasets.length &gt; <span class=\"hljs-number\">0</span>) {\n        <span class=\"hljs-keyword\">data</span>.labels = Utils.months({count: <span class=\"hljs-keyword\">data</span>.labels.length + <span class=\"hljs-number\">1</span>});\n\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> index = <span class=\"hljs-number\">0</span>; index &lt; <span class=\"hljs-keyword\">data</span>.datasets.length; ++index) {\n          <span class=\"hljs-keyword\">data</span>.datasets[index].<span class=\"hljs-keyword\">data</span>.push(Utils.rand(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">100</span>));\n        }\n\n        chart.update();\n      }\n    }\n  },\n  {\n    name: <span class=\"hljs-string\">'Remove Dataset'</span>,\n    handler(chart) {\n      chart.<span class=\"hljs-keyword\">data</span>.datasets.pop();\n      chart.update();\n    }\n  },\n  {\n    name: <span class=\"hljs-string\">'Remove Data'</span>,\n    handler(chart) {\n      chart.<span class=\"hljs-keyword\">data</span>.labels.splice(-<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">1</span>); <span class=\"hljs-comment\">// remove the label first</span>\n\n      chart.<span class=\"hljs-keyword\">data</span>.datasets.forEach(dataset =&gt; {\n        dataset.<span class=\"hljs-keyword\">data</span>.pop();\n      });\n\n      chart.update();\n    }\n  }\n];\n<span class=\"hljs-comment\">// &lt;/block:actions&gt;</span>\n\n<span class=\"hljs-comment\">// &lt;block:setup:1&gt;</span>\n<span class=\"hljs-keyword\">const</span> DATA_COUNT = <span class=\"hljs-number\">7</span>;\n<span class=\"hljs-keyword\">const</span> NUMBER_CFG = {count: DATA_COUNT, min: <span class=\"hljs-number\">0</span>, max: <span class=\"hljs-number\">100</span>};\n\n<span class=\"hljs-keyword\">const</span> labels = Utils.months({count: <span class=\"hljs-number\">7</span>});\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">data</span> = {\n  labels: labels,\n  datasets: [\n    {\n      label: <span class=\"hljs-string\">'Dataset 1'</span>,\n      <span class=\"hljs-keyword\">data</span>: Utils.numbers(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.red,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, <span class=\"hljs-number\">0.5</span>),\n      stack: <span class=\"hljs-string\">'combined'</span>,\n      type: <span class=\"hljs-string\">'bar'</span>\n    },\n    {\n      label: <span class=\"hljs-string\">'Dataset 2'</span>,\n      <span class=\"hljs-keyword\">data</span>: Utils.numbers(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.blue,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.blue, <span class=\"hljs-number\">0.5</span>),\n      stack: <span class=\"hljs-string\">'combined'</span>\n    }\n  ]\n};\n<span class=\"hljs-comment\">// &lt;/block:setup&gt;</span>\n\n<span class=\"hljs-comment\">// &lt;block:config:0&gt;</span>\n<span class=\"hljs-keyword\">const</span> config = {\n  <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">type: <span class=\"hljs-string\">'line'</span>,</div>\n  <span class=\"hljs-keyword\">data</span>: <span class=\"hljs-keyword\">data</span>,\n  options: {\n    plugins: {\n      <div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">title: {\n        display: <span class=\"hljs-literal\">true</span>,\n        text: <span class=\"hljs-string\">'Chart.js Stacked Line/Bar Chart'</span>\n      }\n    },</div>\n    <div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\">scales: {\n      y: {\n        stacked: <span class=\"hljs-literal\">true</span>\n      }\n    }</div>\n  },\n};\n<span class=\"hljs-comment\">// &lt;/block:config&gt;</span>\n\nmodule.exports = {\n  actions: actions,\n  config: config,\n};\n<span class=\"hljs-comment\">//https://www.chartjs.org/docs/latest/samples/other-charts/stacked-bar-line.html</span></code></pre></div>",
    "sec_24.js": "<div class=\"codeBlock hljs kotlin\" id=\"sec_24\"><pre id=\"sec_24_code\" ><code class=\"json\"><span class=\"hljs-comment\">// &lt;block:actions:2&gt;</span>\n<span class=\"hljs-keyword\">const</span> actions = [\n  {\n    name: <span class=\"hljs-string\">'Randomize'</span>,\n    handler(chart) {\n      chart.<span class=\"hljs-keyword\">data</span>.datasets.forEach((dataset, i) =&gt; {\n       <div style=\"display: inline;\" id=\"Data_Transformation_0\" class=\"highlights fea_Data_Transformation\"> <span class=\"hljs-keyword\">c</span><span class=\"hljs-keyword\">onst</span> <span class=\"hljs-keyword\">dat</span><span class=\"hljs-keyword\">a</span> = Utils.numbers({count: chart.<span class=\"hljs-keyword\">data</span>.labels.length, min: <span class=\"hljs-number\">0</span>, max: <span class=\"hljs-number\">100</span>});</div>\n\n        <span class=\"hljs-keyword\">if</span> (i === <span class=\"hljs-number\">0</span>) {\n          <span class=\"hljs-keyword\">data</span>[<span class=\"hljs-number\">0</span>] = <span class=\"hljs-literal\">null</span>;\n        } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (i === <span class=\"hljs-number\">1</span>) {\n          <span class=\"hljs-keyword\">data</span>[Number.parseInt(<span class=\"hljs-keyword\">data</span>.length / <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">10</span>)] = <span class=\"hljs-literal\">null</span>;\n        } <span class=\"hljs-keyword\">else</span> {\n          <span class=\"hljs-keyword\">data</span>[<span class=\"hljs-keyword\">data</span>.length - <span class=\"hljs-number\">1</span>] = <span class=\"hljs-literal\">null</span>;\n        }\n\n        dataset.<span class=\"hljs-keyword\">data</span> = <span class=\"hljs-keyword\">data</span>;\n      });\n      chart.update();\n    }\n  }\n];\n<span class=\"hljs-comment\">// &lt;/block:actions&gt;</span>\n\n<span class=\"hljs-comment\">// &lt;block:setup:1&gt;</span>\n<span class=\"hljs-keyword\">const</span> DATA_COUNT = <span class=\"hljs-number\">7</span>;\n<span class=\"hljs-keyword\">const</span> NUMBER_CFG = {count: DATA_COUNT, min: <span class=\"hljs-number\">0</span>, max: <span class=\"hljs-number\">100</span>};\n\n<span class=\"hljs-keyword\">const</span> labels = Utils.months({count: <span class=\"hljs-number\">7</span>});\n<span class=\"hljs-keyword\">const</span> dataFirstSkip = Utils.numbers(NUMBER_CFG);\n<span class=\"hljs-keyword\">const</span> dataMiddleSkip = Utils.numbers(NUMBER_CFG);\n<span class=\"hljs-keyword\">const</span> dataLastSkip = Utils.numbers(NUMBER_CFG);\n\ndataFirstSkip[<span class=\"hljs-number\">0</span>] = <span class=\"hljs-literal\">null</span>;\ndataMiddleSkip[Number.parseInt(dataMiddleSkip.length / <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">10</span>)] = <span class=\"hljs-literal\">null</span>;\ndataLastSkip[dataLastSkip.length - <span class=\"hljs-number\">1</span>] = <span class=\"hljs-literal\">null</span>;\n\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">data</span> = {\n  labels: labels,\n  datasets: [\n    {\n      label: <span class=\"hljs-string\">'Skip first dataset'</span>,\n      <span class=\"hljs-keyword\">data</span>: dataFirstSkip,\n      borderColor: Utils.CHART_COLORS.red,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, <span class=\"hljs-number\">0.5</span>),\n    },\n    {\n      label: <span class=\"hljs-string\">'Skip mid dataset'</span>,\n      <span class=\"hljs-keyword\">data</span>: dataMiddleSkip,\n      borderColor: Utils.CHART_COLORS.blue,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.blue, <span class=\"hljs-number\">0.5</span>),\n    },\n    {\n      label: <span class=\"hljs-string\">'Skip last dataset'</span>,\n      <span class=\"hljs-keyword\">data</span>: dataLastSkip,\n      borderColor: Utils.CHART_COLORS.green,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.green, <span class=\"hljs-number\">0.5</span>),\n    }\n  ]\n};\n<span class=\"hljs-comment\">// &lt;/block:setup&gt;</span>\n\n<span class=\"hljs-comment\">// &lt;block:config:0&gt;</span>\n<span class=\"hljs-keyword\">const</span> config = {\n  <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">type: <span class=\"hljs-string\">'radar'</span>,</div>\n  <span class=\"hljs-keyword\">data</span>: <span class=\"hljs-keyword\">data</span>,\n  options: {\n    responsive: <span class=\"hljs-literal\">true</span>,\n    plugins: {\n      <div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">title: {\n        display: <span class=\"hljs-literal\">true</span>,\n        text: <span class=\"hljs-string\">'Chart.js Radar Skip Points Chart'</span>\n      }</div>\n    }\n  },\n};\n<span class=\"hljs-comment\">// &lt;/block:config&gt;</span>\n\nmodule.exports = {\n  actions: actions,\n  config: config\n};\n<span class=\"hljs-comment\">//https://www.chartjs.org/docs/latest/samples/other-charts/radar-skip-points.html</span></code></pre></div>",
    "sec_28.js": "<div class=\"codeBlock hljs yaml\" id=\"sec_28\"><pre id=\"sec_28_code\" ><code class=\"json\"><span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;block:setup:1&gt;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">DATA_COUNT</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-number\">12</span><span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">labels</span> <span class=\"hljs-string\">=</span> []<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">for</span> <span class=\"hljs-string\">(let</span> <span class=\"hljs-string\">i</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-number\">0</span><span class=\"hljs-string\">;</span> <span class=\"hljs-string\">i</span> <span class=\"hljs-string\">&lt;</span> <span class=\"hljs-string\">DATA_COUNT;</span> <span class=\"hljs-string\">++i)</span> {\n  <span class=\"hljs-string\">labels.push(i.toString());</span>\n}\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">datapoints</span> <span class=\"hljs-string\">=</span> [<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">60</span>, <span class=\"hljs-number\">60</span>, <span class=\"hljs-number\">120</span>, <span class=\"hljs-string\">NaN</span>, <span class=\"hljs-number\">180</span>, <span class=\"hljs-number\">120</span>, <span class=\"hljs-number\">125</span>, <span class=\"hljs-number\">105</span>, <span class=\"hljs-number\">110</span>, <span class=\"hljs-number\">170</span>]<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">data</span> <span class=\"hljs-string\">=</span> {\n  <span class=\"hljs-attr\">labels:</span> <span class=\"hljs-string\">labels</span>,\n  <span class=\"hljs-attr\">datasets:</span> [\n    {\n      <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">'Cubic interpolation (monotone)'</span>,\n      <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">datapoints</span>,\n      <span class=\"hljs-attr\">borderColor:</span> <span class=\"hljs-string\">Utils.CHART_COLORS.red</span>,\n      <span class=\"hljs-attr\">fill:</span> <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">cubicInterpolationMode:</span> <span class=\"hljs-string\">'monotone'</span>,\n      <span class=\"hljs-attr\">tension:</span> <span class=\"hljs-number\">0.4</span>\n    }, {\n      <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">'Cubic interpolation'</span>,\n      <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">datapoints</span>,\n      <span class=\"hljs-attr\">borderColor:</span> <span class=\"hljs-string\">Utils.CHART_COLORS.blue</span>,\n      <span class=\"hljs-attr\">fill:</span> <span class=\"hljs-literal\">false</span>,\n      <span class=\"hljs-attr\">tension:</span> <span class=\"hljs-number\">0.4</span>\n    }, {\n      <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">'Linear interpolation (default)'</span>,\n      <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">datapoints</span>,\n      <span class=\"hljs-attr\">borderColor:</span> <span class=\"hljs-string\">Utils.CHART_COLORS.green</span>,\n      <span class=\"hljs-attr\">fill:</span> <span class=\"hljs-literal\">false</span>\n    }\n  ]\n}<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;/block:setup&gt;</span>\n\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;block:config:0&gt;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">config</span> <span class=\"hljs-string\">=</span> {\n  <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">'line'</span>,</div>\n  <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">data</span>,\n  <span class=\"hljs-attr\">options:</span> {\n    <span class=\"hljs-attr\">responsive:</span> <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">plugins:</span> {\n      <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\"><span class=\"hljs-attr\">title:</span> {\n        <span class=\"hljs-attr\">display:</span> <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">text:</span> <span class=\"hljs-string\">'Chart.js Line Chart - Cubic interpolation mode'</span>\n      },</div>\n    },\n    <span class=\"hljs-attr\">interaction:</span> {\n      <span class=\"hljs-attr\">intersect:</span> <span class=\"hljs-literal\">false</span>,\n    },\n    <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-attr\">scales:</span> {\n      <span class=\"hljs-attr\">x:</span> {\n        <span class=\"hljs-attr\">display:</span> <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">title:</span> {\n          <span class=\"hljs-attr\">display:</span> <span class=\"hljs-literal\">true</span>\n        }\n      },\n      <span class=\"hljs-attr\">y:</span> {\n        <span class=\"hljs-attr\">display:</span> <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">title:</span> {\n          <span class=\"hljs-attr\">display:</span> <span class=\"hljs-literal\">true</span>,\n          <span class=\"hljs-attr\">text:</span> <span class=\"hljs-string\">'Value'</span>\n        },\n        <span class=\"hljs-attr\">suggestedMin:</span> <span class=\"hljs-number\">-10</span>,\n        <span class=\"hljs-attr\">suggestedMax:</span> <span class=\"hljs-number\">200</span>\n      }\n    }</div>\n  },\n}<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;/block:config&gt;</span>\n\n<span class=\"hljs-string\">module.exports</span> <span class=\"hljs-string\">=</span> {\n  <span class=\"hljs-attr\">actions:</span> [],\n  <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">config</span>,\n}<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//https://www.chartjs.org/docs/latest/samples/line/interpolation.html</span></code></pre></div>",
    "sec_29.js": "<div class=\"codeBlock hljs yaml\" id=\"sec_29\"><pre id=\"sec_29_code\" ><code class=\"json\"><span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;block:actions:2&gt;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">actions</span> <span class=\"hljs-string\">=</span> [\n  {\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Randomize'</span>,\n    <span class=\"hljs-string\">handler(chart)</span> {\n      <span class=\"hljs-string\">chart.data.datasets.forEach(dataset</span> <span class=\"hljs-string\">=&gt;</span> {\n        <span class=\"hljs-string\">dataset.data</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">Utils.numbers(</span>{<span class=\"hljs-attr\">count:</span> <span class=\"hljs-string\">chart.data.labels.length</span>, <span class=\"hljs-attr\">min:</span> <span class=\"hljs-number\">-100</span>, <span class=\"hljs-attr\">max:</span> <span class=\"hljs-number\">100</span>}<span class=\"hljs-string\">);</span>\n      }<span class=\"hljs-string\">);</span>\n      <span class=\"hljs-string\">chart.update();</span>\n    }\n  },\n]<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;/block:actions&gt;</span>\n\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;block:setup:1&gt;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">DATA_COUNT</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-number\">7</span><span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">NUMBER_CFG</span> <span class=\"hljs-string\">=</span> {<span class=\"hljs-attr\">count:</span> <span class=\"hljs-string\">DATA_COUNT</span>, <span class=\"hljs-attr\">min:</span> <span class=\"hljs-number\">-100</span>, <span class=\"hljs-attr\">max:</span> <span class=\"hljs-number\">100</span>}<span class=\"hljs-string\">;</span>\n\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">labels</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">Utils.months({count:</span> <span class=\"hljs-number\">7</span><span class=\"hljs-string\">});</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">data</span> <span class=\"hljs-string\">=</span> {\n  <span class=\"hljs-attr\">labels:</span> <span class=\"hljs-string\">labels</span>,\n  <span class=\"hljs-attr\">datasets:</span> [\n    {\n      <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">'Dataset 1'</span>,\n      <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">Utils.numbers(NUMBER_CFG)</span>,\n      <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">Utils.CHART_COLORS.red</span>,\n      <span class=\"hljs-attr\">stack:</span> <span class=\"hljs-string\">'Stack 0'</span>,\n    },\n    {\n      <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">'Dataset 2'</span>,\n      <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">Utils.numbers(NUMBER_CFG)</span>,\n      <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">Utils.CHART_COLORS.blue</span>,\n      <span class=\"hljs-attr\">stack:</span> <span class=\"hljs-string\">'Stack 0'</span>,\n    },\n    {\n      <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">'Dataset 3'</span>,\n      <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">Utils.numbers(NUMBER_CFG)</span>,\n      <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">Utils.CHART_COLORS.green</span>,\n      <span class=\"hljs-attr\">stack:</span> <span class=\"hljs-string\">'Stack 1'</span>,\n    },\n  ]\n}<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;/block:setup&gt;</span>\n\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;block:config:0&gt;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">config</span> <span class=\"hljs-string\">=</span> {\n  <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">'bar'</span>,</div>\n  <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">data</span>,\n  <span class=\"hljs-attr\">options:</span> {\n    <span class=\"hljs-attr\">plugins:</span> {\n      <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\"><span class=\"hljs-attr\">title:</span> {\n        <span class=\"hljs-attr\">display:</span> <span class=\"hljs-literal\">true</span>,\n        <span class=\"hljs-attr\">text:</span> <span class=\"hljs-string\">'Chart.js Bar Chart - Stacked'</span>\n      },</div>\n    },\n    <span class=\"hljs-attr\">responsive:</span> <span class=\"hljs-literal\">true</span>,\n    <span class=\"hljs-attr\">interaction:</span> {\n      <span class=\"hljs-attr\">intersect:</span> <span class=\"hljs-literal\">false</span>,\n    },\n    <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-attr\">scales:</span> {\n      <span class=\"hljs-attr\">x:</span> {\n        <span class=\"hljs-attr\">stacked:</span> <span class=\"hljs-literal\">true</span>,\n      },\n      <span class=\"hljs-attr\">y:</span> {\n        <span class=\"hljs-attr\">stacked:</span> <span class=\"hljs-literal\">true</span>\n      }\n    }</div>\n  }\n}<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;/block:config&gt;</span>\n\n<span class=\"hljs-string\">module.exports</span> <span class=\"hljs-string\">=</span> {\n  <span class=\"hljs-attr\">actions:</span> <span class=\"hljs-string\">actions</span>,\n  <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">config</span>,\n}<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//https://www.chartjs.org/docs/latest/samples/bar/stacked-groups.html</span></code></pre></div>",
    "sec_3.js": "<div class=\"codeBlock hljs yaml\" id=\"sec_3\"><pre id=\"sec_3_code\" ><code class=\"json\"><span class=\"hljs-string\">Vue.component(\"doughnut\",</span> {\n  <span class=\"hljs-attr\">props:</span> [<span class=\"hljs-string\">\"data\"</span>, <span class=\"hljs-string\">\"labels\"</span>],\n  <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">function()</span> {\n    <span class=\"hljs-attr\">ctx:</span> <span class=\"hljs-literal\">null</span><span class=\"hljs-string\">;</span>\n  },\n  <span class=\"hljs-attr\">template:</span> <span class=\"hljs-string\">`</span>\n    <span class=\"hljs-string\">&lt;canvas&gt;&lt;/canvas&gt;</span>\n  <span class=\"hljs-string\">`</span>,\n  <span class=\"hljs-attr\">mounted:</span> <span class=\"hljs-string\">function()</span> {\n    <span class=\"hljs-string\">let</span> <span class=\"hljs-string\">self</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">this;</span>\n    <span class=\"hljs-string\">this.ctx</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">this.$el.getContext(\"2d\");</span>\n\n    <span class=\"hljs-string\">new</span> <span class=\"hljs-string\">Chart(this.ctx</span>, {\n      <span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">\"doughnut\"</span>,\n      <span class=\"hljs-attr\">options:</span> {\n        <span class=\"hljs-attr\">cutoutPercentage:</span> <span class=\"hljs-number\">80</span>\n      },\n      <span class=\"hljs-attr\">data:</span> {\n        <span class=\"hljs-attr\">labels:</span> <span class=\"hljs-string\">self.labels</span>,\n        <span class=\"hljs-attr\">datasets:</span> [{\n          <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">self.data</span>,\n          <span class=\"hljs-attr\">backgroundColor:</span> [<span class=\"hljs-string\">\"#1BC98E\"</span>, <span class=\"hljs-string\">\"#1CA8DD\"</span>],\n          <span class=\"hljs-attr\">hoverBackgroundColor:</span> [<span class=\"hljs-string\">\"#1BC98E\"</span>, <span class=\"hljs-string\">\"#1CA8DD\"</span>]\n        }]\n      }\n    }<span class=\"hljs-string\">);</span>\n  }\n}<span class=\"hljs-string\">);</span>\n\n<span class=\"hljs-string\">Vue.component(\"sparkline\",</span> {\n  <span class=\"hljs-attr\">props:</span> [<span class=\"hljs-string\">\"title\"</span>, <span class=\"hljs-string\">\"value\"</span>],\n  <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">function()</span> {\n    <span class=\"hljs-attr\">ctx:</span> <span class=\"hljs-literal\">null</span><span class=\"hljs-string\">;</span>\n  },\n  <span class=\"hljs-attr\">template:</span> <span class=\"hljs-string\">`</span>\n    <span class=\"hljs-string\">&lt;div</span> <span class=\"hljs-string\">class=\"br2\"&gt;</span>\n      <span class=\"hljs-string\">&lt;div</span> <span class=\"hljs-string\">class=\"pa3</span> <span class=\"hljs-string\">flex-auto</span> <span class=\"hljs-string\">bb</span> <span class=\"hljs-string\">b--white-10\"&gt;</span>\n        <span class=\"hljs-string\">&lt;h3</span> <span class=\"hljs-string\">class=\"mt0</span> <span class=\"hljs-string\">mb1</span> <span class=\"hljs-string\">f6</span> <span class=\"hljs-string\">ttu</span> <span class=\"hljs-string\">white</span> <span class=\"hljs-string\">o-70\"&gt;<span class=\"hljs-template-variable\">{{ title }}</span></span><span class=\"hljs-string\">&lt;/h3&gt;</span>\n        <span class=\"hljs-string\">&lt;h2</span> <span class=\"hljs-string\">class=\"mv0</span> <span class=\"hljs-string\">f2</span> <span class=\"hljs-string\">fw5</span> <span class=\"hljs-string\">white\"&gt;<span class=\"hljs-template-variable\">{{ value }}</span></span><span class=\"hljs-string\">&lt;/h2&gt;</span>\n      <span class=\"hljs-string\">&lt;/div&gt;</span>\n      <span class=\"hljs-string\">&lt;div</span> <span class=\"hljs-string\">class=\"pt2\"&gt;</span>\n        <span class=\"hljs-string\">&lt;canvas&gt;&lt;/canvas&gt;</span>\n      <span class=\"hljs-string\">&lt;/div&gt;</span>\n    <span class=\"hljs-string\">&lt;/div&gt;</span>\n  <span class=\"hljs-string\">`</span>,\n  <span class=\"hljs-attr\">mounted:</span> <span class=\"hljs-string\">function()</span> {\n    <span class=\"hljs-string\">this.ctx</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">this.$el.querySelector(\"canvas\").getContext(\"2d\");</span>\n    <span class=\"hljs-string\">let</span> <span class=\"hljs-string\">sparklineGradient</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">this.ctx.createLinearGradient(0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">135</span><span class=\"hljs-string\">);</span>\n    <span class=\"hljs-string\">sparklineGradient.addColorStop(0</span>, <span class=\"hljs-string\">\"rgba(255,255,255,0.35)\"</span><span class=\"hljs-string\">);</span>\n    <span class=\"hljs-string\">sparklineGradient.addColorStop(1</span>, <span class=\"hljs-string\">\"rgba(255,255,255,0)\"</span><span class=\"hljs-string\">);</span>\n\n    <span class=\"hljs-string\">let</span> <span class=\"hljs-string\">data</span> <span class=\"hljs-string\">=</span> {\n      <span class=\"hljs-attr\">labels:</span> [<span class=\"hljs-string\">\"A\"</span>, <span class=\"hljs-string\">\"B\"</span>, <span class=\"hljs-string\">\"C\"</span>, <span class=\"hljs-string\">\"D\"</span>, <span class=\"hljs-string\">\"E\"</span>, <span class=\"hljs-string\">\"F\"</span>],\n      <span class=\"hljs-attr\">datasets:</span> [{\n        <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">sparklineGradient</span>,\n        <span class=\"hljs-attr\">borderColor:</span> <span class=\"hljs-string\">\"#FFFFFF\"</span>,\n        <span class=\"hljs-attr\">data:</span> [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">8</span>, <span class=\"hljs-number\">10</span>]</div>\n      }]\n    }<span class=\"hljs-string\">;</span>\n\n    <span class=\"hljs-string\">Chart.Line(this.ctx</span>, {\n      <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">data</span>,\n      <span class=\"hljs-attr\">options:</span> {\n        <span class=\"hljs-attr\">elements:</span> {\n          <span class=\"hljs-attr\">point:</span> {\n            <span class=\"hljs-attr\">radius:</span> <span class=\"hljs-number\">0</span>\n          }\n        },\n        <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-attr\">scales:</span> {\n          <span class=\"hljs-attr\">xAxes:</span> [{\n            <span class=\"hljs-attr\">display:</span> <span class=\"hljs-literal\">false</span>\n          }],\n          <span class=\"hljs-attr\">yAxes:</span> [{\n            <span class=\"hljs-attr\">display:</span> <span class=\"hljs-literal\">false</span>\n          }]\n        }</div>\n      }\n    }<span class=\"hljs-string\">);</span>\n  }\n}<span class=\"hljs-string\">);</span>\n\n<span class=\"hljs-string\">Vue.component(\"metric-list-item\",</span> {\n  <span class=\"hljs-attr\">props:</span> [<span class=\"hljs-string\">\"name\"</span>, <span class=\"hljs-string\">\"value\"</span>, <span class=\"hljs-string\">\"showBar\"</span>],\n  <span class=\"hljs-attr\">computed:</span> {\n    <span class=\"hljs-attr\">barWidth:</span> <span class=\"hljs-string\">function()</span> {\n      <span class=\"hljs-string\">return</span> <span class=\"hljs-string\">`$</span>{<span class=\"hljs-string\">this.value</span>}<span class=\"hljs-string\">%`;</span>\n    }\n  },\n  <span class=\"hljs-attr\">template:</span> <span class=\"hljs-string\">`</span>\n    <span class=\"hljs-string\">&lt;a</span> <span class=\"hljs-string\">href=\"#\"</span> <span class=\"hljs-string\">class=\"link</span> <span class=\"hljs-string\">dark-gray</span> <span class=\"hljs-string\">flex</span> <span class=\"hljs-string\">justify-between</span> <span class=\"hljs-string\">relative</span> <span class=\"hljs-string\">pa3</span> <span class=\"hljs-string\">bb</span> <span class=\"hljs-string\">b--black-10</span> <span class=\"hljs-string\">hover-bg-near-white\"&gt;</span>\n      <span class=\"hljs-string\">&lt;span</span> <span class=\"hljs-string\">v-if=\"showBar\"</span> <span class=\"hljs-string\">class=\"absolute</span> <span class=\"hljs-string\">top-0</span> <span class=\"hljs-string\">left-0</span> <span class=\"hljs-string\">right-0</span> <span class=\"hljs-string\">bottom-0</span> <span class=\"hljs-string\">h-100</span> <span class=\"hljs-string\">bg-near-white\"</span> <span class=\"hljs-string\">v-bind:style=\"</span>{ <span class=\"hljs-attr\">width:</span> <span class=\"hljs-string\">barWidth</span>, <span class=\"hljs-attr\">zIndex:</span> <span class=\"hljs-number\">-1</span> }<span class=\"hljs-string\">\"&gt;&lt;/span&gt;\n      &lt;span&gt;<span class=\"hljs-template-variable\">{{ name }}</span>&lt;/span&gt;\n      &lt;span&gt;<span class=\"hljs-template-variable\">{{ value }}</span>&lt;/span&gt;\n    &lt;/a&gt;\n  `\n});\n\nnew Vue({\n  el: \"</span><span class=\"hljs-comment\">#dashboard\",</span>\n  <span class=\"hljs-attr\">data:</span> {\n    <span class=\"hljs-attr\">newVsReturning:</span> {\n      <span class=\"hljs-attr\">data:</span> [<span class=\"hljs-number\">130</span>, <span class=\"hljs-number\">230</span>],\n      <span class=\"hljs-attr\">labels:</span> [<span class=\"hljs-string\">\"New\"</span>, <span class=\"hljs-string\">\"Returning\"</span>]\n    },\n    <span class=\"hljs-attr\">newVsRecurring:</span> {\n      <span class=\"hljs-attr\">data:</span> [<span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">330</span>],\n      <span class=\"hljs-attr\">labels:</span> [<span class=\"hljs-string\">\"New\"</span>, <span class=\"hljs-string\">\"Recurring\"</span>]\n    },\n    <span class=\"hljs-attr\">directVsReferrals:</span> {\n      <span class=\"hljs-attr\">data:</span> [<span class=\"hljs-number\">260</span>, <span class=\"hljs-number\">160</span>],\n      <span class=\"hljs-attr\">labels:</span> [<span class=\"hljs-string\">\"Direct\"</span>, <span class=\"hljs-string\">\"Referrals\"</span>]\n    },\n    <span class=\"hljs-attr\">countryData:</span> [{\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"United States\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"62.4\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">true</span>\n      },\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"India\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"15\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">true</span>\n      },\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"United Kingdom\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"5\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">true</span>\n      },\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"Canada\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"5\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">true</span>\n      },\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"Russia\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"4.5\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">true</span>\n      },\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"Mexico\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"2.3\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">true</span>\n      },\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"Spain\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"1.7\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">true</span>\n      }\n    ],\n    <span class=\"hljs-attr\">pageData:</span> [{\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"/ (Logged out)\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"3,929,481\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">false</span>\n      },\n\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"/ (Logged in)\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"1,143,393\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">false</span>\n      },\n\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"/tour\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"938,287\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">false</span>\n      },\n\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"/features/something\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"749,393\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">false</span>\n      },\n\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"/features/another-thing\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"695,912\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">false</span>\n      },\n\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"/users/username\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"501,938\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">false</span>\n      },\n\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"/page-title\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"392,842\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">false</span>\n      }\n    ],\n    <span class=\"hljs-attr\">deviceData:</span> [{\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"Desktop (1920x1080)\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"3,929,481\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">false</span>\n      },\n\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"Desktop (1366x768)\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"1,143,393\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">false</span>\n      },\n\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"Desktop (1440x900)\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"938,287\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">false</span>\n      },\n\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"Desktop (1280x800)\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"749,393\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">false</span>\n      },\n\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"Tablet (1024x768)\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"695,912\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">false</span>\n      },\n\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"Tablet (768x1024)\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"501,938\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">false</span>\n      },\n\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"Phone (320x480)\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"392,842\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">false</span>\n      },\n\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"Phone (720x450)\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"298,183\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">false</span>\n      },\n\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"Desktop (2560x1080)\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"193,129\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">false</span>\n      },\n\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">\"Desktop (2560x1600)\"</span>,\n        <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">\"93,382\"</span>,\n        <span class=\"hljs-attr\">showBar:</span> <span class=\"hljs-literal\">false</span>\n      }\n    ]\n  },\n  <span class=\"hljs-attr\">created:</span> <span class=\"hljs-string\">function()</span> {\n    <span class=\"hljs-string\">Chart.defaults.global.legend.display</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-literal\">false</span><span class=\"hljs-string\">;</span>\n  }\n}<span class=\"hljs-string\">);</span></code></pre></div>",
    "sec_6.js": "<div class=\"codeBlock hljs yaml\" id=\"sec_6\"><pre id=\"sec_6_code\" ><code class=\"json\"><span class=\"hljs-string\">//</span> <span class=\"hljs-string\">https://dribbble.com/shots/1821178-Sales-Report?list=buckets&amp;offset=0</span>\n\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">Line</span> <span class=\"hljs-string\">Chart</span>\n<span class=\"hljs-string\">var</span> <span class=\"hljs-string\">salesData</span> <span class=\"hljs-string\">=</span> {\n  <span class=\"hljs-attr\">labels:</span> [<span class=\"hljs-string\">\"Monday\"</span>, <span class=\"hljs-string\">\"Tuesday\"</span>, <span class=\"hljs-string\">\"Wednesday\"</span>, <span class=\"hljs-string\">\"Thursday\"</span>, <span class=\"hljs-string\">\"Friday\"</span>, <span class=\"hljs-string\">\"Saturday\"</span>, <span class=\"hljs-string\">\"Sunday\"</span>],\n  <span class=\"hljs-attr\">datasets:</span> [\n    {\n      <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">\"Front\"</span>,\n      <span class=\"hljs-attr\">fillColor:</span> <span class=\"hljs-string\">\"rgba(195, 40, 96, 0.1)\"</span>,\n      <span class=\"hljs-attr\">strokeColor:</span> <span class=\"hljs-string\">\"rgba(195, 40, 96, 1)\"</span>,\n      <span class=\"hljs-attr\">pointColor:</span> <span class=\"hljs-string\">\"rgba(195, 40, 96, 1)\"</span>,\n      <span class=\"hljs-attr\">pointStrokeColor:</span> <span class=\"hljs-string\">\"#202b33\"</span>,\n      <span class=\"hljs-attr\">pointHighlightStroke:</span> <span class=\"hljs-string\">\"rgba(225,225,225,0.9)\"</span>,\n      <span class=\"hljs-attr\">data:</span> [<span class=\"hljs-number\">3400</span>, <span class=\"hljs-number\">3000</span>, <span class=\"hljs-number\">2500</span>, <span class=\"hljs-number\">4500</span>, <span class=\"hljs-number\">2500</span>, <span class=\"hljs-number\">3400</span>, <span class=\"hljs-number\">3000</span>]\n    },\n    {\n      <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">\"Middle\"</span>,\n      <span class=\"hljs-attr\">fillColor:</span> <span class=\"hljs-string\">\"rgba(255, 172, 100, 0.1)\"</span>,\n      <span class=\"hljs-attr\">strokeColor:</span> <span class=\"hljs-string\">\"rgba(255, 172, 100, 1)\"</span>,\n      <span class=\"hljs-attr\">pointColor:</span> <span class=\"hljs-string\">\"rgba(255, 172, 100, 1)\"</span>,\n      <span class=\"hljs-attr\">pointStrokeColor:</span> <span class=\"hljs-string\">\"#202b33\"</span>,\n      <span class=\"hljs-attr\">pointHighlightStroke:</span> <span class=\"hljs-string\">\"rgba(225,225,225,0.9)\"</span>,\n      <span class=\"hljs-attr\">data:</span> [<span class=\"hljs-number\">1900</span>, <span class=\"hljs-number\">1700</span>, <span class=\"hljs-number\">2100</span>, <span class=\"hljs-number\">3600</span>, <span class=\"hljs-number\">2200</span>, <span class=\"hljs-number\">2500</span>, <span class=\"hljs-number\">2000</span>]\n    },\n    {\n      <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">\"Back\"</span>,\n      <span class=\"hljs-attr\">fillColor:</span> <span class=\"hljs-string\">\"rgba(19, 71, 34, 0.3)\"</span>,\n      <span class=\"hljs-attr\">strokeColor:</span> <span class=\"hljs-string\">\"rgba(88, 188, 116, 1)\"</span>,\n      <span class=\"hljs-attr\">pointColor:</span> <span class=\"hljs-string\">\"rgba(88, 188, 116, 1)\"</span>,\n      <span class=\"hljs-attr\">pointStrokeColor:</span> <span class=\"hljs-string\">\"#202b33\"</span>,\n      <span class=\"hljs-attr\">pointHighlightStroke:</span> <span class=\"hljs-string\">\"rgba(225,225,225,0.9)\"</span>,\n      <span class=\"hljs-attr\">data:</span> [<span class=\"hljs-number\">1000</span>, <span class=\"hljs-number\">1400</span>, <span class=\"hljs-number\">1100</span>, <span class=\"hljs-number\">2600</span>, <span class=\"hljs-number\">2000</span>, <span class=\"hljs-number\">900</span>, <span class=\"hljs-number\">1400</span>]\n    }\n  ]\n}<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">var</span> <span class=\"hljs-string\">ctx</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">document.getElementById(\"salesData\").getContext(\"2d\");</span>\n<span class=\"hljs-string\">window.myLineChart</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">new</span> <span class=\"hljs-string\">Chart(ctx).Line(salesData,</span> {\n <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"> <span class=\"hljs-attr\">pointDotRadius :</span> <span class=\"hljs-number\">6</span>,\n  <span class=\"hljs-attr\">pointDotStrokeWidth :</span> <span class=\"hljs-number\">2</span>,</div>\n  <span class=\"hljs-attr\">datasetStrokeWidth :</span> <span class=\"hljs-number\">3</span>,\n  <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-attr\">scaleShowVerticalLines:</span> <span class=\"hljs-literal\">false</span>,\n  <span class=\"hljs-attr\">scaleGridLineWidth :</span> <span class=\"hljs-number\">2</span>,\n  <span class=\"hljs-attr\">scaleShowGridLines :</span> <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">scaleGridLineColor :</span> <span class=\"hljs-string\">\"rgba(225, 255, 255, 0.02)\"</span>,\n  <span class=\"hljs-attr\">scaleOverride:</span> <span class=\"hljs-literal\">true</span>,\n  <span class=\"hljs-attr\">scaleSteps:</span> <span class=\"hljs-number\">9</span>,\n  <span class=\"hljs-attr\">scaleStepWidth:</span> <span class=\"hljs-number\">500</span>,\n  <span class=\"hljs-attr\">scaleStartValue:</span> <span class=\"hljs-number\">0</span>,</div>\n\n  <span class=\"hljs-attr\">responsive:</span> <span class=\"hljs-literal\">true</span>\n\n}<span class=\"hljs-string\">);</span>\n\n<span class=\"hljs-string\">//Credit</span> <span class=\"hljs-string\">Sales</span>\n<span class=\"hljs-string\">var</span> <span class=\"hljs-string\">creditSales</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">new</span> <span class=\"hljs-string\">ProgressBar.Circle('#creditSales',</span> {\n  <span class=\"hljs-attr\">color:</span> <span class=\"hljs-string\">'#e81760'</span>,\n  <span class=\"hljs-attr\">strokeWidth:</span> <span class=\"hljs-number\">3</span>,\n  <span class=\"hljs-attr\">trailWidth:</span> <span class=\"hljs-number\">3</span>,\n  <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Animations_0\" class=\"highlights fea_Animations\"><span class=\"hljs-attr\">duration:</span> <span class=\"hljs-number\">1500</span>,</div>\n  <span class=\"hljs-attr\">text:</span> {\n    <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">'0%'</span>\n  },\n  <span class=\"hljs-attr\">step:</span> <span class=\"hljs-string\">function(state</span>, <span class=\"hljs-string\">bar)</span> {\n    <span class=\"hljs-string\">bar.setText((bar.value()</span> <span class=\"hljs-string\">*</span> <span class=\"hljs-number\">100</span><span class=\"hljs-string\">).toFixed(0)</span> <span class=\"hljs-string\">+</span> <span class=\"hljs-string\">\"%\"</span><span class=\"hljs-string\">);</span>\n  }\n}<span class=\"hljs-string\">);</span>\n<span class=\"hljs-string\">var</span> <span class=\"hljs-string\">channelSales</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">new</span> <span class=\"hljs-string\">ProgressBar.Circle('#channelSales',</span> {\n  <span class=\"hljs-attr\">color:</span> <span class=\"hljs-string\">'#e88e3c'</span>,\n  <span class=\"hljs-attr\">strokeWidth:</span> <span class=\"hljs-number\">3</span>,\n  <span class=\"hljs-attr\">trailWidth:</span> <span class=\"hljs-number\">3</span>,\n  <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Animations_1\" class=\"highlights fea_Animations\"><span class=\"hljs-attr\">duration:</span> <span class=\"hljs-number\">1500</span>,</div>\n  <span class=\"hljs-attr\">text:</span> {\n    <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">'0%'</span>\n  },\n  <span class=\"hljs-attr\">step:</span> <span class=\"hljs-string\">function(state</span>, <span class=\"hljs-string\">bar)</span> {\n    <span class=\"hljs-string\">bar.setText((bar.value()</span> <span class=\"hljs-string\">*</span> <span class=\"hljs-number\">100</span><span class=\"hljs-string\">).toFixed(0)</span> <span class=\"hljs-string\">+</span> <span class=\"hljs-string\">\"%\"</span><span class=\"hljs-string\">);</span>\n  }\n}<span class=\"hljs-string\">);</span>\n<span class=\"hljs-string\">var</span> <span class=\"hljs-string\">directSales</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">new</span> <span class=\"hljs-string\">ProgressBar.Circle('#directSales',</span> {\n  <span class=\"hljs-attr\">color:</span> <span class=\"hljs-string\">'#2bab51'</span>,\n  <span class=\"hljs-attr\">strokeWidth:</span> <span class=\"hljs-number\">3</span>,\n  <span class=\"hljs-attr\">trailWidth:</span> <span class=\"hljs-number\">3</span>,\n  <span class=\"hljs-attr\">duration:</span> <span class=\"hljs-number\">1500</span>,\n  <span class=\"hljs-attr\">text:</span> {\n    <span class=\"hljs-attr\">value:</span> <span class=\"hljs-string\">'0%'</span>\n  },\n  <span class=\"hljs-attr\">step:</span> <span class=\"hljs-string\">function(state</span>, <span class=\"hljs-string\">bar)</span> {\n    <span class=\"hljs-string\">bar.setText((bar.value()</span> <span class=\"hljs-string\">*</span> <span class=\"hljs-number\">100</span><span class=\"hljs-string\">).toFixed(0)</span> <span class=\"hljs-string\">+</span> <span class=\"hljs-string\">\"%\"</span><span class=\"hljs-string\">);</span>\n  }\n}<span class=\"hljs-string\">);</span>\n<span class=\"hljs-string\">creditSales.animate(0.8);</span>\n<span class=\"hljs-string\">channelSales.animate(0.64);</span>\n<span class=\"hljs-string\">directSales.animate(0.34);</span></code></pre></div>",
    "sec_13.js": "<div class=\"codeBlock hljs javascript\" id=\"sec_13\"><pre id=\"sec_13_code\" ><code class=\"json\"><span class=\"hljs-keyword\">var</span> canvas = <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"canvas\"</span>);\n\n<span class=\"hljs-comment\">// Apply multiply blend when drawing datasets</span>\n<span class=\"hljs-keyword\">var</span> multiply = {\n  <span class=\"hljs-attr\">beforeDatasetsDraw</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">chart, options, el</span>) </span>{\n    chart.ctx.globalCompositeOperation = <span class=\"hljs-string\">'multiply'</span>;\n  },\n  <span class=\"hljs-attr\">afterDatasetsDraw</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">chart, options</span>) </span>{\n    chart.ctx.globalCompositeOperation = <span class=\"hljs-string\">'source-over'</span>;\n  },\n};\n\n<span class=\"hljs-comment\">// Gradient color - this week</span>\n<span class=\"hljs-keyword\">var</span> gradientThisWeek = canvas.getContext(<span class=\"hljs-string\">'2d'</span>).createLinearGradient(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">150</span>);\ngradientThisWeek.addColorStop(<span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">'#5555FF'</span>);\ngradientThisWeek.addColorStop(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'#9787FF'</span>);\n\n<span class=\"hljs-comment\">// Gradient color - previous week</span>\n<span class=\"hljs-keyword\">var</span> gradientPrevWeek = canvas.getContext(<span class=\"hljs-string\">'2d'</span>).createLinearGradient(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">150</span>);\ngradientPrevWeek.addColorStop(<span class=\"hljs-number\">0</span>, <span class=\"hljs-string\">'#FF55B8'</span>);\ngradientPrevWeek.addColorStop(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'#FF8787'</span>);\n\n\n<span class=\"hljs-keyword\">var</span> config = {\n    <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">'line'</span>,</div>\n    <span class=\"hljs-attr\">data</span>: {\n        <span class=\"hljs-attr\">labels</span>: [<span class=\"hljs-string\">\"MON\"</span>, <span class=\"hljs-string\">\"TUE\"</span>, <span class=\"hljs-string\">\"WED\"</span>, <span class=\"hljs-string\">\"THU\"</span>, <span class=\"hljs-string\">\"FRI\"</span>, <span class=\"hljs-string\">\"SAT\"</span>, <span class=\"hljs-string\">\"SUN\"</span>],\n        <span class=\"hljs-attr\">datasets</span>: [\n          {\n              <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'This week'</span>,\n              <span class=\"hljs-attr\">data</span>: [<span class=\"hljs-number\">24</span>, <span class=\"hljs-number\">18</span>, <span class=\"hljs-number\">16</span>, <span class=\"hljs-number\">18</span>, <span class=\"hljs-number\">24</span>, <span class=\"hljs-number\">36</span>, <span class=\"hljs-number\">28</span>],\n              <span class=\"hljs-attr\">backgroundColor</span>: gradientThisWeek,\n              <span class=\"hljs-attr\">borderColor</span>: <span class=\"hljs-string\">'transparent'</span>,\n              <span class=\"hljs-attr\">pointBackgroundColor</span>: <span class=\"hljs-string\">'#FFFFFF'</span>,\n              <span class=\"hljs-attr\">pointBorderColor</span>: <span class=\"hljs-string\">'#FFFFFF'</span>,\n              <span class=\"hljs-attr\">lineTension</span>: <span class=\"hljs-number\">0.40</span>,\n          },\n          {\n              <span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">'Previous week'</span>,\n              <span class=\"hljs-attr\">data</span>: [<span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">22</span>, <span class=\"hljs-number\">30</span>, <span class=\"hljs-number\">22</span>, <span class=\"hljs-number\">18</span>, <span class=\"hljs-number\">22</span>, <span class=\"hljs-number\">30</span>],\n              <span class=\"hljs-attr\">backgroundColor</span>: gradientPrevWeek,\n              <span class=\"hljs-attr\">borderColor</span>: <span class=\"hljs-string\">'transparent'</span>,\n              <span class=\"hljs-attr\">pointBackgroundColor</span>: <span class=\"hljs-string\">'#FFFFFF'</span>,\n              <span class=\"hljs-attr\">pointBorderColor</span>: <span class=\"hljs-string\">'#FFFFFF'</span>,\n              <span class=\"hljs-attr\">lineTension</span>: <span class=\"hljs-number\">0.40</span>,\n          }\n        ]\n    },\n    <span class=\"hljs-attr\">options</span>: {\n    \t\t<span class=\"hljs-attr\">elements</span>: { \n        \t<span class=\"hljs-attr\">point</span>: {\n          \t<span class=\"hljs-attr\">radius</span>: <span class=\"hljs-number\">0</span>,\n          \t<span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\"><span class=\"hljs-attr\">hitRadius</span>: <span class=\"hljs-number\">5</span>, \n            <span class=\"hljs-attr\">hoverRadius</span>: <span class=\"hljs-number\">5</span></div><span class=\"hljs-number\"></span> \n          } \n        },\n    \t\t<span class=\"hljs-attr\">legend</span>: {\n        \t\t<span class=\"hljs-attr\">display</span>: <span class=\"hljs-literal\">false</span>,\n        },\n        <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-attr\">scales</span>: {\n            <span class=\"hljs-attr\">xAxes</span>: [{\n            \t\t<span class=\"hljs-attr\">display</span>: <span class=\"hljs-literal\">false</span>,\n            }],\n            <span class=\"hljs-attr\">yAxes</span>: [{\n            \t\t<span class=\"hljs-attr\">display</span>: <span class=\"hljs-literal\">false</span>,\n                <span class=\"hljs-attr\">ticks</span>: {\n                \t<span class=\"hljs-attr\">beginAtZero</span>: <span class=\"hljs-literal\">true</span>,\n              \t},\n            }]\n        }</div>\n    },\n    <span class=\"hljs-attr\">plugins</span>: [multiply],\n};\n\n<span class=\"hljs-built_in\">window</span>.chart = <span class=\"hljs-keyword\">new</span> Chart(canvas, config);</code></pre></div>",
    "sec_20.js": "<div class=\"codeBlock hljs yaml\" id=\"sec_20\"><pre id=\"sec_20_code\" ><code class=\"json\"><span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;block:actions:2&gt;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">actions</span> <span class=\"hljs-string\">=</span> [\n  {\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Randomize'</span>,\n    <span class=\"hljs-string\">handler(chart)</span> {\n      <span class=\"hljs-string\">chart.data.datasets.forEach(dataset</span> <span class=\"hljs-string\">=&gt;</span> {\n        <span class=\"hljs-string\"></span><div style=\"display: inline;\" id=\"Data_Transformation_0\" class=\"highlights fea_Data_Transformation\"><span class=\"hljs-string\">dataset.data</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">Utils.numbers(</span>{<span class=\"hljs-attr\">count:</span> <span class=\"hljs-string\">chart.data.labels.length</span>, <span class=\"hljs-attr\">min:</span> <span class=\"hljs-number\">-100</span>, <span class=\"hljs-attr\">max:</span> <span class=\"hljs-number\">100</span>}<span class=\"hljs-string\">);</span></div><span class=\"hljs-string\"></span>\n      }<span class=\"hljs-string\">);</span>\n      <span class=\"hljs-string\">chart.update();</span>\n    }\n  },\n]<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;/block:actions&gt;</span>\n\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;block:setup:1&gt;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">DATA_COUNT</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-number\">7</span><span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">NUMBER_CFG</span> <span class=\"hljs-string\">=</span> {<span class=\"hljs-attr\">count:</span> <span class=\"hljs-string\">DATA_COUNT</span>, <span class=\"hljs-attr\">min:</span> <span class=\"hljs-number\">-100</span>, <span class=\"hljs-attr\">max:</span> <span class=\"hljs-number\">100</span>}<span class=\"hljs-string\">;</span>\n\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">labels</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">Utils.months({count:</span> <span class=\"hljs-number\">7</span><span class=\"hljs-string\">});</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">data</span> <span class=\"hljs-string\">=</span> {\n  <span class=\"hljs-attr\">labels:</span> <span class=\"hljs-string\">labels</span>,\n  <span class=\"hljs-attr\">datasets:</span> [\n    {\n      <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">'Dataset 1'</span>,\n      <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">Utils.numbers(NUMBER_CFG)</span>,\n      <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">Utils.CHART_COLORS.red</span>,\n    },\n    {\n      <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">'Dataset 2'</span>,\n      <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">Utils.numbers(NUMBER_CFG)</span>,\n      <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">Utils.CHART_COLORS.blue</span>,\n    },\n    {\n      <span class=\"hljs-attr\">label:</span> <span class=\"hljs-string\">'Dataset 3'</span>,\n      <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">Utils.numbers(NUMBER_CFG)</span>,\n      <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-string\">Utils.CHART_COLORS.green</span>,\n    },\n  ]\n}<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;/block:setup&gt;</span>\n\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;block:config:0&gt;</span>\n<span class=\"hljs-string\">var</span> <span class=\"hljs-string\">delayed;</span>\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">config</span> <span class=\"hljs-string\">=</span> {\n  <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">type:</span> <span class=\"hljs-string\">'bar'</span></div><span class=\"hljs-string\"></span>,\n  <span class=\"hljs-attr\">data:</span> <span class=\"hljs-string\">data</span>,\n  <span class=\"hljs-attr\">options:</span> {\n    <span class=\"hljs-attr\"></span><span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Animations_0\" class=\"highlights fea_Animations\"><span class=\"hljs-attr\">animation:</span> {\n      <span class=\"hljs-attr\">onComplete:</span> <span class=\"hljs-string\">()</span> <span class=\"hljs-string\">=&gt;</span> {\n        <span class=\"hljs-string\">delayed</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-literal\">true</span><span class=\"hljs-string\">;</span>\n      },\n      <span class=\"hljs-attr\">delay:</span> <span class=\"hljs-string\">(context)</span> <span class=\"hljs-string\">=&gt;</span> {\n        <span class=\"hljs-string\">let</span> <span class=\"hljs-string\">delay</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-number\">0</span><span class=\"hljs-string\">;</span>\n        <span class=\"hljs-string\">if</span> <span class=\"hljs-string\">(context.type</span> <span class=\"hljs-string\">===</span> <span class=\"hljs-string\">'data'</span> <span class=\"hljs-string\">&amp;&amp;</span> <span class=\"hljs-string\">context.mode</span> <span class=\"hljs-string\">===</span> <span class=\"hljs-string\">'default'</span> <span class=\"hljs-string\">&amp;&amp;</span> <span class=\"hljs-type\">!delayed)</span> {\n          <span class=\"hljs-string\">delay</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">context.dataIndex</span> <span class=\"hljs-string\">*</span> <span class=\"hljs-number\">300</span> <span class=\"hljs-string\">+</span> <span class=\"hljs-string\">context.datasetIndex</span> <span class=\"hljs-string\">*</span> <span class=\"hljs-number\">100</span><span class=\"hljs-string\">;</span>\n        }\n        <span class=\"hljs-string\">return</span> <span class=\"hljs-string\">delay;</span>\n      },\n    },</div>\n    <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-attr\">scales:</span> {\n      <span class=\"hljs-attr\">x:</span> {\n        <span class=\"hljs-attr\">stacked:</span> <span class=\"hljs-literal\">true</span>,\n      },\n      <span class=\"hljs-attr\">y:</span> {\n        <span class=\"hljs-attr\">stacked:</span> <span class=\"hljs-literal\">true</span>\n      }\n    }</div>\n  }\n}<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//</span> <span class=\"hljs-string\">&lt;/block:config&gt;</span>\n\n<span class=\"hljs-string\">module.exports</span> <span class=\"hljs-string\">=</span> {\n  <span class=\"hljs-attr\">actions:</span> <span class=\"hljs-string\">actions</span>,\n  <span class=\"hljs-attr\">config:</span> <span class=\"hljs-string\">config</span>,\n}<span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">//https://www.chartjs.org/docs/latest/samples/animations/delay.html</span></code></pre></div>",
    "sec_1.js": "<div class=\"codeBlock hljs javascript\" id=\"sec_1\"><pre id=\"sec_1_code\" ><code class=\"json\"><span class=\"hljs-comment\">// Line Chart</span>\n<span class=\"hljs-keyword\">var</span> lineChartData = {\n  <span class=\"hljs-attr\">labels</span>: [<span class=\"hljs-string\">\"January\"</span>, <span class=\"hljs-string\">\"February\"</span>, <span class=\"hljs-string\">\"March\"</span>, <span class=\"hljs-string\">\"April\"</span>, <span class=\"hljs-string\">\"May\"</span>, <span class=\"hljs-string\">\"June\"</span>, <span class=\"hljs-string\">\"July\"</span>, <span class=\"hljs-string\">\"August\"</span>, <span class=\"hljs-string\">\"September\"</span>, <span class=\"hljs-string\">\"October\"</span>, <span class=\"hljs-string\">\"November\"</span>, <span class=\"hljs-string\">\"December\"</span>],\n  <span class=\"hljs-attr\">datasets</span>: [{\n    <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">l</span><span class=\"hljs-attr\"></span><span class=\"hljs-attr\">abel</span>: <span class=\"hljs-string\">\"Growth\"</span>,\n    <span class=\"hljs-attr\">f</span><span class=\"hljs-attr\">illColor</span>: <span class=\"hljs-string\">\"#66C8D8\"</span>,\n    <span class=\"hljs-attr\">strokeColor</span>: <span class=\"hljs-string\">\"rgba(0,0,0,0)\"</span>,\n    <span class=\"hljs-attr\">pointColor</span>: <span class=\"hljs-string\">\"rgba(255, 255, 255, 0)\"</span>,\n    <span class=\"hljs-attr\">pointStrokeColor</span>: <span class=\"hljs-string\">\"rgba(255, 255, 255, 0</span><span class=\"hljs-string\"></span><span class=\"hljs-string\">)\"</span>,\n    <span class=\"hljs-attr\">data</span>: [<span class=\"hljs-number\">300</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">250</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">120</span>, <span class=\"hljs-number\">50</span>, <span class=\"hljs-number\">170</span>, <span class=\"hljs-number\">150</span>, <span class=\"hljs-number\">150</span>, <span class=\"hljs-number\">220</span>, <span class=\"hljs-number\">200</span>, <span class=\"hljs-number\">300</span>]</div>\n  }, {\n    <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-attr\">label</span>: <span class=\"hljs-string\">\"Loss\"</span>,\n    <span class=\"hljs-attr\">fillColor</span>: <span class=\"hljs-string\">\"#EE5286\"</span>,\n    <span class=\"hljs-attr\">pointColor</span>: <span class=\"hljs-string\">\"rgba(255, 255, 255, 0)\"</span>,\n    <span class=\"hljs-attr\">pointStrokeColor</span>: <span class=\"hljs-string\">\"rgba(255, 255, 255, 0)\"</span>,\n    <span class=\"hljs-attr\">data</span>: [<span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">150</span>, <span class=\"hljs-number\">100</span>, <span class=\"hljs-number\">70</span>, <span class=\"hljs-number\">10</span>, <span class=\"hljs-number\">20</span>, <span class=\"hljs-number\">90</span>, <span class=\"hljs-number\">90</span>, <span class=\"hljs-number\">120</span>, <span class=\"hljs-number\">120</span>, <span class=\"hljs-number\">150</span>, <span class=\"hljs-number\">150</span>]</div>\n  }]\n};\n\n<span class=\"hljs-built_in\">window</span>.onload = <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{\n  <span class=\"hljs-keyword\">var</span> ctx1 = <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"canvas\"</span>).getContext(<span class=\"hljs-string\">\"2d\"</span>);\n  <span class=\"hljs-built_in\">window</span>.myLine = <span class=\"hljs-keyword\">new</span> Chart(ctx1).Line(lineChartData, {\n\n    <span class=\"hljs-attr\">responsive</span>: <span class=\"hljs-literal\">true</span>\n  });\n};\n\nChart.defaults.global = {\n\n  <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Animations_0\" class=\"highlights fea_Animations\"><span class=\"hljs-attr\">animation</span>: <span class=\"hljs-literal\">true</span>,\n\n  <span class=\"hljs-attr\">animationSteps</span>: <span class=\"hljs-number\">50</span>,\n\n  <span class=\"hljs-attr\">animationEasing</span>: <span class=\"hljs-string\">\"easeOutBounce\"</span>,</div>\n\n  <span class=\"hljs-attr\">scaleLabel</span>: <span class=\"hljs-string\">\"&lt;%=value%&gt;\"</span>,\n\n  <span class=\"hljs-attr\">bezierCurve</span>: <span class=\"hljs-literal\">true</span>,\n\n  <span class=\"hljs-attr\">bezierCurveTension</span>: <span class=\"hljs-number\">1</span>,\n\n  <span class=\"hljs-attr\">scaleIntegersOnly</span>: <span class=\"hljs-literal\">true</span>,\n\n  <span class=\"hljs-attr\">scaleBeginAtZero</span>: <span class=\"hljs-literal\">false</span>,\n\n  <span class=\"hljs-attr\">maintainAspectRatio</span>: <span class=\"hljs-literal\">true</span>,\n\n  <span class=\"hljs-attr\">onAnimationProgress</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{},\n\n  <span class=\"hljs-attr\">onAnimationComplete</span>: <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}\n}</code></pre></div>",
    "sec_4.js": "<div class=\"codeBlock hljs kotlin\" id=\"sec_4\"><pre id=\"sec_4_code\" ><code class=\"json\"><span class=\"hljs-keyword\">var</span> ctx = document.getElementById(<span class=\"hljs-string\">'myChart'</span>).getContext(<span class=\"hljs-string\">'2d'</span>);\n<span class=\"hljs-keyword\">var</span> myChart = new Chart(ctx, {\n  <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">type: <span class=\"hljs-string\">'line'</span>,</div>\n  <span class=\"hljs-keyword\">data</span>: {\n    labels: [<span class=\"hljs-string\">'M'</span>, <span class=\"hljs-string\">'T'</span>, <span class=\"hljs-string\">'W'</span>, <span class=\"hljs-string\">'T'</span>, <span class=\"hljs-string\">'F'</span>, <span class=\"hljs-string\">'S'</span>, <span class=\"hljs-string\">'S'</span>],\n    datasets: [{\n      label: <span class=\"hljs-string\">'apples'</span>,\n      <span class=\"hljs-keyword\">data</span>: [<span class=\"hljs-number\">12</span>, <span class=\"hljs-number\">19</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">17</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">7</span>],\n      backgroundColor: <span class=\"hljs-string\">\"rgba(1</span><span class=\"hljs-string\">53,255,51,0.6)\"</span>\n    }, {\n      label: <span class=\"hljs-string\">'oranges'</span>,\n      <span class=\"hljs-keyword\">data</span>: [<span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">29</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">2</span>, <span class=\"hljs-number\">3</span>, <span class=\"hljs-number\">10</span>],\n      backgroundColor: <span class=\"hljs-string\">\"rgba(255,153,0,0.6)\"</span><span class=\"hljs-string\"></span>\n    }]\n  }\n});</code></pre></div>",
    "sec_10.js": "<div class=\"codeBlock hljs javascript\" id=\"sec_10\"><pre id=\"sec_10_code\" ><code class=\"json\"><span class=\"hljs-comment\">// line chart data</span>\n<span class=\"hljs-keyword\">var</span> buyerData = {\n    <span class=\"hljs-attr\">labels</span> : [<span class=\"hljs-string\">\"January\"</span>,<span class=\"hljs-string\">\"February\"</span>,<span class=\"hljs-string\">\"March\"</span>,<span class=\"hljs-string\">\"April\"</span>,<span class=\"hljs-string\">\"May\"</span>,<span class=\"hljs-string\">\"June\"</span>],\n    <span class=\"hljs-attr\">datasets</span> : [\n    {\n       <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"> <span class=\"hljs-attr\">fillColor</span> : <span class=\"hljs-string\">\"rgba(172,194,132,0.4)\"</span>,\n        <span class=\"hljs-attr\">strokeColor</span> : <span class=\"hljs-string\">\"#ACC26D\"</span>,\n        <span class=\"hljs-attr\">pointColor</span> : <span class=\"hljs-string\">\"#fff\"</span>,\n        <span class=\"hljs-attr\">pointStrokeColor</span> : <span class=\"hljs-string\">\"#9DB86D\"</span>,\n        <span class=\"hljs-attr\">data</span> : [<span class=\"hljs-number\">203</span>,<span class=\"hljs-number\">156</span>,<span class=\"hljs-number\">99</span>,<span class=\"hljs-number\">251</span>,<span class=\"hljs-number\">305</span>,<span class=\"hljs-number\">247</span>]</div>\n    }\n]\n}\n<span class=\"hljs-comment\">// get line chart canvas</span>\n<span class=\"hljs-keyword\">var</span> buyers = <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">'buyers'</span>).getContext(<span class=\"hljs-string\">'2d'</span>);\n<span class=\"hljs-comment\">// draw line chart</span>\n<span class=\"hljs-keyword\">new</span> Chart(buyers).Line(buyerData);\n<span class=\"hljs-comment\">// pie chart data</span>\n<span class=\"hljs-keyword\">var</span> pieData = [\n    {\n        <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">20</span>,\n        <span class=\"hljs-attr\">color</span>:<span class=\"hljs-string\">\"#878BB6\"</span>\n    },\n    {\n        <span class=\"hljs-attr\">value</span> : <span class=\"hljs-number\">40</span>,\n        <span class=\"hljs-attr\">color</span> : <span class=\"hljs-string\">\"#4ACAB4\"</span>\n    },\n    {\n        <span class=\"hljs-attr\">value</span> : <span class=\"hljs-number\">10</span>,\n        <span class=\"hljs-attr\">color</span> : <span class=\"hljs-string\">\"#FF8153\"</span>\n    },\n    {\n        <span class=\"hljs-attr\">value</span> : <span class=\"hljs-number\">30</span>,\n        <span class=\"hljs-attr\">color</span> : <span class=\"hljs-string\">\"#FFEA88\"</span>\n    }\n];\n<span class=\"hljs-comment\">// pie chart options</span>\n<span class=\"hljs-keyword\">var</span> pieOptions = {\n     <span class=\"hljs-attr\">segmentShowStroke</span> : <span class=\"hljs-literal\">false</span>,\n    <div style=\"display: inline;\" id=\"Animations_0\" class=\"highlights fea_Animations\"> <span class=\"hljs-attr\">animateScale</span> : <span class=\"hljs-literal\">true</span></div><span class=\"hljs-literal\"></span>\n}\n<span class=\"hljs-comment\">// get pie chart canvas</span>\n<span class=\"hljs-keyword\">var</span> countries= <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"countries\"</span>).getContext(<span class=\"hljs-string\">\"2d\"</span>);\n<span class=\"hljs-comment\">// draw pie chart</span>\n<span class=\"hljs-keyword\">new</span> Chart(countries).Pie(pieData, pieOptions);\n<span class=\"hljs-comment\">// bar chart data</span>\n<span class=\"hljs-keyword\">var</span> barData = {\n    <span class=\"hljs-attr\">labels</span> : [<span class=\"hljs-string\">\"January\"</span>,<span class=\"hljs-string\">\"February\"</span>,<span class=\"hljs-string\">\"March\"</span>,<span class=\"hljs-string\">\"April\"</span>,<span class=\"hljs-string\">\"May\"</span>,<span class=\"hljs-string\">\"June\"</span>],\n    <span class=\"hljs-attr\">datasets</span> : [\n        {\n            <span class=\"hljs-attr\">fillColor</span> : <span class=\"hljs-string\">\"#48A497\"</span>,\n            <span class=\"hljs-attr\">strokeColor</span> : <span class=\"hljs-string\">\"#48A4D1\"</span>,\n            <span class=\"hljs-attr\">data</span> : [<span class=\"hljs-number\">456</span>,<span class=\"hljs-number\">479</span>,<span class=\"hljs-number\">324</span>,<span class=\"hljs-number\">569</span>,<span class=\"hljs-number\">702</span>,<span class=\"hljs-number\">600</span>]\n        },\n        {\n            <span class=\"hljs-attr\">fillColor</span> : <span class=\"hljs-string\">\"rgba(73,188,170,0.4)\"</span>,\n            <span class=\"hljs-attr\">strokeColor</span> : <span class=\"hljs-string\">\"rgba(72,174,209,0.4)\"</span>,\n            <span class=\"hljs-attr\">data</span> : [<span class=\"hljs-number\">364</span>,<span class=\"hljs-number\">504</span>,<span class=\"hljs-number\">605</span>,<span class=\"hljs-number\">400</span>,<span class=\"hljs-number\">345</span>,<span class=\"hljs-number\">320</span>]\n        }\n    ]\n}\n<span class=\"hljs-comment\">// get bar chart canvas</span>\n<span class=\"hljs-keyword\">var</span> income = <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"income\"</span>).getContext(<span class=\"hljs-string\">\"2d\"</span>);\n<span class=\"hljs-comment\">// draw bar chart</span>\n<span class=\"hljs-keyword\">new</span> Chart(income).Bar(barData);</code></pre></div>",
    "thr_14.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_14\"><pre id=\"thr_14_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React, { Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n<span class=\"hljs-keyword\">import</span> { Container, Row, Col } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"reactstrap\"</span>;\n<span class=\"hljs-keyword\">import</span> {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer,\n  Legend,\n  BarChart,\n  Bar\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"recharts\"</span>;\n<span class=\"hljs-keyword\">import</span> moment <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"moment\"</span>;\n<span class=\"hljs-keyword\">import</span> numeral <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"numeral\"</span>;\n<span class=\"hljs-keyword\">import</span> cubejs <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"@cubejs-client/core\"</span>;\n<span class=\"hljs-keyword\">import</span> Chart <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"./Chart.js\"</span>;\n\n<span class=\"hljs-keyword\">const</span> cubejsApi = cubejs(process.env.REACT_APP_CUBEJS_TOKEN, {\n  <span class=\"hljs-attr\">apiUrl</span>: process.env.REACT_APP_API_URL\n});\n<span class=\"hljs-keyword\">const</span> numberFormatter = <span class=\"hljs-function\">(<span class=\"hljs-params\">item</span>) =&gt;</span> numeral(item).format(<span class=\"hljs-string\">\"0,0\"</span>);\n<span class=\"hljs-keyword\">const</span> dateFormatter = <span class=\"hljs-function\">(<span class=\"hljs-params\">item</span>) =&gt;</span> moment(item).format(<span class=\"hljs-string\">\"MMM YY\"</span>);\n\n<span class=\"hljs-keyword\">const</span> renderSingleValue = <span class=\"hljs-function\">(<span class=\"hljs-params\">resultSet, key</span>) =&gt;</span> (\n  <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h1</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{300}</span>&gt;</span>{numberFormatter(resultSet.chartPivot()[0][key])}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h1</span>&gt;</span></span>\n);\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Container</span> <span class=\"hljs-attr\">fluid</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Row</span>&gt;</span>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Multiple_Chars_0\" class=\"highlights fea_Multiple_Chars\">&lt;<span class=\"hljs-name\">Col</span> <span class=\"hljs-attr\">sm</span>=<span class=\"hljs-string\">\"4\"</span>&gt;</div></span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Chart</span>\n              <span class=\"hljs-attr\">cubejsApi</span>=<span class=\"hljs-string\">{cubejsApi}</span>\n              <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\"><span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"Total Users\"</span></div><span class=\"hljs-string\"></span>\n              <span class=\"hljs-attr\">query</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">measures:</span> [\"<span class=\"hljs-attr\">Users.count</span>\"] }}\n              <span class=\"hljs-attr\">render</span>=<span class=\"hljs-string\">{(resultSet)</span> =&gt;</span>\n                renderSingleValue(resultSet, \"Users.count\")\n              }\n            /&gt;\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Col</span>&gt;</span>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Multiple_Chars_2\" class=\"highlights fea_Multiple_Chars\">&lt;<span class=\"hljs-name\">Col</span> <span class=\"hljs-attr\">sm</span>=<span class=\"hljs-string\">\"4\"</span>&gt;</div></span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Chart</span>\n              <span class=\"hljs-attr\">cubejsApi</span>=<span class=\"hljs-string\">{cubejsApi}</span>\n              <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"Total Orders\"</span>\n              <span class=\"hljs-attr\">query</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">measures:</span> [\"<span class=\"hljs-attr\">Orders.count</span>\"] }}\n              <span class=\"hljs-attr\">render</span>=<span class=\"hljs-string\">{(resultSet)</span> =&gt;</span>\n                renderSingleValue(resultSet, \"Orders.count\")\n              }\n            /&gt;\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Col</span>&gt;</span>\n         <div style=\"display: inline;\" id=\"Multiple_Chars_1\" class=\"highlights fea_Multiple_Chars\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Col</span> <span class=\"hljs-attr\">sm</span>=<span class=\"hljs-string\">\"4\"</span>&gt;</span></div><span class=\"hljs-tag\"></span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Chart</span>\n              <span class=\"hljs-attr\">cubejsApi</span>=<span class=\"hljs-string\">{cubejsApi}</span>\n              <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"Shipped Orders\"</span>\n              <span class=\"hljs-attr\">query</span>=<span class=\"hljs-string\">{{</span>\n                <span class=\"hljs-attr\">measures:</span> [\"<span class=\"hljs-attr\">Orders.count</span>\"],\n                <span class=\"hljs-attr\">filters:</span> [\n                  {\n                    <span class=\"hljs-attr\">dimension:</span> \"<span class=\"hljs-attr\">Orders.status</span>\",\n                    <span class=\"hljs-attr\">operator:</span> \"<span class=\"hljs-attr\">equals</span>\",\n                    <span class=\"hljs-attr\">values:</span> [\"<span class=\"hljs-attr\">shipped</span>\"]\n                  }\n                ]\n              }}\n              <span class=\"hljs-attr\">render</span>=<span class=\"hljs-string\">{(resultSet)</span> =&gt;</span>\n                renderSingleValue(resultSet, \"Orders.count\")\n              }\n            /&gt;\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Col</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Row</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Row</span>&gt;</span>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Multiple_Chars_3\" class=\"highlights fea_Multiple_Chars\">&lt;<span class=\"hljs-name\">Col</span> <span class=\"hljs-attr\">sm</span>=<span class=\"hljs-string\">\"6\"</span>&gt;</div></span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Chart</span>\n              <span class=\"hljs-attr\">cubejsApi</span>=<span class=\"hljs-string\">{cubejsApi}</span>\n              <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"New Users Over Time\"</span>\n              <span class=\"hljs-attr\">query</span>=<span class=\"hljs-string\">{{</span>\n                <span class=\"hljs-attr\">measures:</span> [\"<span class=\"hljs-attr\">Users.count</span>\"],\n                <span class=\"hljs-attr\">timeDimensions:</span> [\n                  {\n                    <span class=\"hljs-attr\">dimension:</span> \"<span class=\"hljs-attr\">Users.createdAt</span>\",\n                    <span class=\"hljs-attr\">dateRange:</span> [\"<span class=\"hljs-attr\">2019-01-01</span>\", \"<span class=\"hljs-attr\">2020-12-31</span>\"],\n                    <span class=\"hljs-attr\">granularity:</span> \"<span class=\"hljs-attr\">month</span>\"\n                  }\n                ]\n              }}\n              <span class=\"hljs-attr\">render</span>=<span class=\"hljs-string\">{(resultSet)</span> =&gt;</span> (\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ResponsiveContainer</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">\"100%\"</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{300}</span>&gt;</span>\n                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">AreaChart</span> <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{resultSet.chartPivot()}</span>&gt;</span>\n                   <div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\"></span><span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"category\"</span> <span class=\"hljs-attr\">tickFormatter</span>=<span class=\"hljs-string\">{dateFormatter}</span> /&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> <span class=\"hljs-attr\">tickFormatter</span>=<span class=\"hljs-string\">{numberFormatter}</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n                    <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">labelFormatter</span>=<span class=\"hljs-string\">{dateFormatter}</span> /&gt;</div></span>\n                    <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">&lt;<span class=\"hljs-name\">Area</span>\n                      <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span>\n                      <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"Users.count\"</span>\n                      <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"Users\"</span>\n                      <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"rgb(106, 110, 229)\"</span>\n                      <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"rgba(106, 110, 229, .16)\"</span>\n                    /&gt;</div></span>\n                  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">AreaChart</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ResponsiveContainer</span>&gt;</span>\n              )}\n            /&gt;\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Col</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Col</span> <span class=\"hljs-attr\">sm</span>=<span class=\"hljs-string\">\"6\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Chart</span>\n              <span class=\"hljs-attr\">cubejsApi</span>=<span class=\"hljs-string\">{cubejsApi}</span>\n              <span class=\"hljs-attr\">title</span>=<span class=\"hljs-string\">\"Orders by Status Over time\"</span>\n              <span class=\"hljs-attr\">query</span>=<span class=\"hljs-string\">{{</span>\n                <span class=\"hljs-attr\">measures:</span> [\"<span class=\"hljs-attr\">Orders.count</span>\"],\n                <span class=\"hljs-attr\">dimensions:</span> [\"<span class=\"hljs-attr\">Orders.status</span>\"],\n                <span class=\"hljs-attr\">timeDimensions:</span> [\n                  {\n                    <span class=\"hljs-attr\">dimension:</span> \"<span class=\"hljs-attr\">Orders.createdAt</span>\",\n                    <span class=\"hljs-attr\">dateRange:</span> [\"<span class=\"hljs-attr\">2019-01-01</span>\", \"<span class=\"hljs-attr\">2020-12-31</span>\"],\n                    <span class=\"hljs-attr\">granularity:</span> \"<span class=\"hljs-attr\">month</span>\"\n                  }\n                ]\n              }}\n              <span class=\"hljs-attr\">render</span>=<span class=\"hljs-string\">{(resultSet)</span> =&gt;</span> {\n                return (\n                  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ResponsiveContainer</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">\"100%\"</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{300}</span>&gt;</span>\n                    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">BarChart</span> <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{resultSet.chartPivot()}</span>&gt;</span>\n                      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">tickFormatter</span>=<span class=\"hljs-string\">{dateFormatter}</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"x\"</span> /&gt;</span>\n                      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> <span class=\"hljs-attr\">tickFormatter</span>=<span class=\"hljs-string\">{numberFormatter}</span> /&gt;</span>\n                      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Bar</span>\n                        <span class=\"hljs-attr\">stackId</span>=<span class=\"hljs-string\">\"a\"</span>\n                        <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"shipped, Orders.count\"</span>\n                        <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"Shipped\"</span>\n                        <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#7DB3FF\"</span>\n                      /&gt;</span>\n                      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Bar</span>\n                        <span class=\"hljs-attr\">stackId</span>=<span class=\"hljs-string\">\"a\"</span>\n                        <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"processing, Orders.count\"</span>\n                        <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"Processing\"</span>\n                        <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#49457B\"</span>\n                      /&gt;</span>\n                      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Bar</span>\n                        <span class=\"hljs-attr\">stackId</span>=<span class=\"hljs-string\">\"a\"</span>\n                        <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"completed, Orders.count\"</span>\n                        <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"Completed\"</span>\n                        <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#FF7C78\"</span>\n                      /&gt;</span>\n                      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Legend</span> /&gt;</span>\n                      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> /&gt;</span>\n                    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">BarChart</span>&gt;</span>\n                  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ResponsiveContainer</span>&gt;</span>\n                );\n              }}\n            /&gt;\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Col</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Row</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Container</span>&gt;</span></span>\n    );\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> App;\n</code></pre></div>",
    "thr_2.js": "<div class=\"codeBlock hljs typescript\" id=\"thr_2\"><pre id=\"thr_2_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react-dom\"</span>;\n<span class=\"hljs-keyword\">import</span> {\n  BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Brush \n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'recharts'</span>;\n\n<span class=\"hljs-keyword\">const</span> data = [\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page A'</span>, <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">4000</span>, <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">2400</span>, <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2600</span>, <span class=\"hljs-attr\">red</span>: <span class=\"hljs-number\">5630</span>\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page B'</span>, <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3000</span>, <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">1398</span>, <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2210</span>, <span class=\"hljs-attr\">red</span>: <span class=\"hljs-number\">3500</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page C'</span>, <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2000</span>, <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">9800</span>, <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2290</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page D'</span>, <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2780</span>, <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3908</span>, <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2000</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page E'</span>, <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">1890</span>, <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4800</span>, <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2181</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page F'</span>, <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2390</span>, <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3800</span>, <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2500</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page G'</span>, <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3490</span>, <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4300</span>, <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2100</span>,\n  },\n];\n\n<span class=\"hljs-keyword\">const</span> color = [<span class=\"hljs-string\">\"#8884d8\"</span>, <span class=\"hljs-string\">\"#82ca9d\"</span>, <span class=\"hljs-string\">\"orange\"</span>, <span class=\"hljs-string\">\"pink\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n\n  state = {\n    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"Line\"</span>\n  }\n\n  handleChange = <span class=\"hljs-function\">(<span class=\"hljs-params\">e</span>) =&gt;</span> {\n    <span class=\"hljs-built_in\">this</span>.setState({<span class=\"hljs-attr\">type</span>: e.target.value})\n  }\n\n  fetchChart = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> {<span class=\"hljs-keyword\">type</span>} = <span class=\"hljs-built_in\">this</span>.state\n    <span class=\"hljs-keyword\">switch</span>(<span class=\"hljs-keyword\">type</span>){\n      <span class=\"hljs-keyword\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">\"Line\"</span>: <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">MyLineChart</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{type}/</span>&gt;</span></span>\n      <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">\"Bar\"</span>: <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">MyBarChart</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{type}/</span>&gt;</span></span>\n      <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">\"Stacked\"</span>: <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">MyBarChart</span> <span class=\"hljs-attr\">stacked</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{type}/</span>&gt;</span></span></div><span class=\"xml\"><span class=\"hljs-tag\"></span></span>\n      <span class=\"hljs-keyword\">default</span>: <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">MyLineChart</span> /&gt;</span></span>\n    }\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span>{\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{this.handleChange}</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span>&gt;</span>Line<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span>&gt;</span>Bar<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span>&gt;</span>Stacked<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span>\n      {this.fetchChart()}\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n    )\n  }\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyLineChart</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n\n  getLineChart = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> keysArr = <span class=\"hljs-built_in\">Object</span>.keys(data[<span class=\"hljs-number\">0</span>]).slice(<span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-keyword\">const</span> lineArr= [];\n    keysArr.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">item, index</span>)=&gt;</span> {\n      lineArr.push(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">{item}</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">{color[index]}</span> /&gt;</span></span>)\n    })\n    <span class=\"hljs-keyword\">return</span> lineArr;\n  }\n\n  modifyFormatter = <span class=\"hljs-function\">(<span class=\"hljs-params\">value, name, props</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> nameJSX = <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span>\n      <span class=\"hljs-attr\">display:</span> \"<span class=\"hljs-attr\">inline-block</span>\",\n      <span class=\"hljs-attr\">marginRight:</span> \"<span class=\"hljs-attr\">5px</span>\",\n      <span class=\"hljs-attr\">borderRadius:</span> \"<span class=\"hljs-attr\">10px</span>\",\n      <span class=\"hljs-attr\">width:</span> \"<span class=\"hljs-attr\">10px</span>\",\n      <span class=\"hljs-attr\">height:</span> \"<span class=\"hljs-attr\">10px</span>\",\n      <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-attr\">props.color</span>\n    }}&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>{name} : {value}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span></span>\n    <span class=\"hljs-keyword\">return</span> [nameJSX];\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"hljs-comment\">// &lt;ResponsiveContainer&gt;</span>\n       <div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\"> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span>\n          <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{500}</span>\n          <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{300}</span>\n          <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n          <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span>\n            <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">5</span>, <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">30</span>, <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">20</span>, <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">5</span>,\n          }}\n        &gt;</span></span></div><span class=\"xml\"><span class=\"hljs-tag\"></span>\n         <div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> <span class=\"hljs-attr\">horizontal</span>=<span class=\"hljs-string\">{false}</span> <span class=\"hljs-attr\">vertical</span>=<span class=\"hljs-string\">{false}/</span>&gt;</span></div><span class=\"hljs-tag\"></span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">{Object.keys(data[0])[0]}</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">fo</span></span><span class=\"hljs-tag\"><span class=\"hljs-attr\">rmatter</span>=<span class=\"hljs-string\">{this.modifyFormatter}/</span>&gt;</span></div><span class=\"hljs-tag\"></span>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\">&lt;<span class=\"hljs-name\">Legend</span> /&gt;</div></span>\n        {this.getLineChart()}\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Brush</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">{Object.keys(data[0])[0]}</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span>&gt;</span>\n            {this.getLineChart()}\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Brush</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span></span>\n      <span class=\"hljs-comment\">//  &lt;/ResponsiveContainer&gt;</span>\n    );\n  }\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyBarChart</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n\n  getBar = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> {stacked} = <span class=\"hljs-built_in\">this</span>.props;\n    <span class=\"hljs-keyword\">const</span> keysArr = <span class=\"hljs-built_in\">Object</span>.keys(data[<span class=\"hljs-number\">0</span>]).slice(<span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-keyword\">const</span> barArr= [];\n    keysArr.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">item, index</span>)=&gt;</span> {\n      barArr.push(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Bar</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">{item}</span> <span class=\"hljs-attr\">stackId</span>=<span class=\"hljs-string\">{stacked</span> ? \"<span class=\"hljs-attr\">a</span>\" <span class=\"hljs-attr\">:</span> <span class=\"hljs-attr\">null</span>} <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">{color[index]}</span> /&gt;</span></span>)\n    })\n    <span class=\"hljs-keyword\">return</span> barArr;\n  }\n\n  modifyFormatter = <span class=\"hljs-function\">(<span class=\"hljs-params\">value, name, props</span>) =&gt;</span> {\n    <span class=\"hljs-built_in\">console</span>.log(value, name , props, <span class=\"hljs-string\">\"props\"</span>);\n    <span class=\"hljs-keyword\">const</span> nameJSX = <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span>\n      <span class=\"hljs-attr\">display:</span> \"<span class=\"hljs-attr\">inline-block</span>\",\n      <span class=\"hljs-attr\">marginRight:</span> \"<span class=\"hljs-attr\">5px</span>\",\n      <span class=\"hljs-attr\">borderRadius:</span> \"<span class=\"hljs-attr\">10px</span>\",\n      <span class=\"hljs-attr\">width:</span> \"<span class=\"hljs-attr\">10px</span>\",\n      <span class=\"hljs-attr\">height:</span> \"<span class=\"hljs-attr\">10px</span>\",\n      <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-attr\">props.color</span>\n    }}&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>{name} : {value}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span></span>;\n    <span class=\"hljs-keyword\">let</span> result = [nameJSX].reverse();\n    <span class=\"hljs-comment\">// console.log(result, \"result\");</span>\n    <span class=\"hljs-keyword\">return</span> result;\n  }\n\n  handleSort = <span class=\"hljs-function\">(<span class=\"hljs-params\">item1, item2</span>) =&gt;</span> {\n    <span class=\"hljs-comment\">// console.log(item1, item2);</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">BarChart</span>\n        <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{500}</span>\n        <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{300}</span>\n        <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n        <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span>\n          <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">20</span>, <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">30</span>, <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">20</span>, <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">5</span>,\n        }}\n      &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> <span class=\"hljs-attr\">horizontal</span>=<span class=\"hljs-string\">{false}</span> <span class=\"hljs-attr\">vertical</span>=<span class=\"hljs-string\">{false}/</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">{Object.keys(data[0])[0]}</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">formatter</span>=<span class=\"hljs-string\">{this.modifyFormatter}</span> <span class=\"hljs-attr\">itemSorter</span>=<span class=\"hljs-string\">{this.handleSort}/</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Legend</span> /&gt;</span>\n        {this.getBar()}\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Brush</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">{Object.keys(data[0])[0]}</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">BarChart</span>&gt;</span>\n            {this.getBar()}\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">BarChart</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Brush</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">BarChart</span>&gt;</span></span>\n    );\n  }\n}\n\n\n<span class=\"hljs-keyword\">const</span> rootElement = <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"root\"</span>);\nReactDOM.render(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">App</span> /&gt;</span></span>, rootElement);\n</code></pre></div>",
    "thr_3.js": "<div class=\"codeBlock hljs typescript\" id=\"thr_3\"><pre id=\"thr_3_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n<span class=\"hljs-keyword\">import</span> ReactDOM <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react-dom\"</span>;\n<span class=\"hljs-keyword\">import</span> {\n  BarChart, Bar, LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Brush \n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'recharts'</span>;\n\n<span class=\"hljs-keyword\">const</span> data = [\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page A'</span>, <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">4000</span>, <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">2400</span>, <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2600</span>, <span class=\"hljs-attr\">red</span>: <span class=\"hljs-number\">5630</span>\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page B'</span>, <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3000</span>, <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">1398</span>, <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2210</span>, <span class=\"hljs-attr\">red</span>: <span class=\"hljs-number\">3500</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page C'</span>, <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2000</span>, <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">9800</span>, <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2290</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page D'</span>, <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2780</span>, <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3908</span>, <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2000</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page E'</span>, <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">1890</span>, <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4800</span>, <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2181</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page F'</span>, <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2390</span>, <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3800</span>, <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2500</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page G'</span>, <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3490</span>, <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4300</span>, <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2100</span>,\n  },\n];\n\n<span class=\"hljs-keyword\">const</span> color = [<span class=\"hljs-string\">\"#8884d8\"</span>, <span class=\"hljs-string\">\"#82ca9d\"</span>, <span class=\"hljs-string\">\"orange\"</span>, <span class=\"hljs-string\">\"pink\"</span>]\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">App</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n\n  state = {\n    <span class=\"hljs-attr\">type</span>: <span class=\"hljs-string\">\"Line\"</span>\n  }\n\n  handleChange = <span class=\"hljs-function\">(<span class=\"hljs-params\">e</span>) =&gt;</span> {\n    <span class=\"hljs-built_in\">this</span>.setState({<span class=\"hljs-attr\">type</span>: e.target.value})\n  }\n\n  fetchChart = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> {<span class=\"hljs-keyword\">type</span>} = <span class=\"hljs-built_in\">this</span>.state\n    <span class=\"hljs-keyword\">switch</span>(<span class=\"hljs-keyword\">type</span>){\n      <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">\"Line\"</span>: <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">MyLineChart</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{type}/</span>&gt;</span></span>\n      <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">\"Bar\"</span>: <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">MyBarChart</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{type}/</span>&gt;</span></span>\n      <span class=\"hljs-keyword\">case</span> <span class=\"hljs-string\">\"Stacked\"</span>: <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">MyBarChart</span> <span class=\"hljs-attr\">stacked</span> <span class=\"hljs-attr\">key</span>=<span class=\"hljs-string\">{type}/</span>&gt;</span></span>\n      <span class=\"hljs-keyword\">default</span>: <span class=\"hljs-keyword\">return</span> <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">MyLineChart</span> /&gt;</span></span>\n    }\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span>{\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">select</span> <span class=\"hljs-attr\">onChange</span>=<span class=\"hljs-string\">{this.handleChange}</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span>&gt;</span>Line<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span>&gt;</span>Bar<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">option</span>&gt;</span>Stacked<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">option</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">select</span>&gt;</span>\n      {this.fetchChart()}\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n    )\n  }\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyLineChart</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n\n  getLineChart = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> keysArr = <span class=\"hljs-built_in\">Object</span>.keys(data[<span class=\"hljs-number\">0</span>]).slice(<span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-keyword\">const</span> lineArr= [];\n    keysArr.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">item, index</span>)=&gt;</span> {\n      lineArr.push(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">{item}</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">{color[index]}</span> /&gt;</span></span>)\n    })\n    <span class=\"hljs-keyword\">return</span> lineArr;\n  }\n\n  modifyFormatter = <span class=\"hljs-function\">(<span class=\"hljs-params\">value, name, props</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> nameJSX = <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span>\n      <span class=\"hljs-attr\">display:</span> \"<span class=\"hljs-attr\">inline-block</span>\",\n      <span class=\"hljs-attr\">marginRight:</span> \"<span class=\"hljs-attr\">5px</span>\",\n      <span class=\"hljs-attr\">borderRadius:</span> \"<span class=\"hljs-attr\">10px</span>\",\n      <span class=\"hljs-attr\">width:</span> \"<span class=\"hljs-attr\">10px</span>\",\n      <span class=\"hljs-attr\">height:</span> \"<span class=\"hljs-attr\">10px</span>\",\n      <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-attr\">props.color</span>\n    }}&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>{name} : {value}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span></span>\n    <span class=\"hljs-keyword\">return</span> [nameJSX];\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"hljs-comment\">// &lt;ResponsiveContainer&gt;</span>\n        <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span>\n          <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{500}</span>\n          <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{300}</span>\n          <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n          <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span>\n            <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">5</span>, <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">30</span>, <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">20</span>, <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">5</span>,\n          }}</div>\n        &gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> <span class=\"hljs-attr\">horizontal</span>=<span class=\"hljs-string\">{false}</span> <span class=\"hljs-attr\">vertical</span>=<span class=\"hljs-string\">{false}/</span>&gt;</span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">{Object.keys(data[0])[0]}</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">formatter</span>=<span class=\"hljs-string\">{this.modifyFormatter}/</span>&gt;</div></span>\n         <div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Legend</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n        {this.getLineChart()}\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Brush</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">{Object.keys(data[0])[0]}</span>&gt;</span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span>&gt;</span>\n            {this.getLineChart()}\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span></div><span class=\"hljs-tag\"></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Brush</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span></span>\n      <span class=\"hljs-comment\">//  &lt;/ResponsiveContainer&gt;</span>\n    );\n  }\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">MyBarChart</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n\n  getBar = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> {stacked} = <span class=\"hljs-built_in\">this</span>.props;\n    <span class=\"hljs-keyword\">const</span> keysArr = <span class=\"hljs-built_in\">Object</span>.keys(data[<span class=\"hljs-number\">0</span>]).slice(<span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-keyword\">const</span> barArr= [];\n    keysArr.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">item, index</span>)=&gt;</span> {\n      barArr.push(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Bar</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">{item}</span> <span class=\"hljs-attr\">stackId</span>=<span class=\"hljs-string\">{stacked</span> ? \"<span class=\"hljs-attr\">a</span>\" <span class=\"hljs-attr\">:</span> <span class=\"hljs-attr\">null</span>} <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">{color[index]}</span> /&gt;</span></span>)\n    })\n    <span class=\"hljs-keyword\">return</span> barArr;\n  }\n\n  modifyFormatter = <span class=\"hljs-function\">(<span class=\"hljs-params\">value, name, props</span>) =&gt;</span> {\n    <span class=\"hljs-built_in\">console</span>.log(value, name , props, <span class=\"hljs-string\">\"props\"</span>);\n    <span class=\"hljs-keyword\">const</span> nameJSX = <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span>&gt;</span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span>\n      <span class=\"hljs-attr\">display:</span> \"<span class=\"hljs-attr\">inline-block</span>\",\n      <span class=\"hljs-attr\">marginRight:</span> \"<span class=\"hljs-attr\">5px</span>\",\n      <span class=\"hljs-attr\">borderRadius:</span> \"<span class=\"hljs-attr\">10px</span>\",\n      <span class=\"hljs-attr\">width:</span> \"<span class=\"hljs-attr\">10px</span>\",\n      <span class=\"hljs-attr\">height:</span> \"<span class=\"hljs-attr\">10px</span>\",\n      <span class=\"hljs-attr\">backgroundColor:</span> <span class=\"hljs-attr\">props.color</span>\n    }}&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>{name} : {value}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span></span>;\n    <span class=\"hljs-keyword\">let</span> result = [nameJSX].reverse();\n    <span class=\"hljs-comment\">// console.log(result, \"result\");</span>\n    <span class=\"hljs-keyword\">return</span> result;\n  }\n\n  handleSort = <span class=\"hljs-function\">(<span class=\"hljs-params\">item1, item2</span>) =&gt;</span> {\n    <span class=\"hljs-comment\">// console.log(item1, item2);</span>\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-number\">1</span>;\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">BarChart</span>\n        <span class=\"hljs-attr\"></span><span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Canvas_1\" class=\"highlights fea_Canvas\"><span class=\"hljs-attr\">w</span><span class=\"hljs-attr\">idth</span>=<span class=\"hljs-string\">{500}</span>\n        <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{300}</span><span class=\"hljs-string\"></span>\n        <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data</span><span class=\"hljs-string\"></span><span class=\"hljs-string\">}</span>\n        <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span>\n          <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">20</span>, <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">30</span>, <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">20</span>, <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">5</span>,\n        }}</div>\n      &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> <span class=\"hljs-attr\">horizontal</span>=<span class=\"hljs-string\">{false}</span> <span class=\"hljs-attr\">vertical</span>=<span class=\"hljs-string\">{false}/</span>&gt;</span>\n        <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_1\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">{Object.keys(data[0])[0]}</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n       <div style=\"display: inline;\" id=\"Tooltip_1\" class=\"highlights fea_Tooltip\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">formatter</span>=<span class=\"hljs-string\">{this.modifyFormatter}</span> <span class=\"hljs-attr\">itemSorter</span>=<span class=\"hljs-string\">{this.handleSort}/</span>&gt;</span></div><span class=\"hljs-tag\"></span>\n        <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Legend_1\" class=\"highlights fea_Legend\">&lt;<span class=\"hljs-name\">Legend</span> /&gt;</div></span>\n        <div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">{this.getBar()}</div>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Brush</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">{Object.keys(data[0])[0]}</span>&gt;</span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Canvas_2\" class=\"highlights fea_Canvas\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">BarChart</span>&gt;</span>\n            {this.getBar()}\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">BarChart</span>&gt;</span></div><span class=\"hljs-tag\"></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Brush</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">BarChart</span>&gt;</span></span>\n    );\n  }\n}\n\n\n<span class=\"hljs-keyword\">const</span> rootElement = <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"root\"</span>);\nReactDOM.render(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">App</span> /&gt;</span></span>, rootElement);\n</code></pre></div>",
    "thr_8.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_8\"><pre id=\"thr_8_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React, { Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n<span class=\"hljs-keyword\">import</span> moment <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"moment\"</span>;\n<span class=\"hljs-keyword\">import</span> {\n  AreaChart,\n  XAxis,\n  YAxis,\n  Area,\n  Tooltip,\n  CartesianGrid,\n  Legend\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"recharts\"</span>;\n<span class=\"hljs-keyword\">import</span> { simpleData } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"../util\"</span>;\n<span class=\"hljs-keyword\">import</span> styles <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"./styles\"</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">RechartsAreaChart</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-title\">constructor</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-built_in\">super</span>();\n    <span class=\"hljs-built_in\">this</span>.state = {\n      <span class=\"hljs-attr\">data</span>: simpleData().map(<span class=\"hljs-function\">(<span class=\"hljs-params\">{ x, y }</span>) =&gt;</span> ({ x, y, <span class=\"hljs-attr\">y1</span>: y }))\n    };\n  }\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">const</span> { data } = <span class=\"hljs-built_in\">this</span>.state;\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{styles.container}</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{styles.title}</span>&gt;</span>Recharts Stacked Area Chart<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">AreaChart</span>\n          <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{styles.width}</span>\n          <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{styles.height}</span>\n          <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n          <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">32</span>, <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">32</span>, <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">-16</span>, <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">20</span> }}</div>\n        &gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\">&lt;<span class=\"hljs-name\">Legend</span> <span class=\"hljs-attr\">wrapperStyle</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">margin:</span> <span class=\"hljs-attr\">4</span>, <span class=\"hljs-attr\">fontSize:</span> <span class=\"hljs-attr\">12</span> }} /&gt;</div></span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span>\n            <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"x\"</span>\n            <span class=\"hljs-attr\">tickFormatter</span>=<span class=\"hljs-string\">{tick</span> =&gt;</span> {\n              const label = moment(tick).format(\"hh:mm:ss\");\n              return label;\n            }}\n            style={{ fontSize: 10 }}\n          /&gt;\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span>\n            <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"y\"</span>\n            <span class=\"hljs-attr\">domain</span>=<span class=\"hljs-string\">{[0,</span> <span class=\"hljs-attr\">2</span> * <span class=\"hljs-attr\">Math.max</span>(<span class=\"hljs-attr\">...data.map</span>(<span class=\"hljs-attr\">d</span> =&gt;</span> d.y))]}\n            style={{ fontSize: 10 }}\n          /&gt;</div>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">wrapperStyle</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">fontSize:</span> <span class=\"hljs-attr\">8</span> }} /&gt;</div></span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Area</span>\n            <span class=\"hljs-attr\">stackId</span>=<span class=\"hljs-string\">\"1\"</span>\n            <span class=\"hljs-attr\">isAnimationActive</span>=<span class=\"hljs-string\">{false}</span>\n            <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span>\n            <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"y1\"</span>\n            <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"rgb(77, 175, 10)\"</span>\n            <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"rgb(77, 175, 10)\"</span>\n          /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Area</span>\n            <span class=\"hljs-attr\">stackId</span>=<span class=\"hljs-string\">\"1\"</span>\n            <span class=\"hljs-attr\">isAnimationActive</span>=<span class=\"hljs-string\">{false}</span>\n            <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span>\n            <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"y\"</span>\n            <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"rgb(110, 161, 207)\"</span>\n            <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"rgb(110, 161, 207)\"</span>\n          /&gt;</span></div><span class=\"hljs-tag\"></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">AreaChart</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n    );\n  }\n}\n</code></pre></div>",
    "thr_13.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_13\"><pre id=\"thr_13_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> FileSaver <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"file-saver\"</span>;\n<span class=\"hljs-keyword\">import</span> React, { useCallback, useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n<span class=\"hljs-keyword\">import</span> {\n  Area,\n  AreaChart,\n  Bar,\n  Brush,\n  CartesianGrid,\n  ComposedChart,\n  Legend,\n  Line,\n  Pie,\n  PieChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"recharts\"</span>;\n<span class=\"hljs-keyword\">import</span> { useCurrentPng } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"recharts-to-png\"</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"./App.css\"</span>;\n<span class=\"hljs-keyword\">import</span> { getLgData, getLgPieData, getSmPieData } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"./data\"</span>;\n\n<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">App</span>(<span class=\"hljs-params\"></span>): <span class=\"hljs-title\">JSX</span>.<span class=\"hljs-title\">Element</span> </span>{\n  <span class=\"hljs-comment\">// Area chart setup</span>\n  <span class=\"hljs-keyword\">const</span> [areaData] = useState(getLgData(<span class=\"hljs-number\">100</span>));\n  <span class=\"hljs-keyword\">const</span> [getAreaPng, { <span class=\"hljs-attr\">ref</span>: areaRef }] = useCurrentPng();\n  <span class=\"hljs-keyword\">const</span> handleAreaDownload = useCallback(<span class=\"hljs-keyword\">async</span> () =&gt; {\n    <span class=\"hljs-keyword\">const</span> png = <span class=\"hljs-keyword\">await</span> getAreaPng();\n    <span class=\"hljs-keyword\">if</span> (png) {\n      FileSaver.saveAs(png, <span class=\"hljs-string\">\"area-chart.png\"</span>);\n    }\n  }, [getAreaPng]);\n\n  <span class=\"hljs-comment\">// Pie chart setup</span>\n  <span class=\"hljs-keyword\">const</span> [data01] = useState(getSmPieData());\n  <span class=\"hljs-keyword\">const</span> [data02] = useState(getLgPieData());\n  <span class=\"hljs-keyword\">const</span> [getPiePng, { <span class=\"hljs-attr\">ref</span>: pieRef }] = useCurrentPng();\n  <span class=\"hljs-keyword\">const</span> handlePieDownload = useCallback(<span class=\"hljs-keyword\">async</span> () =&gt; {\n    <span class=\"hljs-keyword\">const</span> png = <span class=\"hljs-keyword\">await</span> getPiePng();\n    <span class=\"hljs-keyword\">if</span> (png) {\n      FileSaver.saveAs(png, <span class=\"hljs-string\">\"pie-chart.png\"</span>);\n    }\n  }, [getPiePng]);\n\n  <span class=\"hljs-comment\">// Composed chart setup</span>\n  <span class=\"hljs-keyword\">const</span> [composedData] = useState(getLgData(<span class=\"hljs-number\">500</span>));\n  <span class=\"hljs-keyword\">const</span> [getComposedPng, { <span class=\"hljs-attr\">ref</span>: composedRef, isLoading }] = useCurrentPng();\n  <span class=\"hljs-keyword\">const</span> handleComposedDownload = useCallback(<span class=\"hljs-keyword\">async</span> () =&gt; {\n    <span class=\"hljs-keyword\">const</span> png = <span class=\"hljs-keyword\">await</span> getComposedPng();\n    <span class=\"hljs-keyword\">if</span> (png) {\n      FileSaver.saveAs(png, <span class=\"hljs-string\">\"composed-chart.png\"</span>);\n    }\n  }, [getComposedPng]);\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"grid-container\"</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"area-chart\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h4</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">code</span>&gt;</span>Example: useCurrentPng for Responsive Area Chart<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">code</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h4</span>&gt;</span>\n        <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ResponsiveContainer</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">\"100%\"</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{300}</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">AreaChart</span>\n            <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{areaData}</span>\n            <span class=\"hljs-attr\"></span><span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">10</span>, <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">30</span>, <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">0</span>, <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">0</span> }}\n            <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">{areaRef}</span>\n          &gt;</span></div><span class=\"hljs-tag\"></span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">defs</span>&gt;</span>\n              <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">linearGradient</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"colorUv\"</span> <span class=\"hljs-attr\">x1</span>=<span class=\"hljs-string\">\"0\"</span> <span class=\"hljs-attr\">y1</span>=<span class=\"hljs-string\">\"0\"</span> <span class=\"hljs-attr\">x2</span>=<span class=\"hljs-string\">\"0\"</span> <span class=\"hljs-attr\">y2</span>=<span class=\"hljs-string\">\"1\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">stop</span> <span class=\"hljs-attr\">offset</span>=<span class=\"hljs-string\">\"5%\"</span> <span class=\"hljs-attr\">stopColor</span>=<span class=\"hljs-string\">\"#8884d8\"</span> <span class=\"hljs-attr\">stopOpacity</span>=<span class=\"hljs-string\">{0.8}</span> /&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">stop</span> <span class=\"hljs-attr\">offset</span>=<span class=\"hljs-string\">\"95%\"</span> <span class=\"hljs-attr\">stopColor</span>=<span class=\"hljs-string\">\"#8884d8\"</span> <span class=\"hljs-attr\">stopOpacity</span>=<span class=\"hljs-string\">{0}</span> /&gt;</span>\n              <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">linearGradient</span>&gt;</span>\n              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">linearGradient</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">\"colorPv\"</span> <span class=\"hljs-attr\">x1</span>=<span class=\"hljs-string\">\"0\"</span> <span class=\"hljs-attr\">y1</span>=<span class=\"hljs-string\">\"0\"</span> <span class=\"hljs-attr\">x2</span>=<span class=\"hljs-string\">\"0\"</span> <span class=\"hljs-attr\">y2</span>=<span class=\"hljs-string\">\"1\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">stop</span> <span class=\"hljs-attr\">offset</span>=<span class=\"hljs-string\">\"5%\"</span> <span class=\"hljs-attr\">stopColor</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> <span class=\"hljs-attr\">stopOpacity</span>=<span class=\"hljs-string\">{0.8}</span> /&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">stop</span> <span class=\"hljs-attr\">offset</span>=<span class=\"hljs-string\">\"95%\"</span> <span class=\"hljs-attr\">stopColor</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> <span class=\"hljs-attr\">stopOpacity</span>=<span class=\"hljs-string\">{0}</span> /&gt;</span>\n              <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">linearGradient</span>&gt;</span></div><span class=\"hljs-tag\"></span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">defs</span>&gt;</span>\n            <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n            <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\">&lt;<span class=\"hljs-name\">Tooltip</span> /&gt;</div></span>\n            <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Area</span>\n              <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span>\n              <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"uv\"</span>\n              <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span>\n              <span class=\"hljs-attr\">fillOpacity</span>=<span class=\"hljs-string\">{1}</span>\n              <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"url(#colorUv)\"</span>\n            /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Area</span>\n              <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span>\n              <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"pv\"</span>\n              <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#82ca9d\"</span>\n              <span class=\"hljs-attr\">fillOpacity</span>=<span class=\"hljs-string\">{1}</span>\n              <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"url(#colorPv)\"</span>\n            /&gt;</span></div><span class=\"hljs-tag\"></span>\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">AreaChart</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ResponsiveContainer</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{handleAreaDownload}</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">code</span>&gt;</span>Download Area Chart<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">code</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"pie-chart\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h4</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">code</span>&gt;</span>Example: useCurrentPng for Responsive Pie Chart<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">code</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h4</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ResponsiveContainer</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">\"100%\"</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{300}</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PieChart</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">{pieRef}</span>&gt;</span>\n            <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Shapes_2\" class=\"highlights fea_Shapes\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Pie</span>\n              <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data01}</span>\n              <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"value\"</span>\n              <span class=\"hljs-attr\">nameKey</span>=<span class=\"hljs-string\">\"name\"</span>\n              <span class=\"hljs-attr\">cx</span>=<span class=\"hljs-string\">\"50%\"</span>\n              <span class=\"hljs-attr\">cy</span>=<span class=\"hljs-string\">\"50%\"</span>\n              <span class=\"hljs-attr\">outerRadius</span>=<span class=\"hljs-string\">{50}</span>\n              <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#8884d8\"</span>\n            /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Pie</span>\n              <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data02}</span>\n              <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"value\"</span>\n              <span class=\"hljs-attr\">nameKey</span>=<span class=\"hljs-string\">\"name\"</span>\n              <span class=\"hljs-attr\">cx</span>=<span class=\"hljs-string\">\"50%\"</span>\n              <span class=\"hljs-attr\">cy</span>=<span class=\"hljs-string\">\"50%\"</span>\n              <span class=\"hljs-attr\">innerRadius</span>=<span class=\"hljs-string\">{60}</span>\n              <span class=\"hljs-attr\">outerRadius</span>=<span class=\"hljs-string\">{80}</span>\n              <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#82ca9d\"</span>\n              <span class=\"hljs-attr\">label</span>\n            /&gt;</span></div><span class=\"hljs-tag\"></span>\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">PieChart</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ResponsiveContainer</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{handlePieDownload}</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">code</span>&gt;</span>Download Pie Chart<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">code</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"composed-chart\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h4</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">code</span>&gt;</span>\n            Example: useCurrentPng for Responsive Composed Chart, with isLoading\n            for button state change\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">code</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h4</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ResponsiveContainer</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">\"100%\"</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{300}</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ComposedChart</span> <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{composedData}</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">{composedRef}</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> /&gt;</span>\n            <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\">&lt;<span class=\"hljs-name\">Legend</span> /&gt;</div></span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#f5f5f5\"</span> /&gt;</span>\n            <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Shapes_3\" class=\"highlights fea_Shapes\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Area</span>\n              <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span>\n              <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"amt\"</span>\n              <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#8884d8\"</span>\n              <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span>\n            /&gt;</span>\n            <span class=\"hljs-tag\"></span><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Bar</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"pv\"</span> <span class=\"hljs-attr\">barSize</span>=<span class=\"hljs-string\">{20}</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#413ea0\"</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"uv\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#ff7300\"</span></span><span class=\"hljs-tag\"><span class=\"hljs-string\"></span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Brush</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{30}</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ComposedChart</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ResponsiveContainer</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">br</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">disabled</span>=<span class=\"hljs-string\">{isLoading}</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{handleComposedDownload}</span>&gt;</span>\n          {isLoading ? (\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"download-button-content\"</span>&gt;</span>\n              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"gg-spinner\"</span> /&gt;</span>\n              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"download-button-text\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">code</span>&gt;</span>Downloading...<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">code</span>&gt;</span>\n              <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n          ) : (\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"download-button-content\"</span>&gt;</span>\n              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">i</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"gg-software-download\"</span> /&gt;</span>\n              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">span</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"download-button-text\"</span>&gt;</span>\n                <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">code</span>&gt;</span>Download Composed Chart<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">code</span>&gt;</span>\n              <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">span</span>&gt;</span>\n          )}\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  );\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> App;\n</code></pre></div>",
    "thr_16.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_16\"><pre id=\"thr_16_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React, { PureComponent } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'recharts'</span>;\n\n<span class=\"hljs-keyword\">const</span> data = [\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page A'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">4000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">2400</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2400</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page B'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">1398</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2210</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page C'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">9800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2290</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page D'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2780</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3908</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2000</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page E'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">1890</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2181</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page F'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2390</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2500</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page G'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3490</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4300</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2100</span>,\n  },\n];\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Example</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">PureComponent</span> </span>{\n  <span class=\"hljs-keyword\">static</span> demoUrl = <span class=\"hljs-string\">'https://codesandbox.io/s/customized-legend-event-l19fo'</span>;\n\n  state = {\n    <span class=\"hljs-attr\">opacity</span>: {\n      <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">1</span>,\n      <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">1</span>,\n    },\n  };\n\n  handleMouseEnter = <span class=\"hljs-function\">(<span class=\"hljs-params\">o</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> { dataKey } = o;\n    <span class=\"hljs-keyword\">const</span> { opacity } = <span class=\"hljs-built_in\">this</span>.state;\n\n    <span class=\"hljs-built_in\">this</span>.setState({\n      <span class=\"hljs-attr\">opacity</span>: { ...opacity, [dataKey]: <span class=\"hljs-number\">0.5</span> },\n    });\n  };\n\n  handleMouseLeave = <span class=\"hljs-function\">(<span class=\"hljs-params\">o</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">const</span> { dataKey } = o;\n    <span class=\"hljs-keyword\">const</span> { opacity } = <span class=\"hljs-built_in\">this</span>.state;\n\n    <span class=\"hljs-built_in\">this</span>.setState({\n      <span class=\"hljs-attr\">opacity</span>: { ...opacity, [dataKey]: <span class=\"hljs-number\">1</span> },\n    });\n  };\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">const</span> { opacity } = <span class=\"hljs-built_in\">this</span>.state;\n\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">width:</span> '<span class=\"hljs-attr\">100</span>%' }}&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ResponsiveContainer</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">\"100%\"</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{300}</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span>\n            <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{500}</span>\n            <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{300}</span></div><span class=\"hljs-string\"></span>\n            <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n            <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span>\n              <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">5</span>,\n              <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">30</span>,\n              <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">20</span>,\n              <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">5</span>,\n            }}\n          &gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n            <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n            <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\">&lt;<span class=\"hljs-name\">Tooltip</span> /&gt;</div></span>\n            <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\">&lt;<span class=\"hljs-name\">Legend</span> <span class=\"hljs-attr\">onMouseEnter</span>=<span class=\"hljs-string\">{this.handleMouseEnter}</span> <span class=\"hljs-attr\">onMouseLeave</span>=<span class=\"hljs-string\">{this.handleMouseLeave}</span> /&gt;</div></span>\n            <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"pv\"</span> <span class=\"hljs-attr\">strokeOpacity</span>=<span class=\"hljs-string\">{opacity.pv}</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span> <span class=\"hljs-attr\">activeDot</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">r:</span> <span class=\"hljs-attr\">8</span> }} /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"uv\"</span> <span class=\"hljs-attr\">strokeOpacity</span>=<span class=\"hljs-string\">{opacity.uv}</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ResponsiveContainer</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"notes\"</span>&gt;</span>Tips: Hover the legend !<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n    );\n  }\n}\n<span class=\"hljs-comment\">//https://recharts.org/en-US/examples/LegendEffectOpacity</span></code></pre></div>",
    "thr_17.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_17\"><pre id=\"thr_17_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React, { PureComponent } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> { RadialBarChart, RadialBar, Legend, ResponsiveContainer } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'recharts'</span>;\n\n<span class=\"hljs-keyword\">const</span> data = [\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'18-24'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">31.47</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">2400</span>,\n    <span class=\"hljs-attr\">fill</span>: <span class=\"hljs-string\">'#8884d8'</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'25-29'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">26.69</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4567</span>,\n    <span class=\"hljs-attr\">fill</span>: <span class=\"hljs-string\">'#83a6ed'</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'30-34'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">15.69</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">1398</span>,\n    <span class=\"hljs-attr\">fill</span>: <span class=\"hljs-string\">'#8dd1e1'</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'35-39'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">8.22</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">9800</span>,\n    <span class=\"hljs-attr\">fill</span>: <span class=\"hljs-string\">'#82ca9d'</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'40-49'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">8.63</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3908</span>,\n    <span class=\"hljs-attr\">fill</span>: <span class=\"hljs-string\">'#a4de6c'</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'50+'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2.63</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4800</span>,\n    <span class=\"hljs-attr\">fill</span>: <span class=\"hljs-string\">'#d0ed57'</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'unknow'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">6.67</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4800</span>,\n    <span class=\"hljs-attr\">fill</span>: <span class=\"hljs-string\">'#ffc658'</span>,\n  },\n];\n\n<span class=\"hljs-keyword\">const</span> style = {\n  <span class=\"hljs-attr\">top</span>: <span class=\"hljs-string\">'50%'</span>,\n  <span class=\"hljs-attr\">right</span>: <span class=\"hljs-number\">0</span>,\n  <span class=\"hljs-attr\">transform</span>: <span class=\"hljs-string\">'translate(0, -50%)'</span>,\n  <span class=\"hljs-attr\">lineHeight</span>: <span class=\"hljs-string\">'24px'</span>,\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Example</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">PureComponent</span> </span>{\n  <span class=\"hljs-keyword\">static</span> demoUrl = <span class=\"hljs-string\">'https://codesandbox.io/s/simple-radial-bar-chart-qf8fz'</span>;\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ResponsiveContainer</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">\"100%\"</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">\"100%\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">RadialBarChart</span> <span class=\"hljs-attr\">cx</span>=<span class=\"hljs-string\">\"50%\"</span> <span class=\"hljs-attr\">cy</span>=<span class=\"hljs-string\">\"50%\"</span> <span class=\"hljs-attr\">innerRadius</span>=<span class=\"hljs-string\">\"10%\"</span> <span class=\"hljs-attr\">outerRadius</span>=<span class=\"hljs-string\">\"80%\"</span> <span class=\"hljs-attr\">barSize</span>=<span class=\"hljs-string\">{10}</span> <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>&gt;</span>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">&lt;<span class=\"hljs-name\">RadialBar</span>\n            <span class=\"hljs-attr\">minAngle</span>=<span class=\"hljs-string\">{15}</span>\n            <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">position:</span> '<span class=\"hljs-attr\">insideStart</span>', <span class=\"hljs-attr\">fill:</span> '#<span class=\"hljs-attr\">fff</span>' }}\n            <span class=\"hljs-attr\">background</span>\n            <span class=\"hljs-attr\">clockWise</span>\n            <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"uv\"</span>\n          /&gt;</div></span>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\">&lt;<span class=\"hljs-name\">Legend</span> <span class=\"hljs-attr\">iconSize</span>=<span class=\"hljs-string\">{10}</span> <span class=\"hljs-attr\">layout</span>=<span class=\"hljs-string\">\"vertical\"</span> <span class=\"hljs-attr\">verticalAlign</span>=<span class=\"hljs-string\">\"middle\"</span> <span class=\"hljs-attr\">wrapperStyle</span>=<span class=\"hljs-string\">{style}</span> /&gt;</div></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">RadialBarChart</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ResponsiveContainer</span>&gt;</span></span>\n    );\n  }\n}\n<span class=\"hljs-comment\">//https://recharts.org/en-US/examples/SimpleRadialBarChart</span></code></pre></div>",
    "thr_18.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_18\"><pre id=\"thr_18_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React, { PureComponent } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> { Radar, RadarChart, PolarGrid, Legend, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'recharts'</span>;\n\n<span class=\"hljs-keyword\">const</span> data = [\n  {\n    <span class=\"hljs-attr\">subject</span>: <span class=\"hljs-string\">'Math'</span>,\n    <span class=\"hljs-attr\">A</span>: <span class=\"hljs-number\">120</span>,\n    <span class=\"hljs-attr\">B</span>: <span class=\"hljs-number\">110</span>,\n    <span class=\"hljs-attr\">fullMark</span>: <span class=\"hljs-number\">150</span>,\n  },\n  {\n    <span class=\"hljs-attr\">subject</span>: <span class=\"hljs-string\">'Chinese'</span>,\n    <span class=\"hljs-attr\">A</span>: <span class=\"hljs-number\">98</span>,\n    <span class=\"hljs-attr\">B</span>: <span class=\"hljs-number\">130</span>,\n    <span class=\"hljs-attr\">fullMark</span>: <span class=\"hljs-number\">150</span>,\n  },\n  {\n    <span class=\"hljs-attr\">subject</span>: <span class=\"hljs-string\">'English'</span>,\n    <span class=\"hljs-attr\">A</span>: <span class=\"hljs-number\">86</span>,\n    <span class=\"hljs-attr\">B</span>: <span class=\"hljs-number\">130</span>,\n    <span class=\"hljs-attr\">fullMark</span>: <span class=\"hljs-number\">150</span>,\n  },\n  {\n    <span class=\"hljs-attr\">subject</span>: <span class=\"hljs-string\">'Geography'</span>,\n    <span class=\"hljs-attr\">A</span>: <span class=\"hljs-number\">99</span>,\n    <span class=\"hljs-attr\">B</span>: <span class=\"hljs-number\">100</span>,\n    <span class=\"hljs-attr\">fullMark</span>: <span class=\"hljs-number\">150</span>,\n  },\n  {\n    <span class=\"hljs-attr\">subject</span>: <span class=\"hljs-string\">'Physics'</span>,\n    <span class=\"hljs-attr\">A</span>: <span class=\"hljs-number\">85</span>,\n    <span class=\"hljs-attr\">B</span>: <span class=\"hljs-number\">90</span>,\n    <span class=\"hljs-attr\">fullMark</span>: <span class=\"hljs-number\">150</span>,\n  },\n  {\n    <span class=\"hljs-attr\">subject</span>: <span class=\"hljs-string\">'History'</span>,\n    <span class=\"hljs-attr\">A</span>: <span class=\"hljs-number\">65</span>,\n    <span class=\"hljs-attr\">B</span>: <span class=\"hljs-number\">85</span>,\n    <span class=\"hljs-attr\">fullMark</span>: <span class=\"hljs-number\">150</span>,\n  },\n];\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Example</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">PureComponent</span> </span>{\n  <span class=\"hljs-keyword\">static</span> demoUrl = <span class=\"hljs-string\">'https://codesandbox.io/s/radar-chart-specified-domain-mfl04'</span>;\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ResponsiveContainer</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">\"100%\"</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">\"100%\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">RadarChart</span> <span class=\"hljs-attr\">cx</span>=<span class=\"hljs-string\">\"50%\"</span> <span class=\"hljs-attr\">cy</span>=<span class=\"hljs-string\">\"50%\"</span> <span class=\"hljs-attr\">outerRadius</span>=<span class=\"hljs-string\">\"80%\"</span> <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PolarGrid</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PolarAngleAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"subject\"</span> /&gt;</span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PolarRadiusAxis</span> <span class=\"hljs-attr\">angle</span>=<span class=\"hljs-string\">{30}</span> <span class=\"hljs-attr\">domain</span>=<span class=\"hljs-string\">{[0,</span> <span class=\"hljs-attr\">150</span>]} /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Radar</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"Mike\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"A\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#8884d8\"</span> <span class=\"hljs-attr\">fillOpacity</span>=<span class=\"hljs-string\">{0.6}</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Radar</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"Lily\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"B\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> <span class=\"hljs-attr\">fillOpacity</span>=<span class=\"hljs-string\">{0.6}</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n         <div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Legend</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">RadarChart</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ResponsiveContainer</span>&gt;</span></span>\n    );\n  }\n}\n<span class=\"hljs-comment\">//https://recharts.org/en-US/examples/SpecifiedDomainRadarChart</span></code></pre></div>",
    "thr_20.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_20\"><pre id=\"thr_20_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React, { PureComponent } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'recharts'</span>;\n\n<span class=\"hljs-keyword\">const</span> data = [\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page A'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">4000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">2400</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2400</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page B'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">1398</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2210</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page C'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">9800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2290</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page D'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2780</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3908</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2000</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page E'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">1890</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2181</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page F'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2390</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2500</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page G'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3490</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4300</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2100</span>,\n  },\n];\n\n<span class=\"hljs-keyword\">const</span> getIntroOfPage = <span class=\"hljs-function\">(<span class=\"hljs-params\">label</span>) =&gt;</span> {\n  <span class=\"hljs-keyword\">if</span> (label === <span class=\"hljs-string\">'Page A'</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"Page A is about men's clothing\"</span>;\n  }\n  <span class=\"hljs-keyword\">if</span> (label === <span class=\"hljs-string\">'Page B'</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"Page B is about women's dress\"</span>;\n  }\n  <span class=\"hljs-keyword\">if</span> (label === <span class=\"hljs-string\">'Page C'</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">\"Page C is about women's bag\"</span>;\n  }\n  <span class=\"hljs-keyword\">if</span> (label === <span class=\"hljs-string\">'Page D'</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'Page D is about household goods'</span>;\n  }\n  <span class=\"hljs-keyword\">if</span> (label === <span class=\"hljs-string\">'Page E'</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'Page E is about food'</span>;\n  }\n  <span class=\"hljs-keyword\">if</span> (label === <span class=\"hljs-string\">'Page F'</span>) {\n    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">'Page F is about baby food'</span>;\n  }\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-string\">''</span>;\n};\n\n<span class=\"hljs-keyword\">const</span> CustomTooltip = <span class=\"hljs-function\">(<span class=\"hljs-params\">{ active, payload, label }</span>) =&gt;</span> {\n  <span class=\"hljs-keyword\">if</span> (active &amp;&amp; payload &amp;&amp; payload.length) {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"custom-tooltip\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"label\"</span>&gt;</span>{`${label} : ${payload[0].value}`}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"intro\"</span>&gt;</span>{getIntroOfPage(label)}<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"desc\"</span>&gt;</span>Anything you want can be displayed here.<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n    );\n  }\n\n  <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">null</span>;\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Example</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">PureComponent</span> </span>{\n  <span class=\"hljs-keyword\">static</span> demoUrl = <span class=\"hljs-string\">'https://codesandbox.io/s/tooltip-with-customized-content-lyxvs'</span>;\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ResponsiveContainer</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">\"100%\"</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">\"100%\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">BarChart</span>\n          <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{500}</span>\n          <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{300}</span>\n          <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n          <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span>\n            <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">5</span>,\n            <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">30</span>,\n            <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">20</span>,\n            <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">5</span>,\n          }}</div>\n        &gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">{</span>&lt;<span class=\"hljs-attr\">CustomTooltip</span> /&gt;</span>} /&gt;</div>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\">&lt;<span class=\"hljs-name\">Legend</span> /&gt;</div></span>\n         <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Bar</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"pv\"</span> <span class=\"hljs-attr\">barSize</span>=<span class=\"hljs-string\">{20}</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#8884d8\"</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">BarChart</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ResponsiveContainer</span>&gt;</span></span>\n    );\n  }\n}\n<span class=\"hljs-comment\">//https://recharts.org/en-US/examples/CustomContentOfTooltip</span></code></pre></div>",
    "thr_21.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_21\"><pre id=\"thr_21_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React, { PureComponent } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> {\n  ResponsiveContainer,\n  ComposedChart,\n  Line,\n  Area,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'recharts'</span>;\n\n<span class=\"hljs-keyword\">const</span> data = [\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page A'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">590</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">1400</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page B'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">868</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">967</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">1506</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page C'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">1397</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">1098</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">989</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page D'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">1480</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">1200</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">1228</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page E'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">1520</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">1108</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">1100</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page F'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">1400</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">680</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">1700</span>,\n  },\n];\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Example</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">PureComponent</span> </span>{\n  <span class=\"hljs-keyword\">static</span> demoUrl = <span class=\"hljs-string\">'https://codesandbox.io/s/composed-chart-in-responsive-container-pkqmy'</span>;\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">width:</span> '<span class=\"hljs-attr\">100</span>%', <span class=\"hljs-attr\">height:</span> <span class=\"hljs-attr\">300</span> }}&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ResponsiveContainer</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ComposedChart</span>\n            <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{500}</span>\n            <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{400}</span>\n            <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n            <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span>\n              <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">20</span>,\n              <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">20</span>,\n              <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">20</span>,\n              <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">20</span>,\n            }}</div>\n          &gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#f5f5f5\"</span> /&gt;</span>\n            <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> <span class=\"hljs-attr\">scale</span>=<span class=\"hljs-string\">\"band\"</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n            <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\">&lt;<span class=\"hljs-name\">Tooltip</span> /&gt;</div></span>\n            <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\">&lt;<span class=\"hljs-name\">Legend</span> /&gt;</div></span>\n            <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Area</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"amt\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#8884d8\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Bar</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"pv\"</span> <span class=\"hljs-attr\">barSize</span>=<span class=\"hljs-string\">{20}</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#413ea0\"</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"uv\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#ff7300\"</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ComposedChart</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ResponsiveContainer</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n    );\n  }\n}\n<span class=\"hljs-comment\">//https://recharts.org/en-US/examples/ComposedResponsiveContainer</span></code></pre></div>",
    "thr_24.js": "<div class=\"codeBlock hljs yaml\" id=\"thr_24\"><pre id=\"thr_24_code\" ><code class=\"python\"><span class=\"hljs-string\">import</span> <span class=\"hljs-string\">React,</span> { <span class=\"hljs-string\">PureComponent</span> } <span class=\"hljs-string\">from</span> <span class=\"hljs-string\">'react'</span><span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">import</span> {\n  <span class=\"hljs-string\">BarChart</span>,\n  <span class=\"hljs-string\">Bar</span>,\n  <span class=\"hljs-string\">Brush</span>,\n  <span class=\"hljs-string\">ReferenceLine</span>,\n  <span class=\"hljs-string\">XAxis</span>,\n  <span class=\"hljs-string\">YAxis</span>,\n  <span class=\"hljs-string\">CartesianGrid</span>,\n  <span class=\"hljs-string\">Tooltip</span>,\n  <span class=\"hljs-string\">Legend</span>,\n  <span class=\"hljs-string\">ResponsiveContainer</span>,\n} <span class=\"hljs-string\">from</span> <span class=\"hljs-string\">'recharts'</span><span class=\"hljs-string\">;</span>\n\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">data</span> <span class=\"hljs-string\">=</span> [\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'1'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">300</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">456</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'2'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-145</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">230</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'3'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-100</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">345</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'4'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-8</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">450</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'5'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">100</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">321</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'6'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">9</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">235</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'7'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">53</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">267</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'8'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">252</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">-378</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'9'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">79</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">-210</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'10'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">294</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">-23</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'12'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">43</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">45</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'13'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-74</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">90</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'14'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-71</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">130</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'15'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-117</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">11</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'16'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-186</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">107</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'17'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-16</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">926</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'18'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-125</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">653</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'19'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">222</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">366</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'20'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">372</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">486</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'21'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">182</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">512</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'22'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">164</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">302</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'23'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">316</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">425</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'24'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">131</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">467</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'25'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">291</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">-190</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'26'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-47</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">194</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'27'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-415</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">371</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'28'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-182</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">376</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'29'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-93</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">295</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'30'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-99</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">322</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'31'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-52</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">246</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'32'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">154</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">33</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'33'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">205</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">354</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'34'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">70</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">258</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'35'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-25</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">359</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'36'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-59</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">192</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'37'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-63</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">464</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'38'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-91</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">-2</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'39'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-66</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">154</span> },\n  { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'40'</span>, <span class=\"hljs-attr\">uv:</span> <span class=\"hljs-number\">-50</span>, <span class=\"hljs-attr\">pv:</span> <span class=\"hljs-number\">186</span> },\n]<span class=\"hljs-string\">;</span>\n\n<span class=\"hljs-string\">export</span> <span class=\"hljs-string\">default</span> <span class=\"hljs-string\">class</span> <span class=\"hljs-string\">Example</span> <span class=\"hljs-string\">extends</span> <span class=\"hljs-string\">PureComponent</span> {\n  <span class=\"hljs-string\">static</span> <span class=\"hljs-string\">demoUrl</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">'https://codesandbox.io/s/bar-chart-with-brush-ghsz3'</span><span class=\"hljs-string\">;</span>\n\n  <span class=\"hljs-string\">render()</span> {\n    <span class=\"hljs-string\">return</span> <span class=\"hljs-string\">(</span>\n      <span class=\"hljs-string\">&lt;ResponsiveContainer</span> <span class=\"hljs-string\">width=\"100%\"</span> <span class=\"hljs-string\">height=\"100%\"&gt;</span>\n        <span class=\"hljs-string\">&lt;BarChart</span>\n          <span class=\"hljs-string\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-string\">width=</span>{<span class=\"hljs-number\">500</span>}\n          <span class=\"hljs-string\">height=</span>{<span class=\"hljs-number\">300</span>}\n          <span class=\"hljs-string\">data=</span>{<span class=\"hljs-string\">data</span>}\n          <span class=\"hljs-string\">margin=<span class=\"hljs-template-variable\">{{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}</span></span></div><span class=\"hljs-string\"><span class=\"hljs-template-variable\"></span></span>\n        <span class=\"hljs-string\">&gt;\n          &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n          <div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\">&lt;XAxis dataKey=\"name\" /&gt;\n          &lt;YAxis /&gt;</div>\n          <div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\">&lt;Tooltip /&gt;</div>\n          <div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\">&lt;Legend verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} /&gt;</div>\n          &lt;ReferenceLine y={0} stroke=\"#000\" /&gt;\n          &lt;Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" /&gt;\n          <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">&lt;Bar dataKey=\"pv\" fill=\"#8884d8\" /&gt;\n          &lt;Bar dataKey=\"uv\" fill=\"#82ca9d\" /&gt;</div>\n</span>        <span class=\"hljs-string\">&lt;/BarChart&gt;</span>\n      <span class=\"hljs-string\">&lt;/ResponsiveContainer&gt;</span>\n    <span class=\"hljs-string\">);</span>\n  }\n}\n<span class=\"hljs-string\">//https://recharts.org/en-US/examples/BrushBarChart</span></code></pre></div>",
    "thr_25.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_25\"><pre id=\"thr_25_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React, { PureComponent } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> {\n  BarChart,\n  Bar,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  LabelList,\n  ResponsiveContainer,\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'recharts'</span>;\n\n<span class=\"hljs-keyword\">const</span> data = [\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page A'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">4000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">2400</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2400</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page B'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">1398</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2210</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page C'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">8</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2290</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page D'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2780</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3908</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2000</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page E'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">18</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2181</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page F'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2390</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2500</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page G'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3490</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4300</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2100</span>,\n  },\n];\n\n<span class=\"hljs-keyword\">const</span> renderCustomizedLabel = <span class=\"hljs-function\">(<span class=\"hljs-params\">props</span>) =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> { x, y, width, height, value } = props;\n  <span class=\"hljs-keyword\">const</span> radius = <span class=\"hljs-number\">10</span>;\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">g</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">circle</span> <span class=\"hljs-attr\">cx</span>=<span class=\"hljs-string\">{x</span> + <span class=\"hljs-attr\">width</span> / <span class=\"hljs-attr\">2</span>} <span class=\"hljs-attr\">cy</span>=<span class=\"hljs-string\">{y</span> <span class=\"hljs-attr\">-</span> <span class=\"hljs-attr\">radius</span>} <span class=\"hljs-attr\">r</span>=<span class=\"hljs-string\">{radius}</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#8884d8\"</span> /&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">text</span> <span class=\"hljs-attr\">x</span>=<span class=\"hljs-string\">{x</span> + <span class=\"hljs-attr\">width</span> / <span class=\"hljs-attr\">2</span>} <span class=\"hljs-attr\">y</span>=<span class=\"hljs-string\">{y</span> <span class=\"hljs-attr\">-</span> <span class=\"hljs-attr\">radius</span>} <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#fff\"</span> <span class=\"hljs-attr\">textAnchor</span>=<span class=\"hljs-string\">\"middle\"</span> <span class=\"hljs-attr\">dominantBaseline</span>=<span class=\"hljs-string\">\"middle\"</span>&gt;</span>\n        {value.split(' ')[1]}\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">text</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">g</span>&gt;</span></span>\n  );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Example</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">PureComponent</span> </span>{\n  <span class=\"hljs-keyword\">static</span> demoUrl = <span class=\"hljs-string\">'https://codesandbox.io/s/bar-chart-with-min-height-3ilfq'</span>;\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ResponsiveContainer</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">\"100%\"</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">\"100%\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">BarChart</span>\n         <div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{500}</span>\n          <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{300}</span>\n          <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n          <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span>\n            <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">5</span>,\n            <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">30</span>,\n            <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">20</span>,\n            <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">5</span>,\n          }}</div>\n        &gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n         <div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n         <div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Legend</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Bar</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"pv\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#8884d8\"</span> <span class=\"hljs-attr\">minPointSize</span>=<span class=\"hljs-string\">{5}</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LabelList</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">{renderCustomizedLabel}</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">Bar</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Bar</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"uv\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> <span class=\"hljs-attr\">minPointSize</span>=<span class=\"hljs-string\">{10}</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">BarChart</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ResponsiveContainer</span>&gt;</span></span>\n    );\n  }\n}\n<span class=\"hljs-comment\">//https://recharts.org/en-US/examples/BarChartWithMinHeight</span></code></pre></div>",
    "thr_26.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_26\"><pre id=\"thr_26_code\" style=\"display: block;\"><code class=\"python\"><span class=\"hljs-keyword\">import</span> React, { PureComponent } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> { BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'recharts'</span>;\n\n<span class=\"hljs-keyword\">const</span> data = [\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page A'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">4000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">2400</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2400</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page B'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">1398</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2210</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page C'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">9800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2290</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page D'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2780</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3908</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2000</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page E'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">1890</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2181</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page F'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2390</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2500</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page G'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3490</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4300</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2100</span>,\n  },\n];\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Example</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">PureComponent</span> </span>{\n  <span class=\"hljs-keyword\">static</span> demoUrl = <span class=\"hljs-string\">'https://codesandbox.io/s/mixed-bar-chart-q4hgc'</span>;\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ResponsiveContainer</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">\"100%\"</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">\"100%\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">BarChart</span>\n          <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{500}</span>\n          <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{300}</span>\n          <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n          <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span>\n            <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">20</span>,\n            <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">30</span>,\n            <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">20</span>,\n            <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">5</span>,\n          }}</div>\n        &gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\">&lt;<span class=\"hljs-name\">Tooltip</span> /&gt;</div></span>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\">&lt;<span class=\"hljs-name\">Legend</span> /&gt;</div></span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Bar</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"pv\"</span> <span class=\"hljs-attr\">stackId</span>=<span class=\"hljs-string\">\"a\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#8884d8\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Bar</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"amt\"</span> <span class=\"hljs-attr\">stackId</span>=<span class=\"hljs-string\">\"a\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Bar</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"uv\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#ffc658\"</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">BarChart</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ResponsiveContainer</span>&gt;</span></span>\n    );\n  }\n}\n<span class=\"hljs-comment\">//https://recharts.org/en-US/examples/MixBarChart</span></code></pre></div>",
    "thr_28.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_28\"><pre id=\"thr_28_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React, { PureComponent } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'recharts'</span>;\n\n<span class=\"hljs-keyword\">const</span> data = [\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page A'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">4000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">2400</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2400</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page B'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">1398</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2210</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page C'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">9800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2290</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page D'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2780</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3908</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2000</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page E'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">1890</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2181</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page F'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2390</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2500</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page G'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3490</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4300</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2100</span>,\n  },\n];\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Example</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">PureComponent</span> </span>{\n  <span class=\"hljs-keyword\">static</span> demoUrl = <span class=\"hljs-string\">'https://codesandbox.io/s/line-chart-of-different-axis-interval-oxw2p'</span>;\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\">&lt;<span class=\"hljs-name\">LineChart</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{200}</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{100}</span></div><span class=\"hljs-string\"></span> <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> <span class=\"hljs-attr\">interval</span>=<span class=\"hljs-string\">\"preserveEnd\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> <span class=\"hljs-attr\">interval</span>=<span class=\"hljs-string\">\"preserveEnd\"</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Legend_0\" class=\"highlights fea_Legend\">&lt;<span class=\"hljs-name\">Legend</span> /&gt;</div></span>\n         <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"pv\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span> <span class=\"hljs-attr\">activeDot</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">r:</span> <span class=\"hljs-attr\">8</span> }} /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"uv\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span>\n\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{200}</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{100}</span> <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> <span class=\"hljs-attr\">interval</span>=<span class=\"hljs-string\">\"preserveStart\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> <span class=\"hljs-attr\">interval</span>=<span class=\"hljs-string\">\"preserveStart\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Legend</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"pv\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span> <span class=\"hljs-attr\">activeDot</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">r:</span> <span class=\"hljs-attr\">8</span> }} /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"uv\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span>\n\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{200}</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{100}</span> <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> <span class=\"hljs-attr\">interval</span>=<span class=\"hljs-string\">\"preserveStartEnd\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> <span class=\"hljs-attr\">interval</span>=<span class=\"hljs-string\">\"preserveStartEnd\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Legend</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"pv\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span> <span class=\"hljs-attr\">activeDot</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">r:</span> <span class=\"hljs-attr\">8</span> }} /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"uv\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span>\n\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{200}</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{100}</span> <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> <span class=\"hljs-attr\">interval</span>=<span class=\"hljs-string\">{0}</span> <span class=\"hljs-attr\">angle</span>=<span class=\"hljs-string\">{30}</span> <span class=\"hljs-attr\">dx</span>=<span class=\"hljs-string\">{20}</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Legend</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"pv\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span> <span class=\"hljs-attr\">activeDot</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">r:</span> <span class=\"hljs-attr\">8</span> }} /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"uv\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n    );\n  }\n}\n<span class=\"hljs-comment\">//https://recharts.org/en-US/examples/LineChartAxisInterval</span></code></pre></div>",
    "thr_1.js": "<div class=\"codeBlock hljs typescript\" id=\"thr_1\"><pre id=\"thr_1_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>\n<span class=\"hljs-keyword\">import</span> {\n  Brush,\n  CartesianGrid,\n  Line,\n  LineChart,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'recharts'</span>\n<span class=\"hljs-keyword\">import</span> { convertToRs } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./currency.util'</span>\n<span class=\"hljs-keyword\">import</span> { tooltipWrapperStyle } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'./analysis.utils'</span>\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">interface</span> ITransaction {\n  <span class=\"hljs-attr\">date</span>: <span class=\"hljs-built_in\">string</span>\n  <span class=\"hljs-attr\">type</span>: <span class=\"hljs-built_in\">any</span>\n  summary?: <span class=\"hljs-built_in\">string</span>\n  <span class=\"hljs-attr\">category</span>: <span class=\"hljs-built_in\">any</span>\n  <span class=\"hljs-attr\">reference</span>: <span class=\"hljs-built_in\">string</span>\n  <span class=\"hljs-attr\">depositAmount</span>: <span class=\"hljs-built_in\">number</span>\n  <span class=\"hljs-attr\">withdrawalAmount</span>: <span class=\"hljs-built_in\">number</span>\n  <span class=\"hljs-attr\">balanceAmount</span>: <span class=\"hljs-built_in\">number</span>\n  <span class=\"hljs-attr\">particular</span>: <span class=\"hljs-built_in\">string</span>\n}\n\n<span class=\"hljs-keyword\">interface</span> IProps {\n  <span class=\"hljs-attr\">allTransactions</span>: ITransaction[]\n}\n\n<span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">AllTransactionsGraph</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span>&lt;<span class=\"hljs-title\">IProps</span>&gt; </span>{\n  <span class=\"hljs-keyword\">public</span> render () {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ResponsiveContainer</span> <span class=\"hljs-attr\">minHeight</span>=<span class=\"hljs-string\">{400}</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span>\n          <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{this.props.allTransactions}</span>\n          <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">20</span>, <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">50</span>, <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">20</span>, <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">5</span> }}\n        &gt;</span>\n          <span class=\"hljs-tag\"></span><span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span>\n            <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"particular\"</span>\n            <span class=\"hljs-attr\">tickSize</span>=<span class=\"hljs-string\">{0}</span>\n            <span class=\"hljs-attr\">tickFormatter</span>=<span class=\"hljs-string\">{()</span> =&gt;</span> ''}\n            axisLine={false}\n          /&gt;\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> <span class=\"hljs-attr\">tickFormatter</span>=<span class=\"hljs-string\">{conver</span></span><span class=\"hljs-tag\"><span class=\"hljs-string\">tToRs}</span> <span class=\"hljs-attr\">axisLine</span>=<span class=\"hljs-string\">{false}/</span>&gt;</span></div><span class=\"hljs-tag\"></span>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\">&lt;<span class=\"hljs-name\">Tooltip</span>\n            <span class=\"hljs-attr\">cursor</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">fill:</span> '#<span class=\"hljs-attr\">f5f5fa</span>', <span class=\"hljs-attr\">strokeDasharray:</span> '<span class=\"hljs-attr\">1</span> <span class=\"hljs-attr\">4</span>' }}\n            <span class=\"hljs-attr\">wrapperStyle</span>=<span class=\"hljs-string\">{tooltipWrapperStyle}</span>\n            <span class=\"hljs-attr\">formatter</span>=<span class=\"hljs-string\">{this.handleTooltipFormat}</span>\n          /&gt;</div></span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">{</span>'<span class=\"hljs-attr\">1</span> <span class=\"hljs-attr\">20</span>'}/&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ReferenceLine</span> <span class=\"hljs-attr\">y</span>=<span class=\"hljs-string\">{0}</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">{</span>'#<span class=\"hljs-attr\">767676</span>'}/&gt;</span>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">&lt;<span class=\"hljs-name\">Line</span>\n            <span class=\"hljs-attr\">dot</span>=<span class=\"hljs-string\">{false}</span>\n            <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"natural\"</span>\n            <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"balanceAmount\"</span>\n            <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#5d6494\"</span>\n          /&gt;</div></span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Brush</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#f5f5fa\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#848ab8\"</span>/&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ResponsiveContainer</span>&gt;</span></span>\n    )\n  }\n\n  <span class=\"hljs-keyword\">private</span> handleTooltipFormat=<span class=\"hljs-function\">(<span class=\"hljs-params\">balanceAmount:<span class=\"hljs-built_in\">any</span></span>)=&gt;</span>{\n    <span class=\"hljs-keyword\">return</span> convertToRs(balanceAmount)\n  }\n}\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> AllTransactionsGraph</code></pre></div>",
    "thr_4.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_4\"><pre id=\"thr_4_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"./styles.css\"</span>;\n<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n<span class=\"hljs-keyword\">import</span> {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Brush,\n  AreaChart,\n  Area\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"recharts\"</span>;\n\n<span class=\"hljs-keyword\">const</span> data = [\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Page A\"</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">4000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">2400</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2400</span>\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Page B\"</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">1398</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2210</span>\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Page C\"</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">9800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2290</span>\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Page D\"</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2780</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3908</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2000</span>\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Page E\"</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">1890</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2181</span>\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Page F\"</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2390</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2500</span>\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Page G\"</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3490</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4300</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2100</span>\n  }\n];\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">App</span>(<span class=\"hljs-params\"></span>) </span>{\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h4</span>&gt;</span>A demo of synchronized AreaCharts<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h4</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span>\n        <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{500}</span>\n        <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{200}</span>\n        <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n        <span class=\"hljs-attr\">syncId</span>=<span class=\"hljs-string\">\"anyId\"</span>\n        <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span>\n          <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">10</span>,\n          <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">30</span>,\n          <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">0</span>,\n          <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">0</span>\n        }}</div>\n      &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n        <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n        <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\">&lt;<span class=\"hljs-name\">Tooltip</span> /&gt;</div></span>\n        <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"uv\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#8884d8\"</span> /&gt;</div></span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Maybe some other content<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span>\n        <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{500}</span>\n        <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{200}</span>\n        <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n        <span class=\"hljs-attr\">syncId</span>=<span class=\"hljs-string\">\"anyId\"</span>\n        <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span>\n          <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">10</span>,\n          <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">30</span>,\n          <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">0</span>,\n          <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">0</span>\n        }}\n      &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"pv\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Brush</span> /&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">AreaChart</span>\n        <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{500}</span>\n        <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{200}</span>\n        <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n        <span class=\"hljs-attr\">syncId</span>=<span class=\"hljs-string\">\"anyId\"</span>\n        <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span>\n          <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">10</span>,\n          <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">30</span>,\n          <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">0</span>,\n          <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">0</span>\n        }}\n      &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Area</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"pv\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> /&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">AreaChart</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  );\n}\n</code></pre></div>",
    "thr_5.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_5\"><pre id=\"thr_5_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React, { PureComponent } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n<span class=\"hljs-keyword\">import</span> {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ReferenceLine\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"recharts\"</span>;\n<span class=\"hljs-keyword\">import</span> * <span class=\"hljs-keyword\">as</span> moment <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"moment\"</span>;\n\n<span class=\"hljs-keyword\">const</span> series = [\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Actual Order\"</span>,\n    <span class=\"hljs-attr\">data</span>: [\n      { <span class=\"hljs-attr\">orderDate</span>: <span class=\"hljs-string\">\"1\"</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">8</span> },\n      { <span class=\"hljs-attr\">orderDate</span>: <span class=\"hljs-string\">\"2\"</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">5</span> },\n      { <span class=\"hljs-attr\">orderDate</span>: <span class=\"hljs-string\">\"3\"</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">5.5</span> },\n      { <span class=\"hljs-attr\">orderDate</span>: <span class=\"hljs-string\">\"4\"</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">4.25</span> }\n    ],\n    <span class=\"hljs-attr\">stroke</span>: <span class=\"hljs-string\">\"#ffc220\"</span>\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"HVI Prediction\"</span>,\n    <span class=\"hljs-attr\">data</span>: [\n      { <span class=\"hljs-attr\">orderDate</span>: <span class=\"hljs-string\">\"1\"</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">6</span> },\n      { <span class=\"hljs-attr\">orderDate</span>: <span class=\"hljs-string\">\"2\"</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">5.5</span> },\n      { <span class=\"hljs-attr\">orderDate</span>: <span class=\"hljs-string\">\"3\"</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">4.25</span> },\n      { <span class=\"hljs-attr\">orderDate</span>: <span class=\"hljs-string\">\"4\"</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">5</span> }\n    ],\n    <span class=\"hljs-attr\">stroke</span>: <span class=\"hljs-string\">\"#a0b5e8\"</span>\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"HVI Order\"</span>,\n    <span class=\"hljs-attr\">data</span>: [\n      { <span class=\"hljs-attr\">orderDate</span>: <span class=\"hljs-string\">\"8\"</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">6</span> },\n      { <span class=\"hljs-attr\">orderDate</span>: <span class=\"hljs-string\">\"9\"</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">4.5</span>, <span class=\"hljs-attr\">HVIRecommendedOrder</span>: <span class=\"hljs-literal\">true</span> }\n    ],\n    <span class=\"hljs-attr\">stroke</span>: <span class=\"hljs-string\">\"#0065ff\"</span>,\n    <span class=\"hljs-attr\">strokeDasharray</span>: <span class=\"hljs-string\">\"7 7\"</span>\n  }\n];\n\n<span class=\"hljs-keyword\">const</span> CustomizedDot = <span class=\"hljs-function\"><span class=\"hljs-params\">props</span> =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> { cx, cy, stroke, payload } = props;\n\n  <span class=\"hljs-keyword\">if</span> (!payload.HVIRecommendedOrder) {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">svg</span>\n        <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-attr\">x</span>=<span class=\"hljs-string\">{cx</span> <span class=\"hljs-attr\">-</span> <span class=\"hljs-attr\">10</span>}\n        <span class=\"hljs-attr\">y</span>=<span class=\"hljs-string\">{cy</span> <span class=\"hljs-attr\">-</span> <span class=\"hljs-attr\">10</span>}\n        <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{40}</span>\n        <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{40}</span>\n        <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">{stroke}</span>\n        <span class=\"hljs-attr\">viewBox</span>=<span class=\"hljs-string\">\"0 0 200 200\"</span></div><span class=\"hljs-string\"></span>\n      &gt;</span>\n        <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">&lt;<span class=\"hljs-name\">circle</span> <span class=\"hljs-attr\">cx</span>=<span class=\"hljs-string\">\"50\"</span> <span class=\"hljs-attr\">cy</span>=<span class=\"hljs-string\">\"50\"</span> <span class=\"hljs-attr\">r</span>=<span class=\"hljs-string\">\"40\"</span> <span class=\"hljs-attr\">strokeWidth</span>=<span class=\"hljs-string\">\"3\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">{stroke}</span> /&gt;</div></span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">svg</span>&gt;</span></span>\n    );\n  }\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">svg</span> <span class=\"hljs-attr\">x</span>=<span class=\"hljs-string\">{cx</span> <span class=\"hljs-attr\">-</span> <span class=\"hljs-attr\">20</span>} <span class=\"hljs-attr\">y</span>=<span class=\"hljs-string\">{cy</span> <span class=\"hljs-attr\">-</span> <span class=\"hljs-attr\">15</span>} <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{40}</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{40}</span> <span class=\"hljs-attr\">viewBox</span>=<span class=\"hljs-string\">\"0 0 200 200\"</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">rect</span>\n        <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">\"15\"</span>\n        <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">\"15\"</span>\n        <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"white\"</span>\n        <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">{stroke}</span>\n        <span class=\"hljs-attr\">strokeWidth</span>=<span class=\"hljs-string\">\"2\"</span>\n        <span class=\"hljs-attr\">transform</span>=<span class=\"hljs-string\">\"matrix(3 3 -3 3 100 25)\"</span>\n      /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">svg</span>&gt;</span></span>\n  );\n};\n\n<span class=\"hljs-keyword\">const</span> CustomLine = <span class=\"hljs-function\"><span class=\"hljs-params\">props</span> =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> { x, y } = props.viewBox;\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Text_0\" class=\"highlights fea_Text\">&lt;<span class=\"hljs-name\">text</span>\n      <span class=\"hljs-attr\">fontSize</span>=<span class=\"hljs-string\">\"10px\"</span>\n      <span class=\"hljs-attr\">fontWeight</span>=<span class=\"hljs-string\">\"bold\"</span>\n      <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"green\"</span>\n      <span class=\"hljs-attr\">x</span>=<span class=\"hljs-string\">{x}</span>\n      <span class=\"hljs-attr\">y</span>=<span class=\"hljs-string\">{y</span> <span class=\"hljs-attr\">-</span> <span class=\"hljs-attr\">10</span>}\n      <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"recharts-text recharts-label\"</span>\n      <span class=\"hljs-attr\">textAnchor</span>=<span class=\"hljs-string\">\"middle\"</span>\n    &gt;</div></span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">tspan</span> <span class=\"hljs-attr\">x</span>=<span class=\"hljs-string\">{x}</span> <span class=\"hljs-attr\">dy</span>=<span class=\"hljs-string\">\"0.355em\"</span>&gt;</span>\n        Activated 4/10\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">tspan</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">text</span>&gt;</span></span>\n  );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Example</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">PureComponent</span> </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-title\">constructor</span>(<span class=\"hljs-params\">props</span>)</span> {\n    <span class=\"hljs-built_in\">super</span>(props);\n    <span class=\"hljs-built_in\">this</span>.tooltip = <span class=\"hljs-literal\">null</span>;\n    <span class=\"hljs-built_in\">this</span>.tooltipQty = <span class=\"hljs-literal\">null</span>;\n    <span class=\"hljs-built_in\">this</span>.tooltipDate = <span class=\"hljs-literal\">null</span>;\n  }\n\n  customMouseOver = <span class=\"hljs-function\">(<span class=\"hljs-params\">e, name</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">let</span> x = <span class=\"hljs-built_in\">Math</span>.round(e.cx);\n    <span class=\"hljs-keyword\">let</span> y = <span class=\"hljs-built_in\">Math</span>.round(e.cy);\n    <span class=\"hljs-built_in\">this</span>.tooltip.style.opacity = <span class=\"hljs-string\">\"1\"</span>;\n    <span class=\"hljs-built_in\">this</span>.tooltip.style.transform = <span class=\"hljs-string\">`translate(<span class=\"hljs-subst\">${x - <span class=\"hljs-number\">120</span>}</span>px, <span class=\"hljs-subst\">${y - <span class=\"hljs-number\">140</span>}</span>px)`</span>;\n    <span class=\"hljs-built_in\">this</span>.tooltipQty.innerHTML = e.payload[<span class=\"hljs-string\">\"value\"</span>];\n    <span class=\"hljs-built_in\">this</span>.tooltipDate.innerHTML = moment(e.payload[<span class=\"hljs-string\">\"orderDate\"</span>] + <span class=\"hljs-string\">\"\"</span>, <span class=\"hljs-string\">\"M\"</span>)\n      .format(<span class=\"hljs-string\">\"MMM\"</span>)\n      .toUpperCase();\n  };\n\n  over = <span class=\"hljs-function\"><span class=\"hljs-params\">e</span> =&gt;</span> {\n    <span class=\"hljs-built_in\">this</span>.tooltip.style.opacity = <span class=\"hljs-string\">\"0\"</span>;\n  };\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">xAxisTickFormatter</span>(<span class=\"hljs-params\">month</span>)</span> {\n    <span class=\"hljs-keyword\">return</span> month;\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{900}</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{300}</span> <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">20</span>, <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">20</span> }}&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">vertical</span>=<span class=\"hljs-string\">{false}</span> /&gt;</span>\n         <div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span>\n            <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"orderDate\"</span>\n            <span class=\"hljs-attr\">tick</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">fontSize:</span> <span class=\"hljs-attr\">14</span>, <span class=\"hljs-attr\">fontWeight:</span> \"<span class=\"hljs-attr\">bold</span>\" }}\n            <span class=\"hljs-attr\">domain</span>=<span class=\"hljs-string\">{[1,</span> <span class=\"hljs-attr\">12</span>]}\n            <span class=\"hljs-attr\">tickCount</span>=<span class=\"hljs-string\">{12}</span>\n            <span class=\"hljs-attr\">tickFormatter</span>=<span class=\"hljs-string\">{this.xAxisTickFormatter}</span>\n            <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"number\"</span>\n            <span class=\"hljs-attr\">tickLine</span>=<span class=\"hljs-string\">{false}</span>\n            <span class=\"hljs-attr\">allowDuplicatedCategory</span>=<span class=\"hljs-string\">{false}</span>\n            <span class=\"hljs-attr\">padding</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">30</span>, <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">30</span> }}\n          /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span>\n            <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"value\"</span>\n            <span class=\"hljs-attr\">tick</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">fontSize:</span> <span class=\"hljs-attr\">13</span>, <span class=\"hljs-attr\">fill:</span> \"#<span class=\"hljs-attr\">6d6e71</span>\" }}\n            <span class=\"hljs-attr\">domain</span>=<span class=\"hljs-string\">{[0,</span> \"<span class=\"hljs-attr\">dataMax</span> + <span class=\"hljs-attr\">12</span>\"]}\n            <span class=\"hljs-attr\">tickCount</span>=<span class=\"hljs-string\">{20}</span>\n            <span class=\"hljs-attr\">allowDecimals</span>=<span class=\"hljs-string\">{false}</span>\n            <span class=\"hljs-attr\">tickLine</span>=<span class=\"hljs-string\">{false}</span>\n          /&gt;</span></div><span class=\"hljs-tag\"></span>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">cursor</span>=<span class=\"hljs-string\">{false}</span> <span class=\"hljs-attr\">wrapperStyle</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">display:</span> \"<span class=\"hljs-attr\">none</span>\" }} /&gt;</div></span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ReferenceLine</span>\n            <span class=\"hljs-attr\">x</span>=<span class=\"hljs-string\">\"7\"</span>\n            <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"5,5\"</span>\n            <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"green\"</span>\n            <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">{</span>&lt;<span class=\"hljs-attr\">CustomLine</span> /&gt;</span>}\n          /&gt;</div>\n          {series.map(s =&gt; (\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span>\n              <span class=\"hljs-attr\"></span></span><div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\"><span class=\"hljs-tag\"><span class=\"hljs-attr\">activeDot</span>=<span class=\"hljs-string\">{{</span>\n                <span class=\"hljs-attr\">onMouseOver:</span> <span class=\"hljs-attr\">e</span> =&gt;</span> this.customMouseOver(e, s.name),\n                onMouseLeave: this.over\n              }}</div>\n              <div style=\"display: inline;\" id=\"Animations_0\" class=\"highlights fea_Animations\">isAnimationActive={false}</div>\n              dataKey=\"value\"\n              dot={<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CustomizedDot</span> /&gt;</span>}\n              stroke={s.stroke}\n              strokeDasharray={s.strokeDasharray}\n              data={s.data}\n              name={s.name}\n              key={s.name}\n            /&gt;\n          ))}\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"ui-chart-tooltip\"</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">{ref</span> =&gt;</span> (this.tooltip = ref)}&gt;\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"ui-chart-tooltip-content\"</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"tooltip-heading\"</span>&gt;</span>Inventory Order<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"qty\"</span>&gt;</span>\n              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"name\"</span>&gt;</span>Qty (Cases)<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">{ref</span> =&gt;</span> (this.tooltipQty = ref)} className=\"value\" /&gt;\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"date\"</span>&gt;</span>\n              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"name\"</span>&gt;</span>Date of Order<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">ref</span>=<span class=\"hljs-string\">{ref</span> =&gt;</span> (this.tooltipDate = ref)} className=\"value\" /&gt;\n            <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n    );\n  }\n}\n</code></pre></div>",
    "thr_10.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_10\"><pre id=\"thr_10_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n<span class=\"hljs-keyword\">import</span> {\n  Label,\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ReferenceArea\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"recharts\"</span>;\n\n<span class=\"hljs-keyword\">const</span> data = [\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">4.11</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">100</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">2.39</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">120</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">1.37</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">150</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">4</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">1.16</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">180</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">5</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">2.29</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">200</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">6</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">499</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">7</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">0.53</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">50</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">8</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">2.52</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">100</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">9</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">1.79</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">200</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">10</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">2.94</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">222</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">11</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">4.3</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">210</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">12</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">4.41</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">300</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">13</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">2.1</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">50</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">14</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">8</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">190</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">15</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">300</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">16</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">9</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">400</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">17</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">200</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">18</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">50</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">19</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">100</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">20</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">7</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">100</span> }\n];\n\n<span class=\"hljs-keyword\">const</span> getAxisYDomain = <span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-keyword\">from</span>, to, ref, offset</span>) =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> refData = data.slice(<span class=\"hljs-keyword\">from</span> - <span class=\"hljs-number\">1</span>, to);\n  <span class=\"hljs-keyword\">let</span> [bottom, top] = [refData[<span class=\"hljs-number\">0</span>][ref], refData[<span class=\"hljs-number\">0</span>][ref]];\n  refData.forEach(<span class=\"hljs-function\"><span class=\"hljs-params\">d</span> =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (d[ref] &gt; top) top = d[ref];\n    <span class=\"hljs-keyword\">if</span> (d[ref] &lt; bottom) bottom = d[ref];\n  });\n\n  <span class=\"hljs-keyword\">return</span> [(bottom | <span class=\"hljs-number\">0</span>) - offset, (top | <span class=\"hljs-number\">0</span>) + offset];\n};\n\n<span class=\"hljs-keyword\">const</span> initialState = {\n  data,\n  <span class=\"hljs-attr\">left</span>: <span class=\"hljs-string\">\"dataMin\"</span>,\n  <span class=\"hljs-attr\">right</span>: <span class=\"hljs-string\">\"dataMax\"</span>,\n  <span class=\"hljs-attr\">refAreaLeft</span>: <span class=\"hljs-string\">\"\"</span>,\n  <span class=\"hljs-attr\">refAreaRight</span>: <span class=\"hljs-string\">\"\"</span>,\n  <span class=\"hljs-attr\">top</span>: <span class=\"hljs-string\">\"dataMax+1\"</span>,\n  <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-string\">\"dataMin-1\"</span>,\n  <span class=\"hljs-attr\">top2</span>: <span class=\"hljs-string\">\"dataMax+20\"</span>,\n  <span class=\"hljs-attr\">bottom2</span>: <span class=\"hljs-string\">\"dataMin-20\"</span>,\n  <span class=\"hljs-attr\">animation</span>: <span class=\"hljs-literal\">true</span>\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">StreamingDemo</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">React</span>.<span class=\"hljs-title\">Component</span> </span>{\n  <span class=\"hljs-function\"><span class=\"hljs-title\">constructor</span>(<span class=\"hljs-params\">props</span>)</span> {\n    <span class=\"hljs-built_in\">super</span>(props);\n    <span class=\"hljs-built_in\">this</span>.state = initialState;\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">zoom</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">let</span> { refAreaLeft, refAreaRight, data } = <span class=\"hljs-built_in\">this</span>.state;\n\n    <span class=\"hljs-keyword\">if</span> (refAreaLeft === refAreaRight || refAreaRight === <span class=\"hljs-string\">\"\"</span>) {\n      <span class=\"hljs-built_in\">this</span>.setState(<span class=\"hljs-function\">() =&gt;</span> ({\n        <span class=\"hljs-attr\">refAreaLeft</span>: <span class=\"hljs-string\">\"\"</span>,\n        <span class=\"hljs-attr\">refAreaRight</span>: <span class=\"hljs-string\">\"\"</span>\n      }));\n      <span class=\"hljs-keyword\">return</span>;\n    }\n\n    <span class=\"hljs-comment\">// xAxis domain</span>\n    <span class=\"hljs-keyword\">if</span> (refAreaLeft &gt; refAreaRight)\n      [refAreaLeft, refAreaRight] = [refAreaRight, refAreaLeft];\n\n    <span class=\"hljs-comment\">// yAxis domain</span>\n    <span class=\"hljs-keyword\">const</span> [bottom, top] = getAxisYDomain(refAreaLeft, refAreaRight, <span class=\"hljs-string\">\"cost\"</span>, <span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-keyword\">const</span> [bottom2, top2] = getAxisYDomain(\n      refAreaLeft,\n      refAreaRight,\n      <span class=\"hljs-string\">\"impression\"</span>,\n      <span class=\"hljs-number\">50</span>\n    );\n\n    <span class=\"hljs-built_in\">this</span>.setState(<span class=\"hljs-function\">() =&gt;</span> ({\n      <span class=\"hljs-attr\">refAreaLeft</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">refAreaRight</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">data</span>: data.slice(),\n      <span class=\"hljs-attr\">left</span>: refAreaLeft,\n      <span class=\"hljs-attr\">right</span>: refAreaRight,\n      bottom,\n      top,\n      bottom2,\n      top2\n    }));\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">zoomOut</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-built_in\">this</span>.setState(<span class=\"hljs-function\">(<span class=\"hljs-params\">{ data }</span>) =&gt;</span> ({\n      <span class=\"hljs-attr\">data</span>: data.slice(),\n      <span class=\"hljs-attr\">refAreaLeft</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">refAreaRight</span>: <span class=\"hljs-string\">\"\"</span>,\n      <span class=\"hljs-attr\">left</span>: <span class=\"hljs-string\">\"dataMin\"</span>,\n      <span class=\"hljs-attr\">right</span>: <span class=\"hljs-string\">\"dataMax\"</span>,\n      <span class=\"hljs-attr\">top</span>: <span class=\"hljs-string\">\"dataMax+1\"</span>,\n      <span class=\"hljs-attr\">top2</span>: <span class=\"hljs-string\">\"dataMax+50\"</span>,\n      <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-string\">\"dataMin\"</span>\n    }));\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">const</span> {\n      data,\n      left,\n      right,\n      refAreaLeft,\n      refAreaRight,\n      top,\n      bottom,\n      top2,\n      bottom2\n    } = <span class=\"hljs-built_in\">this</span>.state;\n\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"highlight-bar-charts\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"btn update\"</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.zoomOut.bind(this)}</span>&gt;</span>\n          Zoom Out\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Highlight / Zoom - able Line Chart<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span>\n          <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{800}</span>\n          <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{400}</span>\n          <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n          <span class=\"hljs-attr\">onMouseDown</span>=<span class=\"hljs-string\">{e</span> =&gt;</span> this.setState({ refAreaLeft: e.activeLabel })}\n          onMouseMove={e =&gt;\n            this.state.refAreaLeft &amp;&amp;\n            this.setState({ refAreaRight: e.activeLabel })\n          }\n          onMouseUp={this.zoom.bind(this)}\n        &gt;\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span>\n            <span class=\"hljs-attr\">allowDataOverflow</span>=<span class=\"hljs-string\">{true}</span>\n            <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span>\n            <span class=\"hljs-attr\">domain</span>=<span class=\"hljs-string\">{[left,</span> <span class=\"hljs-attr\">right</span>]}\n            <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"number\"</span>\n          /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span>\n            <span class=\"hljs-attr\">allowDataOverflow</span>=<span class=\"hljs-string\">{true}</span>\n            <span class=\"hljs-attr\">domain</span>=<span class=\"hljs-string\">{[bottom,</span> <span class=\"hljs-attr\">top</span>]}\n            <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"number\"</span>\n            <span class=\"hljs-attr\">yAxisId</span>=<span class=\"hljs-string\">\"1\"</span>\n          /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span>\n            <span class=\"hljs-attr\">orientation</span>=<span class=\"hljs-string\">\"right\"</span>\n            <span class=\"hljs-attr\">allowDataOverflow</span>=<span class=\"hljs-string\">{true}</span>\n            <span class=\"hljs-attr\">domain</span>=<span class=\"hljs-string\">{[bottom2,</span> <span class=\"hljs-attr\">top2</span>]}\n            <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"number\"</span>\n            <span class=\"hljs-attr\">yAxisId</span>=<span class=\"hljs-string\">\"2\"</span>\n          /&gt;</span></div><span class=\"hljs-tag\"></span>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\">&lt;<span class=\"hljs-name\">Tooltip</span> /&gt;</div></span>\n         <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span>\n            <span class=\"hljs-attr\">yAxisId</span>=<span class=\"hljs-string\">\"1\"</span>\n            <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"natural\"</span>\n            <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"cost\"</span>\n            <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span></span></div><span class=\"hljs-tag\"><span class=\"hljs-string\"></span>\n            <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Animations_0\" class=\"highlights fea_Animations\"><span class=\"hljs-attr\">animationDuration</span>=<span class=\"hljs-string\">{300}</span></div><span class=\"hljs-string\"></span>\n          /&gt;</span>\n         <div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span>\n            <span class=\"hljs-attr\">yAxisId</span>=<span class=\"hljs-string\">\"2\"</span>\n            <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"natural\"</span>\n            <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"impression\"</span>\n            <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#82ca9d\"</span></span></div><span class=\"hljs-tag\"><span class=\"hljs-string\"></span>\n            <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Animations_1\" class=\"highlights fea_Animations\"><span class=\"hljs-attr\">animationDuration</span>=<span class=\"hljs-string\">{300}</span></div><span class=\"hljs-string\"></span>\n          /&gt;</span>\n\n          {refAreaLeft &amp;&amp; refAreaRight ? (\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ReferenceArea</span>\n              <span class=\"hljs-attr\">yAxisId</span>=<span class=\"hljs-string\">\"1\"</span>\n              <span class=\"hljs-attr\">x1</span>=<span class=\"hljs-string\">{refAreaLeft}</span>\n              <span class=\"hljs-attr\">x2</span>=<span class=\"hljs-string\">{refAreaRight}</span>\n              <span class=\"hljs-attr\">strokeOpacity</span>=<span class=\"hljs-string\">{0.3}</span>\n            /&gt;</span>\n          ) : null}\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n    );\n  }\n}\n</code></pre></div>",
    "thr_11.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_11\"><pre id=\"thr_11_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n<span class=\"hljs-keyword\">import</span> { add, format, differenceInCalendarDays, isFuture } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"date-fns\"</span>;\n<span class=\"hljs-keyword\">import</span> {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"recharts\"</span>;\n<span class=\"hljs-keyword\">import</span> DataUtils <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"./DataUtils\"</span>;\n<span class=\"hljs-keyword\">import</span> CustomTooltip <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"./CustomTooltip\"</span>;\n\n<span class=\"hljs-keyword\">const</span> dateFormatter = <span class=\"hljs-function\"><span class=\"hljs-params\">date</span> =&gt;</span> {\n  <span class=\"hljs-keyword\">return</span> format(<span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(date), <span class=\"hljs-string\">\"dd/MMM\"</span>);\n};\n\n<span class=\"hljs-comment\">/**\n * get the dates between `startDate` and `endSate` with equal granularity\n */</span>\n<span class=\"hljs-keyword\">const</span> getTicks = <span class=\"hljs-function\">(<span class=\"hljs-params\">startDate, endDate, num</span>) =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> diffDays = differenceInCalendarDays(endDate, startDate);\n\n  <span class=\"hljs-keyword\">let</span> current = startDate,\n    velocity = <span class=\"hljs-built_in\">Math</span>.round(diffDays / (num - <span class=\"hljs-number\">1</span>));\n\n  <span class=\"hljs-keyword\">const</span> ticks = [startDate.getTime()];\n\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">1</span>; i &lt; num - <span class=\"hljs-number\">1</span>; i++) {\n    ticks.push(add(current, { <span class=\"hljs-attr\">days</span>: i * velocity }).getTime());\n  }\n\n  ticks.push(endDate.getTime());\n  <span class=\"hljs-keyword\">return</span> ticks;\n};\n\n<span class=\"hljs-comment\">/**\n * Add data of the date in ticks,\n * if there is no data in that date in `data`.\n *\n * <span class=\"hljs-doctag\">@param </span>Array&lt;number&gt; _ticks\n * <span class=\"hljs-doctag\">@param <span class=\"hljs-type\">{*}</span> <span class=\"hljs-variable\">data</span></span>\n */</span>\n<span class=\"hljs-keyword\">const</span> fillTicksData = <span class=\"hljs-function\">(<span class=\"hljs-params\">_ticks, data</span>) =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> ticks = [..._ticks];\n  <span class=\"hljs-keyword\">const</span> filled = [];\n  <span class=\"hljs-keyword\">let</span> currentTick = ticks.shift();\n  <span class=\"hljs-keyword\">let</span> lastData = <span class=\"hljs-literal\">null</span>;\n  <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">const</span> it <span class=\"hljs-keyword\">of</span> data) {\n    <span class=\"hljs-keyword\">if</span> (ticks.length &amp;&amp; it.date &gt; currentTick &amp;&amp; lastData) {\n      filled.push({ ...lastData, ...{ <span class=\"hljs-attr\">date</span>: currentTick } });\n      currentTick = ticks.shift();\n    } <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (ticks.length &amp;&amp; it.date === currentTick) {\n      currentTick = ticks.shift();\n    }\n\n    filled.push(it);\n    lastData = it;\n  }\n\n  <span class=\"hljs-keyword\">return</span> filled;\n};\n\n<span class=\"hljs-keyword\">const</span> DateArea = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-comment\">// const startDate = new Date(2019, 0, 1);</span>\n  <span class=\"hljs-comment\">// const endDate = new Date(2020, 0, 15);</span>\n  <span class=\"hljs-comment\">// const data = [</span>\n  <span class=\"hljs-comment\">//   ...DataUtils.days(startDate, 10),</span>\n  <span class=\"hljs-comment\">//   ...DataUtils.days(add(startDate, { months: 2 }), 5),</span>\n  <span class=\"hljs-comment\">//   ...DataUtils.months(add(startDate, { months: 5 }), 1),</span>\n  <span class=\"hljs-comment\">//   ...DataUtils.months(add(startDate, { months: 8 }), 1)</span>\n  <span class=\"hljs-comment\">// ].map(it =&gt; ({</span>\n  <span class=\"hljs-comment\">//   date: it.date.getTime(),</span>\n  <span class=\"hljs-comment\">//   val: it.val</span>\n  <span class=\"hljs-comment\">// }));</span>\n\n  <span class=\"hljs-keyword\">const</span> startDate = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(<span class=\"hljs-number\">2019</span>, <span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">11</span>);\n  <span class=\"hljs-keyword\">const</span> endDate = <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(<span class=\"hljs-number\">2019</span>, <span class=\"hljs-number\">9</span>, <span class=\"hljs-number\">15</span>);\n  <span class=\"hljs-keyword\">const</span> data = [\n    { <span class=\"hljs-attr\">date</span>: startDate.getTime(), <span class=\"hljs-attr\">val</span>: <span class=\"hljs-number\">2000</span> },\n    { <span class=\"hljs-attr\">date</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(<span class=\"hljs-number\">2019</span>, <span class=\"hljs-number\">4</span>, <span class=\"hljs-number\">30</span>).getTime(), <span class=\"hljs-attr\">val</span>: <span class=\"hljs-number\">5000</span> },\n    { <span class=\"hljs-attr\">date</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(<span class=\"hljs-number\">2019</span>, <span class=\"hljs-number\">5</span>, <span class=\"hljs-number\">30</span>).getTime(), <span class=\"hljs-attr\">val</span>: <span class=\"hljs-number\">5000</span> },\n    { <span class=\"hljs-attr\">date</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(<span class=\"hljs-number\">2019</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">21</span>).getTime(), <span class=\"hljs-attr\">val</span>: <span class=\"hljs-number\">6000</span> },\n    { <span class=\"hljs-attr\">date</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(<span class=\"hljs-number\">2019</span>, <span class=\"hljs-number\">6</span>, <span class=\"hljs-number\">28</span>).getTime(), <span class=\"hljs-attr\">val</span>: <span class=\"hljs-number\">9000</span> }\n  ];\n\n  <span class=\"hljs-keyword\">const</span> domain = [<span class=\"hljs-function\"><span class=\"hljs-params\">dataMin</span> =&gt;</span> dataMin, <span class=\"hljs-function\">() =&gt;</span> endDate.getTime()];\n  <span class=\"hljs-keyword\">const</span> ticks = getTicks(startDate, endDate, <span class=\"hljs-number\">5</span>);\n  <span class=\"hljs-keyword\">const</span> filledData = fillTicksData(ticks, data);\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>AreaChart with custom tooltip<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ResponsiveContainer</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">\"90%\"</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{200}</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">AreaChart</span>\n          <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{900}</span>\n          <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{250}</span>\n          <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{filledData}</span>\n          <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span>\n            <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">10</span>,\n            <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">0</span>,\n            <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">10</span>,\n            <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">0</span>\n          }}</div>\n        &gt;</span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span>\n            <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"date\"</span>\n            <span class=\"hljs-attr\">hasTick</span>\n            <span class=\"hljs-attr\">scale</span>=<span class=\"hljs-string\">\"time\"</span>\n            <span class=\"hljs-attr\">tickFormatter</span>=<span class=\"hljs-string\">{dateFormatter}</span>\n            <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"number\"</span>\n            <span class=\"hljs-attr\">domain</span>=<span class=\"hljs-string\">{domain}</span>\n            <span class=\"hljs-attr\">ticks</span>=<span class=\"hljs-string\">{ticks}</span>\n          /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> <span class=\"hljs-attr\">tickCount</span>=<span class=\"hljs-string\">{7}</span> <span class=\"hljs-attr\">hasTick</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">{</span>&lt;<span class=\"hljs-attr\">CustomTooltip</span> /&gt;</span>} /&gt;</div>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">&lt;<span class=\"hljs-name\">Area</span>\n            <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span>\n            <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"val\"</span>\n            <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#ff7300\"</span>\n            <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#ff7300\"</span>\n            <span class=\"hljs-attr\">fillOpacity</span>=<span class=\"hljs-string\">{0.9}</span>\n          /&gt;</div></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">AreaChart</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ResponsiveContainer</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  );\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> DateArea;\n</code></pre></div>",
    "thr_15.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_15\"><pre id=\"thr_15_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React, { PureComponent } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> LineChart <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@bit/recharts.recharts.line-chart'</span>;\n<span class=\"hljs-keyword\">import</span> XAxis <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@bit/recharts.recharts.x-axis'</span>;\n<span class=\"hljs-keyword\">import</span> YAxis <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@bit/recharts.recharts.y-axis'</span>;\n<span class=\"hljs-keyword\">import</span> CartesianGrid <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@bit/recharts.recharts.cartesian-grid'</span>;\n<span class=\"hljs-keyword\">import</span> Line <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@bit/recharts.recharts.line'</span>;\n<span class=\"hljs-keyword\">import</span> Tooltip <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@bit/recharts.recharts.tooltip'</span>;\n<span class=\"hljs-keyword\">import</span> ReferenceArea <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'@bit/recharts.recharts.reference-area'</span>;\n\n<span class=\"hljs-keyword\">const</span> data = [\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">4.11</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">100</span> },\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">2.39</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">120</span> },\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">1.37</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">150</span> },\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">4</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">1.16</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">180</span> },\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">5</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">2.29</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">200</span> },\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">6</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">499</span> },\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">7</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">0.53</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">50</span> },\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">8</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">2.52</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">100</span> },\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">9</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">1.79</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">200</span> },\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">10</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">2.94</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">222</span> },\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">11</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">4.3</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">210</span> },\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">12</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">4.41</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">300</span> },\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">13</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">2.1</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">50</span> },\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">14</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">8</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">190</span> },\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">15</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">300</span> },\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">16</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">9</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">400</span> },\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">17</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">200</span> },\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">18</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">50</span> },\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">19</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">100</span> },\n\t{ <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">20</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">7</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">100</span> },\n];\n\n<span class=\"hljs-keyword\">const</span> getAxisYDomain = <span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-keyword\">from</span>, to, ref, offset</span>) =&gt;</span> {\n\t<span class=\"hljs-keyword\">const</span> refData = data.slice(<span class=\"hljs-keyword\">from</span> - <span class=\"hljs-number\">1</span>, to);\n\t<span class=\"hljs-keyword\">let</span> [bottom, top] = [refData[<span class=\"hljs-number\">0</span>][ref], refData[<span class=\"hljs-number\">0</span>][ref]];\n\trefData.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> {\n\t\t<span class=\"hljs-keyword\">if</span> (d[ref] &gt; top) top = d[ref];\n\t\t<span class=\"hljs-keyword\">if</span> (d[ref] &lt; bottom) bottom = d[ref];\n\t});\n\n\t<span class=\"hljs-keyword\">return</span> [(bottom | <span class=\"hljs-number\">0</span>) - offset, (top | <span class=\"hljs-number\">0</span>) + offset];\n};\n\n<span class=\"hljs-keyword\">const</span> initialState = {\n\tdata,\n\t<span class=\"hljs-attr\">left</span>: <span class=\"hljs-string\">'dataMin'</span>,\n\t<span class=\"hljs-attr\">right</span>: <span class=\"hljs-string\">'dataMax'</span>,\n\t<span class=\"hljs-attr\">refAreaLeft</span>: <span class=\"hljs-string\">''</span>,\n\t<span class=\"hljs-attr\">refAreaRight</span>: <span class=\"hljs-string\">''</span>,\n\t<span class=\"hljs-attr\">top</span>: <span class=\"hljs-string\">'dataMax+1'</span>,\n\t<span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-string\">'dataMin-1'</span>,\n\t<span class=\"hljs-attr\">top2</span>: <span class=\"hljs-string\">'dataMax+20'</span>,\n\t<span class=\"hljs-attr\">bottom2</span>: <span class=\"hljs-string\">'dataMin-20'</span>,\n\t<span class=\"hljs-attr\">animation</span>: <span class=\"hljs-literal\">true</span>,\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Example</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">PureComponent</span> </span>{\n\t<span class=\"hljs-function\"><span class=\"hljs-title\">constructor</span>(<span class=\"hljs-params\">props</span>)</span> {\n\t\t<span class=\"hljs-built_in\">super</span>(props);\n\t\t<span class=\"hljs-built_in\">this</span>.state = initialState;\n\t}\n\n\t<span class=\"hljs-function\"><span class=\"hljs-title\">zoom</span>(<span class=\"hljs-params\"></span>)</span> {\n\t\t<span class=\"hljs-keyword\">let</span> { refAreaLeft, refAreaRight, data } = <span class=\"hljs-built_in\">this</span>.state;\n\n\t\t<span class=\"hljs-keyword\">if</span> (refAreaLeft === refAreaRight || refAreaRight === <span class=\"hljs-string\">''</span>) {\n\t\t\t<span class=\"hljs-built_in\">this</span>.setState(<span class=\"hljs-function\">() =&gt;</span> ({\n\t\t\t\t<span class=\"hljs-attr\">refAreaLeft</span>: <span class=\"hljs-string\">''</span>,\n\t\t\t\t<span class=\"hljs-attr\">refAreaRight</span>: <span class=\"hljs-string\">''</span>,\n\t\t\t}));\n\t\t\t<span class=\"hljs-keyword\">return</span>;\n\t\t}\n\n\t\t<span class=\"hljs-comment\">// xAxis domain</span>\n\t\t<span class=\"hljs-keyword\">if</span> (refAreaLeft &gt; refAreaRight) [refAreaLeft, refAreaRight] = [refAreaRight, refAreaLeft];\n\n\t\t<span class=\"hljs-comment\">// yAxis domain</span>\n\t\t<span class=\"hljs-keyword\">const</span> [bottom, top] = getAxisYDomain(refAreaLeft, refAreaRight, <span class=\"hljs-string\">'cost'</span>, <span class=\"hljs-number\">1</span>);\n\t\t<span class=\"hljs-keyword\">const</span> [bottom2, top2] = getAxisYDomain(refAreaLeft, refAreaRight, <span class=\"hljs-string\">'impression'</span>, <span class=\"hljs-number\">50</span>);\n\n\t\t<span class=\"hljs-built_in\">this</span>.setState(<span class=\"hljs-function\">() =&gt;</span> ({\n\t\t\t<span class=\"hljs-attr\">refAreaLeft</span>: <span class=\"hljs-string\">''</span>,\n\t\t\t<span class=\"hljs-attr\">refAreaRight</span>: <span class=\"hljs-string\">''</span>,\n\t\t\t<span class=\"hljs-attr\">data</span>: data.slice(),\n\t\t\t<span class=\"hljs-attr\">left</span>: refAreaLeft,\n\t\t\t<span class=\"hljs-attr\">right</span>: refAreaRight,\n\t\t\tbottom,\n\t\t\ttop,\n\t\t\tbottom2,\n\t\t\ttop2,\n\t\t}));\n\t}\n\n\t<span class=\"hljs-function\"><span class=\"hljs-title\">zoomOut</span>(<span class=\"hljs-params\"></span>)</span> {\n\t\t<span class=\"hljs-keyword\">const</span> { data } = <span class=\"hljs-built_in\">this</span>.state;\n\t\t<span class=\"hljs-built_in\">this</span>.setState(<span class=\"hljs-function\">() =&gt;</span> ({\n\t\t\t<span class=\"hljs-attr\">data</span>: data.slice(),\n\t\t\t<span class=\"hljs-attr\">refAreaLeft</span>: <span class=\"hljs-string\">''</span>,\n\t\t\t<span class=\"hljs-attr\">refAreaRight</span>: <span class=\"hljs-string\">''</span>,\n\t\t\t<span class=\"hljs-attr\">left</span>: <span class=\"hljs-string\">'dataMin'</span>,\n\t\t\t<span class=\"hljs-attr\">right</span>: <span class=\"hljs-string\">'dataMax'</span>,\n\t\t\t<span class=\"hljs-attr\">top</span>: <span class=\"hljs-string\">'dataMax+1'</span>,\n\t\t\t<span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-string\">'dataMin'</span>,\n\t\t\t<span class=\"hljs-attr\">top2</span>: <span class=\"hljs-string\">'dataMax+50'</span>,\n\t\t\t<span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-string\">'dataMin+50'</span>,\n\t\t}));\n\t}\n\n\t<span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n\t\t<span class=\"hljs-keyword\">const</span> {\n\t\t\tdata, barIndex, left, right, refAreaLeft, refAreaRight, top, bottom, top2, bottom2,\n\t\t} = <span class=\"hljs-built_in\">this</span>.state;\n\n\t\t<span class=\"hljs-keyword\">return</span> (\n\t\t\t<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"highlight-bar-charts\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">userSelect:</span> '<span class=\"hljs-attr\">none</span>' }}&gt;</span>\n\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span>\n\t\t\t\t\t<span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">\"javascript: void(0);\"</span>\n\t\t\t\t\t<span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"btn update\"</span>\n\t\t\t\t\t<span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Zoom_0\" class=\"highlights fea_Zoom\"><span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.zoomOut.bind(this)}</span></div><span class=\"hljs-string\"></span>\n\t\t\t\t&gt;</span>\n\t\t\t\t\tZoom Out\n\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n\n\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span>\n\t\t\t\t\t<span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{800}</span>\n\t\t\t\t\t<span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{400}</span></div><span class=\"hljs-string\"></span>\n\t\t\t\t\t<span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n\t\t\t\t\t<span class=\"hljs-attr\"></span></span><div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\"><span class=\"hljs-tag\"><span class=\"hljs-attr\">onMouseDown</span>=<span class=\"hljs-string\">{e</span> =&gt;</span> this.setState({ refAreaLeft: e.activeLabel })}\n\t\t\t\t\tonMouseMove={e =&gt; this.state.refAreaLeft &amp;&amp; this.setState({ refAreaRight: e.activeLabel })}\n\t\t\t\t\tonMouseUp={this.zoom.bind(this)}</div>\n\t\t\t\t&gt;\n\t\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n\t\t\t\t\t<span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span>\n\t\t\t\t\t\t<span class=\"hljs-attr\">allowDataOverflow</span>\n\t\t\t\t\t\t<span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span>\n\t\t\t\t\t\t<span class=\"hljs-attr\">domain</span>=<span class=\"hljs-string\">{[left,</span> <span class=\"hljs-attr\">right</span>]}\n\t\t\t\t\t\t<span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"number\"</span>\n\t\t\t\t\t/&gt;</span>\n\t\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span>\n\t\t\t\t\t\t<span class=\"hljs-attr\">allowDataOverflow</span>\n\t\t\t\t\t\t<span class=\"hljs-attr\">domain</span>=<span class=\"hljs-string\">{[bottom,</span> <span class=\"hljs-attr\">top</span>]}\n\t\t\t\t\t\t<span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"number\"</span>\n\t\t\t\t\t\t<span class=\"hljs-attr\">yAxisId</span>=<span class=\"hljs-string\">\"1\"</span>\n\t\t\t\t\t/&gt;</span>\n\t\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span>\n\t\t\t\t\t\t<span class=\"hljs-attr\">orientation</span>=<span class=\"hljs-string\">\"right\"</span>\n\t\t\t\t\t\t<span class=\"hljs-attr\">allowDataOverflow</span>\n\t\t\t\t\t\t<span class=\"hljs-attr\">domain</span>=<span class=\"hljs-string\">{[bottom2,</span> <span class=\"hljs-attr\">top2</span>]}\n\t\t\t\t\t\t<span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"number\"</span>\n\t\t\t\t\t\t<span class=\"hljs-attr\">yAxisId</span>=<span class=\"hljs-string\">\"2\"</span>\n\t\t\t\t\t/&gt;</span></div><span class=\"hljs-tag\"></span>\n\t\t\t\t\t<span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\">&lt;<span class=\"hljs-name\">Tooltip</span> /&gt;</div></span>\n\t\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\"></span></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-tag\"><span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">yAxisId</span>=<span class=\"hljs-string\">\"1\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"natural\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"cost\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span> <span class=\"hljs-attr\">animationDuration</span>=<span class=\"hljs-string\">{300}</span> /&gt;</span>\n\t\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">yAxisId</span>=<span class=\"hljs-string\">\"2\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"natural\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"impression\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> <span class=\"hljs-attr\">animationDuration</span>=<span class=\"hljs-string\">{300}</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n\n\t\t\t\t\t{\n\t\t\t\t\t\t(refAreaLeft &amp;&amp; refAreaRight) ? (\n\t\t\t\t\t\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ReferenceArea</span> <span class=\"hljs-attr\">yAxisId</span>=<span class=\"hljs-string\">\"1\"</span> <span class=\"hljs-attr\">x1</span>=<span class=\"hljs-string\">{refAreaLeft}</span> <span class=\"hljs-attr\">x2</span>=<span class=\"hljs-string\">{refAreaRight}</span> <span class=\"hljs-attr\">strokeOpacity</span>=<span class=\"hljs-string\">{0.3}</span> /&gt;</span>) : null\n\t\t\t\t\t}\n\t\t\t\t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span>\n\n\t\t\t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n\t\t);\n\t}\n}\n</code></pre></div>",
    "thr_22.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_22\"><pre id=\"thr_22_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React, { PureComponent } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> { PieChart, Pie, Legend, Tooltip, ResponsiveContainer } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'recharts'</span>;\n\n<span class=\"hljs-keyword\">const</span> data01 = [\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Group A'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">400</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Group B'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">300</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Group C'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">300</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Group D'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">200</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Group E'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">278</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Group F'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">189</span> },\n];\n\n<span class=\"hljs-keyword\">const</span> data02 = [\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Group A'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">2400</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Group B'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">4567</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Group C'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">1398</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Group D'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">9800</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Group E'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">3908</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Group F'</span>, <span class=\"hljs-attr\">value</span>: <span class=\"hljs-number\">4800</span> },\n];\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Example</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">PureComponent</span> </span>{\n  <span class=\"hljs-keyword\">static</span> demoUrl = <span class=\"hljs-string\">'https://codesandbox.io/s/two-simple-pie-chart-otx9h'</span>;\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ResponsiveContainer</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">\"100%\"</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">\"100%\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">PieChart</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{400}</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{400}</span>&gt;</span>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">&lt;<span class=\"hljs-name\">Pie</span>\n            <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"value\"</span>\n            <span class=\"hljs-attr\">isAnimationActive</span>=<span class=\"hljs-string\">{false}</span>\n            <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data01}</span>\n            <span class=\"hljs-attr\">cx</span>=<span class=\"hljs-string\">\"50%\"</span>\n            <span class=\"hljs-attr\">cy</span>=<span class=\"hljs-string\">\"50%\"</span>\n            <span class=\"hljs-attr\">outerRadius</span>=<span class=\"hljs-string\">{80}</span>\n            <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#8884d8\"</span>\n            <span class=\"hljs-attr\">label</span>\n          /&gt;</div></span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Pie</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"value\"</span> <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data02}</span> <span class=\"hljs-attr\">cx</span>=<span class=\"hljs-string\">{500}</span> <span class=\"hljs-attr\">cy</span>=<span class=\"hljs-string\">{200}</span> <span class=\"hljs-attr\">innerRadius</span>=<span class=\"hljs-string\">{40}</span> <span class=\"hljs-attr\">outerRadius</span>=<span class=\"hljs-string\">{80}</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> /&gt;</span>\n         <div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">PieChart</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ResponsiveContainer</span>&gt;</span></span>\n    );\n  }\n}\n<span class=\"hljs-comment\">//https://recharts.org/en-US/examples/TwoSimplePieChart</span></code></pre></div>",
    "thr_23.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_23\"><pre id=\"thr_23_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React, { PureComponent } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> { ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'recharts'</span>;\n\n<span class=\"hljs-keyword\">const</span> data01 = [\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">100</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">200</span>, <span class=\"hljs-attr\">z</span>: <span class=\"hljs-number\">200</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">120</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">100</span>, <span class=\"hljs-attr\">z</span>: <span class=\"hljs-number\">260</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">170</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">300</span>, <span class=\"hljs-attr\">z</span>: <span class=\"hljs-number\">400</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">140</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">250</span>, <span class=\"hljs-attr\">z</span>: <span class=\"hljs-number\">280</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">150</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">400</span>, <span class=\"hljs-attr\">z</span>: <span class=\"hljs-number\">500</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">110</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">280</span>, <span class=\"hljs-attr\">z</span>: <span class=\"hljs-number\">200</span> },\n];\n<span class=\"hljs-keyword\">const</span> data02 = [\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">300</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">300</span>, <span class=\"hljs-attr\">z</span>: <span class=\"hljs-number\">200</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">400</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">500</span>, <span class=\"hljs-attr\">z</span>: <span class=\"hljs-number\">260</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">200</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">700</span>, <span class=\"hljs-attr\">z</span>: <span class=\"hljs-number\">400</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">340</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">350</span>, <span class=\"hljs-attr\">z</span>: <span class=\"hljs-number\">280</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">560</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">500</span>, <span class=\"hljs-attr\">z</span>: <span class=\"hljs-number\">500</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">230</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">780</span>, <span class=\"hljs-attr\">z</span>: <span class=\"hljs-number\">200</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">500</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">400</span>, <span class=\"hljs-attr\">z</span>: <span class=\"hljs-number\">200</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">300</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">500</span>, <span class=\"hljs-attr\">z</span>: <span class=\"hljs-number\">260</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">240</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">300</span>, <span class=\"hljs-attr\">z</span>: <span class=\"hljs-number\">400</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">320</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">550</span>, <span class=\"hljs-attr\">z</span>: <span class=\"hljs-number\">280</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">500</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">400</span>, <span class=\"hljs-attr\">z</span>: <span class=\"hljs-number\">500</span> },\n  { <span class=\"hljs-attr\">x</span>: <span class=\"hljs-number\">420</span>, <span class=\"hljs-attr\">y</span>: <span class=\"hljs-number\">280</span>, <span class=\"hljs-attr\">z</span>: <span class=\"hljs-number\">200</span> },\n];\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Example</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">PureComponent</span> </span>{\n  <span class=\"hljs-keyword\">static</span> demoUrl = <span class=\"hljs-string\">'https://codesandbox.io/s/scatter-chart-with-double-yaxes-tiuob'</span>;\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ResponsiveContainer</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">\"100%\"</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">\"100%\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ScatterChart</span>\n          <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{500}</span>\n          <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{400}</span>\n          <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span>\n            <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">20</span>,\n            <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">20</span>,\n            <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">20</span>,\n            <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">20</span>,\n          }}</div>\n        &gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> /&gt;</span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"number\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"x\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"stature\"</span> <span class=\"hljs-attr\">unit</span>=<span class=\"hljs-string\">\"cm\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> <span class=\"hljs-attr\">yAxisId</span>=<span class=\"hljs-string\">\"left\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"number\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"y\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"weight\"</span> <span class=\"hljs-attr\">unit</span>=<span class=\"hljs-string\">\"kg\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span>\n            <span class=\"hljs-attr\">yAxisId</span>=<span class=\"hljs-string\">\"right\"</span>\n            <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"number\"</span>\n            <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"y\"</span>\n            <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"weight\"</span>\n            <span class=\"hljs-attr\">unit</span>=<span class=\"hljs-string\">\"kg\"</span>\n            <span class=\"hljs-attr\">orientation</span>=<span class=\"hljs-string\">\"right\"</span>\n            <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#82ca9d\"</span>\n          /&gt;</span></div><span class=\"hljs-tag\"></span>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\">&lt;<span class=\"hljs-name\">Tooltip</span> <span class=\"hljs-attr\">cursor</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">strokeDasharray:</span> '<span class=\"hljs-attr\">3</span> <span class=\"hljs-attr\">3</span>' }} /&gt;</div></span>\n         <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Scatter</span> <span class=\"hljs-attr\">yAxisId</span>=<span class=\"hljs-string\">\"left\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"A school\"</span> <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data01}</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#8884d8\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Scatter</span> <span class=\"hljs-attr\">yAxisId</span>=<span class=\"hljs-string\">\"right\"</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">\"A school\"</span> <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data02}</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ScatterChart</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ResponsiveContainer</span>&gt;</span></span>\n    );\n  }\n}\n<span class=\"hljs-comment\">//https://recharts.org/en-US/examples/MultipleYAxesScatterChart</span></code></pre></div>",
    "thr_27.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_27\"><pre id=\"thr_27_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React, { PureComponent } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'recharts'</span>;\n\n<span class=\"hljs-keyword\">const</span> data = [\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page A'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">4000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">2400</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2400</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page B'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">1398</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2210</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page C'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">9800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2290</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page D'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2780</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3908</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2000</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page E'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">1890</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2181</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page F'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2390</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2500</span>,\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">'Page G'</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3490</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4300</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2100</span>,\n  },\n];\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Example</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">PureComponent</span> </span>{\n  <span class=\"hljs-keyword\">static</span> demoUrl = <span class=\"hljs-string\">'https://codesandbox.io/s/stacked-area-chart-ix341'</span>;\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ResponsiveContainer</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">\"100%\"</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">\"100%\"</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">AreaChart</span>\n          <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{500}</span>\n          <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{400}</span>\n          <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n          <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span>\n            <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">10</span>,\n            <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">30</span>,\n            <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">0</span>,\n            <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">0</span>,\n          }}</div>\n        &gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n         <div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n          <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\">&lt;<span class=\"hljs-name\">Tooltip</span> /&gt;</div></span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Area</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"uv\"</span> <span class=\"hljs-attr\">stackId</span>=<span class=\"hljs-string\">\"1\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#8884d8\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Area</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"pv\"</span> <span class=\"hljs-attr\">stackId</span>=<span class=\"hljs-string\">\"1\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Area</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"amt\"</span> <span class=\"hljs-attr\">stackId</span>=<span class=\"hljs-string\">\"1\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#ffc658\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#ffc658\"</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">AreaChart</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ResponsiveContainer</span>&gt;</span></span>\n    );\n  }\n}\n<span class=\"hljs-comment\">//https://recharts.org/en-US/examples/StackedAreaChart</span></code></pre></div>",
    "thr_29.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_29\"><pre id=\"thr_29_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"./styles.css\"</span>;\n<span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n<span class=\"hljs-keyword\">import</span> {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Brush,\n  AreaChart,\n  Area\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"recharts\"</span>;\n\n<span class=\"hljs-keyword\">const</span> data = [\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Page A\"</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">4000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">2400</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2400</span>\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Page B\"</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">1398</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2210</span>\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Page C\"</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2000</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">9800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2290</span>\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Page D\"</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2780</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3908</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2000</span>\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Page E\"</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">1890</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2181</span>\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Page F\"</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">2390</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">3800</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2500</span>\n  },\n  {\n    <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">\"Page G\"</span>,\n    <span class=\"hljs-attr\">uv</span>: <span class=\"hljs-number\">3490</span>,\n    <span class=\"hljs-attr\">pv</span>: <span class=\"hljs-number\">4300</span>,\n    <span class=\"hljs-attr\">amt</span>: <span class=\"hljs-number\">2100</span>\n  }\n];\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span> <span class=\"hljs-title\">App</span>(<span class=\"hljs-params\"></span>) </span>{\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h4</span>&gt;</span>A demo of synchronized AreaCharts<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h4</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span>\n       <div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{500}</span>\n        <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{200}</span>\n        <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n        <span class=\"hljs-attr\">syncId</span>=<span class=\"hljs-string\">\"anyId\"</span>\n        <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span>\n          <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">10</span>,\n          <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">30</span>,\n          <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">0</span>,\n          <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">0</span>\n        }}</div>\n      &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n       <div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n       <div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n        <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"uv\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#8884d8\"</span> /&gt;</div></span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">p</span>&gt;</span>Maybe some other content<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">p</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span>\n        <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{500}</span>\n        <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{200}</span>\n        <span class=\"hljs-attr\"></span><span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\"><span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span></div><span class=\"hljs-string\"></span><span class=\"hljs-string\"></span>\n        <span class=\"hljs-attr\">syncId</span>=<span class=\"hljs-string\">\"anyId\"</span>\n        <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span>\n          <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">10</span>,\n          <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">30</span>,\n          <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">0</span>,\n          <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">0</span>\n        }}\n      &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"pv\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Brush</span> /&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">AreaChart</span>\n        <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{500}</span>\n        <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{200}</span>\n        <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n        <span class=\"hljs-attr\">syncId</span>=<span class=\"hljs-string\">\"anyId\"</span>\n        <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span>\n          <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">10</span>,\n          <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">30</span>,\n          <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">0</span>,\n          <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">0</span>\n        }}\n      &gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Area</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"pv\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> /&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">AreaChart</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  );\n}\n<span class=\"hljs-comment\">//https://codesandbox.io/s/synchronized-line-charts-zc3nl?file=/src/App.tsx:0-2165</span></code></pre></div>",
    "thr_30.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_30\"><pre id=\"thr_30_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React, { PureComponent } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'react'</span>;\n<span class=\"hljs-keyword\">import</span> {\n  Label,\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ReferenceArea,\n  ResponsiveContainer,\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'recharts'</span>;\n\n<span class=\"hljs-keyword\">const</span> initialData = [\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">1</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">4.11</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">100</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">2.39</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">120</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">1.37</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">150</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">4</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">1.16</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">180</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">5</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">2.29</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">200</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">6</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">499</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">7</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">0.53</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">50</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">8</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">2.52</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">100</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">9</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">1.79</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">200</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">10</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">2.94</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">222</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">11</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">4.3</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">210</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">12</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">4.41</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">300</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">13</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">2.1</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">50</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">14</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">8</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">190</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">15</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">0</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">300</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">16</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">9</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">400</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">17</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">200</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">18</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">2</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">50</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">19</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">3</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">100</span> },\n  { <span class=\"hljs-attr\">name</span>: <span class=\"hljs-number\">20</span>, <span class=\"hljs-attr\">cost</span>: <span class=\"hljs-number\">7</span>, <span class=\"hljs-attr\">impression</span>: <span class=\"hljs-number\">100</span> },\n];\n\n<span class=\"hljs-keyword\">const</span> getAxisYDomain = <span class=\"hljs-function\">(<span class=\"hljs-params\"><span class=\"hljs-keyword\">from</span>, to, ref, offset</span>) =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> refData = initialData.slice(<span class=\"hljs-keyword\">from</span> - <span class=\"hljs-number\">1</span>, to);\n  <span class=\"hljs-keyword\">let</span> [bottom, top] = [refData[<span class=\"hljs-number\">0</span>][ref], refData[<span class=\"hljs-number\">0</span>][ref]];\n  refData.forEach(<span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> {\n    <span class=\"hljs-keyword\">if</span> (d[ref] &gt; top) top = d[ref];\n    <span class=\"hljs-keyword\">if</span> (d[ref] &lt; bottom) bottom = d[ref];\n  });\n\n  <span class=\"hljs-keyword\">return</span> [(bottom | <span class=\"hljs-number\">0</span>) - offset, (top | <span class=\"hljs-number\">0</span>) + offset];\n};\n\n<span class=\"hljs-keyword\">const</span> initialState = {\n  <span class=\"hljs-attr\">data</span>: initialData,\n  <span class=\"hljs-attr\">left</span>: <span class=\"hljs-string\">'dataMin'</span>,\n  <span class=\"hljs-attr\">right</span>: <span class=\"hljs-string\">'dataMax'</span>,\n  <span class=\"hljs-attr\">refAreaLeft</span>: <span class=\"hljs-string\">''</span>,\n  <span class=\"hljs-attr\">refAreaRight</span>: <span class=\"hljs-string\">''</span>,\n  <span class=\"hljs-attr\">top</span>: <span class=\"hljs-string\">'dataMax+1'</span>,\n  <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-string\">'dataMin-1'</span>,\n  <span class=\"hljs-attr\">top2</span>: <span class=\"hljs-string\">'dataMax+20'</span>,\n  <span class=\"hljs-attr\">bottom2</span>: <span class=\"hljs-string\">'dataMin-20'</span>,\n  <span class=\"hljs-attr\">animation</span>: <span class=\"hljs-literal\">true</span>,\n};\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">Example</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">PureComponent</span> </span>{\n  <span class=\"hljs-keyword\">static</span> demoUrl = <span class=\"hljs-string\">'https://codesandbox.io/s/highlight-zomm-line-chart-v77bt'</span>;\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">constructor</span>(<span class=\"hljs-params\">props</span>)</span> {\n    <span class=\"hljs-built_in\">super</span>(props);\n    <span class=\"hljs-built_in\">this</span>.state = initialState;\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">zoom</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">let</span> { refAreaLeft, refAreaRight } = <span class=\"hljs-built_in\">this</span>.state;\n    <span class=\"hljs-keyword\">const</span> { data } = <span class=\"hljs-built_in\">this</span>.state;\n\n    <span class=\"hljs-keyword\">if</span> (refAreaLeft === refAreaRight || refAreaRight === <span class=\"hljs-string\">''</span>) {\n      <span class=\"hljs-built_in\">this</span>.setState(<span class=\"hljs-function\">() =&gt;</span> ({\n        <span class=\"hljs-attr\">refAreaLeft</span>: <span class=\"hljs-string\">''</span>,\n        <span class=\"hljs-attr\">refAreaRight</span>: <span class=\"hljs-string\">''</span>,\n      }));\n      <span class=\"hljs-keyword\">return</span>;\n    }\n\n    <span class=\"hljs-comment\">// xAxis domain</span>\n    <span class=\"hljs-keyword\">if</span> (refAreaLeft &gt; refAreaRight) [refAreaLeft, refAreaRight] = [refAreaRight, refAreaLeft];\n\n    <span class=\"hljs-comment\">// yAxis domain</span>\n    <span class=\"hljs-keyword\">const</span> [bottom, top] = getAxisYDomain(refAreaLeft, refAreaRight, <span class=\"hljs-string\">'cost'</span>, <span class=\"hljs-number\">1</span>);\n    <span class=\"hljs-keyword\">const</span> [bottom2, top2] = getAxisYDomain(refAreaLeft, refAreaRight, <span class=\"hljs-string\">'impression'</span>, <span class=\"hljs-number\">50</span>);\n\n    <span class=\"hljs-built_in\">this</span>.setState(<span class=\"hljs-function\">() =&gt;</span> ({\n      <span class=\"hljs-attr\">refAreaLeft</span>: <span class=\"hljs-string\">''</span>,\n      <span class=\"hljs-attr\">refAreaRight</span>: <span class=\"hljs-string\">''</span>,\n      <span class=\"hljs-attr\">data</span>: data.slice(),\n      <span class=\"hljs-attr\">left</span>: refAreaLeft,\n      <span class=\"hljs-attr\">right</span>: refAreaRight,\n      bottom,\n      top,\n      bottom2,\n      top2,\n    }));\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">zoomOut</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">const</span> { data } = <span class=\"hljs-built_in\">this</span>.state;\n    <span class=\"hljs-built_in\">this</span>.setState(<span class=\"hljs-function\">() =&gt;</span> ({\n      <span class=\"hljs-attr\">data</span>: data.slice(),\n      <span class=\"hljs-attr\">refAreaLeft</span>: <span class=\"hljs-string\">''</span>,\n      <span class=\"hljs-attr\">refAreaRight</span>: <span class=\"hljs-string\">''</span>,\n      <span class=\"hljs-attr\">left</span>: <span class=\"hljs-string\">'dataMin'</span>,\n      <span class=\"hljs-attr\">right</span>: <span class=\"hljs-string\">'dataMax'</span>,\n      <span class=\"hljs-attr\">top</span>: <span class=\"hljs-string\">'dataMax+1'</span>,\n      <span class=\"hljs-attr\">bottom</span>: <span class=\"hljs-string\">'dataMin'</span>,\n      <span class=\"hljs-attr\">top2</span>: <span class=\"hljs-string\">'dataMax+50'</span>,\n      <span class=\"hljs-attr\">bottom2</span>: <span class=\"hljs-string\">'dataMin+50'</span>,\n    }));\n  }\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">const</span> { data, barIndex, left, right, refAreaLeft, refAreaRight, top, bottom, top2, bottom2 } = <span class=\"hljs-built_in\">this</span>.state;\n\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"highlight-bar-charts\"</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">userSelect:</span> '<span class=\"hljs-attr\">none</span>', <span class=\"hljs-attr\">width:</span> '<span class=\"hljs-attr\">100</span>%' }}&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"button\"</span> <span class=\"hljs-attr\">className</span>=<span class=\"hljs-string\">\"btn update\"</span> <span class=\"hljs-attr\">onClick</span>=<span class=\"hljs-string\">{this.zoomOut.bind(this)}</span>&gt;</span>\n          Zoom Out\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span>\n\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ResponsiveContainer</span> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">\"100%\"</span> <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{400}</span>&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span>\n           <div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"> <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{800}</span>\n            <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{400}</span></div><span class=\"hljs-string\"></span>\n            <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Import_Data_0\" class=\"highlights fea_Import_Data\"><span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span></div><span class=\"hljs-string\"></span><span class=\"hljs-string\"></span>\n            <span class=\"hljs-attr\"></span></span><div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\"><span class=\"hljs-tag\"><span class=\"hljs-attr\">onMouseDown</span>=<span class=\"hljs-string\">{(e)</span> =&gt;</span> this.setState({ refAreaLeft: e.activeLabel })}\n            onMouseMove={(e) =&gt; this.state.refAreaLeft &amp;&amp; this.setState({ refAreaRight: e.activeLabel })}\n            // eslint-disable-next-line react/jsx-no-bind\n            onMouseUp={this.zoom.bind(this)}</div>\n          &gt;\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">CartesianGrid</span> <span class=\"hljs-attr\">strokeDasharray</span>=<span class=\"hljs-string\">\"3 3\"</span> /&gt;</span>\n            <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">allowDataOverflow</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"name\"</span> <span class=\"hljs-attr\">domain</span>=<span class=\"hljs-string\">{[left,</span> <span class=\"hljs-attr\">right</span>]} <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"number\"</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> <span class=\"hljs-attr\">allowDataOverflow</span> <span class=\"hljs-attr\">domain</span>=<span class=\"hljs-string\">{[bottom,</span> <span class=\"hljs-attr\">top</span>]} <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"number\"</span> <span class=\"hljs-attr\">yAxisId</span>=<span class=\"hljs-string\">\"1\"</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> <span class=\"hljs-attr\">orientation</span>=<span class=\"hljs-string\">\"right\"</span> <span class=\"hljs-attr\">allowDataOverflow</span> <span class=\"hljs-attr\">domain</span>=<span class=\"hljs-string\">{[bottom2,</span> <span class=\"hljs-attr\">top2</span>]} <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"number\"</span> <span class=\"hljs-attr\">yAxisId</span>=<span class=\"hljs-string\">\"2\"</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n           <div style=\"display: inline;\" id=\"Tooltip_0\" class=\"highlights fea_Tooltip\"> <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Tooltip</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n            <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">yAxisId</span>=<span class=\"hljs-string\">\"1\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"natural\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"cost\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span> <span class=\"hljs-attr\">animationDuration</span>=<span class=\"hljs-string\">{300}</span> /&gt;</span>\n            <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">yAxisId</span>=<span class=\"hljs-string\">\"2\"</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"natural\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"impression\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#82ca9d\"</span> <span class=\"hljs-attr\">animationDuration</span>=<span class=\"hljs-string\">{300}</span> /&gt;</span>\n</div>\n            {refAreaLeft &amp;&amp; refAreaRight ? (\n              <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ReferenceArea</span> <span class=\"hljs-attr\">yAxisId</span>=<span class=\"hljs-string\">\"1\"</span> <span class=\"hljs-attr\">x1</span>=<span class=\"hljs-string\">{refAreaLeft}</span> <span class=\"hljs-attr\">x2</span>=<span class=\"hljs-string\">{refAreaRight}</span> <span class=\"hljs-attr\">strokeOpacity</span>=<span class=\"hljs-string\">{0.3}</span> /&gt;</span>\n            ) : null}\n          <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">ResponsiveContainer</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n    );\n  }\n}\n<span class=\"hljs-comment\">//https://recharts.org/en-US/examples/HighlightAndZoomLineChart</span></code></pre></div>",
    "thr_6.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_6\"><pre id=\"thr_6_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React, { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n<span class=\"hljs-keyword\">import</span> { render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react-dom\"</span>;\n\n<span class=\"hljs-keyword\">import</span> { LineChart, Line, XAxis, YAxis, ReferenceArea } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"recharts\"</span>;\n\n<span class=\"hljs-keyword\">const</span> styles = {\n  <span class=\"hljs-attr\">fontFamily</span>: <span class=\"hljs-string\">\"sans-serif\"</span>,\n  <span class=\"hljs-attr\">textAlign</span>: <span class=\"hljs-string\">\"center\"</span>\n};\n\n<span class=\"hljs-keyword\">const</span> data = [];\n\n<span class=\"hljs-keyword\">const</span> rand = <span class=\"hljs-number\">300</span>;\n<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">7</span>; i++) {\n  <span class=\"hljs-keyword\">let</span> d = {\n    <span class=\"hljs-attr\">year</span>: <span class=\"hljs-number\">2000</span> + i,\n    <span class=\"hljs-attr\">value</span>: <span class=\"hljs-built_in\">Math</span>.random() * (rand + <span class=\"hljs-number\">50</span>) + <span class=\"hljs-number\">100</span>\n  };\n\n  data.push(d);\n}\n\n<span class=\"hljs-keyword\">const</span> App = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [showCircle, setShowCircle] = useState(<span class=\"hljs-literal\">false</span>);\n\n  <span class=\"hljs-keyword\">const</span> onMouseOver = <span class=\"hljs-function\">() =&gt;</span> {\n    setShowCircle(<span class=\"hljs-literal\">true</span>);\n  };\n\n  <span class=\"hljs-keyword\">const</span> onMouseOut = <span class=\"hljs-function\">() =&gt;</span> {\n    setShowCircle(<span class=\"hljs-literal\">false</span>);\n  };\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{styles}</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span>\n        <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{500}</span>\n        <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{300}</span>\n        <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n        <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">5</span>, <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">20</span>, <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">5</span>, <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">0</span> }}</div>\n      &gt;</span>\n        <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"value\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span> <span class=\"hljs-attr\">dot</span>=<span class=\"hljs-string\">{false}</span> /&gt;</div></span>\n        <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"year\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ReferenceArea</span>\n          <span class=\"hljs-attr\">x1</span>=<span class=\"hljs-string\">{2001}</span>\n          <span class=\"hljs-attr\">x2</span>=<span class=\"hljs-string\">{2003}</span>\n          <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\"><span class=\"hljs-attr\">onMouseOut</span>=<span class=\"hljs-string\">{onMouseOut}</span>\n          <span class=\"hljs-attr\">onMouseOver</span>=<span class=\"hljs-string\">{onMouseOver}</span></div><span class=\"hljs-string\"></span>\n          <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">\"an important period\"</span>\n        /&gt;</span>\n        <div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">{showCircle ? <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">circle</span> <span class=\"hljs-attr\">cx</span>=<span class=\"hljs-string\">{150}</span> <span class=\"hljs-attr\">cy</span>=<span class=\"hljs-string\">{50}</span> <span class=\"hljs-attr\">r</span>=<span class=\"hljs-string\">\"10\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"red\"</span> /&gt;</span> : null}</div>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  );\n};\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">App</span> /&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"root\"</span>));\n</code></pre></div>",
    "thr_7.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_7\"><pre id=\"thr_7_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React, { useState } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n<span class=\"hljs-keyword\">import</span> { render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react-dom\"</span>;\n\n<span class=\"hljs-keyword\">import</span> { LineChart, Line, XAxis, YAxis, ReferenceArea } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"recharts\"</span>;\n\n<span class=\"hljs-keyword\">const</span> styles = {\n  <span class=\"hljs-attr\">fontFamily</span>: <span class=\"hljs-string\">\"sans-serif\"</span>,\n  <span class=\"hljs-attr\">textAlign</span>: <span class=\"hljs-string\">\"center\"</span>\n};\n\n<span class=\"hljs-keyword\">const</span> data = [];\n\n<span class=\"hljs-keyword\">const</span> rand = <span class=\"hljs-number\">300</span>;\n<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">7</span>; i++) {\n  <span class=\"hljs-keyword\">let</span> d = {\n    <span class=\"hljs-attr\">year</span>: <span class=\"hljs-number\">2000</span> + i,\n    <span class=\"hljs-attr\">value</span>: <span class=\"hljs-built_in\">Math</span>.random() * (rand + <span class=\"hljs-number\">50</span>) + <span class=\"hljs-number\">100</span>\n  };\n\n  data.push(d);\n}\n\n<span class=\"hljs-keyword\">const</span> App = <span class=\"hljs-function\">() =&gt;</span> {\n  <span class=\"hljs-keyword\">const</span> [showCircle, setShowCircle] = useState(<span class=\"hljs-literal\">false</span>);\n\n  <span class=\"hljs-keyword\">const</span> onMouseOver = <span class=\"hljs-function\">() =&gt;</span> {\n    setShowCircle(<span class=\"hljs-literal\">true</span>);\n  };\n\n  <span class=\"hljs-keyword\">const</span> onMouseOut = <span class=\"hljs-function\">() =&gt;</span> {\n    setShowCircle(<span class=\"hljs-literal\">false</span>);\n  };\n\n  <span class=\"hljs-keyword\">return</span> (\n    <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{styles}</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span>\n        <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{500}</span>\n        <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{300}</span>\n        <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n        <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">5</span>, <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">20</span>, <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">5</span>, <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">0</span> }}</div>\n      &gt;</span>\n        <span class=\"hljs-tag\"><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">\"monotone\"</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"value\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span> <span class=\"hljs-attr\">dot</span>=<span class=\"hljs-string\">{false}</span> /&gt;</div></span>\n        <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"year\"</span> /&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ReferenceArea</span>\n          <span class=\"hljs-attr\">x1</span>=<span class=\"hljs-string\">{2001}</span>\n          <span class=\"hljs-attr\">x2</span>=<span class=\"hljs-string\">{2003}</span>\n          <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Mouse_Events_0\" class=\"highlights fea_Mouse_Events\"><span class=\"hljs-attr\">onMouseOut</span>=<span class=\"hljs-string\">{onMouseOut}</span>\n          <span class=\"hljs-attr\">onMouseOver</span>=<span class=\"hljs-string\">{onMouseOver}</span></div><span class=\"hljs-string\"></span>\n          <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">\"an important period\"</span>\n        /&gt;</span>\n        <div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\">{showCircle ? <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">circle</span> <span class=\"hljs-attr\">cx</span>=<span class=\"hljs-string\">{150}</span> <span class=\"hljs-attr\">cy</span>=<span class=\"hljs-string\">{50}</span> <span class=\"hljs-attr\">r</span>=<span class=\"hljs-string\">\"10\"</span> <span class=\"hljs-attr\">fill</span>=<span class=\"hljs-string\">\"red\"</span> /&gt;</span> : null}</div>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n  );\n};\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">App</span> /&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"root\"</span>));\n</code></pre></div>",
    "thr_9.js": "<div class=\"codeBlock hljs javascript\" id=\"thr_9\"><pre id=\"thr_9_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React, { Component } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n<span class=\"hljs-keyword\">import</span> {\n  YAxis,\n  XAxis,\n  HorizontalGridLines,\n  VerticalGridLines,\n  XYPlot,\n  AreaSeries,\n  Crosshair\n} <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react-vis\"</span>;\n<span class=\"hljs-keyword\">import</span> styles <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"./styles\"</span>;\n<span class=\"hljs-keyword\">import</span> <span class=\"hljs-string\">\"react-vis/dist/style.css\"</span>;\n<span class=\"hljs-keyword\">import</span> { simpleData } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"../util\"</span>;\n<span class=\"hljs-keyword\">import</span> moment <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"moment\"</span>;\n\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ReactVisArea</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title\">Component</span> </span>{\n  state = {\n    <span class=\"hljs-attr\">data</span>: [\n      simpleData().map(<span class=\"hljs-function\">(<span class=\"hljs-params\">{ x, y }</span>) =&gt;</span> ({ <span class=\"hljs-attr\">x</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(x).getTime(), y })),\n      simpleData().map(<span class=\"hljs-function\">(<span class=\"hljs-params\">{ x, y }</span>) =&gt;</span> ({ <span class=\"hljs-attr\">x</span>: <span class=\"hljs-keyword\">new</span> <span class=\"hljs-built_in\">Date</span>(x).getTime(), y }))\n    ],\n    <span class=\"hljs-attr\">crosshairValues</span>: []\n  };\n\n  _onMouseLeave = <span class=\"hljs-function\">() =&gt;</span> {\n    <span class=\"hljs-built_in\">this</span>.setState({ <span class=\"hljs-attr\">crosshairValues</span>: [] });\n  };\n  _onNearestX = <span class=\"hljs-function\">(<span class=\"hljs-params\">{ x, y }, e</span>) =&gt;</span> {\n    <span class=\"hljs-built_in\">this</span>.setState({ <span class=\"hljs-attr\">crosshairValues</span>: <span class=\"hljs-built_in\">this</span>.state.data.map(<span class=\"hljs-function\">(<span class=\"hljs-params\">d</span>) =&gt;</span> d[e.index]) });\n  };\n\n  <span class=\"hljs-function\"><span class=\"hljs-title\">render</span>(<span class=\"hljs-params\"></span>)</span> {\n    <span class=\"hljs-keyword\">const</span> { data, crosshairValues } = <span class=\"hljs-built_in\">this</span>.state;\n\n    <span class=\"hljs-keyword\">return</span> (\n      <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{styles.container}</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">h3</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{styles.title}</span>&gt;</span>React-vis Stacked Area Chart<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">h3</span>&gt;</span>\n        <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XYPlot</span>\n          <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{400}</span>\n          <span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{800}</span>\n          <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">32</span>, <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">60</span> }}</div>\n          <span class=\"hljs-attr\">stackedBy</span>=<span class=\"hljs-string\">\"y\"</span>\n          <span class=\"hljs-attr\">domain</span>=<span class=\"hljs-string\">{[0,</span> <span class=\"hljs-attr\">200</span>]}\n        &gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">VerticalGridLines</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">HorizontalGridLines</span> /&gt;</span>\n          <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span>\n            <span class=\"hljs-attr\">tickTotal</span>=<span class=\"hljs-string\">{10}</span>\n            <span class=\"hljs-attr\">tickFormat</span>=<span class=\"hljs-string\">{function</span> <span class=\"hljs-attr\">tickFormat</span>(<span class=\"hljs-attr\">d</span>) {\n              <span class=\"hljs-attr\">return</span> <span class=\"hljs-attr\">moment</span>(<span class=\"hljs-attr\">new</span> <span class=\"hljs-attr\">Date</span>(<span class=\"hljs-attr\">d</span>))<span class=\"hljs-attr\">.format</span>(\"<span class=\"hljs-attr\">mm:ss</span>\");\n            }}\n          /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">AreaSeries</span>\n            <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data[0]}</span>\n            <span class=\"hljs-attr\">onNearestX</span>=<span class=\"hljs-string\">{this._onNearestX}</span>\n            <span class=\"hljs-attr\">color</span>=<span class=\"hljs-string\">\"steelblue\"</span>\n            <span class=\"hljs-attr\">opacity</span>=<span class=\"hljs-string\">{0.5}</span>\n          /&gt;</span></div><span class=\"hljs-tag\"></span>\n        <div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\">  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">AreaSeries</span> <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data[1]}</span> <span class=\"hljs-attr\">color</span>=<span class=\"hljs-string\">\"slateblue\"</span> <span class=\"hljs-attr\">opacity</span>=<span class=\"hljs-string\">{0.5}</span> /&gt;</span>\n          <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Crosshair</span> <span class=\"hljs-attr\">values</span>=<span class=\"hljs-string\">{crosshairValues}</span> /&gt;</span><span class=\"hljs-tag\"></span></div><span class=\"hljs-tag\"></span>\n        <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">XYPlot</span>&gt;</span>\n      <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n    );\n  }\n}\n</code></pre></div>",
    "thr_12.js": "<div class=\"codeBlock hljs typescript\" id=\"thr_12\"><pre id=\"thr_12_code\" ><code class=\"python\"><span class=\"hljs-keyword\">import</span> React <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react\"</span>;\n<span class=\"hljs-keyword\">import</span> { render } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"react-dom\"</span>;\n\n<span class=\"hljs-keyword\">import</span> { LineChart, Line, XAxis, YAxis, ReferenceLine } <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">\"recharts\"</span>;\n\n<span class=\"hljs-keyword\">const</span> styles = {\n  <span class=\"hljs-attr\">fontFamily</span>: <span class=\"hljs-string\">\"sans-serif\"</span>,\n  <span class=\"hljs-attr\">textAlign</span>: <span class=\"hljs-string\">\"center\"</span>\n};\n\n<span class=\"hljs-keyword\">const</span> data = [];\n<span class=\"hljs-keyword\">const</span> launchDate = <span class=\"hljs-number\">2004</span>;\n\n<span class=\"hljs-keyword\">const</span> rand = <span class=\"hljs-number\">300</span>;\n<span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">let</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">7</span>; i++) {\n  <span class=\"hljs-keyword\">const</span> year = <span class=\"hljs-number\">2000</span> + i;\n  <span class=\"hljs-keyword\">const</span> value = <span class=\"hljs-built_in\">Math</span>.random() * (rand + <span class=\"hljs-number\">50</span>) + <span class=\"hljs-number\">100</span>;\n  <span class=\"hljs-keyword\">let</span> d = {\n    <span class=\"hljs-attr\">year</span>: year,\n    <span class=\"hljs-attr\">value</span>: value,\n    <span class=\"hljs-attr\">beforeLaunch</span>: year &lt;= launchDate ? value : <span class=\"hljs-literal\">undefined</span>\n  };\n\n  data.push(d);\n}\n\n<span class=\"hljs-comment\">// change type to see that the overlap might not be appropriate towards the</span>\n<span class=\"hljs-comment\">// end of the shorter chart</span>\n<span class=\"hljs-keyword\">const</span> <span class=\"hljs-keyword\">type</span> = <span class=\"hljs-string\">\"monotone\"</span>;\n\n<span class=\"hljs-keyword\">const</span> App = <span class=\"hljs-function\">() =&gt;</span> (\n  <span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">style</span>=<span class=\"hljs-string\">{styles}</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">LineChart</span>\n      <span class=\"hljs-attr\"></span><div style=\"display: inline;\" id=\"Canvas_0\" class=\"highlights fea_Canvas\"><span class=\"hljs-attr\">width</span>=<span class=\"hljs-string\">{500}</span>\n      <span class=\"hljs-attr\">height</span>=<span class=\"hljs-string\">{300}</span>\n      <span class=\"hljs-attr\">data</span>=<span class=\"hljs-string\">{data}</span>\n      <span class=\"hljs-attr\">margin</span>=<span class=\"hljs-string\">{{</span> <span class=\"hljs-attr\">top:</span> <span class=\"hljs-attr\">5</span>, <span class=\"hljs-attr\">right:</span> <span class=\"hljs-attr\">20</span>, <span class=\"hljs-attr\">bottom:</span> <span class=\"hljs-attr\">5</span>, <span class=\"hljs-attr\">left:</span> <span class=\"hljs-attr\">0</span> }}</div>\n    &gt;</span>\n      <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">{type}</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"value\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"#8884d8\"</span> <span class=\"hljs-attr\">dot</span>=<span class=\"hljs-string\">{false}</span> /&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">Line</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">{type}</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"beforeLaunch\"</span> <span class=\"hljs-attr\">stroke</span>=<span class=\"hljs-string\">\"red\"</span> <span class=\"hljs-attr\">dot</span>=<span class=\"hljs-string\">{false}</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n      <span class=\"hljs-tag\"></span><div style=\"display: inline;\" id=\"Axis_0\" class=\"highlights fea_Axis\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">XAxis</span> <span class=\"hljs-attr\">dataKey</span>=<span class=\"hljs-string\">\"year\"</span> /&gt;</span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">YAxis</span> /&gt;</span></div><span class=\"hljs-tag\"></span>\n      <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">ReferenceLine</span> <span class=\"hljs-attr\">x</span>=<span class=\"hljs-string\">{launchDate}</span> <span class=\"hljs-attr\">label</span>=<span class=\"hljs-string\">\"iPhone\"</span> /&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">LineChart</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span></span>\n);\n\nrender(<span class=\"xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">App</span> /&gt;</span></span>, <span class=\"hljs-built_in\">document</span>.getElementById(<span class=\"hljs-string\">\"root\"</span>));\n</code></pre></div>",
    "thr_19.js": "<div class=\"codeBlock hljs yaml\" id=\"thr_19\"><pre id=\"thr_19_code\" ><code class=\"python\"><span class=\"hljs-string\">/*</span> <span class=\"hljs-string\">eslint-disable</span> <span class=\"hljs-string\">max-classes-per-file</span> <span class=\"hljs-string\">*/</span>\n<span class=\"hljs-string\">import</span> <span class=\"hljs-string\">React,</span> { <span class=\"hljs-string\">PureComponent</span> } <span class=\"hljs-string\">from</span> <span class=\"hljs-string\">'react'</span><span class=\"hljs-string\">;</span>\n<span class=\"hljs-string\">import</span> { <span class=\"hljs-string\">Treemap</span>, <span class=\"hljs-string\">ResponsiveContainer</span> } <span class=\"hljs-string\">from</span> <span class=\"hljs-string\">'recharts'</span><span class=\"hljs-string\">;</span>\n\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">data</span> <span class=\"hljs-string\">=</span> [\n  {\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'axis'</span>,\n    <span class=\"hljs-attr\">children:</span> [\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Axes'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">1302</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Axis'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">24593</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'AxisGridLine'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">652</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'AxisLabel'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">636</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'CartesianAxes'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">6703</span> },\n    ],\n  },\n  {\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'controls'</span>,\n    <span class=\"hljs-attr\">children:</span> [\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'AnchorControl'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">2138</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'ClickControl'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">3824</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Control'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">1353</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'ControlList'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">4665</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'DragControl'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">2649</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'ExpandControl'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">2832</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'HoverControl'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">4896</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'IControl'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">763</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'PanZoomControl'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">5222</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'SelectionControl'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">7862</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'TooltipControl'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">8435</span> },\n    ],\n  },\n  {\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'data'</span>,\n    <span class=\"hljs-attr\">children:</span> [\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Data'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">20544</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'DataList'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">19788</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'DataSprite'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">10349</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'EdgeSprite'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">3301</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'NodeSprite'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">19382</span> },\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'render'</span>,\n        <span class=\"hljs-attr\">children:</span> [\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'ArrowType'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">698</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'EdgeRenderer'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">5569</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'IRenderer'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">353</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'ShapeRenderer'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">2247</span> },\n        ],\n      },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'ScaleBinding'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">11275</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Tree'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">7147</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'TreeBuilder'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">9930</span> },\n    ],\n  },\n  {\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'events'</span>,\n    <span class=\"hljs-attr\">children:</span> [\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'DataEvent'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">7313</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'SelectionEvent'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">6880</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'TooltipEvent'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">3701</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'VisualizationEvent'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">2117</span> },\n    ],\n  },\n  {\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'legend'</span>,\n    <span class=\"hljs-attr\">children:</span> [\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Legend'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">20859</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'LegendItem'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">4614</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'LegendRange'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">10530</span> },\n    ],\n  },\n  {\n    <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'operator'</span>,\n    <span class=\"hljs-attr\">children:</span> [\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'distortion'</span>,\n        <span class=\"hljs-attr\">children:</span> [\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'BifocalDistortion'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">4461</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Distortion'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">6314</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'FisheyeDistortion'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">3444</span> },\n        ],\n      },\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'encoder'</span>,\n        <span class=\"hljs-attr\">children:</span> [\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'ColorEncoder'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">3179</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Encoder'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">4060</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'PropertyEncoder'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">4138</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'ShapeEncoder'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">1690</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'SizeEncoder'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">1830</span> },\n        ],\n      },\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'filter'</span>,\n        <span class=\"hljs-attr\">children:</span> [\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'FisheyeTreeFilter'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">5219</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'GraphDistanceFilter'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">3165</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'VisibilityFilter'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">3509</span> },\n        ],\n      },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'IOperator'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">1286</span> },\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'label'</span>,\n        <span class=\"hljs-attr\">children:</span> [\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Labeler'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">9956</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'RadialLabeler'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">3899</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'StackedAreaLabeler'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">3202</span> },\n        ],\n      },\n      {\n        <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'layout'</span>,\n        <span class=\"hljs-attr\">children:</span> [\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'AxisLayout'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">6725</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'BundledEdgeRouter'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">3727</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'CircleLayout'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">9317</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'CirclePackingLayout'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">12003</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'DendrogramLayout'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">4853</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'ForceDirectedLayout'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">8411</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'IcicleTreeLayout'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">4864</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'IndentedTreeLayout'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">3174</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Layout'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">7881</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'NodeLinkTreeLayout'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">12870</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'PieLayout'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">2728</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'RadialTreeLayout'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">12348</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'RandomLayout'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">870</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'StackedAreaLayout'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">9121</span> },\n          { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'TreeMapLayout'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">9191</span> },\n        ],\n      },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'Operator'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">2490</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'OperatorList'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">5248</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'OperatorSequence'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">4190</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'OperatorSwitch'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">2581</span> },\n      { <span class=\"hljs-attr\">name:</span> <span class=\"hljs-string\">'SortOperator'</span>, <span class=\"hljs-attr\">size:</span> <span class=\"hljs-number\">2023</span> },\n    ],\n  },\n]<span class=\"hljs-string\">;</span>\n\n<span class=\"hljs-string\">const</span> <span class=\"hljs-string\">COLORS</span> <span class=\"hljs-string\">=</span> [<span class=\"hljs-string\">'#8889DD'</span>, <span class=\"hljs-string\">'#9597E4'</span>, <span class=\"hljs-string\">'#8DC77B'</span>, <span class=\"hljs-string\">'#A5D297'</span>, <span class=\"hljs-string\">'#E2CF45'</span>, <span class=\"hljs-string\">'#F8C12D'</span>]<span class=\"hljs-string\">;</span>\n\n<span class=\"hljs-string\">class</span> <span class=\"hljs-string\">CustomizedContent</span> <span class=\"hljs-string\">extends</span> <span class=\"hljs-string\">PureComponent</span> {\n  <span class=\"hljs-string\">render()</span> {\n    <span class=\"hljs-string\">const</span> { <span class=\"hljs-string\">root</span>, <span class=\"hljs-string\">depth</span>, <span class=\"hljs-string\">x</span>, <span class=\"hljs-string\">y</span>, <span class=\"hljs-string\">width</span>, <span class=\"hljs-string\">height</span>, <span class=\"hljs-string\">index</span>, <span class=\"hljs-string\">payload</span>, <span class=\"hljs-string\">colors</span>, <span class=\"hljs-string\">rank</span>, <span class=\"hljs-string\">name</span> } <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">this.props;</span>\n\n    <span class=\"hljs-string\">return</span> <span class=\"hljs-string\">(</span>\n      <span class=\"hljs-string\">&lt;g&gt;</span>\n        <span class=\"hljs-string\"></span><div style=\"display: inline;\" id=\"Shapes_0\" class=\"highlights fea_Shapes\"><span class=\"hljs-string\">&lt;rect</span>\n          <span class=\"hljs-string\"></span><span class=\"hljs-string\">x=</span>{<span class=\"hljs-string\">x</span>}\n          <span class=\"hljs-string\">y=</span>{<span class=\"hljs-string\">y</span>}\n          <span class=\"hljs-string\">width=</span>{<span class=\"hljs-string\">width</span>}\n          <span class=\"hljs-string\">height=</span>{<span class=\"hljs-string\">height</span>}\n          <span class=\"hljs-string\">style=<span class=\"hljs-template-variable\">{{\n            fill: depth &lt; 2 ? colors[Math.floor((index / root.children.length) * 6)] : 'none',\n            stroke: '#fff',\n            strokeWidth: 2 / (depth + 1e-10),\n            strokeOpacity: 1 / (depth + 1e-10),\n          }}</span></span>\n        <span class=\"hljs-string\">/&gt;</span></div><span class=\"hljs-string\"></span>\n        {<span class=\"hljs-string\">depth</span> <span class=\"hljs-string\">===</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-string\">?</span> <span class=\"hljs-string\">(</span>\n          <span class=\"hljs-string\">&lt;text</span> <span class=\"hljs-string\">x=</span>{<span class=\"hljs-string\">x</span> <span class=\"hljs-string\">+</span> <span class=\"hljs-string\">width</span> <span class=\"hljs-string\">/</span> <span class=\"hljs-number\">2</span>} <span class=\"hljs-string\">y=</span>{<span class=\"hljs-string\">y</span> <span class=\"hljs-string\">+</span> <span class=\"hljs-string\">height</span> <span class=\"hljs-string\">/</span> <span class=\"hljs-number\">2</span> <span class=\"hljs-string\">+</span> <span class=\"hljs-number\">7</span>} <span class=\"hljs-string\">textAnchor=\"middle\"</span> <span class=\"hljs-string\">fill=\"#fff\"</span> <span class=\"hljs-string\">fontSize=</span>{<span class=\"hljs-number\">14</span>}<span class=\"hljs-string\">&gt;\n            {name}\n</span>          <span class=\"hljs-string\">&lt;/text&gt;</span>\n        <span class=\"hljs-string\">)</span> <span class=\"hljs-string\">:</span> <span class=\"hljs-literal\">null</span>}\n        {<span class=\"hljs-string\">depth</span> <span class=\"hljs-string\">===</span> <span class=\"hljs-number\">1</span> <span class=\"hljs-string\">?</span> <span class=\"hljs-string\">(</span>\n          <span class=\"hljs-string\">&lt;text</span> <span class=\"hljs-string\">x=</span>{<span class=\"hljs-string\">x</span> <span class=\"hljs-string\">+</span> <span class=\"hljs-number\">4</span>} <span class=\"hljs-string\">y=</span>{<span class=\"hljs-string\">y</span> <span class=\"hljs-string\">+</span> <span class=\"hljs-number\">18</span>} <span class=\"hljs-string\">fill=\"#fff\"</span> <span class=\"hljs-string\">fontSize=</span>{<span class=\"hljs-number\">16</span>} <span class=\"hljs-string\">fillOpacity=</span>{<span class=\"hljs-number\">0.9</span>}<span class=\"hljs-string\">&gt;\n            {index + 1}\n</span>          <span class=\"hljs-string\">&lt;/text&gt;</span>\n        <span class=\"hljs-string\">)</span> <span class=\"hljs-string\">:</span> <span class=\"hljs-literal\">null</span>}\n      <span class=\"hljs-string\">&lt;/g&gt;</span>\n    <span class=\"hljs-string\">);</span>\n  }\n}\n\n<span class=\"hljs-string\">export</span> <span class=\"hljs-string\">default</span> <span class=\"hljs-string\">class</span> <span class=\"hljs-string\">Example</span> <span class=\"hljs-string\">extends</span> <span class=\"hljs-string\">PureComponent</span> {\n  <span class=\"hljs-string\">static</span> <span class=\"hljs-string\">demoUrl</span> <span class=\"hljs-string\">=</span> <span class=\"hljs-string\">'https://codesandbox.io/s/treemap-with-customized-content-7qxfp'</span><span class=\"hljs-string\">;</span>\n\n  <span class=\"hljs-string\">render()</span> {\n    <span class=\"hljs-string\">return</span> <span class=\"hljs-string\">(</span>\n      <span class=\"hljs-string\">&lt;ResponsiveContainer</span> <span class=\"hljs-string\">width=\"100%\"</span> <span class=\"hljs-string\">height=\"100%\"&gt;</span>\n        <span class=\"hljs-string\"></span><div style=\"display: inline;\" id=\"Shapes_1\" class=\"highlights fea_Shapes\"><span class=\"hljs-string\">&lt;Treemap</span>\n          <span class=\"hljs-string\">width=</span>{<span class=\"hljs-number\">400</span>}\n          <span class=\"hljs-string\">height=</span>{<span class=\"hljs-number\">200</span>}\n          <span class=\"hljs-string\">data=</span>{<span class=\"hljs-string\">data</span>}\n          <span class=\"hljs-string\">dataKey=\"size\"</span>\n          <span class=\"hljs-string\">ratio=</span>{<span class=\"hljs-number\">4</span> <span class=\"hljs-string\">/</span> <span class=\"hljs-number\">3</span>}\n          <span class=\"hljs-string\">stroke=\"#fff\"</span>\n          <span class=\"hljs-string\">fill=\"#8884d8\"</span>\n          <span class=\"hljs-string\">content=</span>{<span class=\"hljs-string\">&lt;CustomizedContent</span> <span class=\"hljs-string\">colors=</span>{<span class=\"hljs-string\">COLORS</span>} <span class=\"hljs-string\">/&gt;</span>}\n        <span class=\"hljs-string\">/&gt;</span></div><span class=\"hljs-string\"></span>\n      <span class=\"hljs-string\">&lt;/ResponsiveContainer&gt;</span>\n    <span class=\"hljs-string\">);</span>\n  }\n}\n<span class=\"hljs-string\">//https://recharts.org/en-US/examples/CustomContentTreemap</span></code></pre></div>"
  },
  "file concepts": {
    "fir_14.js": [
      "cat_Customizable_Components",
      "fea_Multiple_Chars",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Format",
      "fea_Import_Data",
      "fea_Data_Transformation"
    ],
    "fir_3.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Format",
      "fea_Import_Data",
      "fea_Data_Transformation"
    ],
    "fir_6.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Text",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Format",
      "fea_Data_Filtering",
      "fea_Data_Transformation",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events"
    ],
    "fir_13.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Text",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Filtering",
      "fea_Data_Transformation",
      "fea_Data_Grouping"
    ],
    "fir_21.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Text",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Import_Data"
    ],
    "fir_5.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Text",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Format",
      "fea_Import_Data",
      "fea_Data_Grouping",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events",
      "fea_Animations"
    ],
    "fir_16.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Text",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Format",
      "fea_Import_Data",
      "fea_Data_Transformation",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events"
    ],
    "fir_29.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Text",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Import_Data",
      "fea_Data_Transformation",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events"
    ],
    "fir_7.js": [
      "cat_Customizable_Components",
      "fea_Text",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Format",
      "fea_Import_Data",
      "fea_Data_Transformation",
      "fea_Data_Grouping"
    ],
    "fir_9.js": [
      "cat_Customizable_Components",
      "fea_Text",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Format",
      "fea_Import_Data",
      "fea_Data_Transformation",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events"
    ],
    "fir_11.js": [
      "cat_Customizable_Components",
      "fea_Text",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Format",
      "fea_Import_Data",
      "fea_Data_Transformation",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events"
    ],
    "fir_12.js": [
      "cat_Customizable_Components",
      "fea_Text",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "fir_15.js": [
      "cat_Customizable_Components",
      "fea_Text",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Import_Data",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events"
    ],
    "fir_17.js": [
      "cat_Customizable_Components",
      "fea_Text",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Transformation"
    ],
    "fir_24.js": [
      "cat_Customizable_Components",
      "fea_Text",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Import_Data",
      "cat_Interactions_and_Animations",
      "fea_Selection"
    ],
    "fir_25.js": [
      "cat_Customizable_Components",
      "fea_Text",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Import_Data",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events"
    ],
    "fir_26.js": [
      "cat_Customizable_Components",
      "fea_Text",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Format",
      "fea_Import_Data",
      "fea_Data_Grouping",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events"
    ],
    "fir_28.js": [
      "cat_Customizable_Components",
      "fea_Text",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Import_Data"
    ],
    "fir_1.js": [
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Format",
      "fea_Import_Data",
      "fea_Data_Transformation"
    ],
    "fir_2.js": [
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Import_Data"
    ],
    "fir_4.js": [
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Format",
      "fea_Import_Data",
      "fea_Data_Grouping"
    ],
    "fir_8.js": [
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Format",
      "fea_Import_Data",
      "fea_Data_Filtering",
      "fea_Data_Transformation",
      "fea_Data_Grouping",
      "cat_Interactions_and_Animations",
      "fea_Animations"
    ],
    "fir_10.js": [
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Format",
      "fea_Import_Data",
      "cat_Interactions_and_Animations",
      "fea_Zoom"
    ],
    "fir_19.js": [
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Import_Data"
    ],
    "fir_20.js": [
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "fir_23.js": [
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Import_Data",
      "fea_Data_Transformation",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events"
    ],
    "fir_30.js": [
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Import_Data",
      "fea_Data_Grouping"
    ],
    "fir_22.js": [
      "cat_Customizable_Components",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Import_Data",
      "cat_Interactions_and_Animations",
      "fea_Selection"
    ],
    "fir_27.js": [
      "cat_Customizable_Components",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "fir_18.js": [
      "cat_Customizable_Components",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Grouping"
    ],
    "sec_8.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Shapes"
    ],
    "sec_14.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Interactions_and_Animations",
      "fea_Animations"
    ],
    "sec_17.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Tooltip",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "sec_18.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Axis",
      "fea_Shapes",
      "cat_Interactions_and_Animations",
      "fea_Animations"
    ],
    "sec_21.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Tooltip",
      "fea_Shapes",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events"
    ],
    "sec_25.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Tooltip",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Transformation",
      "fea_Data_Grouping",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events"
    ],
    "sec_26.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Text",
      "fea_Shapes"
    ],
    "sec_27.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Text",
      "fea_Shapes"
    ],
    "sec_30.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Text",
      "fea_Shapes"
    ],
    "sec_2.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Shapes",
      "cat_Interactions_and_Animations",
      "fea_Animations"
    ],
    "sec_5.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Text",
      "fea_Axis",
      "fea_Shapes",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events",
      "fea_Animations"
    ],
    "sec_9.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Text",
      "fea_Axis",
      "fea_Shapes",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events",
      "fea_Animations"
    ],
    "sec_12.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Text",
      "fea_Axis",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Grouping",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events"
    ],
    "sec_16.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Shapes",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events"
    ],
    "sec_19.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Text",
      "fea_Axis",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Transformation"
    ],
    "sec_11.js": [
      "cat_Customizable_Components",
      "fea_Text",
      "fea_Shapes",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events",
      "fea_Animations"
    ],
    "sec_15.js": [
      "cat_Customizable_Components",
      "fea_Text",
      "fea_Axis",
      "cat_Interactions_and_Animations",
      "fea_Animations"
    ],
    "sec_22.js": [
      "cat_Customizable_Components",
      "fea_Text",
      "fea_Axis",
      "fea_Shapes"
    ],
    "sec_23.js": [
      "cat_Customizable_Components",
      "fea_Text",
      "fea_Axis",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Transformation"
    ],
    "sec_24.js": [
      "cat_Customizable_Components",
      "fea_Text",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Transformation"
    ],
    "sec_28.js": [
      "cat_Customizable_Components",
      "fea_Text",
      "fea_Axis",
      "fea_Shapes"
    ],
    "sec_29.js": [
      "cat_Customizable_Components",
      "fea_Text",
      "fea_Axis",
      "fea_Shapes"
    ],
    "sec_3.js": [
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes"
    ],
    "sec_6.js": [
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "cat_Interactions_and_Animations",
      "fea_Animations"
    ],
    "sec_13.js": [
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events"
    ],
    "sec_20.js": [
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Data_Transformation",
      "cat_Interactions_and_Animations",
      "fea_Animations"
    ],
    "sec_1.js": [
      "cat_Customizable_Components",
      "fea_Shapes",
      "cat_Interactions_and_Animations",
      "fea_Animations"
    ],
    "sec_4.js": [
      "cat_Customizable_Components",
      "fea_Shapes"
    ],
    "sec_10.js": [
      "cat_Customizable_Components",
      "fea_Shapes",
      "cat_Interactions_and_Animations",
      "fea_Animations"
    ],
    "thr_14.js": [
      "cat_Customizable_Components",
      "fea_Multiple_Chars",
      "fea_Tooltip",
      "fea_Text",
      "fea_Axis",
      "fea_Shapes"
    ],
    "thr_2.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "thr_3.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "thr_8.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "thr_13.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "thr_16.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "thr_17.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Shapes"
    ],
    "thr_18.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Shapes"
    ],
    "thr_20.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "thr_21.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "thr_24.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "thr_25.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "thr_26.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "thr_28.js": [
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "thr_1.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Shapes"
    ],
    "thr_4.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "thr_5.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Text",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events",
      "fea_Animations"
    ],
    "thr_10.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Shapes",
      "cat_Interactions_and_Animations",
      "fea_Animations"
    ],
    "thr_11.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "thr_15.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Interactions_and_Animations",
      "fea_Zoom",
      "fea_Mouse_Events"
    ],
    "thr_22.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Shapes"
    ],
    "thr_23.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "thr_27.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "thr_29.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Import_Data"
    ],
    "thr_30.js": [
      "cat_Customizable_Components",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Data_Processing",
      "fea_Import_Data",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events"
    ],
    "thr_6.js": [
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events"
    ],
    "thr_7.js": [
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes",
      "cat_Interactions_and_Animations",
      "fea_Mouse_Events"
    ],
    "thr_9.js": [
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "thr_12.js": [
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Canvas",
      "fea_Shapes"
    ],
    "thr_19.js": [
      "cat_Customizable_Components",
      "fea_Shapes"
    ]
  },
  "file info": {
    "fir_14.js": {
      "nlines": 98,
      "nchara": 8229
    },
    "fir_3.js": {
      "nlines": 71,
      "nchara": 6682
    },
    "fir_6.js": {
      "nlines": 263,
      "nchara": 19080
    },
    "fir_13.js": {
      "nlines": 259,
      "nchara": 29286
    },
    "fir_21.js": {
      "nlines": 109,
      "nchara": 11550
    },
    "fir_5.js": {
      "nlines": 108,
      "nchara": 11908
    },
    "fir_16.js": {
      "nlines": 227,
      "nchara": 28144
    },
    "fir_29.js": {
      "nlines": 119,
      "nchara": 10668
    },
    "fir_7.js": {
      "nlines": 78,
      "nchara": 8328
    },
    "fir_9.js": {
      "nlines": 94,
      "nchara": 9879
    },
    "fir_11.js": {
      "nlines": 122,
      "nchara": 10517
    },
    "fir_12.js": {
      "nlines": 109,
      "nchara": 11349
    },
    "fir_15.js": {
      "nlines": 102,
      "nchara": 8265
    },
    "fir_17.js": {
      "nlines": 60,
      "nchara": 9515
    },
    "fir_24.js": {
      "nlines": 68,
      "nchara": 7218
    },
    "fir_25.js": {
      "nlines": 104,
      "nchara": 10205
    },
    "fir_26.js": {
      "nlines": 133,
      "nchara": 12233
    },
    "fir_28.js": {
      "nlines": 70,
      "nchara": 7331
    },
    "fir_1.js": {
      "nlines": 51,
      "nchara": 4871
    },
    "fir_2.js": {
      "nlines": 55,
      "nchara": 4951
    },
    "fir_4.js": {
      "nlines": 54,
      "nchara": 5152
    },
    "fir_8.js": {
      "nlines": 122,
      "nchara": 10776
    },
    "fir_10.js": {
      "nlines": 135,
      "nchara": 10302
    },
    "fir_19.js": {
      "nlines": 118,
      "nchara": 10807
    },
    "fir_20.js": {
      "nlines": 99,
      "nchara": 6307
    },
    "fir_23.js": {
      "nlines": 71,
      "nchara": 7241
    },
    "fir_30.js": {
      "nlines": 100,
      "nchara": 9692
    },
    "fir_22.js": {
      "nlines": 51,
      "nchara": 6292
    },
    "fir_27.js": {
      "nlines": 54,
      "nchara": 4349
    },
    "fir_18.js": {
      "nlines": 259,
      "nchara": 24315
    },
    "sec_8.js": {
      "nlines": 80,
      "nchara": 6799
    },
    "sec_14.js": {
      "nlines": 75,
      "nchara": 6272
    },
    "sec_17.js": {
      "nlines": 113,
      "nchara": 6849
    },
    "sec_18.js": {
      "nlines": 87,
      "nchara": 5756
    },
    "sec_21.js": {
      "nlines": 106,
      "nchara": 7587
    },
    "sec_25.js": {
      "nlines": 88,
      "nchara": 6962
    },
    "sec_26.js": {
      "nlines": 110,
      "nchara": 5872
    },
    "sec_27.js": {
      "nlines": 110,
      "nchara": 5873
    },
    "sec_30.js": {
      "nlines": 112,
      "nchara": 5661
    },
    "sec_2.js": {
      "nlines": 49,
      "nchara": 4815
    },
    "sec_5.js": {
      "nlines": 545,
      "nchara": 32499
    },
    "sec_9.js": {
      "nlines": 185,
      "nchara": 14556
    },
    "sec_12.js": {
      "nlines": 120,
      "nchara": 8433
    },
    "sec_16.js": {
      "nlines": 100,
      "nchara": 8373
    },
    "sec_19.js": {
      "nlines": 132,
      "nchara": 13797
    },
    "sec_11.js": {
      "nlines": 251,
      "nchara": 22931
    },
    "sec_15.js": {
      "nlines": 773,
      "nchara": 85960
    },
    "sec_22.js": {
      "nlines": 79,
      "nchara": 6947
    },
    "sec_23.js": {
      "nlines": 117,
      "nchara": 5965
    },
    "sec_24.js": {
      "nlines": 83,
      "nchara": 4834
    },
    "sec_28.js": {
      "nlines": 74,
      "nchara": 6116
    },
    "sec_29.js": {
      "nlines": 76,
      "nchara": 5846
    },
    "sec_3.js": {
      "nlines": 255,
      "nchara": 17282
    },
    "sec_6.js": {
      "nlines": 93,
      "nchara": 9379
    },
    "sec_13.js": {
      "nlines": 75,
      "nchara": 6237
    },
    "sec_20.js": {
      "nlines": 76,
      "nchara": 6966
    },
    "sec_1.js": {
      "nlines": 51,
      "nchara": 4997
    },
    "sec_4.js": {
      "nlines": 16,
      "nchara": 1768
    },
    "sec_10.js": {
      "nlines": 65,
      "nchara": 5214
    },
    "thr_14.js": {
      "nlines": 163,
      "nchara": 15234
    },
    "thr_2.js": {
      "nlines": 178,
      "nchara": 17831
    },
    "thr_3.js": {
      "nlines": 178,
      "nchara": 18397
    },
    "thr_8.js": {
      "nlines": 70,
      "nchara": 6699
    },
    "thr_13.js": {
      "nlines": 184,
      "nchara": 20630
    },
    "thr_16.js": {
      "nlines": 108,
      "nchara": 8969
    },
    "thr_17.js": {
      "nlines": 76,
      "nchara": 6156
    },
    "thr_18.js": {
      "nlines": 61,
      "nchara": 5930
    },
    "thr_20.js": {
      "nlines": 113,
      "nchara": 9320
    },
    "thr_21.js": {
      "nlines": 86,
      "nchara": 7052
    },
    "thr_24.js": {
      "nlines": 88,
      "nchara": 12567
    },
    "thr_25.js": {
      "nlines": 105,
      "nchara": 8781
    },
    "thr_26.js": {
      "nlines": 79,
      "nchara": 6810
    },
    "thr_28.js": {
      "nlines": 94,
      "nchara": 11782
    },
    "thr_1.js": {
      "nlines": 71,
      "nchara": 6447
    },
    "thr_4.js": {
      "nlines": 123,
      "nchara": 9774
    },
    "thr_5.js": {
      "nlines": 188,
      "nchara": 17951
    },
    "thr_10.js": {
      "nlines": 196,
      "nchara": 16742
    },
    "thr_11.js": {
      "nlines": 131,
      "nchara": 10712
    },
    "thr_15.js": {
      "nlines": 167,
      "nchara": 17083
    },
    "thr_22.js": {
      "nlines": 46,
      "nchara": 5594
    },
    "thr_23.js": {
      "nlines": 63,
      "nchara": 9760
    },
    "thr_27.js": {
      "nlines": 78,
      "nchara": 7148
    },
    "thr_29.js": {
      "nlines": 123,
      "nchara": 10079
    },
    "thr_30.js": {
      "nlines": 152,
      "nchara": 17251
    },
    "thr_6.js": {
      "nlines": 59,
      "nchara": 5492
    },
    "thr_7.js": {
      "nlines": 59,
      "nchara": 5492
    },
    "thr_9.js": {
      "nlines": 67,
      "nchara": 6331
    },
    "thr_12.js": {
      "nlines": 49,
      "nchara": 5076
    },
    "thr_19.js": {
      "nlines": 193,
      "nchara": 21566
    }
  }
}