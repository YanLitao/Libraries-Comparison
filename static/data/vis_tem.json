{
  "api templates": {
    "fir": [
      {
        "cat_Customizable_Components": {
          "color": "rgb(246, 183, 60)",
          "num": 50,
          "codes": [
            "fir_14.js",
            "fir_35.js",
            "fir_40.js",
            "fir_3.js",
            "fir_6.js",
            "fir_13.js",
            "fir_21.js",
            "fir_4.js",
            "fir_34.js",
            "fir_36.js",
            "fir_37.js",
            "fir_16.js",
            "fir_29.js",
            "fir_11.js",
            "fir_7.js",
            "fir_12.js",
            "fir_15.js",
            "fir_17.js",
            "fir_24.js",
            "fir_25.js",
            "fir_26.js",
            "fir_28.js",
            "fir_5.js",
            "fir_9.js",
            "fir_31.js",
            "fir_33.js",
            "fir_38.js",
            "fir_39.js",
            "fir_42.js",
            "fir_44.js",
            "fir_45.js",
            "fir_46.js",
            "fir_47.js",
            "fir_48.js",
            "fir_49.js",
            "fir_1.js",
            "fir_2.js",
            "fir_8.js",
            "fir_10.js",
            "fir_19.js",
            "fir_20.js",
            "fir_23.js",
            "fir_30.js",
            "fir_22.js",
            "fir_32.js",
            "fir_41.js",
            "fir_43.js",
            "fir_50.js",
            "fir_27.js",
            "fir_18.js"
          ]
        }
      },
      {
        "fea_Multiple_Charts": {
          "color": "rgb(246, 183, 60)",
          "num": 3,
          "codes": [
            "fir_14.js",
            "fir_35.js",
            "fir_40.js"
          ]
        }
      },
      {
        "fea_Legend": {
          "color": "rgb(246, 183, 60)",
          "num": 9,
          "codes": [
            "fir_3.js",
            "fir_6.js",
            "fir_13.js",
            "fir_21.js",
            "fir_4.js",
            "fir_34.js",
            "fir_36.js",
            "fir_37.js",
            "fir_40.js"
          ]
        }
      },
      {
        "fea_Tooltip": {
          "color": "rgb(246, 183, 60)",
          "num": 4,
          "codes": [
            "fir_16.js",
            "fir_29.js",
            "fir_11.js",
            "fir_4.js"
          ]
        }
      },
      {
        "fea_Text": {
          "color": "rgb(246, 183, 60)",
          "num": 32,
          "codes": [
            "fir_6.js",
            "fir_13.js",
            "fir_21.js",
            "fir_16.js",
            "fir_29.js",
            "fir_7.js",
            "fir_11.js",
            "fir_12.js",
            "fir_15.js",
            "fir_17.js",
            "fir_24.js",
            "fir_25.js",
            "fir_26.js",
            "fir_28.js",
            "fir_4.js",
            "fir_5.js",
            "fir_9.js",
            "fir_31.js",
            "fir_33.js",
            "fir_34.js",
            "fir_35.js",
            "fir_36.js",
            "fir_38.js",
            "fir_39.js",
            "fir_40.js",
            "fir_42.js",
            "fir_44.js",
            "fir_45.js",
            "fir_46.js",
            "fir_47.js",
            "fir_48.js",
            "fir_49.js"
          ]
        }
      },
      {
        "fea_Axis": {
          "color": "rgb(246, 183, 60)",
          "num": 40,
          "codes": [
            "fir_14.js",
            "fir_3.js",
            "fir_6.js",
            "fir_13.js",
            "fir_21.js",
            "fir_16.js",
            "fir_29.js",
            "fir_7.js",
            "fir_11.js",
            "fir_12.js",
            "fir_15.js",
            "fir_17.js",
            "fir_25.js",
            "fir_28.js",
            "fir_1.js",
            "fir_2.js",
            "fir_8.js",
            "fir_10.js",
            "fir_19.js",
            "fir_20.js",
            "fir_23.js",
            "fir_30.js",
            "fir_22.js",
            "fir_4.js",
            "fir_5.js",
            "fir_9.js",
            "fir_32.js",
            "fir_34.js",
            "fir_35.js",
            "fir_36.js",
            "fir_37.js",
            "fir_38.js",
            "fir_39.js",
            "fir_40.js",
            "fir_41.js",
            "fir_43.js",
            "fir_44.js",
            "fir_45.js",
            "fir_49.js",
            "fir_50.js"
          ]
        }
      },
      {
        "fea_Canvas": {
          "color": "rgb(246, 183, 60)",
          "num": 47,
          "codes": [
            "fir_14.js",
            "fir_3.js",
            "fir_6.js",
            "fir_13.js",
            "fir_21.js",
            "fir_16.js",
            "fir_29.js",
            "fir_7.js",
            "fir_11.js",
            "fir_12.js",
            "fir_15.js",
            "fir_17.js",
            "fir_24.js",
            "fir_25.js",
            "fir_26.js",
            "fir_28.js",
            "fir_1.js",
            "fir_2.js",
            "fir_8.js",
            "fir_10.js",
            "fir_20.js",
            "fir_23.js",
            "fir_30.js",
            "fir_22.js",
            "fir_27.js",
            "fir_4.js",
            "fir_5.js",
            "fir_9.js",
            "fir_31.js",
            "fir_32.js",
            "fir_33.js",
            "fir_34.js",
            "fir_35.js",
            "fir_36.js",
            "fir_37.js",
            "fir_38.js",
            "fir_39.js",
            "fir_41.js",
            "fir_42.js",
            "fir_43.js",
            "fir_44.js",
            "fir_45.js",
            "fir_46.js",
            "fir_47.js",
            "fir_48.js",
            "fir_49.js",
            "fir_50.js"
          ]
        }
      },
      {
        "fea_Shapes": {
          "color": "rgb(246, 183, 60)",
          "num": 47,
          "codes": [
            "fir_14.js",
            "fir_3.js",
            "fir_6.js",
            "fir_13.js",
            "fir_21.js",
            "fir_16.js",
            "fir_29.js",
            "fir_7.js",
            "fir_11.js",
            "fir_12.js",
            "fir_15.js",
            "fir_17.js",
            "fir_24.js",
            "fir_25.js",
            "fir_26.js",
            "fir_28.js",
            "fir_1.js",
            "fir_2.js",
            "fir_8.js",
            "fir_10.js",
            "fir_19.js",
            "fir_20.js",
            "fir_23.js",
            "fir_30.js",
            "fir_22.js",
            "fir_27.js",
            "fir_18.js",
            "fir_4.js",
            "fir_5.js",
            "fir_9.js",
            "fir_31.js",
            "fir_32.js",
            "fir_33.js",
            "fir_34.js",
            "fir_35.js",
            "fir_36.js",
            "fir_37.js",
            "fir_38.js",
            "fir_39.js",
            "fir_40.js",
            "fir_41.js",
            "fir_43.js",
            "fir_44.js",
            "fir_46.js",
            "fir_47.js",
            "fir_48.js",
            "fir_49.js"
          ]
        }
      },
      {
        "cat_Data_Processing": {
          "color": "rgb(246, 183, 60)",
          "num": 46,
          "codes": [
            "fir_14.js",
            "fir_3.js",
            "fir_6.js",
            "fir_16.js",
            "fir_7.js",
            "fir_11.js",
            "fir_26.js",
            "fir_1.js",
            "fir_8.js",
            "fir_10.js",
            "fir_32.js",
            "fir_33.js",
            "fir_34.js",
            "fir_43.js",
            "fir_44.js",
            "fir_45.js",
            "fir_46.js",
            "fir_49.js",
            "fir_21.js",
            "fir_29.js",
            "fir_15.js",
            "fir_24.js",
            "fir_25.js",
            "fir_28.js",
            "fir_2.js",
            "fir_19.js",
            "fir_23.js",
            "fir_30.js",
            "fir_22.js",
            "fir_4.js",
            "fir_5.js",
            "fir_9.js",
            "fir_35.js",
            "fir_36.js",
            "fir_37.js",
            "fir_38.js",
            "fir_39.js",
            "fir_40.js",
            "fir_42.js",
            "fir_47.js",
            "fir_48.js",
            "fir_50.js",
            "fir_13.js",
            "fir_17.js",
            "fir_41.js",
            "fir_18.js"
          ]
        }
      },
      {
        "fea_Data_Format": {
          "color": "rgb(246, 183, 60)",
          "num": 18,
          "codes": [
            "fir_14.js",
            "fir_3.js",
            "fir_6.js",
            "fir_16.js",
            "fir_7.js",
            "fir_11.js",
            "fir_26.js",
            "fir_1.js",
            "fir_8.js",
            "fir_10.js",
            "fir_32.js",
            "fir_33.js",
            "fir_34.js",
            "fir_43.js",
            "fir_44.js",
            "fir_45.js",
            "fir_46.js",
            "fir_49.js"
          ]
        }
      },
      {
        "fea_Import_Data": {
          "color": "rgb(246, 183, 60)",
          "num": 39,
          "codes": [
            "fir_14.js",
            "fir_3.js",
            "fir_21.js",
            "fir_16.js",
            "fir_29.js",
            "fir_7.js",
            "fir_11.js",
            "fir_15.js",
            "fir_24.js",
            "fir_25.js",
            "fir_26.js",
            "fir_28.js",
            "fir_1.js",
            "fir_2.js",
            "fir_8.js",
            "fir_10.js",
            "fir_19.js",
            "fir_23.js",
            "fir_30.js",
            "fir_22.js",
            "fir_4.js",
            "fir_5.js",
            "fir_9.js",
            "fir_32.js",
            "fir_34.js",
            "fir_35.js",
            "fir_36.js",
            "fir_37.js",
            "fir_38.js",
            "fir_39.js",
            "fir_40.js",
            "fir_42.js",
            "fir_44.js",
            "fir_45.js",
            "fir_46.js",
            "fir_47.js",
            "fir_48.js",
            "fir_49.js",
            "fir_50.js"
          ]
        }
      },
      {
        "fea_Data_Filtering": {
          "color": "rgb(246, 183, 60)",
          "num": 6,
          "codes": [
            "fir_6.js",
            "fir_13.js",
            "fir_8.js",
            "fir_35.js",
            "fir_45.js",
            "fir_46.js"
          ]
        }
      },
      {
        "fea_Data_Transformation": {
          "color": "rgb(246, 183, 60)",
          "num": 17,
          "codes": [
            "fir_14.js",
            "fir_3.js",
            "fir_6.js",
            "fir_13.js",
            "fir_16.js",
            "fir_29.js",
            "fir_7.js",
            "fir_11.js",
            "fir_17.js",
            "fir_1.js",
            "fir_8.js",
            "fir_23.js",
            "fir_36.js",
            "fir_41.js",
            "fir_43.js",
            "fir_46.js",
            "fir_49.js"
          ]
        }
      },
      {
        "fea_Data_Grouping": {
          "color": "rgb(246, 183, 60)",
          "num": 10,
          "codes": [
            "fir_13.js",
            "fir_7.js",
            "fir_26.js",
            "fir_8.js",
            "fir_30.js",
            "fir_18.js",
            "fir_32.js",
            "fir_40.js",
            "fir_44.js",
            "fir_45.js"
          ]
        }
      },
      {
        "cat_Interactions_and_Animations": {
          "color": "rgb(246, 183, 60)",
          "num": 19,
          "codes": [
            "fir_24.js",
            "fir_22.js",
            "fir_49.js",
            "fir_10.js",
            "fir_6.js",
            "fir_16.js",
            "fir_29.js",
            "fir_11.js",
            "fir_15.js",
            "fir_25.js",
            "fir_26.js",
            "fir_23.js",
            "fir_4.js",
            "fir_5.js",
            "fir_31.js",
            "fir_33.js",
            "fir_42.js",
            "fir_8.js",
            "fir_41.js"
          ]
        }
      },
      {
        "fea_Selection": {
          "color": "rgb(246, 183, 60)",
          "num": 3,
          "codes": [
            "fir_24.js",
            "fir_22.js",
            "fir_49.js"
          ]
        }
      },
      {
        "fea_Zoom": {
          "color": "rgb(246, 183, 60)",
          "num": 1,
          "codes": [
            "fir_10.js"
          ]
        }
      },
      {
        "fea_Mouse_Events": {
          "color": "rgb(246, 183, 60)",
          "num": 13,
          "codes": [
            "fir_6.js",
            "fir_16.js",
            "fir_29.js",
            "fir_11.js",
            "fir_15.js",
            "fir_25.js",
            "fir_26.js",
            "fir_23.js",
            "fir_4.js",
            "fir_5.js",
            "fir_31.js",
            "fir_33.js",
            "fir_42.js"
          ]
        }
      },
      {
        "fea_Animations": {
          "color": "rgb(246, 183, 60)",
          "num": 5,
          "codes": [
            "fir_24.js",
            "fir_8.js",
            "fir_41.js",
            "fir_42.js",
            "fir_49.js"
          ]
        }
      },
      {
        "cat_Visualization_Types": {
          "color": "rgb(246, 183, 60)",
          "num": 44,
          "codes": [
            "fir_14.js",
            "fir_3.js",
            "fir_6.js",
            "fir_13.js",
            "fir_16.js",
            "fir_12.js",
            "fir_15.js",
            "fir_17.js",
            "fir_1.js",
            "fir_2.js",
            "fir_8.js",
            "fir_10.js",
            "fir_28.js",
            "fir_30.js",
            "fir_36.js",
            "fir_38.js",
            "fir_39.js",
            "fir_40.js",
            "fir_20.js",
            "fir_35.js",
            "fir_37.js",
            "fir_50.js",
            "fir_44.js",
            "fir_46.js",
            "fir_42.js",
            "fir_27.js",
            "fir_43.js",
            "fir_23.js",
            "fir_31.js",
            "fir_32.js",
            "fir_26.js",
            "fir_41.js",
            "fir_4.js",
            "fir_5.js",
            "fir_9.js",
            "fir_29.js",
            "fir_34.js",
            "fir_45.js",
            "fir_49.js",
            "fir_24.js",
            "fir_25.js",
            "fir_33.js",
            "fir_47.js",
            "fir_48.js"
          ]
        }
      },
      {
        "fea_Line_Chart": {
          "color": "rgb(246, 183, 60)",
          "num": 12,
          "codes": [
            "fir_14.js",
            "fir_3.js",
            "fir_6.js",
            "fir_13.js",
            "fir_16.js",
            "fir_12.js",
            "fir_15.js",
            "fir_17.js",
            "fir_1.js",
            "fir_2.js",
            "fir_8.js",
            "fir_10.js"
          ]
        }
      },
      {
        "fea_Area_Chart": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Bar_Chart": {
          "color": "rgb(246, 183, 60)",
          "num": 5,
          "codes": [
            "fir_13.js",
            "fir_12.js",
            "fir_28.js",
            "fir_30.js",
            "fir_36.js"
          ]
        }
      },
      {
        "fea_Pie_Chart": {
          "color": "rgb(246, 183, 60)",
          "num": 3,
          "codes": [
            "fir_38.js",
            "fir_39.js",
            "fir_40.js"
          ]
        }
      },
      {
        "fea_Scatter_Plot": {
          "color": "rgb(246, 183, 60)",
          "num": 4,
          "codes": [
            "fir_20.js",
            "fir_35.js",
            "fir_37.js",
            "fir_50.js"
          ]
        }
      },
      {
        "fea_Bubble_Chart": {
          "color": "rgb(246, 183, 60)",
          "num": 2,
          "codes": [
            "fir_44.js",
            "fir_46.js"
          ]
        }
      },
      {
        "fea_Bullet_Chart": {
          "color": "rgb(246, 183, 60)",
          "num": 1,
          "codes": [
            "fir_42.js"
          ]
        }
      },
      {
        "fea_Chord_Diagram": {
          "color": "rgb(246, 183, 60)",
          "num": 2,
          "codes": [
            "fir_27.js",
            "fir_43.js"
          ]
        }
      },
      {
        "fea_Force_Directed_Graph": {
          "color": "rgb(246, 183, 60)",
          "num": 2,
          "codes": [
            "fir_23.js",
            "fir_31.js"
          ]
        }
      },
      {
        "fea_Radar_Chart": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Radial_Area_Chart": {
          "color": "rgb(246, 183, 60)",
          "num": 1,
          "codes": [
            "fir_32.js"
          ]
        }
      },
      {
        "fea_Sankey_Diagram": {
          "color": "rgb(246, 183, 60)",
          "num": 1,
          "codes": [
            "fir_26.js"
          ]
        }
      },
      {
        "fea_Stream_Graph": {
          "color": "rgb(246, 183, 60)",
          "num": 1,
          "codes": [
            "fir_41.js"
          ]
        }
      },
      {
        "fea_Geo_Maps": {
          "color": "rgb(246, 183, 60)",
          "num": 4,
          "codes": [
            "fir_4.js",
            "fir_5.js",
            "fir_9.js",
            "fir_50.js"
          ]
        }
      },
      {
        "fea_Heatmap": {
          "color": "rgb(246, 183, 60)",
          "num": 3,
          "codes": [
            "fir_29.js",
            "fir_34.js",
            "fir_45.js"
          ]
        }
      },
      {
        "fea_Treemap": {
          "color": "rgb(246, 183, 60)",
          "num": 1,
          "codes": [
            "fir_49.js"
          ]
        }
      },
      {
        "fea_Tree": {
          "color": "rgb(246, 183, 60)",
          "num": 5,
          "codes": [
            "fir_24.js",
            "fir_25.js",
            "fir_33.js",
            "fir_47.js",
            "fir_48.js"
          ]
        }
      }
    ],
    "sec": [
      {
        "cat_Customizable_Components": {
          "color": "rgb(246, 183, 60)",
          "num": 45,
          "codes": [
            "sec_3.js",
            "sec_10.js",
            "sec_8.js",
            "sec_14.js",
            "sec_17.js",
            "sec_18.js",
            "sec_21.js",
            "sec_25.js",
            "sec_26.js",
            "sec_27.js",
            "sec_30.js",
            "sec_31.js",
            "sec_37.js",
            "sec_39.js",
            "sec_2.js",
            "sec_5.js",
            "sec_9.js",
            "sec_12.js",
            "sec_16.js",
            "sec_19.js",
            "sec_11.js",
            "sec_15.js",
            "sec_22.js",
            "sec_23.js",
            "sec_24.js",
            "sec_28.js",
            "sec_29.js",
            "sec_32.js",
            "sec_33.js",
            "sec_34.js",
            "sec_35.js",
            "sec_36.js",
            "sec_38.js",
            "sec_40.js",
            "sec_6.js",
            "sec_13.js",
            "sec_20.js",
            "sec_44.js",
            "sec_45.js",
            "sec_46.js",
            "sec_47.js",
            "sec_48.js",
            "sec_49.js",
            "sec_1.js",
            "sec_4.js"
          ]
        }
      },
      {
        "fea_Multiple_Charts": {
          "color": "rgb(246, 183, 60)",
          "num": 2,
          "codes": [
            "sec_3.js",
            "sec_10.js"
          ]
        }
      },
      {
        "fea_Legend": {
          "color": "rgb(246, 183, 60)",
          "num": 12,
          "codes": [
            "sec_8.js",
            "sec_14.js",
            "sec_17.js",
            "sec_18.js",
            "sec_21.js",
            "sec_25.js",
            "sec_26.js",
            "sec_27.js",
            "sec_30.js",
            "sec_31.js",
            "sec_37.js",
            "sec_39.js"
          ]
        }
      },
      {
        "fea_Tooltip": {
          "color": "rgb(246, 183, 60)",
          "num": 11,
          "codes": [
            "sec_8.js",
            "sec_14.js",
            "sec_17.js",
            "sec_21.js",
            "sec_25.js",
            "sec_2.js",
            "sec_5.js",
            "sec_9.js",
            "sec_12.js",
            "sec_16.js",
            "sec_19.js"
          ]
        }
      },
      {
        "fea_Text": {
          "color": "rgb(246, 183, 60)",
          "num": 24,
          "codes": [
            "sec_26.js",
            "sec_27.js",
            "sec_30.js",
            "sec_5.js",
            "sec_9.js",
            "sec_12.js",
            "sec_19.js",
            "sec_11.js",
            "sec_15.js",
            "sec_22.js",
            "sec_23.js",
            "sec_24.js",
            "sec_28.js",
            "sec_29.js",
            "sec_31.js",
            "sec_32.js",
            "sec_33.js",
            "sec_34.js",
            "sec_35.js",
            "sec_36.js",
            "sec_37.js",
            "sec_38.js",
            "sec_39.js",
            "sec_40.js"
          ]
        }
      },
      {
        "fea_Axis": {
          "color": "rgb(246, 183, 60)",
          "num": 23,
          "codes": [
            "sec_8.js",
            "sec_14.js",
            "sec_18.js",
            "sec_5.js",
            "sec_9.js",
            "sec_12.js",
            "sec_19.js",
            "sec_15.js",
            "sec_22.js",
            "sec_23.js",
            "sec_28.js",
            "sec_29.js",
            "sec_3.js",
            "sec_6.js",
            "sec_13.js",
            "sec_20.js",
            "sec_40.js",
            "sec_44.js",
            "sec_45.js",
            "sec_46.js",
            "sec_47.js",
            "sec_48.js",
            "sec_49.js"
          ]
        }
      },
      {
        "fea_Canvas": {
          "color": "rgb(246, 183, 60)",
          "num": 2,
          "codes": [
            "sec_14.js",
            "sec_17.js"
          ]
        }
      },
      {
        "fea_Shapes": {
          "color": "rgb(246, 183, 60)",
          "num": 28,
          "codes": [
            "sec_8.js",
            "sec_14.js",
            "sec_17.js",
            "sec_18.js",
            "sec_21.js",
            "sec_25.js",
            "sec_26.js",
            "sec_27.js",
            "sec_30.js",
            "sec_2.js",
            "sec_5.js",
            "sec_9.js",
            "sec_12.js",
            "sec_16.js",
            "sec_19.js",
            "sec_11.js",
            "sec_22.js",
            "sec_23.js",
            "sec_24.js",
            "sec_28.js",
            "sec_29.js",
            "sec_3.js",
            "sec_6.js",
            "sec_13.js",
            "sec_20.js",
            "sec_1.js",
            "sec_4.js",
            "sec_10.js"
          ]
        }
      },
      {
        "cat_Data_Processing": {
          "color": "rgb(246, 183, 60)",
          "num": 6,
          "codes": [
            "sec_25.js",
            "sec_19.js",
            "sec_23.js",
            "sec_24.js",
            "sec_20.js",
            "sec_12.js"
          ]
        }
      },
      {
        "fea_Data_Format": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Import_Data": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Data_Filtering": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Data_Transformation": {
          "color": "rgb(246, 183, 60)",
          "num": 5,
          "codes": [
            "sec_25.js",
            "sec_19.js",
            "sec_23.js",
            "sec_24.js",
            "sec_20.js"
          ]
        }
      },
      {
        "fea_Data_Grouping": {
          "color": "rgb(246, 183, 60)",
          "num": 2,
          "codes": [
            "sec_25.js",
            "sec_12.js"
          ]
        }
      },
      {
        "cat_Interactions_and_Animations": {
          "color": "rgb(246, 183, 60)",
          "num": 16,
          "codes": [
            "sec_21.js",
            "sec_25.js",
            "sec_5.js",
            "sec_9.js",
            "sec_12.js",
            "sec_16.js",
            "sec_11.js",
            "sec_13.js",
            "sec_14.js",
            "sec_18.js",
            "sec_2.js",
            "sec_15.js",
            "sec_6.js",
            "sec_20.js",
            "sec_1.js",
            "sec_10.js"
          ]
        }
      },
      {
        "fea_Selection": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Zoom": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Mouse_Events": {
          "color": "rgb(246, 183, 60)",
          "num": 8,
          "codes": [
            "sec_21.js",
            "sec_25.js",
            "sec_5.js",
            "sec_9.js",
            "sec_12.js",
            "sec_16.js",
            "sec_11.js",
            "sec_13.js"
          ]
        }
      },
      {
        "fea_Animations": {
          "color": "rgb(246, 183, 60)",
          "num": 11,
          "codes": [
            "sec_14.js",
            "sec_18.js",
            "sec_2.js",
            "sec_5.js",
            "sec_9.js",
            "sec_11.js",
            "sec_15.js",
            "sec_6.js",
            "sec_20.js",
            "sec_1.js",
            "sec_10.js"
          ]
        }
      },
      {
        "cat_Visualization_Types": {
          "color": "rgb(246, 183, 60)",
          "num": 49,
          "codes": [
            "sec_8.js",
            "sec_14.js",
            "sec_18.js",
            "sec_2.js",
            "sec_9.js",
            "sec_22.js",
            "sec_23.js",
            "sec_28.js",
            "sec_3.js",
            "sec_6.js",
            "sec_13.js",
            "sec_1.js",
            "sec_4.js",
            "sec_10.js",
            "sec_32.js",
            "sec_39.js",
            "sec_41.js",
            "sec_42.js",
            "sec_17.js",
            "sec_35.js",
            "sec_30.js",
            "sec_12.js",
            "sec_16.js",
            "sec_29.js",
            "sec_20.js",
            "sec_31.js",
            "sec_37.js",
            "sec_38.js",
            "sec_43.js",
            "sec_44.js",
            "sec_50.js",
            "sec_25.js",
            "sec_5.js",
            "sec_11.js",
            "sec_15.js",
            "sec_33.js",
            "sec_36.js",
            "sec_46.js",
            "sec_47.js",
            "sec_48.js",
            "sec_26.js",
            "sec_19.js",
            "sec_21.js",
            "sec_27.js",
            "sec_40.js",
            "sec_49.js",
            "sec_24.js",
            "sec_34.js",
            "sec_45.js"
          ]
        }
      },
      {
        "fea_Line_Chart": {
          "color": "rgb(246, 183, 60)",
          "num": 18,
          "codes": [
            "sec_8.js",
            "sec_14.js",
            "sec_18.js",
            "sec_2.js",
            "sec_9.js",
            "sec_22.js",
            "sec_23.js",
            "sec_28.js",
            "sec_3.js",
            "sec_6.js",
            "sec_13.js",
            "sec_1.js",
            "sec_4.js",
            "sec_10.js",
            "sec_32.js",
            "sec_39.js",
            "sec_41.js",
            "sec_42.js"
          ]
        }
      },
      {
        "fea_Area_Chart": {
          "color": "rgb(246, 183, 60)",
          "num": 2,
          "codes": [
            "sec_17.js",
            "sec_35.js"
          ]
        }
      },
      {
        "fea_Bar_Chart": {
          "color": "rgb(246, 183, 60)",
          "num": 14,
          "codes": [
            "sec_30.js",
            "sec_12.js",
            "sec_16.js",
            "sec_23.js",
            "sec_29.js",
            "sec_20.js",
            "sec_10.js",
            "sec_31.js",
            "sec_37.js",
            "sec_38.js",
            "sec_39.js",
            "sec_43.js",
            "sec_44.js",
            "sec_50.js"
          ]
        }
      },
      {
        "fea_Pie_Chart": {
          "color": "rgb(246, 183, 60)",
          "num": 11,
          "codes": [
            "sec_25.js",
            "sec_5.js",
            "sec_11.js",
            "sec_15.js",
            "sec_3.js",
            "sec_10.js",
            "sec_33.js",
            "sec_36.js",
            "sec_46.js",
            "sec_47.js",
            "sec_48.js"
          ]
        }
      },
      {
        "fea_Scatter_Plot": {
          "color": "rgb(246, 183, 60)",
          "num": 2,
          "codes": [
            "sec_26.js",
            "sec_19.js"
          ]
        }
      },
      {
        "fea_Bubble_Chart": {
          "color": "rgb(246, 183, 60)",
          "num": 4,
          "codes": [
            "sec_21.js",
            "sec_27.js",
            "sec_40.js",
            "sec_49.js"
          ]
        }
      },
      {
        "fea_Bullet_Chart": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Chord_Diagram": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Force_Directed_Graph": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Radar_Chart": {
          "color": "rgb(246, 183, 60)",
          "num": 3,
          "codes": [
            "sec_24.js",
            "sec_34.js",
            "sec_45.js"
          ]
        }
      },
      {
        "fea_Radial_Area_Chart": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Sankey_Diagram": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Stream_Graph": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Geo_Maps": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Heatmap": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Treemap": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Tree": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      }
    ],
    "thr": [
      {
        "cat_Customizable_Components": {
          "color": "rgb(246, 183, 60)",
          "num": 50,
          "codes": [
            "thr_14.js",
            "thr_2.js",
            "thr_3.js",
            "thr_13.js",
            "thr_21.js",
            "thr_4.js",
            "thr_29.js",
            "thr_34.js",
            "thr_44.js",
            "thr_50.js",
            "thr_8.js",
            "thr_16.js",
            "thr_17.js",
            "thr_18.js",
            "thr_20.js",
            "thr_24.js",
            "thr_25.js",
            "thr_26.js",
            "thr_28.js",
            "thr_41.js",
            "thr_43.js",
            "thr_45.js",
            "thr_1.js",
            "thr_5.js",
            "thr_10.js",
            "thr_11.js",
            "thr_15.js",
            "thr_22.js",
            "thr_23.js",
            "thr_27.js",
            "thr_30.js",
            "thr_32.js",
            "thr_33.js",
            "thr_35.js",
            "thr_37.js",
            "thr_42.js",
            "thr_47.js",
            "thr_48.js",
            "thr_36.js",
            "thr_6.js",
            "thr_7.js",
            "thr_9.js",
            "thr_12.js",
            "thr_38.js",
            "thr_39.js",
            "thr_46.js",
            "thr_31.js",
            "thr_40.js",
            "thr_49.js",
            "thr_19.js"
          ]
        }
      },
      {
        "fea_Multiple_Charts": {
          "color": "rgb(246, 183, 60)",
          "num": 10,
          "codes": [
            "thr_14.js",
            "thr_2.js",
            "thr_3.js",
            "thr_13.js",
            "thr_21.js",
            "thr_4.js",
            "thr_29.js",
            "thr_34.js",
            "thr_44.js",
            "thr_50.js"
          ]
        }
      },
      {
        "fea_Legend": {
          "color": "rgb(246, 183, 60)",
          "num": 19,
          "codes": [
            "thr_14.js",
            "thr_2.js",
            "thr_3.js",
            "thr_8.js",
            "thr_13.js",
            "thr_16.js",
            "thr_17.js",
            "thr_18.js",
            "thr_20.js",
            "thr_21.js",
            "thr_24.js",
            "thr_25.js",
            "thr_26.js",
            "thr_28.js",
            "thr_34.js",
            "thr_41.js",
            "thr_43.js",
            "thr_45.js",
            "thr_50.js"
          ]
        }
      },
      {
        "fea_Tooltip": {
          "color": "rgb(246, 183, 60)",
          "num": 35,
          "codes": [
            "thr_14.js",
            "thr_2.js",
            "thr_3.js",
            "thr_8.js",
            "thr_13.js",
            "thr_16.js",
            "thr_20.js",
            "thr_21.js",
            "thr_24.js",
            "thr_25.js",
            "thr_26.js",
            "thr_1.js",
            "thr_4.js",
            "thr_5.js",
            "thr_10.js",
            "thr_11.js",
            "thr_15.js",
            "thr_22.js",
            "thr_23.js",
            "thr_27.js",
            "thr_29.js",
            "thr_30.js",
            "thr_32.js",
            "thr_33.js",
            "thr_34.js",
            "thr_35.js",
            "thr_37.js",
            "thr_41.js",
            "thr_42.js",
            "thr_43.js",
            "thr_44.js",
            "thr_45.js",
            "thr_47.js",
            "thr_48.js",
            "thr_50.js"
          ]
        }
      },
      {
        "fea_Text": {
          "color": "rgb(246, 183, 60)",
          "num": 4,
          "codes": [
            "thr_14.js",
            "thr_5.js",
            "thr_36.js",
            "thr_44.js"
          ]
        }
      },
      {
        "fea_Axis": {
          "color": "rgb(246, 183, 60)",
          "num": 38,
          "codes": [
            "thr_14.js",
            "thr_2.js",
            "thr_3.js",
            "thr_8.js",
            "thr_13.js",
            "thr_16.js",
            "thr_20.js",
            "thr_21.js",
            "thr_24.js",
            "thr_25.js",
            "thr_26.js",
            "thr_28.js",
            "thr_1.js",
            "thr_4.js",
            "thr_5.js",
            "thr_10.js",
            "thr_11.js",
            "thr_15.js",
            "thr_23.js",
            "thr_27.js",
            "thr_29.js",
            "thr_30.js",
            "thr_6.js",
            "thr_7.js",
            "thr_9.js",
            "thr_12.js",
            "thr_32.js",
            "thr_34.js",
            "thr_37.js",
            "thr_38.js",
            "thr_39.js",
            "thr_41.js",
            "thr_42.js",
            "thr_43.js",
            "thr_45.js",
            "thr_46.js",
            "thr_48.js",
            "thr_50.js"
          ]
        }
      },
      {
        "fea_Canvas": {
          "color": "rgb(246, 183, 60)",
          "num": 40,
          "codes": [
            "thr_2.js",
            "thr_3.js",
            "thr_8.js",
            "thr_13.js",
            "thr_16.js",
            "thr_20.js",
            "thr_21.js",
            "thr_24.js",
            "thr_25.js",
            "thr_26.js",
            "thr_28.js",
            "thr_4.js",
            "thr_5.js",
            "thr_11.js",
            "thr_15.js",
            "thr_23.js",
            "thr_27.js",
            "thr_29.js",
            "thr_30.js",
            "thr_6.js",
            "thr_7.js",
            "thr_9.js",
            "thr_12.js",
            "thr_31.js",
            "thr_32.js",
            "thr_33.js",
            "thr_34.js",
            "thr_37.js",
            "thr_38.js",
            "thr_39.js",
            "thr_40.js",
            "thr_41.js",
            "thr_42.js",
            "thr_43.js",
            "thr_45.js",
            "thr_46.js",
            "thr_47.js",
            "thr_48.js",
            "thr_49.js",
            "thr_50.js"
          ]
        }
      },
      {
        "fea_Shapes": {
          "color": "rgb(246, 183, 60)",
          "num": 40,
          "codes": [
            "thr_14.js",
            "thr_2.js",
            "thr_3.js",
            "thr_8.js",
            "thr_13.js",
            "thr_16.js",
            "thr_17.js",
            "thr_18.js",
            "thr_20.js",
            "thr_21.js",
            "thr_24.js",
            "thr_25.js",
            "thr_26.js",
            "thr_28.js",
            "thr_1.js",
            "thr_4.js",
            "thr_5.js",
            "thr_10.js",
            "thr_11.js",
            "thr_15.js",
            "thr_22.js",
            "thr_23.js",
            "thr_27.js",
            "thr_29.js",
            "thr_30.js",
            "thr_6.js",
            "thr_7.js",
            "thr_9.js",
            "thr_12.js",
            "thr_19.js",
            "thr_31.js",
            "thr_32.js",
            "thr_33.js",
            "thr_36.js",
            "thr_38.js",
            "thr_40.js",
            "thr_44.js",
            "thr_47.js",
            "thr_48.js",
            "thr_49.js"
          ]
        }
      },
      {
        "cat_Data_Processing": {
          "color": "rgb(246, 183, 60)",
          "num": 2,
          "codes": [
            "thr_29.js",
            "thr_30.js"
          ]
        }
      },
      {
        "fea_Data_Format": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Import_Data": {
          "color": "rgb(246, 183, 60)",
          "num": 2,
          "codes": [
            "thr_29.js",
            "thr_30.js"
          ]
        }
      },
      {
        "fea_Data_Filtering": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Data_Transformation": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Data_Grouping": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "cat_Interactions_and_Animations": {
          "color": "rgb(246, 183, 60)",
          "num": 17,
          "codes": [
            "thr_32.js",
            "thr_2.js",
            "thr_3.js",
            "thr_13.js",
            "thr_24.js",
            "thr_1.js",
            "thr_4.js",
            "thr_15.js",
            "thr_29.js",
            "thr_41.js",
            "thr_5.js",
            "thr_30.js",
            "thr_6.js",
            "thr_7.js",
            "thr_35.js",
            "thr_10.js",
            "thr_39.js"
          ]
        }
      },
      {
        "fea_Selection": {
          "color": "rgb(246, 183, 60)",
          "num": 1,
          "codes": [
            "thr_32.js"
          ]
        }
      },
      {
        "fea_Zoom": {
          "color": "rgb(246, 183, 60)",
          "num": 9,
          "codes": [
            "thr_2.js",
            "thr_3.js",
            "thr_13.js",
            "thr_24.js",
            "thr_1.js",
            "thr_4.js",
            "thr_15.js",
            "thr_29.js",
            "thr_41.js"
          ]
        }
      },
      {
        "fea_Mouse_Events": {
          "color": "rgb(246, 183, 60)",
          "num": 7,
          "codes": [
            "thr_5.js",
            "thr_15.js",
            "thr_30.js",
            "thr_6.js",
            "thr_7.js",
            "thr_32.js",
            "thr_35.js"
          ]
        }
      },
      {
        "fea_Animations": {
          "color": "rgb(246, 183, 60)",
          "num": 5,
          "codes": [
            "thr_5.js",
            "thr_10.js",
            "thr_32.js",
            "thr_35.js",
            "thr_39.js"
          ]
        }
      },
      {
        "cat_Visualization_Types": {
          "color": "rgb(246, 183, 60)",
          "num": 50,
          "codes": [
            "thr_2.js",
            "thr_3.js",
            "thr_13.js",
            "thr_16.js",
            "thr_21.js",
            "thr_28.js",
            "thr_1.js",
            "thr_4.js",
            "thr_5.js",
            "thr_10.js",
            "thr_15.js",
            "thr_29.js",
            "thr_30.js",
            "thr_6.js",
            "thr_7.js",
            "thr_12.js",
            "thr_37.js",
            "thr_39.js",
            "thr_40.js",
            "thr_42.js",
            "thr_47.js",
            "thr_49.js",
            "thr_50.js",
            "thr_14.js",
            "thr_8.js",
            "thr_11.js",
            "thr_27.js",
            "thr_9.js",
            "thr_38.js",
            "thr_46.js",
            "thr_20.js",
            "thr_24.js",
            "thr_25.js",
            "thr_26.js",
            "thr_41.js",
            "thr_48.js",
            "thr_22.js",
            "thr_31.js",
            "thr_36.js",
            "thr_44.js",
            "thr_23.js",
            "thr_34.js",
            "thr_43.js",
            "thr_45.js",
            "thr_17.js",
            "thr_18.js",
            "thr_32.js",
            "thr_33.js",
            "thr_19.js",
            "thr_35.js"
          ]
        }
      },
      {
        "fea_Line_Chart": {
          "color": "rgb(246, 183, 60)",
          "num": 23,
          "codes": [
            "thr_2.js",
            "thr_3.js",
            "thr_13.js",
            "thr_16.js",
            "thr_21.js",
            "thr_28.js",
            "thr_1.js",
            "thr_4.js",
            "thr_5.js",
            "thr_10.js",
            "thr_15.js",
            "thr_29.js",
            "thr_30.js",
            "thr_6.js",
            "thr_7.js",
            "thr_12.js",
            "thr_37.js",
            "thr_39.js",
            "thr_40.js",
            "thr_42.js",
            "thr_47.js",
            "thr_49.js",
            "thr_50.js"
          ]
        }
      },
      {
        "fea_Area_Chart": {
          "color": "rgb(246, 183, 60)",
          "num": 11,
          "codes": [
            "thr_14.js",
            "thr_8.js",
            "thr_13.js",
            "thr_21.js",
            "thr_4.js",
            "thr_11.js",
            "thr_27.js",
            "thr_29.js",
            "thr_9.js",
            "thr_38.js",
            "thr_46.js"
          ]
        }
      },
      {
        "fea_Bar_Chart": {
          "color": "rgb(246, 183, 60)",
          "num": 12,
          "codes": [
            "thr_14.js",
            "thr_2.js",
            "thr_3.js",
            "thr_20.js",
            "thr_21.js",
            "thr_24.js",
            "thr_25.js",
            "thr_26.js",
            "thr_38.js",
            "thr_41.js",
            "thr_48.js",
            "thr_50.js"
          ]
        }
      },
      {
        "fea_Pie_Chart": {
          "color": "rgb(246, 183, 60)",
          "num": 5,
          "codes": [
            "thr_13.js",
            "thr_22.js",
            "thr_31.js",
            "thr_36.js",
            "thr_44.js"
          ]
        }
      },
      {
        "fea_Scatter_Plot": {
          "color": "rgb(246, 183, 60)",
          "num": 5,
          "codes": [
            "thr_23.js",
            "thr_34.js",
            "thr_43.js",
            "thr_45.js",
            "thr_50.js"
          ]
        }
      },
      {
        "fea_Bubble_Chart": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Bullet_Chart": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Chord_Diagram": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Force_Directed_Graph": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Radar_Chart": {
          "color": "rgb(246, 183, 60)",
          "num": 3,
          "codes": [
            "thr_17.js",
            "thr_18.js",
            "thr_32.js"
          ]
        }
      },
      {
        "fea_Radial_Area_Chart": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Sankey_Diagram": {
          "color": "rgb(246, 183, 60)",
          "num": 1,
          "codes": [
            "thr_33.js"
          ]
        }
      },
      {
        "fea_Stream_Graph": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Geo_Maps": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      },
      {
        "fea_Heatmap": {
          "color": "rgb(246, 183, 60)",
          "num": 1,
          "codes": [
            "thr_43.js"
          ]
        }
      },
      {
        "fea_Treemap": {
          "color": "rgb(246, 183, 60)",
          "num": 3,
          "codes": [
            "thr_19.js",
            "thr_35.js",
            "thr_44.js"
          ]
        }
      },
      {
        "fea_Tree": {
          "color": "#12232E",
          "num": 0,
          "codes": []
        }
      }
    ]
  },
  "all templates": [
    {
      "name": "cat_Customizable_Components",
      "definition": "A first-level concept",
      "fir": 50,
      "sec": 45,
      "thr": 50
    },
    {
      "name": "fea_Multiple_Charts",
      "definition": "It is to visualize many different dimensions of the same dataset in parallel, as small multiple charts",
      "fir": 3,
      "sec": 2,
      "thr": 10
    },
    {
      "name": "fea_Legend",
      "definition": "Legends identify the meaning of various elements in a data visualization and can be used as an alternative to labeling data directly.",
      "fir": 9,
      "sec": 12,
      "thr": 19
    },
    {
      "name": "fea_Tooltip",
      "definition": "A tooltip is anything that appears in the form of text labels when you hover over an element or focus on a particular object.",
      "fir": 4,
      "sec": 11,
      "thr": 35
    },
    {
      "name": "fea_Text",
      "definition": "Text concept includes the title, axis names, text on the tooltips, and annotations on the graph.",
      "fir": 32,
      "sec": 24,
      "thr": 4
    },
    {
      "name": "fea_Axis",
      "definition": "The axis component renders human-readable reference marks for scales.",
      "fir": 40,
      "sec": 23,
      "thr": 38
    },
    {
      "name": "fea_Canvas",
      "definition": "Canvas is an HTML element that you can embed in your HTML document, and draw shapes and text using JavaScript. This concept also includes the 'SVG' and 'g' elements.",
      "fir": 47,
      "sec": 2,
      "thr": 40
    },
    {
      "name": "fea_Shapes",
      "definition": "Shapes refer to the various elements on the graphs, which includes lines, circles, rectangles, the nodes and links on the sankey diagram, treemap, etc.",
      "fir": 47,
      "sec": 28,
      "thr": 40
    },
    {
      "name": "cat_Data_Processing",
      "definition": "A first-level concept",
      "fir": 46,
      "sec": 6,
      "thr": 2
    },
    {
      "name": "fea_Data_Format",
      "definition": "Time formatting, numbers, text formatting",
      "fir": 18,
      "sec": 0,
      "thr": 0
    },
    {
      "name": "fea_Import_Data",
      "definition": "A process that import the data from CSV, TSV, JSON or other resources.",
      "fir": 39,
      "sec": 0,
      "thr": 2
    },
    {
      "name": "fea_Data_Filtering",
      "definition": "It is used to filter the given selection and return a new selection for which the filter is true.",
      "fir": 6,
      "sec": 0,
      "thr": 0
    },
    {
      "name": "fea_Data_Transformation",
      "definition": "It includes sorting, finding the max and min, nesting and more.",
      "fir": 17,
      "sec": 5,
      "thr": 0
    },
    {
      "name": "fea_Data_Grouping",
      "definition": "",
      "fir": 10,
      "sec": 2,
      "thr": 0
    },
    {
      "name": "cat_Interactions_and_Animations",
      "definition": "A first-level concept",
      "fir": 19,
      "sec": 16,
      "thr": 17
    },
    {
      "name": "fea_Selection",
      "definition": "Drop-down selection, using mouse to draw a region, trigger a checkbox",
      "fir": 3,
      "sec": 0,
      "thr": 1
    },
    {
      "name": "fea_Zoom",
      "definition": "Panning and zooming are popular interaction techniques which let the user focus on a region of interest by restricting the view.",
      "fir": 1,
      "sec": 0,
      "thr": 9
    },
    {
      "name": "fea_Mouse_Events",
      "definition": "Using mouse to interact with an element on the page - hovers over or clicks it",
      "fir": 13,
      "sec": 8,
      "thr": 7
    },
    {
      "name": "fea_Animations",
      "definition": "The elements on the page will move or change based on some pre-defined functions",
      "fir": 5,
      "sec": 11,
      "thr": 5
    },
    {
      "name": "cat_Visualization_Types",
      "definition": "",
      "fir": 44,
      "sec": 49,
      "thr": 50
    },
    {
      "name": "fea_Line_Chart",
      "definition": "",
      "fir": 12,
      "sec": 18,
      "thr": 23
    },
    {
      "name": "fea_Area_Chart",
      "definition": "",
      "fir": 0,
      "sec": 2,
      "thr": 11
    },
    {
      "name": "fea_Bar_Chart",
      "definition": "",
      "fir": 5,
      "sec": 14,
      "thr": 12
    },
    {
      "name": "fea_Pie_Chart",
      "definition": "Including pie charts and donut charts.",
      "fir": 3,
      "sec": 11,
      "thr": 5
    },
    {
      "name": "fea_Scatter_Plot",
      "definition": "",
      "fir": 4,
      "sec": 2,
      "thr": 5
    },
    {
      "name": "fea_Bubble_Chart",
      "definition": "",
      "fir": 2,
      "sec": 4,
      "thr": 0
    },
    {
      "name": "fea_Bullet_Chart",
      "definition": "A bullet graph is a variation of a bar graph",
      "fir": 1,
      "sec": 0,
      "thr": 0
    },
    {
      "name": "fea_Chord_Diagram",
      "definition": "A chord diagram represents flows or connections between several entities",
      "fir": 2,
      "sec": 0,
      "thr": 0
    },
    {
      "name": "fea_Force_Directed_Graph",
      "definition": "Force-directed graph drawing algorithms assign forces among the set of edges and the set of nodes of a graph drawing.",
      "fir": 2,
      "sec": 0,
      "thr": 0
    },
    {
      "name": "fea_Radar_Chart",
      "definition": "",
      "fir": 0,
      "sec": 3,
      "thr": 3
    },
    {
      "name": "fea_Radial_Area_Chart",
      "definition": "Radial Area Chart is a variation of Area Chart",
      "fir": 1,
      "sec": 0,
      "thr": 0
    },
    {
      "name": "fea_Sankey_Diagram",
      "definition": "Sankey diagrams are a type of flow diagram in which the width of the arrows is proportional to the flow rate.",
      "fir": 1,
      "sec": 0,
      "thr": 1
    },
    {
      "name": "fea_Stream_Graph",
      "definition": "A Stream graph is a type of stacked area chart.",
      "fir": 1,
      "sec": 0,
      "thr": 0
    },
    {
      "name": "fea_Geo_Maps",
      "definition": "A geomap is a map of a country, continent, or region map, with colors and values assigned to specific regions. ",
      "fir": 4,
      "sec": 0,
      "thr": 0
    },
    {
      "name": "fea_Heatmap",
      "definition": "Heatmap is a data visualization technique that shows magnitude of a phenomenon as color in two dimensions.",
      "fir": 3,
      "sec": 0,
      "thr": 1
    },
    {
      "name": "fea_Treemap",
      "definition": "Treemapping is a method for displaying hierarchical data using nested figures, usually rectangles",
      "fir": 1,
      "sec": 0,
      "thr": 3
    },
    {
      "name": "fea_Tree",
      "definition": "A dendrogram shows a hierarchical structure. It is constituted of a root node that gives birth to several nodes connected by edges or branches. ",
      "fir": 5,
      "sec": 0,
      "thr": 0
    }
  ],
  "labeled files": {
    "fir_14": "<div class=\"codeBlock hljs javascript\" id=\"fir_14\"><pre id=\"fir_14_code\" style=\"\"><code class=\"javascript\">// Set the dimensions of the canvas / graph\nvar\tmargin = {top: 30, right: 20, bottom: 30, left: 50},\n\twidth = 400 - margin.left - margin.right,\n\theight = 220 - margin.top - margin.bottom;\n\n// Parse the date / time\n<div class=\"highlights fea_Data_Format\" id=\"Data_Format_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var\tparseDate = d3.time.format(\"%d-%b-%y\").parse;</div>\n\n// Set the ranges\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var\tx = d3.time.<span class=\"fea_Axis_keys udls\">scale</span>().range([0, width]);\nvar\ty = d3.<span class=\"fea_Axis_keys udls\">scale</span>.linear().range([height, 0]);\n\n// Define the axes\nvar\tx<span class=\"fea_Axis_keys udls\">Axis</span> = d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>().<span class=\"fea_Axis_keys udls\">scale</span>(x)\n\t.orient(\"bottom\").ticks(5);\n\nvar\ty<span class=\"fea_Axis_keys udls\">Axis</span> = d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>().<span class=\"fea_Axis_keys udls\">scale</span>(y)\n\t.orient(\"left\").ticks(5);</div>\n\n// Define the <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">line</span></div>\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var\tvalueline = d3.svg.line()\n\t.x(function(d) { return x(d.date); })\n\t.y(function(d) { return y(d.close); });</div>\n    \n// Adds the svg canvas\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var\tchart1 = d3.select(\"body\")\n\t.append(\"svg\")\n\t\t.attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right)\n\t\t.attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom)\n\t.append(\"g\")\n\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\n// Get the data\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.csv(\"<span class=\"fea_Import_Data_keys udls\">data</span>1.csv\"</div>, function(error, data) {\n\tdata.forEach(function(d) {\n\t\td.date = parseDate(d.date);\n\t\td.close = +d.close;\n\t});\n\n\t// Scale the range of the data\n\tx.domain(d3.extent(data, function(d) { return d.date; }));\n\ty.domain([0, <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.<span class=\"fea_Data_Transformation_keys udls\">max</span>(<span class=\"fea_Data_Transformation_keys udls\">data</span>, function(d) { return d.close; })</div>]);\n\n\t// Add the valueline path.\n\t<div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">chart1.append(\"path\")\n\t\t.attr(\"class\", \"line\")\n\t\t.attr(\"d\", valueline(<span class=\"fea_Shapes_keys udls\">data</span>));</div>\n\n\t// Add the X Axis\n\t<div class=\"highlights fea_Axis\" id=\"Axis_2\" style=\"display: inline; background-color: rgb(246, 183, 60);\">chart1.append(\"g\")\n\t\t.attr(\"class\", \"x <span class=\"fea_Axis_keys udls\">axis</span>\")\n\t\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t\t.call(x<span class=\"fea_Axis_keys udls\">Axis</span>);\n\n\t// Add the Y <span class=\"fea_Axis_keys udls\">Axis</span>\n\tchart1.append(\"g\")\n\t\t.attr(\"class\", \"y <span class=\"fea_Axis_keys udls\">axis</span>\")\n\t\t.call(y<span class=\"fea_Axis_keys udls\">Axis</span>);</div>\n\n});\n\n// Adds the svg canvas\n<div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var\t<span class=\"fea_Multiple_Charts_keys udls\">chart</span>2 = d3.select(\"body\")\n\t.append(\"svg\")\n\t\t.attr(\"width\", width + margin.left + margin.right)\n\t\t.attr(\"height\", height + margin.top + margin.bottom)\n\t.append(\"g\")\n\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\t\t\n// Get the data\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.csv(\"<span class=\"fea_Import_Data_keys udls\">data</span>2.csv\"</div>, function(error, data) {\n\tdata.forEach(function(d) {\n\t\td.date = parseDate(d.date);\n\t\td.close = +d.close;\n\t});\n\n\t// Scale the range of the data\n\tx.domain(d3.extent(data, function(d) { return d.date; }));\n\ty.domain([0, d3.max(data, function(d) { return d.close; })]);\n\n\t// Add the valueline path.\n\t<div class=\"highlights fea_Shapes\" id=\"Shapes_2\" style=\"display: inline; background-color: rgb(246, 183, 60);\">chart2.append(\"path\")\n\t\t.attr(\"class\", \"line\")\n\t\t.attr(\"d\", valueline(<span class=\"fea_Shapes_keys udls\">data</span>));</div>\n\n\t// Add the X Axis\n\t<div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">chart2.append(\"g\")\n\t\t.attr(\"class\", \"x <span class=\"fea_Axis_keys udls\">axis</span>\")\n\t\t.attr(\"transform\", \"translate(0,\" + height + \")\")\n\t\t.call(x<span class=\"fea_Axis_keys udls\">Axis</span>);\n\n\t// Add the Y <span class=\"fea_Axis_keys udls\">Axis</span>\n\tchart2.append(\"g\")\n\t\t.attr(\"class\", \"y <span class=\"fea_Axis_keys udls\">axis</span>\")\n\t\t.call(y<span class=\"fea_Axis_keys udls\">Axis</span>);</div>\n\n});\n//https://bl.ocks.org/firnoob/5987480</code></pre></div>",
    "fir_3": "<div class=\"codeBlock hljs javascript\" id=\"fir_3\"><pre id=\"fir_3_code\" style=\"\"><code class=\"javascript\"><div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var margin = {top: 10, right: 30, bottom: 30, left: 60},\n    <span class=\"fea_Canvas_keys udls\">width</span> = 460 - margin.left - margin.right,\n    <span class=\"fea_Canvas_keys udls\">height</span> = 400 - margin.top - margin.bottom;\n\n// append the svg object to the body of the page\nvar svg = d3.select(\"#my_dataviz\")\n  .append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\n//Read the data\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.csv(\"https://raw.githubusercontent.com/holtzy/<span class=\"fea_Import_Data_keys udls\">data</span>_to_viz/master/Example_<span class=\"fea_Import_Data_keys udls\">data</span>set/3_TwoNumOrdered_comma.csv\"</div>,\n\n  // When reading the csv, I must format variables:\n  function(d){\n    return { date : <div class=\"highlights fea_Data_Format\" id=\"Data_Format_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.timeParse(\"%Y-%m-%d\")(d.date)</div>, value : d.value }\n  },\n\n  // Now I can use this dataset:\n  function(data) {\n\n    // Add X axis --&gt; it is a date format\n    <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var x = d3.<span class=\"fea_Axis_keys udls\">scale</span>Time()\n      .domain(d3.extent(data, function(d) { return d.date; }))\n      .range([ 0, width ]);\n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.<span class=\"fea_Axis_keys udls\">axis</span>Bottom(x));</div>\n\n    // Max value observed:\n    <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">const <span class=\"fea_Data_Transformation_keys udls\">max</span> = d3.<span class=\"fea_Data_Transformation_keys udls\">max</span>(<span class=\"fea_Data_Transformation_keys udls\">data</span>, function(d) { return +d.value; })</div>\n\n    // Add Y axis\n    <div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var y = d3.<span class=\"fea_Axis_keys udls\">scale</span>Linear()\n      .domain([0, max])\n      .range([ height, 0 ]);\n    svg.append(\"g\")\n      .call(d3.<span class=\"fea_Axis_keys udls\">axis</span>Left(y));</div>\n\n    // Set the gradient\n   <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> svg.append(\"linearGradient\")\n      .attr(\"id\", \"line-gradient\")\n      .attr(\"gradientUnits\", \"userSpaceOnUse\")\n      .attr(\"x1\", 0)\n      .attr(\"y1\", y(0))\n      .attr(\"x2\", 0)\n      .attr(\"y2\", y(max))\n      .selectAll(\"stop\")\n        .data([\n          {offset: \"0%\", color: \"blue\"},\n          {offset: \"100%\", color: \"red\"}\n        ])\n      .enter().append(\"stop\")\n        .attr(\"offset\", function(d) { return d.offset; })\n        .attr(\"stop-color\", function(d) { return d.color; });</div>\n\n    // Add the <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">line</span></div>\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">svg.append(\"path\")\n      .datum(<span class=\"fea_Shapes_keys udls\">data</span>)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"url(#line-gradient)\" )\n      .attr(\"stroke-width\", 2)\n      .attr(\"d\", d3.line()\n        .x(function(d) { return x(d.date) })\n        .y(function(d) { return y(d.value) })\n        )</div>\n\n})</code></pre></div>",
    "fir_6": "<div class=\"codeBlock hljs javascript\" id=\"fir_6\"><pre id=\"fir_6_code\" style=\"\"><code class=\"javascript\">var myData = \"date\tNew York\tSan Francisco\tAustin\\n\\\n20111001\t63.4\t62.7\t72.2\\n\\\n20111002\t58.0\t59.9\t67.7\\n\\\n20111003\t53.3\t59.1\t69.4\\n\\\n20111004\t55.7\t58.8\t68.0\\n\\\n20111005\t64.2\t58.7\t72.4\\n\\\n20111006\t58.8\t57.0\t77.0\\n\\\n20111007\t57.9\t56.7\t82.3\\n\\\n20111008\t61.8\t56.8\t78.9\\n\\\n20111009\t69.3\t56.7\t68.8\\n\\\n20111010\t71.2\t60.1\t68.7\\n\\\n20111011\t68.7\t61.1\t70.3\\n\\\n20111012\t61.8\t61.5\t75.3\\n\\\n20111013\t63.0\t64.3\t76.6\\n\\\n20111014\t66.9\t67.1\t66.6\\n\\\n20111015\t61.7\t64.6\t68.0\\n\\\n20111016\t61.8\t61.6\t70.6\\n\\\n20111017\t62.8\t61.1\t71.1\\n\\\n20111018\t60.8\t59.2\t70.0\\n\\\n20111019\t62.1\t58.9\t61.6\\n\\\n20111020\t65.1\t57.2\t57.4\\n\\\n20111021\t55.6\t56.4\t64.3\\n\\\n20111022\t54.4\t60.7\t72.4\\n\";\n\nvar margin = {\n    top: 20,\n    right: 80,\n    bottom: 30,\n    left: 50\n  },\n  width = 900 - margin.left - margin.right,\n  height = 500 - margin.top - margin.bottom;\n\n<div class=\"highlights fea_Data_Format\" id=\"Data_Format_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var parseDate = d3.time.format(\"%Y%m%d\").parse;</div>\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var x = d3.time.<span class=\"fea_Axis_keys udls\">scale</span>()\n  .range([0, width]);\n\nvar y = d3.<span class=\"fea_Axis_keys udls\">scale</span>.linear()\n  .range([height, 0]);\n\nvar color = d3.<span class=\"fea_Axis_keys udls\">scale</span>.category10();\n\nvar x<span class=\"fea_Axis_keys udls\">Axis</span> = d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>()\n  .<span class=\"fea_Axis_keys udls\">scale</span>(x)\n  .orient(\"bottom\");\n\nvar y<span class=\"fea_Axis_keys udls\">Axis</span> = d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>()\n  .<span class=\"fea_Axis_keys udls\">scale</span>(y)\n  .orient(\"left\");</div>\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var line = d3.svg.line()\n  .interpolate(\"basis\")\n  .x(function(d) {\n    return x(d.date);\n  })\n  .y(function(d) {\n    return y(d.temperature);\n  });</div>\n\nv<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">ar svg = d3.select(\"body\").append(\"svg\")\n  .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right)\n  .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\nvar data = d3.tsv.parse(myData);\n\n<div class=\"highlights fea_Data_Filtering\" id=\"Data_Filtering_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">color.domain(d3.keys(data[0]).filter(function(key) {\n  return key !== \"date\";\n}));</div>\n\ndata.forEach(function(d) {\n  d.date = parseDate(d.date);\n});\n\nvar cities = color.domain().map(function(name) {\n  return {\n    name: name,\n    values: data.map(function(d) {\n      return {\n        date: d.date,\n        temperature: +d[name]\n      };\n    })\n  };\n});\n\nx.domain(d3.extent(data, function(d) {\n  return d.date;\n}));\n\ny.domain([\n  <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.min(cities, function(c) {\n    return d3.min(c.values, function(v) {\n      return v.temperature;\n    });\n  })</div>,\n  <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.<span class=\"fea_Data_Transformation_keys udls\">max</span>(cities, function(c) {\n    return d3.<span class=\"fea_Data_Transformation_keys udls\">max</span>(c.values, function(v) {\n      return v.temperature;\n    });\n  })</div>\n]);\n\n<div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var <span class=\"fea_Legend_keys udls\">legend</span> = svg.selectAll('g')\n  .data(cities)\n  .enter()\n  .append('g')\n  .attr('class', '<span class=\"fea_Legend_keys udls\">legend</span>');</div>\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">legend.append('rect')\n  .attr('x', width - 20)\n  .attr('y', function(d, i) {\n    return i * 20;\n  })\n  .attr('width', 10)\n  .attr('height', 10)\n  .style('fill', function(d) {\n    return color(d.name);\n  });</div>\n\n<div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">legend.append('<span class=\"fea_Text_keys udls\">text</span>')\n  .attr('x', width - 8)\n  .attr('y', function(d, i) {\n    return (i * 20) + 9;\n  })\n  .<span class=\"fea_Text_keys udls\">text</span>(function(d) {\n    return d.name;\n  });</div>\n\n<div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">svg.append(\"g\")\n  .attr(\"class\", \"x <span class=\"fea_Axis_keys udls\">axis</span>\")\n  .attr(\"transform\", \"translate(0,\" + height + \")\")\n  .call(x<span class=\"fea_Axis_keys udls\">Axis</span>);\n\nsvg.append(\"g\")\n  .attr(\"class\", \"y <span class=\"fea_Axis_keys udls\">axis</span>\")\n  .call(y<span class=\"fea_Axis_keys udls\">Axis</span>)\n  .append(\"text\")\n  .attr(\"transform\", \"rotate(-90)\")\n  .attr(\"y\", 6)\n  .attr(\"dy\", \".71em\")\n  .style(\"text-anchor\", \"end\")\n  .text(\"Temperature (ºF)\");\n</div>\nvar city = svg.selectAll(\".city\")\n  .data(cities)\n  .enter().append(\"g\")\n  .attr(\"class\", \"city\");\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_2\" style=\"display: inline; background-color: rgb(246, 183, 60);\">city.append(\"path\")\n  .attr(\"class\", \"line\")\n  .attr(\"d\", function(d) {\n    return line(d.values);\n  })\n  .style(\"stroke\", function(d) {\n    return color(d.name);\n  });</div>\n\n<div class=\"highlights fea_Text\" id=\"Text_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">city.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n  .datum(function(d) {\n    return {\n      name: d.name,\n      value: d.values[d.values.length - 1]\n    };\n  })\n  .attr(\"transform\", function(d) {\n    return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\";\n  })\n  .attr(\"x\", 3)\n  .attr(\"dy\", \".35em\")\n  .<span class=\"fea_Text_keys udls\">text</span>(function(d) {\n    return d.name;\n  });</div>\n\nvar mouseG = svg.append(\"g\")\n  .attr(\"class\", \"mouse-over-effects\");\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_3\" style=\"display: inline; background-color: rgb(246, 183, 60);\">mouseG.append(\"path\") // this is the black vertical line to follow mouse\n  .attr(\"class\", \"mouse-line\")\n  .style(\"stroke\", \"black\")\n  .style(\"stroke-width\", \"1px\")\n  .style(\"opacity\", \"0\");\n  \nvar lines = document.getElementsByClassName('line');\n\nvar mousePerLine = mouseG.selectAll('.mouse-per-line')\n  .<span class=\"fea_Shapes_keys udls\">data</span>(cities)\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"mouse-per-line\");\n\nmousePerLine.append(\"circle\")\n  .attr(\"r\", 7)\n  .style(\"stroke\", function(d) {\n    return color(d.name);\n  })\n  .style(\"fill\", \"none\")\n  .style(\"stroke-width\", \"1px\")\n  .style(\"opacity\", \"0\");</div>\n\n<div class=\"highlights fea_Text\" id=\"Text_2\" style=\"display: inline; background-color: rgb(246, 183, 60);\">mousePerLine.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n  .attr(\"transform\", \"translate(10,3)\");</div>\n\nmouseG.append('svg:rect') // append a rect to catch mouse movements on canvas\n  .attr('width', width) // can't catch mouse events on a g element\n  .attr('height', height)\n  .attr('fill', 'none')\n  .attr('pointer-events', 'all')\n  <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">.on('<span class=\"fea_Mouse_Events_keys udls\">mouse</span>out', function() </div>{ // on mouse out hide line, circles and text\n    d3.select(\".mouse-line\")\n      .style(\"opacity\", \"0\");\n    d3.selectAll(\".mouse-per-line circle\")\n      .style(\"opacity\", \"0\");\n    d3.selectAll(\".mouse-per-line text\")\n      .style(\"opacity\", \"0\");\n  })\n  <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">.on('<span class=\"fea_Mouse_Events_keys udls\">mouse</span><span class=\"fea_Mouse_Events_keys udls\">ove</span>r', function()</div> { // on mouse in show line, circles and text\n    d3.select(\".mouse-line\")\n      .style(\"opacity\", \"1\");\n    d3.selectAll(\".mouse-per-line circle\")\n      .style(\"opacity\", \"1\");\n    d3.selectAll(\".mouse-per-line text\")\n      .style(\"opacity\", \"1\");\n  })\n  <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_2\" style=\"display: inline; background-color: rgb(246, 183, 60);\">.on('<span class=\"fea_Mouse_Events_keys udls\">mouse</span>m<span class=\"fea_Mouse_Events_keys udls\">ove</span>', function()</div> { // mouse moving over canvas\n    var mouse = d3.mouse(this);\n    <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.select(\".mouse-<span class=\"fea_Line_Chart_keys udls\">line</span>\")</div>\n      .attr(\"d\", function() {\n        var d = \"M\" + mouse[0] + \",\" + height;\n        d += \" \" + mouse[0] + \",\" + 0;\n        return d;\n      });\n\n    d3.selectAll(\".mouse-per-line\")\n      .attr(\"transform\", function(d, i) {\n        console.log(width/mouse[0])\n        var xDate = x.invert(mouse[0]),\n            bisect = d3.bisector(function(d) { return d.date; }).right;\n            idx = bisect(d.values, xDate);\n        \n        var beginning = 0,\n            end = lines[i].getTotalLength(),\n            target = null;\n\n        while (true){\n          target = Math.floor((beginning + end) / 2);\n          pos = lines[i].getPointAtLength(target);\n          if ((target === end || target === beginning) &amp;&amp; pos.x !== mouse[0]) {\n              break;\n          }\n          if (pos.x &gt; mouse[0])      end = target;\n          else if (pos.x &lt; mouse[0]) beginning = target;\n          else break; //position found\n        }\n        \n        d3.select(this).select('text')\n          .text(y.invert(pos.y).toFixed(2));\n          \n        return \"translate(\" + mouse[0] + \",\" + pos.y +\")\";\n      });\n  });</code></pre></div>",
    "fir_13": "<div class=\"codeBlock hljs javascript\" id=\"fir_13\"><pre id=\"fir_13_code\" style=\"\"><code class=\"javascript\">function getTextWidth(text, fontSize, fontName) {\n    c = document.createElement(\"canvas\");\n    ctx = c.getContext(\"2d\");\n    ctx.font = fontSize + ' ' + fontName;\n    return ctx.measureText(text).width;\n}\n\nfunction DataSegregator(array, on) {\n    var SegData;\n    OrdinalPositionHolder = {\n        valueOf: function () {\n            thisObject = this;\n            keys = Object.keys(thisObject);\n            keys.splice(keys.indexOf(\"valueOf\"), 1);\n            keys.splice(keys.indexOf(\"keys\"), 1);\n            return keys.length == 0 ? -1 : <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.<span class=\"fea_Data_Transformation_keys udls\">max</span>(keys, function (d) { return thisObject[d] })</div>\n        }\n        , keys: function () {\n            keys = Object.keys(thisObject);\n            keys.splice(keys.indexOf(\"valueOf\"), 1);\n            keys.splice(keys.indexOf(\"keys\"), 1);\n            return keys;\n        }\n    }\n    array[0].map(function (d) { return d[on] }).forEach(function (b) {\n        value = OrdinalPositionHolder.valueOf();\n        OrdinalPositionHolder[b] = OrdinalPositionHolder &gt; -1 ? ++value : 0;\n    })\n\n    SegData = OrdinalPositionHolder.keys().map(function () {\n        return [];\n    });\n\n    array.forEach(function (d) {\n        d.forEach(function (b) {\n            SegData[OrdinalPositionHolder[b[on]]].push(b);\n        })\n    });\n\n    return SegData;\n}\n\n\nData = [\n{ Date: \"2016-06-14\", Categories: [{ Name: \"Category1\", Value: 368 }, { Name: \"Category2\", Value: 321 }, { Name: \"Category3\", Value: 524 }], LineCategory: [{ Name: \"Line1\", Value: 69 }, { Name: \"Line2\", Value: 63 }] },\n{ Date: \"2016-06-15\", Categories: [{ Name: \"Category1\", Value: 521 }, { Name: \"Category2\", Value: 123 }, { Name: \"Category3\", Value: 653 }], LineCategory: [{ Name: \"Line1\", Value: 89 }, { Name: \"Line2\", Value: 96 }] },\n{ Date: \"2016-06-17\", Categories: [{ Name: \"Category1\", Value: 368 }, { Name: \"Category2\", Value: 236 }, { Name: \"Category3\", Value: 537 }], LineCategory: [{ Name: \"Line1\", Value: 63 }, { Name: \"Line2\", Value: 35 }] },\n{ Date: \"2016-06-18\", Categories: [{ Name: \"Category1\", Value: 423 }, { Name: \"Category2\", Value: 330 }, { Name: \"Category3\", Value: 689 }], LineCategory: [{ Name: \"Line1\", Value: 86 }, { Name: \"Line2\", Value: 45 }] },\n{ Date: \"2016-06-19\", Categories: [{ Name: \"Category1\", Value: 601 }, { Name: \"Category2\", Value: 423 }, { Name: \"Category3\", Value: 490 }], LineCategory: [{ Name: \"Line1\", Value: 65 }, { Name: \"Line2\", Value: 63 }] },\n{ Date: \"2016-06-20\", Categories: [{ Name: \"Category1\", Value: 412 }, { Name: \"Category2\", Value: 461 }, { Name: \"Category3\", Value: 321 }], LineCategory: [{ Name: \"Line1\", Value: 75 }, { Name: \"Line2\", Value: 85 }] }\n]\n\nvar margin = { top: 20, right: 30, bottom: 60, left: 40 },\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\nvar textWidthHolder = 0;\n/// Adding Date in LineCategory\nData.forEach(function (d) {\n    d.LineCategory.forEach(function (b) {\n        b.Date = d.Date;\n    })\n});\n\n\n\n\nvar Categories = new Array();\n// Extension method declaration\n\nCategories.pro\n\nvar Data;\nvar ageNames;\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var x0 = d3.<span class=\"fea_Axis_keys udls\">scale</span>.ordinal()\n    .rangeRoundBands([0, width], .1);\nvar XLine = d3.<span class=\"fea_Axis_keys udls\">scale</span>.ordinal()\n    .rangeRoundPoints([0, width], .1);\nvar x1 = d3.<span class=\"fea_Axis_keys udls\">scale</span>.ordinal();\n\nvar y = d3.<span class=\"fea_Axis_keys udls\">scale</span>.linear()\n    .range([height, 0]);\n\nvar YLine = d3.<span class=\"fea_Axis_keys udls\">scale</span>.linear().range([height, 0])\n.domain([0, d3.max(Data, function (d) { return d3.max(d.LineCategory, function (b) { return b.Value }) })]);</div>\n\n<div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var color = d3.<span class=\"fea_Axis_keys udls\">scale</span>.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);</div>\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var line = d3.svg.line().x(function (d) {\n    return x0(d.Date) + x0.rangeBand() / 2;\n}).y(function (d) { return YLine(d.Value) });</div>\n\n\n\n\n<div class=\"highlights fea_Axis\" id=\"Axis_2\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var x<span class=\"fea_Axis_keys udls\">Axis</span> = d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>()\n    .<span class=\"fea_Axis_keys udls\">scale</span>(x0)\n    .orient(\"bottom\");\n\nvar y<span class=\"fea_Axis_keys udls\">Axis</span> = d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>()\n    .<span class=\"fea_Axis_keys udls\">scale</span>(y)\n    .orient(\"left\")\n    .tickFormat(d3.format(\".2s\"));\n\nvar YLeft<span class=\"fea_Axis_keys udls\">Axis</span> = d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>().<span class=\"fea_Axis_keys udls\">scale</span>(YLine).orient(\"right\").tickFormat(d3.format(\".2s\"));</div>\n\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\n\n\n\n\n// <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Bar_Chart_keys udls\">Bar</span></div> Data categories\nData.forEach(function (d) {\n    d.Categories.forEach(function (b) {\n        if (Categories.findIndex(function (c) { return c.Name===b.Name}) == -1) {\n            b.Type = \"bar\";\n            console.log(JSON.stringify(b))\n            Categories.push(b)\n        }\n    })\n});\n\n\n// <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span></div> Data categories\nData.forEach(function (d) {\n    d.LineCategory.forEach(function (b) {\n        if (Categories.findIndex(function (c) { return c.Name === b.Name }) == -1) {\n            b.Type = \"line\";\n            console.log(JSON.stringify(b))\n            Categories.push(b)\n        }\n    })\n});\n\n// Processing Line data\n<div class=\"highlights fea_Data_Grouping\" id=\"Data_Grouping_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">line<span class=\"fea_Data_Grouping_keys udls\">Data</span> = <span class=\"fea_Data_Grouping_keys udls\">Data</span>Segregator(<span class=\"fea_Data_Grouping_keys udls\">Data</span>.<span class=\"fea_Data_Grouping_keys udls\">map</span>(<span class=\"fea_Data_Grouping_keys udls\">function</span> (d) { <span class=\"fea_Data_Grouping_keys udls\">return</span> d.LineCategory }), \"Name\");</div>\n\n// Line Coloring\nLineColor = d3.scale.ordinal();\nLineColor.domain(<div class=\"highlights fea_Data_Filtering\" id=\"Data_Filtering_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">Categories.filter(function (d) { return d.Type == \"line\" })</div>.map(function (d) { return d.Name }));\nLineColor.range([\"#d40606\", \"#06bf00\", \"#98bdc5\", \"#671919\", \"#0b172b\"])\nx0.domain(Data.map(function (d) { return d.Date; }));\nXLine.domain(Data.map(function (d) { return d.Date; }));\nx1.domain(Categories.filter(function (d) { return d.Type == \"bar\" }).map(function (d) { return d.Name})).rangeRoundBands([0, x0.rangeBand()]);\ny.domain([0, <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.<span class=\"fea_Data_Transformation_keys udls\">max</span>(<span class=\"fea_Data_Transformation_keys udls\">Data</span>, function (d) { return d3.<span class=\"fea_Data_Transformation_keys udls\">max</span>(d.Categories, function (d) { return d.Value; }); })</div>]);\n\nsvg.append(\"g\")\n    .attr(\"class\", \"x axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\nsvg.append(\"g\")\n   .attr(\"class\", \"y axis\")\n    .attr(\"transform\", \"translate(\" + (width) + \",0)\")\n   .call(YLeftAxis)\n\n <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n   .attr(\"transform\", \"rotate(-90)\")\n   .attr(\"y\", -10)\n\n   .attr(\"dy\", \".71em\")\n   .style(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\", \"end\")\n   .<span class=\"fea_Text_keys udls\">text</span>(\"Percent\");</div>\n\nsvg.append(\"g\")\n    .attr(\"class\", \"y axis\")\n    .call(yAxis)\n  .append(\"text\")\n    .attr(\"transform\", \"rotate(-90)\")\n    .attr(\"y\", 6)\n    .attr(\"dy\", \".71em\")\n    .style(\"text-anchor\", \"end\")\n    .text(\"Population\");\n\n\nvar state = svg.selectAll(\".state\")\n    .data(Data)\n  .enter().append(\"g\")\n    .attr(\"class\", \"state\")\n    .attr(\"transform\", function (d) { return \"translate(\" + x0(d.Date) + \",0)\"; });\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">state.selectAll(\"rect\")\n    .<span class=\"fea_Shapes_keys udls\">data</span>(function (d) { return d.Categories; })\n  .enter().append(\"rect\")\n    .attr(\"width\", x1.rangeBand())\n    .attr(\"x\", function (d) { return x1(d.Name); })\n    .attr(\"y\", function (d) { return y(d.Value); })\n    //.attr(\"height\", function (d) { return height - y(d.Value); })\n    .style(\"fill\", function (d) { return color(d.Name); })\n    .transition().delay(500).attrTween(\"height\", function (d) {\n        var i = d3.interpolate(0, height - y(d.Value));\n        return function (t)\n        {\n            return i(t);\n        }\n    });\n\n// drawaing lines\nsvg.selectAll(\".lines\").<span class=\"fea_Shapes_keys udls\">data</span>(line<span class=\"fea_Shapes_keys udls\">Data</span>).enter().append(\"g\").attr(\"class\", \"line\")\n.each(function (d) {\n    Name=d[0].Name\n    d3.select(this).append(\"path\").attr(\"d\", function (b) { return line(b) }).style({ \"stroke-width\": \"2px\", \"fill\": \"none\" }).style(\"stroke\", LineColor(Name)).transition().duration(1500);\n})</div>\n\n\n// Legends\n\nvar LegendHolder = svg.append(\"g\").attr(\"class\", \"legendHolder\");\n<div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var <span class=\"fea_Legend_keys udls\">legend</span> = <span class=\"fea_Legend_keys udls\">Legend</span>Holder.selectAll(\".<span class=\"fea_Legend_keys udls\">legend</span>\")\n    .data(Categories.map(function (d) { return {\"Name\":d.Name,\"Type\":d.Type}}))\n  .enter().append(\"g\")\n    .attr(\"class\", \"<span class=\"fea_Legend_keys udls\">legend</span>\")</div>\n    .attr(\"transform\", function (d, i) { return \"translate(0,\" +( height+ margin.bottom/2 )+ \")\"; })\n    .each(function (d,i) {\n        //  Legend Symbols\n\n\n        <div class=\"highlights fea_Shapes\" id=\"Shapes_2\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.select(this).append(\"rect\")\n        .attr(\"width\", function () { return 18 })\n        .attr(\"x\", function (b) {\n\n            left = (i+1) * 15 + i * 18 + i * 5 + textWidthHolder;\n            return left;\n        })\n         .attr(\"y\", function (b) { return b.Type == 'bar'?0:7})\n        .attr(\"height\", function (b) { return b.Type== 'bar'? 18:5 })\n        .style(\"fill\", function (b) { return b.Type == 'bar' ? color(d.Name) : LineColor(d.Name) });</div>\n\n        //  Legend Text\n\n        <div class=\"highlights fea_Text\" id=\"Text_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.select(this).append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n        .attr(\"x\", function (b) {\n\n            left = (i+1) * 15 + (i+1) * 18 + (i + 1) * 5 + <span class=\"fea_Text_keys udls\">text</span>WidthHolder;\n\n            return left;\n        })\n        .attr(\"y\", 9)\n        .attr(\"dy\", \".35em\")\n        .style(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\", \"start\")\n        .<span class=\"fea_Text_keys udls\">text</span>(d.Name);\n\n        <span class=\"fea_Text_keys udls\">text</span>WidthHolder += get<span class=\"fea_Text_keys udls\">Text</span>Width(d.Name, \"10px\", \"calibri\");\n    });</div>\n\n\n// Legend Placing\n\nd3.select(\".legendHolder\").attr(\"transform\", function (d) {\n    thisWidth = d3.select(this).node().getBBox().width;\n    return \"translate(\" + ((width) / 2 - thisWidth / 2) + \",0)\";\n})\n//https://bl.ocks.org/nanu146/f48ffc5ec10270f55c9e1fb3da8b38f0</code></pre></div>",
    "fir_21": "<div class=\"codeBlock hljs javascript\" id=\"fir_21\"><pre id=\"fir_21_code\"><code class=\"javascript\"><div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline;\">var svg = d3.select(\"svg\"),\n    <span class=\"fea_Canvas_keys udls\">width</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\"),\n    <span class=\"fea_Canvas_keys udls\">height</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\"),\n    innerRadius = 180,\n    outerRadius = Math.min(<span class=\"fea_Canvas_keys udls\">width</span>, <span class=\"fea_Canvas_keys udls\">height</span>) / 2,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + <span class=\"fea_Canvas_keys udls\">width</span> / 2 + \",\" + <span class=\"fea_Canvas_keys udls\">height</span> / 2 + \")\");</div>\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline;\">var x = d3.<span class=\"fea_Axis_keys udls\">scale</span>Band()\n    .range([0, 2 * Math.PI])\n    .align(0);\n\nvar y = d3.<span class=\"fea_Axis_keys udls\">scale</span>Radial()\n    .range([innerRadius, outerRadius]);\n\nvar z = d3.<span class=\"fea_Axis_keys udls\">scale</span>Ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);</div>\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline;\">d3.csv(\"<span class=\"fea_Import_Data_keys udls\">data</span>.csv\"</div>, function(d, i, columns) {\n  for (i = 1, t = 0; i &lt; columns.length; ++i) t += d[columns[i]] = +d[columns[i]];\n  d.total = t;\n  return d;\n}, function(error, data) {\n  if (error) throw error;\n\n  x.domain(data.map(function(d) { return d.State; }));\n  y.domain([0, d3.max(data, function(d) { return d.total; })]);\n  z.domain(data.columns.slice(1));\n\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline;\">g.append(\"g\")\n    .selectAll(\"g\")\n    .<span class=\"fea_Shapes_keys udls\">data</span>(d3.stack().keys(<span class=\"fea_Shapes_keys udls\">data</span>.columns.slice(1))(<span class=\"fea_Shapes_keys udls\">data</span>))\n    .enter().append(\"g\")\n      .attr(\"fill\", function(d) { return z(d.key); })\n    .selectAll(\"path\")\n    .<span class=\"fea_Shapes_keys udls\">data</span>(function(d) { return d; })\n    .enter().append(\"path\")\n      .attr(\"d\", d3.arc()\n          .innerRadius(function(d) { return y(d[0]); })\n          .outerRadius(function(d) { return y(d[1]); })\n          .startAngle(function(d) { return x(d.<span class=\"fea_Shapes_keys udls\">data</span>.State); })\n          .endAngle(function(d) { return x(d.<span class=\"fea_Shapes_keys udls\">data</span>.State) + x.bandwidth(); })\n          .padAngle(0.01)\n          .padRadius(innerRadius));</div>\n\n  var label = g.append(\"g\")\n    .selectAll(\"g\")\n    .data(data)\n    .enter().append(\"g\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"transform\", function(d) { return \"rotate(\" + ((x(d.State) + x.bandwidth() / 2) * 180 / Math.PI - 90) + \")translate(\" + innerRadius + \",0)\"; });\n\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline;\">label.append(\"line\")\n      .attr(\"x2\", -5)\n      .attr(\"stroke\", \"#000\");</div>\n\n  <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline;\">label.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"transform\", function(d) { return (x(d.State) + x.bandwidth() / 2 + Math.PI / 2) % (2 * Math.PI) &lt; Math.PI ? \"rotate(90)translate(0,16)\" : \"rotate(-90)translate(0,-9)\"; })\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d.State; });</div>\n\n  <div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"display: inline;\">var y<span class=\"fea_Axis_keys udls\">Axis</span> = g.append(\"g\")\n      .attr(\"text-anchor\", \"middle\");\n\n  var yTick = y<span class=\"fea_Axis_keys udls\">Axis</span>\n    .selectAll(\"g\")\n    .data(y.ticks(5).slice(1))\n    .enter().append(\"g\");\n\n  yTick.append(\"circle\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#000\")\n      .attr(\"r\", y);\n\n  yTick.append(\"text\")\n      .attr(\"y\", function(d) { return -y(d); })\n      .attr(\"dy\", \"0.35em\")\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"#fff\")\n      .attr(\"stroke-width\", 5)\n      .text(y.tickFormat(5, \"s\"));\n\n  yTick.append(\"text\")\n      .attr(\"y\", function(d) { return -y(d); })\n      .attr(\"dy\", \"0.35em\")\n      .text(y.tickFormat(5, \"s\"));\n\n  y<span class=\"fea_Axis_keys udls\">Axis</span>.append(\"text\")\n      .attr(\"y\", function(d) { return -y(y.ticks(5).pop()); })\n      .attr(\"dy\", \"-1em\")\n      .text(\"Population\");</div>\n\n  <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline;\">var <span class=\"fea_Legend_keys udls\">legend</span> = g.append(\"g\")\n    .selectAll(\"g\")\n    .data(data.columns.slice(1).reverse())\n    .enter().append(\"g\")\n      .attr(\"transform\", function(d, i) { return \"translate(-40,\" + (i - (data.columns.length - 1) / 2) * 20 + \")\"; });</div>\n\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_2\" style=\"display: inline;\">legend.append(\"rect\")\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .attr(\"fill\", z);</div>\n\n  <div class=\"highlights fea_Text\" id=\"Text_1\" style=\"display: inline;\">legend.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"x\", 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \"0.35em\")\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d; });</div>\n});\n\n#https://bl.ocks.org/mbostock/6fead6d1378d6df5ae77bb6a719afcb2</code></pre></div>",
    "fir_16": "<div class=\"codeBlock hljs javascript\" id=\"fir_16\"><pre id=\"fir_16_code\" style=\"\"><code class=\"javascript\">      // Change fir's SI prefix to more business friendly units\n      //      K = thousands\n      //      M = millions\n      //      B = billions\n      //      T = trillion\n      //      P = quadrillion\n      //      E = quintillion\n      // small decimals are handled with e-n formatting.\n      var fir_formatPrefixes = [\"e-24\",\"e-21\",\"e-18\",\"e-15\",\"e-12\",\"e-9\",\"e-6\",\"e-3\",\"\",\"K\",\"M\",\"B\",\"T\",\"P\",\"E\",\"Z\",\"Y\"].map(fir_formatPrefix);\n\n      // Override fir's formatPrefix function\n      d3.formatPrefix = function(value, precision) {\n          var i = 0;\n          if (value) {\n              if (value &lt; 0) {\n                  value *= -1;\n              }\n              if (precision) {\n                  value = d3.round(value, fir_format_precision(value, precision));\n              }\n              i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n              i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n          }\n          return fir_formatPrefixes[8 + i / 3];\n      };\n\n      function fir_formatPrefix(d, i) {\n          var k = Math.pow(10, Math.abs(8 - i) * 3);\n          return {\n              scale: i &gt; 8 ? function(d) { return d / k; } : function(d) { return d * k; },\n              symbol: d\n          };\n      }\n\n      function fir_format_precision(x, p) {\n          return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n      }\n\n      // Define margins of the SVG canvas\n      var margin = {top:50, right:20, bottom:30, left:100};\n      var width = 500 - margin.left - margin.right;\n      var height = 500 - margin.top - margin.bottom;\n\n      // Parse and format the Year data \n      <div class=\"highlights fea_Data_Format\" id=\"Data_Format_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var parseDate = d3.time.format(\"%Y\").parse;\n      var formatDate = d3.time.format(\"%Y\");\n\n      // Format the Population data \n      var formatData = d3.format(\".2s\");\n      var commaData = d3.format(\",\");</div>\n      \n      // Define the scales\n      <div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var myX<span class=\"fea_Axis_keys udls\">Scale</span> = d3.time.<span class=\"fea_Axis_keys udls\">scale</span>().range([0,width]);    \n      var myY<span class=\"fea_Axis_keys udls\">Scale</span> = d3.<span class=\"fea_Axis_keys udls\">scale</span>.linear().range([height,0]);\n</div>\n      // Define the axes\n      <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var myX<span class=\"fea_Axis_keys udls\">Axis</span> = d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>().<span class=\"fea_Axis_keys udls\">scale</span>(myX<span class=\"fea_Axis_keys udls\">Scale</span>).orient(\"bottom\");\n      var myY<span class=\"fea_Axis_keys udls\">Axis</span> = d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>().<span class=\"fea_Axis_keys udls\">scale</span>(myY<span class=\"fea_Axis_keys udls\">Scale</span>).orient(\"left\").tickFormat(formatData);</div>\n\n      // Define the output <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">line</span></div>\n      <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var line1 = d3.svg.line().x(function(d) { return myXScale(d.Year);}).y(function(d) { return myYScale(d.Population);});\n      var line2 = d3.svg.line().x(function(d) { return myXScale(d.Year);}).y(function(d) { return myYScale(d.Population);});</div>\n\n      // Define a tooltip for points on the graph\n      <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var tip = d3.tip().attr('class', 'fir-tip').offset([-10, 0]).html(function(d) { return \"&lt;strong&gt; Year:&lt;/strong&gt; &lt;span style='color:orange'&gt;\" + formatDate(d.Year) + \"&lt;/span&gt;, &lt;strong&gt; Population:&lt;/strong&gt; &lt;span style='color:orange'&gt;\" + commaData(d.Population) + \"&lt;/span&gt;\" ; });</div>\n\n      // Define the SVG and inner drawing space which will act as a container for our viz\n      <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var mySVG = d3.select(\"#populationDiv\").append(\"svg\").attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span>+margin.left+margin.right).attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span>+margin.top+margin.bottom).append(\"g\").attr(\"transform\",\"translate(\"+margin.left+\",\"+margin.top+\")\");</div>\n\n      // Define the function that obtains the max and min of India's population data from the TSV file\n      function indiaPopData()\n        {\n          <div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.tsv(\"indiaPopulation.tsv\",</div> function(error,data)\n            {\n              // Iterating through the data\n              data.forEach(function(d)\n              {\n                // Parsing the Year format present in the original data\n                d.Year = parseDate(d.Year); \n                // Converting string to integer\n                <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d.Population = +d.Population;</div>\n              });\n\n              // Defining variables to store the max and min values present in the dataset\n              var Indmax;\n              var Indmin;\n              <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">Ind<span class=\"fea_Data_Transformation_keys udls\">max</span> = d3.<span class=\"fea_Data_Transformation_keys udls\">max</span>(<span class=\"fea_Data_Transformation_keys udls\">data</span>, function(d) { return d.Population;});\n              Indmin = d3.min(<span class=\"fea_Data_Transformation_keys udls\">data</span>,function(d) { return d.Population;});</div>\n            });\n        }\n\n      // Defining a function to draw the graph with India's population represented on the scales\n      function INDPopulationCreate()\n        {\n          <div class=\"highlights fea_Import_Data\" id=\"Import_Data_1\" style=\"background-color: #f6b73c;  display: inline;\">d3.tsv(\"indiaPopulation.tsv\", function(error,<span class=\"fea_Import_Data_keys udls\">data</span>)</div>\n            {\n              // Iterating through the data\n              data.forEach(function(d)\n              {\n                // Parsing the Year format present in the original data\n                d.Year = parseDate(d.Year);\n                // Converting string to integer\n                d.Population = +d.Population;\n              });\n\n              // Assigning the max and min values in the dataset\n              Indmax = d3.max(data, function(d) { return d.Population;});\n              Indmin = d3.min(data,function(d) { return d.Population;});\n\n              // Define the domain for the axes\n              myXScale.domain(d3.extent(data, function(d) { return d.Year;}));\n              myYScale.domain([0,Indmax]);\n\n              // Draw horizontal grid lines\n              mySVG.selectAll(\"line.horizontalGrid\").data(myYScale.ticks(10)).enter().append(\"line\")\n              .attr(\n                    {\n                        \"class\":\"horizontalGrid\",\n                        \"x1\" : \"0\",\n                        \"x2\" : width,\n                        \"y1\" : function(d){ return myYScale(d);},\n                        \"y2\" : function(d){ return myYScale(d);},\n                        \"fill\" : \"none\",\n                        \"shape-rendering\" : \"crispEdges\",\n                        \"stroke\" : \"grey\",\n                        \"stroke-opacity\" : \"0.5\",\n                        \"stroke-width\" : \"1px\"\n                    });\n\n              // Draw vertical grid lines\n              mySVG.selectAll(\"line.verticalGrid\").data(myXScale.ticks(10)).enter().append(\"line\")\n              .attr(\n                    {\n                      \"class\":\"verticalGrid\",\n                      \"x1\" : function(d){ return myXScale(d);},\n                      \"x2\" : function(d){ return myXScale(d);},\n                      \"y1\" : \"0\",\n                      \"y2\" : height,\n                      \"fill\" : \"none\",\n                      \"shape-rendering\" : \"crispEdges\",\n                      \"stroke\" : \"grey\",\n                      \"stroke-opacity\" : \"0.4\",\n                      \"stroke-width\" : \"1px\"\n                    });\n\n              // Draw the X and Y axes\n              mySVG.append(\"g\").attr(\"class\",\"x-axis\").attr(\"transform\",\"translate(0, \"+height+\")\").call(myXAxis).append(\"text\").attr(\"class\",\"whiteFont\").attr(\"x\",width).attr(\"y\", -6).style(\"text-anchor\",\"end\").text(\"Time in years\");;\n              mySVG.append(\"g\").attr(\"class\",\"y-axis\").call(myYAxis)<div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">.append(\"<span class=\"fea_Text_keys udls\">text</span>\").attr(\"class\",\"whiteFont\").attr(\"transform\",\"rotate(-90)\").attr(\"y\", 6).attr(\"dy\", \"0.71em\").style(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\",\"end\").<span class=\"fea_Text_keys udls\">text</span>(\"Population Numbers\");\n</div>\n              // Draw the circular points on the output graph\n              mySVG.selectAll(\".point\").data(data).enter().append(\"circle\").attr(\"class\",\"point\").attr(\"cx\", function(d) { return myXScale(d.Year);}).attr(\"cy\", function(d) { return myYScale(d.Population);}).attr(\"r\", 3).style(\"fill\", \"#FFD747\").on('mouseover', tip.show)<div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">.on('<span class=\"fea_Mouse_Events_keys udls\">mouse</span>out', tip.hide)</div>;\n\n              // Javascript code to add hover effects to the graph\n              $(function () \n                {\n                  $('circle').hover(function () {\n                  $(this).attr('r',5);\n                   }, function() {\n                  $(this).attr('r',3);});\n                });\n\n              // Draw the line on the output graph\n              var path2 = mySVG.append(\"path\").datum(data).attr(\"class\",\"line1\").attr(\"d\",line1);\n\n              // Add transitions to the path\n              var totalLength = path2.node().getTotalLength();\n              path2.attr(\"stroke-dasharray\", totalLength + \" \" + totalLength).attr(\"stroke-dashoffset\", totalLength).transition().duration(1000).ease(\"linear\").attr(\"stroke-dashoffset\", 0);\n\n              // Add label to the end of the path\n              mySVG.append(\"text\").attr(\"transform\", \"translate(\"+(width+10)+\",\"+myYScale(data[23].Population)+\")\").attr(\"dy\", \".35em\").attr(\"text-anchor\", \"start\").style(\"fill\", \"#FFD747\").text(\"India\");\n\n              // Calling the tip() function for the tooltip\n              mySVG.call(tip);\n            });\n        }\n\n      // Pull data from the external TSV file and parse the year information present in it\n      function USPopulationCreate() \n        {\n          d3.tsv(\"USAPopulation.tsv\", function(error,data)\n            {\n              data.forEach(function(d)\n              {\n                d.Year = parseDate(d.Year);\n                d.Population = +d.Population;\n              });\n\n              // Calling the function to get max and min values of the India's population to set the domain for the axes\n              indiaPopData();\n             \n              // Draw the circular points on the output graph\n              mySVG.selectAll(\".dot\").data(data).enter().append(\"circle\").attr(\"class\",\"dot\").attr(\"cx\", function(d) { return myXScale(d.Year);}).attr(\"cy\", function(d) { return myYScale(d.Population);}).attr(\"r\", 3).style(\"fill\", \"#FFD747\").on('mouseover', tip.show).on('mouseout', tip.hide);\n\n              // Javascript code to add hover effects to the graph\n              $(function () \n                {\n                  $('circle').hover(function () {\n                  $(this).attr('r',5);\n                  }, function(){\n                  $(this).attr('r',3);\n                  });\n                });\n\n              // Draw the line on the output graph\n              var path1 = mySVG.append(\"path\").datum(data).attr(\"class\",\"line2\").attr(\"d\",line2);\n              var totalLength = path1.node().getTotalLength();\n\n              // Add transitions to the path\n              path1.attr(\"stroke-dasharray\", totalLength + \" \" + totalLength).attr(\"stroke-dashoffset\", totalLength).transition().duration(1000).ease(\"linear\")\n            .attr(\"stroke-dashoffset\", 0);\n\n              // Add label to the end of the path\n              mySVG.append(\"text\").attr(\"transform\", \"translate(\"+(width+10)+\",\"+(myYScale(data[0].Population)-15)+\")\").attr(\"dy\", \".35em\").attr(\"text-anchor\", \"start\").style(\"fill\", \"#FFD747\").text(\"USA\");\n            \n              // Add a title to the graph\n              mySVG.append(\"text\").attr(\"class\",\"whiteHeader\").attr(\"x\", (width / 2)).attr(\"y\", 0 - (margin.top / 2)).attr(\"text-anchor\", \"middle\").style(\"font-size\", \"14px\").style(\"font-weight\",\"bold\").text(\"Population trend in USA and India from 1990 to 2014\");\n\n              // Calling the tooltip function\n              mySVG.call(tip);\n            });\n        }\n\n      // Function call to create the line graphs for both countries\n\n      INDPopulationCreate();\n      USPopulationCreate();\n      //https://github.com/colorfulAsh/interactive-fir-lineGraph/blob/master/myfirscript</code></pre></div>",
    "fir_29": "<div class=\"codeBlock hljs javascript\" id=\"fir_29\"><pre id=\"fir_29_code\" style=\"\"><code class=\"javascript\">// set the dimensions and margins of the graph\nvar margin = {top: 80, right: 25, bottom: 30, left: 40},\n  width = 450 - margin.left - margin.right,\n  height = 450 - margin.top - margin.bottom;\n\n// append the svg object to the body of the page\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var svg = d3.select(\"#my_dataviz\")\n.append(\"svg\")\n  .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right)\n  .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom)\n.append(\"g\")\n  .attr(\"transform\",\n        \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\n//Read the data\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.csv(\"https://raw.githubusercontent.com/holtzy/fir-graph-gallery/master/<span class=\"fea_Import_Data_keys udls\">DATA</span>/heatmap_<span class=\"fea_Import_Data_keys udls\">data</span>.csv\"</div>, function(data) {\n\n  // Labels of row and columns -&gt; unique identifier of the column called 'group' and 'variable'\n  <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var myGroups = d3.map(<span class=\"fea_Data_Transformation_keys udls\">data</span>, function(d){return d.group;}).keys()\n  var myVars = d3.map(<span class=\"fea_Data_Transformation_keys udls\">data</span>, function(d){return d.variable;}).keys()</div>\n\n  // Build X scales and axis:\n  <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var x = d3.<span class=\"fea_Axis_keys udls\">scale</span>Band()\n    .range([ 0, width ])\n    .domain(myGroups)\n    .padding(0.05);\n  svg.append(\"g\")\n    .style(\"font-size\", 15)\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.<span class=\"fea_Axis_keys udls\">axis</span>Bottom(x).tickSize(0))\n    .select(\".domain\").remove()\n\n  // Build Y <span class=\"fea_Axis_keys udls\">scale</span>s and <span class=\"fea_Axis_keys udls\">axis</span>:\n  var y = d3.<span class=\"fea_Axis_keys udls\">scale</span>Band()\n    .range([ height, 0 ])\n    .domain(myVars)\n    .padding(0.05);\n  svg.append(\"g\")\n    .style(\"font-size\", 15)\n    .call(d3.<span class=\"fea_Axis_keys udls\">axis</span>Left(y).tickSize(0))\n    .select(\".domain\").remove()\n\n  // Build color <span class=\"fea_Axis_keys udls\">scale</span>\n  var myColor = d3.<span class=\"fea_Axis_keys udls\">scale</span>Sequential()\n    .interpolator(d3.interpolateInferno)\n    .domain([1,100])</div>\n\n  // create a tooltip\n <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> var <span class=\"fea_Tooltip_keys udls\">tooltip</span> = d3.select(\"#my_dataviz\")\n    .append(\"div\")\n    .style(\"opacity\", 0)\n    .attr(\"class\", \"<span class=\"fea_Tooltip_keys udls\">tooltip</span>\")\n    .style(\"background-color\", \"white\")\n    .style(\"border\", \"solid\")\n    .style(\"border-width\", \"2px\")\n    .style(\"border-radius\", \"5px\")\n    .style(\"padding\", \"5px\")</div>\n\n  // Three function that change the tooltip when user hover / move / leave a cell\n  var mouseover = function(d) {\n    <div class=\"highlights fea_Tooltip\" id=\"Tooltip_2\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Tooltip_keys udls\">tooltip</span>\n      .style(\"opacity\", 1)\n    d3.select(this)\n      .style(\"stroke\", \"black\")\n      .style(\"opacity\", 1)</div>\n  }\n  var mousemove = function(d) {\n    <div class=\"highlights fea_Tooltip\" id=\"Tooltip_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Tooltip_keys udls\">tooltip</span>\n      .html(\"The exact value of<br/>this cell is: \" + d.value)\n      .style(\"left\", (d3.mouse(this)[0]+70) + \"px\")\n      .style(\"top\", (d3.mouse(this)[1]) + \"px\")</div>\n  }\n  var mouseleave = function(d) {\n    tooltip\n      .style(\"opacity\", 0)\n    d3.select(this)\n      .style(\"stroke\", \"none\")\n      .style(\"opacity\", 0.8)\n  }\n\n  // add the <div class=\"highlights fea_Heatmap\" id=\"Heatmap_0\" style=\"background-color: #f6b73c;  display: inline;\">squares</div>\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">svg.selectAll()\n    .<span class=\"fea_Shapes_keys udls\">data</span>(<span class=\"fea_Shapes_keys udls\">data</span>, function(d) {return d.group+':'+d.variable;})\n    .enter()\n    .append(\"rect\")\n      .attr(\"x\", function(d) { return x(d.group) })\n      .attr(\"y\", function(d) { return y(d.variable) })\n      .attr(\"rx\", 4)\n      .attr(\"ry\", 4)\n      .attr(\"width\", x.bandwidth() )\n      .attr(\"height\", y.bandwidth() )\n      .style(\"fill\", function(d) { return myColor(d.value)} )\n      .style(\"stroke-width\", 4)\n      .style(\"stroke\", \"none\")\n      .style(\"opacity\", 0.8)</div>\n    <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">.on(\"<span class=\"fea_Mouse_Events_keys udls\">mouse</span><span class=\"fea_Mouse_Events_keys udls\">ove</span>r\", <span class=\"fea_Mouse_Events_keys udls\">mouse</span><span class=\"fea_Mouse_Events_keys udls\">ove</span>r)\n    .on(\"<span class=\"fea_Mouse_Events_keys udls\">mouse</span>m<span class=\"fea_Mouse_Events_keys udls\">ove</span>\", <span class=\"fea_Mouse_Events_keys udls\">mouse</span>m<span class=\"fea_Mouse_Events_keys udls\">ove</span>)\n    .on(\"<span class=\"fea_Mouse_Events_keys udls\">mouse</span>leave\", <span class=\"fea_Mouse_Events_keys udls\">mouse</span>leave)</div>\n})\n\n// Add title to graph\n<div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">svg.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n        .attr(\"x\", 0)\n        .attr(\"y\", -50)\n        .attr(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\", \"left\")\n        .style(\"font-size\", \"22px\")\n        .<span class=\"fea_Text_keys udls\">text</span>(\"A fir heatmap\");\n\n// Add subtitle to graph\nsvg.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n        .attr(\"x\", 0)\n        .attr(\"y\", -20)\n        .attr(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\", \"left\")\n        .style(\"font-size\", \"14px\")\n        .style(\"fill\", \"grey\")\n        .style(\"max-width\", 400)\n        .<span class=\"fea_Text_keys udls\">text</span>(\"A short description of the take-away message of this chart.\");\n</div>\n        #https://www.fir-graph-gallery.com/graph/heatmap_style.html</code></pre></div>",
    "fir_7": "<div class=\"codeBlock hljs javascript\" id=\"fir_7\"><pre id=\"fir_7_code\"><code class=\"javascript\"><div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline;\">var svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 80, bottom: 30, left: 50},\n    <span class=\"fea_Canvas_keys udls\">width</span> = svg.attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\") - margin.left - margin.right,\n    <span class=\"fea_Canvas_keys udls\">height</span> = svg.attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\n<div class=\"highlights fea_Data_Format\" id=\"Data_Format_0\" style=\"display: inline;\">var parseTime = d3.timeParse(\"%Y%m%d\");</div>\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline;\">var x = d3.<span class=\"fea_Axis_keys udls\">scale</span>Time().range([0, width]),\n    y = d3.<span class=\"fea_Axis_keys udls\">scale</span>Linear().range([height, 0]),\n    z = d3.<span class=\"fea_Axis_keys udls\">scale</span>Ordinal(d3.schemeCategory10);</div>\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline;\">var line = d3.line()\n    .curve(d3.curveBasis)\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.temperature); });</div>\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline;\">d3.tsv(\"<span class=\"fea_Import_Data_keys udls\">data</span>.tsv\"</div>, type, function(error, data) {\n  if (error) throw error;\n\n  <div class=\"highlights fea_Data_Grouping\" id=\"Data_Grouping_0\" style=\"display: inline;\">var cities = <span class=\"fea_Data_Grouping_keys udls\">data</span>.columns.slice(1).<span class=\"fea_Data_Grouping_keys udls\">map</span>(<span class=\"fea_Data_Grouping_keys udls\">function</span>(id) {\n    <span class=\"fea_Data_Grouping_keys udls\">return</span> {\n      id: id,\n      values: <span class=\"fea_Data_Grouping_keys udls\">data</span>.<span class=\"fea_Data_Grouping_keys udls\">map</span>(<span class=\"fea_Data_Grouping_keys udls\">function</span>(d) {\n        <span class=\"fea_Data_Grouping_keys udls\">return</span> {date: d.date, temperature: d[id]};\n      })\n    };\n  });</div>\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"display: inline;\">d3.min(cities, function(c) { return d3.min(c.values, function(d) { return d.temperature; }); }),\n    d3.<span class=\"fea_Data_Transformation_keys udls\">max</span>(cities, function(c) { return d3.<span class=\"fea_Data_Transformation_keys udls\">max</span>(c.values, function(d) { return d.temperature; }); })</div>\n  ]);\n\n  z.domain(cities.map(function(c) { return c.id; }));\n\n  <div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"display: inline;\">g.append(\"g\")\n      .attr(\"class\", \"<span class=\"fea_Axis_keys udls\">axis</span> <span class=\"fea_Axis_keys udls\">axis</span>--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.<span class=\"fea_Axis_keys udls\">axis</span>Bottom(x));\n\n  g.append(\"g\")\n      .attr(\"class\", \"<span class=\"fea_Axis_keys udls\">axis</span> <span class=\"fea_Axis_keys udls\">axis</span>--y\")\n      .call(d3.<span class=\"fea_Axis_keys udls\">axis</span>Left(y))\n    .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \"0.71em\")\n      .attr(\"fill\", \"#000\")\n      .text(\"Temperature, ºF\");</div>\n\n  var city = g.selectAll(\".city\")\n    .data(cities)\n    .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline;\"> city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { return z(d.id); });</div>\n\n  <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline;\">city.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })\n      .attr(\"transform\", function(d) { return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\"; })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \"0.35em\")\n      .style(\"font\", \"10px sans-serif\")\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d.id; });</div>\n});\n\nfunction type(d, _, columns) {\n  d.date = parseTime(d.date);\n  for (var i = 1, n = columns.length, c; i &lt; n; ++i) d[c = columns[i]] = +d[c];\n  return d;\n}\n//https://bl.ocks.org/sebg/0cc55428f83eb52bdfad6f5692023b07</code></pre></div>",
    "fir_11": "<div class=\"codeBlock hljs javascript\" id=\"fir_11\"><pre id=\"fir_11_code\" style=\"\"><code class=\"javascript\">var margin = { top: 30, right: 120, bottom: 30, left: 50 },\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom,\n    <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Tooltip_keys udls\">tooltip</span> = { width: 100, height: 100, x: 10, y: -30 };</div>\n\n<div class=\"highlights fea_Data_Format\" id=\"Data_Format_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var parseDate = d3.time.format(\"%m/%e/%Y\").parse,\n    bisectDate = d3.bisector(function(d) { return d.date; }).left,\n    formatValue = d3.format(\",\"),\n    dateFormatter = d3.time.format(\"%m/%d/%y\");</div>\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var x = d3.time.<span class=\"fea_Axis_keys udls\">scale</span>()\n        .range([0, width]);\n\nvar y = d3.<span class=\"fea_Axis_keys udls\">scale</span>.linear()\n        .range([height, 0]);\n\nvar x<span class=\"fea_Axis_keys udls\">Axis</span> = d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>()\n    .<span class=\"fea_Axis_keys udls\">scale</span>(x)\n    .orient(\"bottom\")\n    .tickFormat(dateFormatter);\n\nvar y<span class=\"fea_Axis_keys udls\">Axis</span> = d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>()\n    .<span class=\"fea_Axis_keys udls\">scale</span>(y)\n    .orient(\"left\")\n    .tickFormat(d3.format(\"s\"))</div>\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var line = d3.svg.line()\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.likes); });</div>\n\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom)\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.tsv(\"<span class=\"fea_Import_Data_keys udls\">data</span>.tsv\"</div>, function(error, data) {\n    if (error) throw error;\n\n    data.forEach(function(d) {\n        d.date = parseDate(d.date);\n        d.likes = +d.likes;\n    });\n\n    <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Data_Transformation_keys udls\">data</span>.sort(function(a, b) {\n        return a.date - b.date;\n    });\n</div>\n    x.domain([data[0].date, data[data.length - 1].date]);\n    y.domain(d3.extent(data, function(d) { return d.likes; }));\n\n    <div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">svg.append(\"g\")\n        .attr(\"class\", \"x <span class=\"fea_Axis_keys udls\">axis</span>\")\n        .attr(\"transform\", \"translate(0,\" + height + \")\")\n        .call(x<span class=\"fea_Axis_keys udls\">Axis</span>);\n\n    svg.append(\"g\")\n        .attr(\"class\", \"y <span class=\"fea_Axis_keys udls\">axis</span>\")\n        .call(y<span class=\"fea_Axis_keys udls\">Axis</span>)\n        .append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", 6)\n        .attr(\"dy\", \".71em\")\n        .style(\"text-anchor\", \"end\")\n        .text(\"Number of Likes\");</div>\n\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">svg.append(\"path\")\n        .datum(<span class=\"fea_Shapes_keys udls\">data</span>)\n        .attr(\"class\", \"line\")\n        .attr(\"d\", line);</div>\n\n    var focus = svg.append(\"g\")\n        .attr(\"class\", \"focus\")\n        .style(\"display\", \"none\");\n\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_2\" style=\"display: inline; background-color: rgb(246, 183, 60);\">focus.append(\"circle\")\n        .attr(\"r\", 5);\n\n    focus.append(\"rect\")\n        .attr(\"class\", \"tooltip\")\n        .attr(\"width\", 100)\n        .attr(\"height\", 50)\n        .attr(\"x\", 10)\n        .attr(\"y\", -22)\n        .attr(\"rx\", 4)\n        .attr(\"ry\", 4);</div>\n\n    <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">focus.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n        .attr(\"class\", \"tooltip-date\")\n        .attr(\"x\", 18)\n        .attr(\"y\", -2);\n\n    focus.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n        .attr(\"x\", 18)\n        .attr(\"y\", 18)\n        .<span class=\"fea_Text_keys udls\">text</span>(\"Likes:\");\n\n    focus.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n        .attr(\"class\", \"tooltip-likes\")\n        .attr(\"x\", 60)\n        .attr(\"y\", 18);</div>\n\n    svg.append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">.on(\"<span class=\"fea_Mouse_Events_keys udls\">mouse</span><span class=\"fea_Mouse_Events_keys udls\">ove</span>r\", function() { focus.style(\"display\", null); })\n        .on(\"<span class=\"fea_Mouse_Events_keys udls\">mouse</span>out\", function() { focus.style(\"display\", \"none\"); })\n        .on(\"<span class=\"fea_Mouse_Events_keys udls\">mouse</span>m<span class=\"fea_Mouse_Events_keys udls\">ove</span>\", <span class=\"fea_Mouse_Events_keys udls\">mouse</span>m<span class=\"fea_Mouse_Events_keys udls\">ove</span>);</div>\n\n    function mousemove() {\n        var x0 = x.invert(d3.mouse(this)[0]),\n            i = bisectDate(data, x0, 1),\n            d0 = data[i - 1],\n            d1 = data[i],\n            d = x0 - d0.date &gt; d1.date - x0 ? d1 : d0;\n        focus.attr(\"transform\", \"translate(\" + x(d.date) + \",\" + y(d.likes) + \")\");\n        focus.select(\".tooltip-date\").text(dateFormatter(d.date));\n        focus.select(\".tooltip-likes\").text(formatValue(d.likes));\n    }\n});\n//https://bl.ocks.org/Vvgupta/62d8a405260cb4d104cc1ba42b155e87</code></pre></div>",
    "fir_12": "<div class=\"codeBlock hljs javascript\" id=\"fir_12\"><pre id=\"fir_12_code\" style=\"\"><code class=\"javascript\">var dataset = [\n  ['札幌',703, 1902],\n  ['清水',1473,3341],\n  ['松本',863,1935],\n  ['Ｃ大阪',1494,3008],\n  ['京都',965,1743],\n  ['岡山',568,1271],\n  ['町田',189, 626],\n  ['横浜ＦＣ',464, 1064],\n  ['徳島',731, 1443],\n  ['愛媛',306, 630],\n  ['千葉',899, 2556],\n  ['山口',231, 880],\n  ['水戸',262, 589],\n  ['山形',429, 1497],\n  ['長崎',322, 749],\n  ['熊本',315, 720],\n  ['群馬',228, 522],\n  ['東京Ｖ',436, 1391],\n  ['讃岐',287, 613],\n  ['岐阜',419,932],\n  ['金沢',296,612],\n  ['北九州',343,855]\n];\n\nvar margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960,\n    height = 400;\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var x<span class=\"fea_Axis_keys udls\">Scale</span> = d3.<span class=\"fea_Axis_keys udls\">scale</span>Band()\n              .rangeRound([0, width])\n              .padding(0.1)\n              .domain(dataset.map(function(d) {\n                return d[0];\n              }));\n    y<span class=\"fea_Axis_keys udls\">Scale</span> = d3.<span class=\"fea_Axis_keys udls\">scale</span>Linear()\n              .rangeRound([height, 0])\n              .domain([0, d3.max(dataset, (function (d) {\n                return d[2];\n              }))]);</div>\n\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var svg = d3.select(\"body\").append(\"svg\")\n          .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right)\n          .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom);\n\nvar g = svg.append(\"g\")\n          .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\n// axis-x\n<div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">g.append(\"g\")\n    .attr(\"class\", \"<span class=\"fea_Axis_keys udls\">axis</span> <span class=\"fea_Axis_keys udls\">axis</span>--x\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.<span class=\"fea_Axis_keys udls\">axis</span>Bottom(x<span class=\"fea_Axis_keys udls\">Scale</span>));\n\n// <span class=\"fea_Axis_keys udls\">axis</span>-y\ng.append(\"g\")\n    .attr(\"class\", \"<span class=\"fea_Axis_keys udls\">axis</span> <span class=\"fea_Axis_keys udls\">axis</span>--y\")\n    .call(d3.<span class=\"fea_Axis_keys udls\">axis</span>Left(y<span class=\"fea_Axis_keys udls\">Scale</span>));</div>\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var bar = g.selectAll(\"rect\")\n  .<span class=\"fea_Shapes_keys udls\">data</span>(<span class=\"fea_Shapes_keys udls\">data</span>set)\n  .enter().append(\"g\");\n\n// bar chart\nbar.append(\"rect\")\n  .attr(\"x\", function(d) { return xScale(d[0]); })\n  .attr(\"y\", function(d) { return yScale(d[2]); })\n  .attr(\"width\", xScale.bandwidth())\n  .attr(\"height\", function(d) { return height - yScale(d[2]); })\n  .attr(\"class\", function(d) {\n    var s = \"bar \";\n    if (d[1] &lt; 400) {\n      return s + \"bar1\";\n    } else if (d[1] &lt; 800) {\n      return s + \"bar2\";\n    } else {\n      return s + \"bar3\";\n    }\n  });</div>\n\n// labels on the <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Bar_Chart_keys udls\">bar</span> chart</div>\n<div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">bar.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n  .attr(\"dy\", \"1.3em\")\n  .attr(\"x\", function(d) { return xScale(d[0]) + xScale.bandwidth() / 2; })\n  .attr(\"y\", function(d) { return yScale(d[2]); })\n  .attr(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\", \"middle\")\n  .attr(\"font-family\", \"sans-serif\")\n  .attr(\"font-size\", \"11px\")\n  .attr(\"fill\", \"black\")\n  .<span class=\"fea_Text_keys udls\">text</span>(function(d) {\n    return d[2];\n  });</div>\n\n// <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">line</span> chart</div>\n<div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var line = d3.line()\n    .x(function(d, i) { return xScale(d[0]) + xScale.bandwidth() / 2; })\n    .y(function(d) { return yScale(d[1]); })\n    .curve(d3.curveMonotoneX);\n\nbar.append(\"path\")\n  .attr(\"class\", \"line\") // Assign a class for styling\n  .attr(\"d\", line(<span class=\"fea_Shapes_keys udls\">data</span>set)); // 11. Calls the line generator\n\nbar.append(\"circle\") // Uses the enter().append() method\n    .attr(\"class\", \"dot\") // Assign a class for styling\n    .attr(\"cx\", function(d, i) { return xScale(d[0]) + xScale.bandwidth() / 2; })\n    .attr(\"cy\", function(d) { return yScale(d[1]); })\n    .attr(\"r\", 5);</div>\n//https://bl.ocks.org/htakeuchi/a60c0ecb55713c06c054c26c6dbed57a</code></pre></div>",
    "fir_15": "<div class=\"codeBlock hljs javascript\" id=\"fir_15\"><pre id=\"fir_15_code\" style=\"\"><code class=\"javascript\">// set the dimensions and margins of the graph\nvar margin = {top: 10, right: 30, bottom: 30, left: 60},\n    width = 460 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\n// append the svg object to the body of the page\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var svg = d3.select(\"#my_dataviz\")\n  .append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\n//Read the data\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.csv(\"https://raw.githubusercontent.com/holtzy/fir-graph-gallery/master/<span class=\"fea_Import_Data_keys udls\">DATA</span>/<span class=\"fea_Import_Data_keys udls\">data</span>_IC.csv\"</div>,function(data) {\n\n  // Add X axis --&gt; it is a date format\n  <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var x = d3.<span class=\"fea_Axis_keys udls\">scale</span>Linear()\n    .domain([1,100])\n    .range([ 0, width ]);\n  svg.append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.<span class=\"fea_Axis_keys udls\">axis</span>Bottom(x));\n\n  // Add Y <span class=\"fea_Axis_keys udls\">axis</span>\n  var y = d3.<span class=\"fea_Axis_keys udls\">scale</span>Linear()\n    .domain([0, 13])\n    .range([ height, 0 ]);\n  svg.append(\"g\")\n    .call(d3.<span class=\"fea_Axis_keys udls\">axis</span>Left(y));</div>\n\n  // This allows to find the closest X index of the mouse:\n  var bisect = d3.bisector(function(d) { return d.x; }).left;\n\n  // Create the circle that travels along the curve of chart\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var focus = svg\n    .append('g')\n    .append('circle')\n      .style(\"fill\", \"none\")\n      .attr(\"stroke\", \"black\")\n      .attr('r', 8.5)\n      .style(\"opacity\", 0)</div>\n\n  // Create the text that travels along the curve of chart\n  <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var focus<span class=\"fea_Text_keys udls\">Text</span> = svg\n    .append('g')\n    .append('<span class=\"fea_Text_keys udls\">text</span>')\n      .style(\"opacity\", 0)\n      .attr(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\", \"left\")\n      .attr(\"alignment-baseline\", \"middle\")</div>\n\n  // Add the <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">line</span></div>\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">svg\n    .append(\"path\")\n    .datum(<span class=\"fea_Shapes_keys udls\">data</span>)\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"steelblue\")\n    .attr(\"stroke-width\", 1.5)\n    .attr(\"d\", d3.line()\n      .x(function(d) { return x(d.x) })\n      .y(function(d) { return y(d.y) })\n      )\n\n  // Create a rect on top of the svg area: this rectangle recovers mouse position\n  svg\n    .append('rect')\n    .style(\"fill\", \"none\")\n    .style(\"pointer-events\", \"all\")\n    .attr('width', width)\n    .attr('height', height)</div>\n    <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">.on('<span class=\"fea_Mouse_Events_keys udls\">mouse</span><span class=\"fea_Mouse_Events_keys udls\">ove</span>r', <span class=\"fea_Mouse_Events_keys udls\">mouse</span><span class=\"fea_Mouse_Events_keys udls\">ove</span>r)\n    .on('<span class=\"fea_Mouse_Events_keys udls\">mouse</span>m<span class=\"fea_Mouse_Events_keys udls\">ove</span>', <span class=\"fea_Mouse_Events_keys udls\">mouse</span>m<span class=\"fea_Mouse_Events_keys udls\">ove</span>)\n    .on('<span class=\"fea_Mouse_Events_keys udls\">mouse</span>out', <span class=\"fea_Mouse_Events_keys udls\">mouse</span>out);</div>\n\n\n  // What happens when the mouse move -&gt; show the annotations at the right positions.\n  function mouseover() {\n    focus.style(\"opacity\", 1)\n    focusText.style(\"opacity\",1)\n  }\n\n  function mousemove() {\n    // recover coordinate we need\n    var x0 = x.invert(d3.mouse(this)[0]);\n    var i = bisect(data, x0, 1);\n    selectedData = data[i]\n    focus\n      .attr(\"cx\", x(selectedData.x))\n      .attr(\"cy\", y(selectedData.y))\n    focusText\n      .html(\"x:\" + selectedData.x + \"  -  \" + \"y:\" + selectedData.y)\n      .attr(\"x\", x(selectedData.x)+15)\n      .attr(\"y\", y(selectedData.y))\n    }\n  function mouseout() {\n    focus.style(\"opacity\", 0)\n    focusText.style(\"opacity\", 0)\n  }\n\n})\n//https://www.fir-graph-gallery.com/graph/line_cursor.html</code></pre></div>",
    "fir_17": "<div class=\"codeBlock hljs javascript\" id=\"fir_17\"><pre id=\"fir_17_code\" style=\"\"><code class=\"javascript\">(function() {\n  $(function() {\n    var bars, data, days, h, lines, max, pb, pl, pr, pt, ticks, tl, vis, w, x, xl, y, _ref;\n    days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    data = [[10, 5, 10, 5, 8, 15, 18], [20, 10, 20, 40, 23, 20, 12]];\n    _ref = [20, 40, 20, 30], pt = _ref[0], pl = _ref[1], pr = _ref[2], pb = _ref[3];\n    w = $('#chart').width() - (pl + pr);\n    h = $('#chart').height() - (pt + pb);\n    tl = 3;\n    <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Data_Transformation_keys udls\">max</span> = d3.<span class=\"fea_Data_Transformation_keys udls\">max</span>(d3.merge(<span class=\"fea_Data_Transformation_keys udls\">data</span>));</div>\n    <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">x = d3.<span class=\"fea_Axis_keys udls\">scale</span>.linear().domain([0, data[0].length - 1]).range([0, w]);\n    y = d3.<span class=\"fea_Axis_keys udls\">scale</span>.linear().domain([0, max + 5]).range([h, 0]);\n    xl = d3.<span class=\"fea_Axis_keys udls\">scale</span>.ordinal().domain(d3.range(days.length)).rangeRoundBands([0, w], 0);</div>\n    <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">vis = d3.select('#chart').append('svg:svg').attr('<span class=\"fea_Canvas_keys udls\">width</span>', w + (pl + pr)).attr('<span class=\"fea_Canvas_keys udls\">height</span>', h + pt + pb).attr('class', 'viz').append('svg:g').attr('transform', \"translate(\" + pl + \",\" + pt + \")\");</div>\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">bars = vis.selectAll('g.bar').<span class=\"fea_Shapes_keys udls\">data</span>(days).enter().append('svg:g').attr('transform', function(d, i) {\n      return \"translate(\" + (xl(i)) + \", 0)\";\n    }).attr(\"class\", function(d, i) {\n      if (i % 2 === 0) {\n        return 'even';\n      } else {\n        return 'odd';\n      }\n    });\n    bars.append(\"svg:rect\").attr(\"width\", xl.rangeBand()).attr(\"height\", h);</div>\n    <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">bars.append('svg:<span class=\"fea_Text_keys udls\">text</span>').<span class=\"fea_Text_keys udls\">text</span>(function(d) {\n      return d;\n    }).attr('y', h).attr(\"dy\", \"1.5em\").attr('dx', function(d) {\n      return (xl.rangeBand() / 2.0) - (this.<span class=\"fea_Text_keys udls\">text</span>Length.baseVal.value / 2.0);\n    });</div>\n    ticks = vis.selectAll('.tick').data(y.ticks(7)).enter().append('svg:g').attr('transform', function(d) {\n      return \"translate(-\" + (tl * 1.5) + \", \" + (y(d)) + \")\";\n    }).attr('class', 'tick');\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">ticks.append('svg:line').attr('y1', 0).attr('y2', 0).attr('x1', 0).attr('x2', w + tl);</div>\n    <div class=\"highlights fea_Text\" id=\"Text_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">ticks.append('svg:<span class=\"fea_Text_keys udls\">text</span>').<span class=\"fea_Text_keys udls\">text</span>(function(d) {\n      return d;\n    }).attr('<span class=\"fea_Text_keys udls\">text</span>-anchor', 'end').attr('dy', 2).attr('x', -4);</div>\n    <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">line</span>s</div> = vis.selectAll('line.group').data(data).enter().append('svg:g').attr('class', function(d, i) {\n      if (i === 0) {\n        return 'cats';\n      } else {\n        return 'dogs';\n      }\n    });\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_2\" style=\"display: inline; background-color: rgb(246, 183, 60);\">lines.append(\"svg:path\").attr(\"class\", function(d) {\n      return 'apath';\n    }).attr(\"d\", d3.svg.line().x(function(d, i) {\n      return x(i);\n    }).y(function(d) {\n      return y(d);\n    }).interpolate('cardinal').tension(.7));\n    return lines.selectAll('.point').<span class=\"fea_Shapes_keys udls\">data</span>(function(d) {\n      return d;\n    }).enter().append(\"svg:circle\").attr(\"class\", \"point\").attr(\"cx\", function(d, i) {\n      return x(i);\n    }).attr(\"cy\", function(d) {\n      return y(d);\n    }).attr(\"r\", 3);\n  });</div>\n}).call(this);\n//https://github.com/caged/firline/blob/master/js/app</code></pre></div>",
    "fir_24": "<div class=\"codeBlock hljs javascript\" id=\"fir_24\"><pre id=\"fir_24_code\" style=\"\"><code class=\"javascript\"><div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var svg = d3.select(\"svg\"),\n    <span class=\"fea_Canvas_keys udls\">width</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\"),\n    <span class=\"fea_Canvas_keys udls\">height</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\"),\n    g = svg.append(\"g\").attr(\"transform\", \"translate(40,0)\");\n</div>\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var tree = d3.tree()\n    .size([height - 400, width - 160]);\n\nvar cluster = d3.cluster()\n    .size([height, width - 160]);</div>\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.csv(\"flare.csv\"</div>, function(error, data) {\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sort(function(a, b) { return (a.height - b.height) || a.id.localeCompare(b.id); });\n\n  cluster(root);\n\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var link = g.selectAll(\".link\")\n      .<span class=\"fea_Shapes_keys udls\">data</span>(root.descendants().slice(1))\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", diagonal);\n\n  var node = g.selectAll(\".node\")\n      .<span class=\"fea_Shapes_keys udls\">data</span>(root.descendants())\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return \"node\" + (d.children ? \" node--internal\" : \" node--leaf\"); })\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n\n  node.append(\"circle\")\n      .attr(\"r\", 2.5);</div>\n\n  <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">node.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"dy\", 3)\n      .attr(\"x\", function(d) { return d.children ? -8 : 8; })\n      .style(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\", function(d) { return d.children ? \"end\" : \"start\"; })\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1); });</div>\n\n  d3.selectAll(\"input\")\n      <div class=\"highlights fea_Selection\" id=\"Selection_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">.on(\"<span class=\"fea_Selection_keys udls\">change</span>\", <span class=\"fea_Selection_keys udls\">change</span>d);</div>\n\n  <div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"background-color: #f6b73c;  display: inline;\">var timeout = setTimeout(function() {\n    d3.select(\"input[value=\\\"tree\\\"]\")\n        .property(\"checked\", true)\n        .dispatch(\"change\");\n  }, 1000);</div>\n\n  function changed() {\n    timeout = clearTimeout(timeout);\n    (this.value === \"tree\" ? tree : cluster)(root);\n    var t = d3.transition().duration(750);\n    <div class=\"highlights fea_Tree\" id=\"Tree_0\" style=\"background-color: #f6b73c;  display: inline;\">node.transition(t).attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; });\n    link.transition(t).attr(\"d\", diagonal);</div>\n  }\n});\n\nfunction diagonal(d) {\n  return \"M\" + d.y + \",\" + d.x\n      + \"C\" + (d.parent.y + 100) + \",\" + d.x\n      + \" \" + (d.parent.y + 100) + \",\" + d.parent.x\n      + \" \" + d.parent.y + \",\" + d.parent.x;\n}\n#https://bl.ocks.org/mbostock/e9ba78a2c1070980d1b530800ce7fa2b</code></pre></div>",
    "fir_25": "<div class=\"codeBlock hljs javascript\" id=\"fir_25\"><pre id=\"fir_25_code\" style=\"\"><code class=\"javascript\">// set the dimensions and margins of the graph\nvar margin = {top: 20, right: 30, bottom: 20, left: 30},\n  width = 450 - margin.left - margin.right,\n  height = 300 - margin.top - margin.bottom;\n\n// append the svg object to the body of the page\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var svg = d3.select(\"#my_dataviz\")\n  .append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\n</div>\n// Read dummy data\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">firon(\"https://raw.githubusercontent.com/holtzy/fir-graph-gallery/master/<span class=\"fea_Import_Data_keys udls\">DATA</span>/<span class=\"fea_Import_Data_keys udls\">data</span>_networkon\"</div>, function( data) {\n\n  // List of node names\n  var allNodes = data.nodes.map(function(d){return d.name})\n\n  // A linear scale to position the nodes on the X axis\n  <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var x = d3.<span class=\"fea_Axis_keys udls\">scale</span>Point()\n    .range([0, width])\n    .domain(allNodes)</div>\n\n  // Add the circle for the nodes\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var nodes = svg\n    .selectAll(\"mynodes\")\n    .<span class=\"fea_Shapes_keys udls\">data</span>(<span class=\"fea_Shapes_keys udls\">data</span>.nodes)\n    .enter()\n    .append(\"circle\")\n      .attr(\"cx\", function(d){ return(x(d.name))})\n      .attr(\"cy\", height-30)\n      .attr(\"r\", 8)\n      .style(\"fill\", \"#69b3a2\")</div>\n\n  // And give them a label\n  <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var labels = svg\n    .selectAll(\"mylabels\")\n    .data(data.nodes)\n    .enter()\n    .append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"x\", function(d){ return(x(d.name))})\n      .attr(\"y\", height-10)\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d){ return(d.name)})\n      .style(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\", \"middle\")</div>\n\n  // Add links between nodes. Here is the tricky part.\n  // In my input data, links are provided between nodes -id-, NOT between node names.\n  // So I have to do a link between this id and the name\n  var idToNode = {};\n  data.nodes.forEach(function (n) {\n    idToNode[n.id] = n;\n  });\n  // Cool, now if I do idToNode[\"2\"].name I've got the name of the node with id 2\n\n  // Add the links\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var links = svg\n    .selectAll('mylinks')\n    .<span class=\"fea_Shapes_keys udls\">data</span>(<span class=\"fea_Shapes_keys udls\">data</span>.links)\n    .enter()\n    .append('path')\n    .attr('d', function (d) {\n      start = x(idToNode[d.source].name)    // X position of start node on the X axis\n      end = x(idToNode[d.target].name)      // X position of end node\n      return ['M', start, height-30,    // the arc starts at the coordinate x=start, y=height-30 (where the starting node is)\n        'A',                            // This means we're gonna build an elliptical arc\n        (start - end)/2, ',',    // Next 2 lines are the coordinates of the inflexion point. Height of this point is proportional with start - end distance\n        (start - end)/2, 0, 0, ',',\n        start &lt; end ? 1 : 0, end, ',', height-30] // We always want the arc on top. So if end is before start, putting 0 here turn the arc upside down.\n        .join(' ');\n    })\n    .style(\"fill\", \"none\")\n    .attr(\"stroke\", \"black\")</div>\n\n    // Add the highlighting functionality\n    nodes\n      <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">.on('<span class=\"fea_Mouse_Events_keys udls\">mouse</span><span class=\"fea_Mouse_Events_keys udls\">ove</span>r'</div>, function (d) {\n        // Highlight the nodes: every node is green except of him\n        nodes.style('fill', \"#B8B8B8\")\n        d3.select(this).style('fill', '#69b3b2')\n        // Highlight the connections\n        <div class=\"highlights fea_Tree\" id=\"Tree_0\" style=\"background-color: #f6b73c;  display: inline;\">links\n          .style('stroke', function (link_d) { return link_d.source === d.id || link_d.target === d.id ? '#69b3b2' : '#b8b8b8';}</div>)\n          .style('stroke-width', function (link_d) { return link_d.source === d.id || link_d.target === d.id ? 4 : 1;})\n      })\n      <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">.on('<span class=\"fea_Mouse_Events_keys udls\">mouse</span>out'</div>, function (d) {\n        nodes.style('fill', \"#69b3a2\")\n        links\n          .style('stroke', 'black')\n          .style('stroke-width', '1')\n      })\n})\n\n// text hover nodes\n<div class=\"highlights fea_Text\" id=\"Text_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">svg\n  .append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n    .attr(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\", \"middle\")\n    .style(\"fill\", \"#B8B8B8\")\n    .style(\"font-size\", \"17px\")\n    .attr(\"x\", 50)\n    .attr(\"y\", 10)\n    .html(\"Hover nodes\")</div>\n#https://www.fir-graph-gallery.com/graph/arc_highlight.html</code></pre></div>",
    "fir_26": "<div class=\"codeBlock hljs javascript\" id=\"fir_26\"><pre id=\"fir_26_code\" style=\"\"><code class=\"javascript\">var units = \"Widgets\";\n\n// set the dimensions and margins of the graph\nvar margin = {top: 10, right: 10, bottom: 10, left: 10},\n    width = 700 - margin.left - margin.right,\n    height = 300 - margin.top - margin.bottom;\n\n// format variables\n<div class=\"highlights fea_Data_Format\" id=\"Data_Format_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var formatNumber = d3.format(\",.0f\"),    // zero decimal places\n    format = function(d) { return formatNumber(d) + \" \" + units; },\n    color = d3.scaleOrdinal(d3.schemeCategory10);</div>\n\n// append the svg object to the body of the page\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \n          \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\n// Set the sankey diagram properties\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var sankey = d3.sankey()\n    .nodeWidth(36)\n    .nodePadding(40)\n    .size([width, height]);</div>\n\n<div class=\"highlights fea_Sankey_Diagram\" id=\"Sankey_Diagram_0\" style=\"background-color: #f6b73c;  display: inline;\">var path = <span class=\"fea_Sankey_Diagram_keys udls\">sankey</span>.link();</div>\n\n// load the data\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.csv(\"sankey.csv\",</div> function(error, data) {\n \n  //set up graph in same style as original example but empty\n  graph = {\"nodes\" : [], \"links\" : []};\n\n  <div class=\"highlights fea_Data_Grouping\" id=\"Data_Grouping_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Data_Grouping_keys udls\">data</span>.forEach(<span class=\"fea_Data_Grouping_keys udls\">function</span> (d) {\n    graph.nodes.push({ \"name\": d.source });\n    graph.nodes.push({ \"name\": d.target });\n    graph.links.push({ \"source\": d.source,\n                       \"target\": d.target,\n                       \"value\": +d.value });\n   });</div>\n\n  // return only the distinct / unique nodes\n  <div class=\"highlights fea_Data_Grouping\" id=\"Data_Grouping_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">graph.nodes = d3.keys(d3.nest()\n    .key(<span class=\"fea_Data_Grouping_keys udls\">function</span> (d) { <span class=\"fea_Data_Grouping_keys udls\">return</span> d.name; })\n    .object(graph.nodes));</div>\n\n  // loop through each link replacing the text with its index from node\n  graph.links.forEach(function (d, i) {\n    graph.links[i].source = graph.nodes.indexOf(graph.links[i].source);\n    graph.links[i].target = graph.nodes.indexOf(graph.links[i].target);\n  });\n\n  // now loop through each nodes to make nodes an array of objects\n  // rather than an array of strings\n  graph.nodes.forEach(function (d, i) {\n    graph.nodes[i] = { \"name\": d };\n  });\n\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">sankey\n      .nodes(graph.nodes)\n      .links(graph.links)\n      .layout(32);</div>\n\n  // add in the links\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_2\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var link = svg.append(\"g\").selectAll(\".link\")\n      .<span class=\"fea_Shapes_keys udls\">data</span>(graph.links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", path)\n      .style(\"stroke-width\", function(d) { return Math.max(1, d.dy); })\n      .sort(function(a, b) { return b.dy - a.dy; });</div>\n\n  // add the link titles\n  <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">link.append(\"title\")\n        .<span class=\"fea_Text_keys udls\">text</span>(function(d) {\n    \t\treturn d.source.name + \" → \" + \n                d.target.name + \"\\n\" + format(d.value); });</div>\n\n  // add in the nodes\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_3\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var node = svg.append(\"g\").selectAll(\".node\")\n      .<span class=\"fea_Shapes_keys udls\">data</span>(graph.nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { \n\t\t  return \"translate(\" + d.x + \",\" + d.y + \")\"; })</div>\n      <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">.call(d3.drag()</div>\n        .subject(function(d) {\n          return d;\n        })\n        .on(\"start\", function() {\n          this.parentNode.appendChild(this);\n        })\n        <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">.on(\"drag\", dragm<span class=\"fea_Mouse_Events_keys udls\">ove</span>));</div>\n\n  // add the rectangles for the nodes\n <div class=\"highlights fea_Shapes\" id=\"Shapes_4\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> node.append(\"rect\")\n      .attr(\"height\", function(d) { return d.dy; })\n      .attr(\"width\", sankey.nodeWidth())\n      .style(\"fill\", function(d) { \n\t\t  return d.color = color(d.name.replace(/ .*/, \"\")); })\n      .style(\"stroke\", function(d) { \n\t\t  return d3.rgb(d.color).darker(2); })\n    .append(\"title\")\n      .text(function(d) { \n\t\t  return d.name + \"\\n\" + format(d.value); });\n</div>\n  // add in the title for the nodes\n <div class=\"highlights fea_Text\" id=\"Text_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> node.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"x\", -6)\n      .attr(\"y\", function(d) { return d.dy / 2; })\n      .attr(\"dy\", \".35em\")\n      .attr(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\", \"end\")\n      .attr(\"transform\", null)\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d.name; })\n    .filter(function(d) { return d.x &lt; width / 2; })\n      .attr(\"x\", 6 + sankey.nodeWidth())\n      .attr(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\", \"start\");\n</div>\n  // the function for moving the nodes\n  function dragmove(d) {\n    d3.select(this)\n      .attr(\"transform\", \n            \"translate(\" \n               + d.x + \",\" \n               + (d.y = Math.max(\n                  0, Math.min(height - d.dy, d3.event.y))\n                 ) + \")\");\n    sankey.relayout();\n    link.attr(\"d\", path);\n  }\n});\n#https://bl.ocks.org/firnoob/06e72deea99e7b4859841f305f63ba85</code></pre></div>",
    "fir_28": "<div class=\"codeBlock hljs javascript\" id=\"fir_28\"><pre id=\"fir_28_code\" style=\"\"><code class=\"javascript\">// set the dimensions and margins of the graph\nvar margin = {top: 10, right: 30, bottom: 30, left: 40},\n    width = 460 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\n// append the svg object to the body of the page\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var svg = d3.select(\"#my_dataviz\")\n  .append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\n// get the data\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.csv(\"https://raw.githubusercontent.com/holtzy/<span class=\"fea_Import_Data_keys udls\">data</span>_to_viz/master/Example_<span class=\"fea_Import_Data_keys udls\">data</span>set/1_OneNum.csv\"</div>, function(data) {\n\n  // X axis: scale and draw:\n  <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var x = d3.<span class=\"fea_Axis_keys udls\">scale</span>Linear()\n      .domain([0, 1000])     // can use this instead of 1000 to have the max of data: d3.max(data, function(d) { return +d.price })\n      .range([0, width]);\n  svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.<span class=\"fea_Axis_keys udls\">axis</span>Bottom(x));</div>\n\n  // set the parameters for the histogram\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var histogram = d3.histogram()\n      .value(function(d) { return d.price; })   // I need to give the vector of value\n      .domain(x.domain())  // then the domain of the graphic\n      .thresholds(x.ticks(70)); </div>// then the numbers of bins\n\n  // And apply this function to data to get the bins\n  var bins = histogram(data);\n\n  // Y axis: scale and draw:\n  <div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var y = d3.<span class=\"fea_Axis_keys udls\">scale</span>Linear()\n      .range([height, 0]);\n      y.domain([0, d3.max(bins, function(d) { return d.length; })]);   // d3.hist has to be called before the Y <span class=\"fea_Axis_keys udls\">axis</span> obviously\n  svg.append(\"g\")\n      .call(d3.<span class=\"fea_Axis_keys udls\">axis</span>Left(y));</div>\n\n  // append the <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Bar_Chart_keys udls\">bar</span></div> rectangles to the svg element\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">svg.selectAll(\"rect\")\n      .<span class=\"fea_Shapes_keys udls\">data</span>(bins)\n      .enter()\n      .append(\"rect\")\n        .attr(\"x\", 1)\n        .attr(\"transform\", function(d) { return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; })\n        .attr(\"width\", function(d) { return x(d.x1) - x(d.x0) -1 ; })\n        .attr(\"height\", function(d) { return height - y(d.length); })\n        .style(\"fill\", function(d){ if(d.x0&lt;140){return \"orange\"} else {return \"#69b3a2\"}})\n\n  // Append a vertical line to highlight the separation\n  svg\n    .append(\"line\")\n      .attr(\"x1\", x(140) )\n      .attr(\"x2\", x(140) )\n      .attr(\"y1\", y(0))\n      .attr(\"y2\", y(1600))\n      .attr(\"stroke\", \"grey\")\n      .attr(\"stroke-dasharray\", \"4\")</div>\n  <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">svg\n    .append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n    .attr(\"x\", x(190))\n    .attr(\"y\", y(1400))\n    .<span class=\"fea_Text_keys udls\">text</span>(\"threshold: 140\")\n    .style(\"font-size\", \"15px\")</div>\n\n});\n#https://www.fir-graph-gallery.com/graph/histogram_coloredTail.html</code></pre></div>",
    "fir_1": "<div class=\"codeBlock hljs javascript\" id=\"fir_1\"><pre id=\"fir_1_code\" style=\"\"><code class=\"javascript\"><div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var margin = {top: 10, right: 30, bottom: 30, left: 60},\n    <span class=\"fea_Canvas_keys udls\">width</span> = 460 - margin.left - margin.right,\n    <span class=\"fea_Canvas_keys udls\">height</span> = 400 - margin.top - margin.bottom;\n\n// append the svg object to the body of the page\nvar svg = d3.select(\"#my_dataviz\")\n  .append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\n//Read the data\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.csv(\"https://raw.githubusercontent.com/holtzy/<span class=\"fea_Import_Data_keys udls\">data</span>_to_viz/master/Example_<span class=\"fea_Import_Data_keys udls\">data</span>set/3_TwoNumOrdered_comma.csv\"</div>,\n\n  // When reading the csv, I must format variables:\n  function(d){\n    return { date : <div class=\"highlights fea_Data_Format\" id=\"Data_Format_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.timeParse(\"%Y-%m-%d\")(d.date)</div>, value : d.value }\n  },\n\n  // Now I can use this dataset:\n  function(data) {\n\n    // Add X axis --&gt; it is a date format\n    <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var x = d3.<span class=\"fea_Axis_keys udls\">scale</span>Time()\n      .domain(d3.extent(data, function(d) { return d.date; }))\n      .range([ 0, width ]);\n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.<span class=\"fea_Axis_keys udls\">axis</span>Bottom(x));</div>\n\n    // Add Y axis\n    <div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var y = d3.<span class=\"fea_Axis_keys udls\">scale</span>Linear()</div>\n      .domain([0, <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.<span class=\"fea_Data_Transformation_keys udls\">max</span>(<span class=\"fea_Data_Transformation_keys udls\">data</span>, function(d) { return +d.value; })</div>])\n      .range([ height, 0 ]);\n    svg.append(\"g\")\n      .call(d3.axisLeft(y));\n\n    // Add the <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">line</span></div>\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">svg.append(\"path\")\n      .datum(<span class=\"fea_Shapes_keys udls\">data</span>)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"steelblue\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"d\", d3.line()\n        .x(function(d) { return x(d.date) })\n        .y(function(d) { return y(d.value) })\n        )</div>\n\n})</code></pre></div>",
    "fir_2": "<div class=\"codeBlock hljs javascript\" id=\"fir_2\"><pre id=\"fir_2_code\" style=\"\"><code class=\"javascript\"><div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var margin = {top: 10, right: 30, bottom: 30, left: 60},\n    <span class=\"fea_Canvas_keys udls\">width</span> = 460 - margin.left - margin.right,\n    <span class=\"fea_Canvas_keys udls\">height</span> = 400 - margin.top - margin.bottom;\n\n// append the svg object to the body of the page\nvar svg = d3.select(\"#my_dataviz\")\n  .append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\n//Read the data\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.csv(\"https://raw.githubusercontent.com/holtzy/fir-graph-gallery/master/<span class=\"fea_Import_Data_keys udls\">DATA</span>/<span class=\"fea_Import_Data_keys udls\">data</span>_IC.csv\"</div>,function(data) {\n\n    // Add X axis --&gt; it is a date format\n    <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var x = d3.<span class=\"fea_Axis_keys udls\">scale</span>Linear()\n      .domain([1,100])\n      .range([ 0, width ]);\n    svg.append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.<span class=\"fea_Axis_keys udls\">axis</span>Bottom(x));</div>\n\n    // Add Y axis\n    <div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var y = d3.<span class=\"fea_Axis_keys udls\">scale</span>Linear()\n      .domain([0, 13])\n      .range([ height, 0 ]);\n    svg.append(\"g\")\n      .call(d3.<span class=\"fea_Axis_keys udls\">axis</span>Left(y));</div>\n\n    // Show confidence interval\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">svg.append(\"path\")\n      .datum(<span class=\"fea_Shapes_keys udls\">data</span>)\n      .attr(\"fill\", \"#cce5df\")\n      .attr(\"stroke\", \"none\")\n      .attr(\"d\", d3.area()\n        .x(function(d) { return x(d.x) })\n        .y0(function(d) { return y(d.CI_right) })\n        .y1(function(d) { return y(d.CI_left) })\n        )</div>\n\n    // Add the <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">line</span></div>\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">svg\n      .append(\"path\")\n      .datum(<span class=\"fea_Shapes_keys udls\">data</span>)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"steelblue\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"d\", d3.line()\n        .x(function(d) { return x(d.x) })\n        .y(function(d) { return y(d.y) })\n        )</div>\n\n})</code></pre></div>",
    "fir_8": "<div class=\"codeBlock hljs javascript\" id=\"fir_8\"><pre id=\"fir_8_code\" style=\"\"><code class=\"javascript\">var margin = {top: 20, right: 50, bottom: 30, left: 50},\n    width = 630 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\n<div class=\"highlights fea_Data_Format\" id=\"Data_Format_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var parseDate = d3.time.format(\"%Y-%m-%d\").parse;</div>\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var x = d3.time.<span class=\"fea_Axis_keys udls\">scale</span>()\n    .range([0, width]);\n\nvar y = d3.<span class=\"fea_Axis_keys udls\">scale</span>.linear()\n    .range([height, 0]);\n\nvar color = d3.<span class=\"fea_Axis_keys udls\">scale</span>.category10();\n\nvar x<span class=\"fea_Axis_keys udls\">Axis</span> = d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>()\n    .<span class=\"fea_Axis_keys udls\">scale</span>(x)\n    .ticks(5)\n    .innerTickSize(15)\n    .outerTickSize(0)\n    .orient(\"bottom\");\n\nvar y<span class=\"fea_Axis_keys udls\">Axis</span> = d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>()\n    .<span class=\"fea_Axis_keys udls\">scale</span>(y)\n    .tickFormat(function(d) { return d + \"%\";})\n    .ticks(5)\n    .innerTickSize(15)\n    .outerTickSize(0)\n    .orient(\"left\");</div>\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var line = d3.svg.line()\n    .interpolate(\"basis\")\n    .x(function(d) { return x(d.date); })\n    .y(function(d) { return y(d.price); });</div>\n\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.tsv(\"airbus_<span class=\"fea_Import_Data_keys udls\">data</span>.tsv\"</div>, function(error, data) {\n  <div class=\"highlights fea_Data_Filtering\" id=\"Data_Filtering_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"date\"; }));</div>\n\n  data.forEach(function(d) {\n    d.date = parseDate(d.date);\n  });\n\n  <div class=\"highlights fea_Data_Grouping\" id=\"Data_Grouping_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var companies = color.domain().<span class=\"fea_Data_Grouping_keys udls\">map</span>(<span class=\"fea_Data_Grouping_keys udls\">function</span>(name) {\n    <span class=\"fea_Data_Grouping_keys udls\">return</span> {\n      name: name,\n      values: <span class=\"fea_Data_Grouping_keys udls\">data</span>.<span class=\"fea_Data_Grouping_keys udls\">map</span>(<span class=\"fea_Data_Grouping_keys udls\">function</span>(d) {\n        <span class=\"fea_Data_Grouping_keys udls\">return</span> {date: d.date, price: +d[name]};\n      })\n    };\n  });</div>\n\n  x.domain(d3.extent(data, function(d) { return d.date; }));\n\n  y.domain([\n    <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.min(companies, function(c) { return d3.min(c.values, function(v) { return v.price; }); }),\n    d3.<span class=\"fea_Data_Transformation_keys udls\">max</span>(companies, function(c) { return d3.<span class=\"fea_Data_Transformation_keys udls\">max</span>(c.values, function(v) { return v.price; }); })</div>\n  ]);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis);\n\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">svg.append(\"line\")\n        .attr(\n        {\n            \"class\":\"horizontalGrid\",\n            \"x1\" : 0,\n            \"x2\" : width,\n            \"y1\" : y(0),\n            \"y2\" : y(0),\n            \"fill\" : \"none\",\n            \"shape-rendering\" : \"crispEdges\",\n            \"stroke\" : \"black\",\n            \"stroke-width\" : \"1px\",\n            \"stroke-dasharray\": (\"3, 3\")\n        });</div>\n\n  var company = svg.selectAll(\".company\")\n      .data(companies)\n    .enter().append(\"g\")\n      .attr(\"class\", \"company\");\n\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_2\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var path = svg.selectAll(\".company\").append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) { return line(d.values); })\n      .style(\"stroke\", function(d) { if (d.name == \"Airbus\") \n                                        {return \"rgb(000,255,000)\"}\n                                      else {return \"#000\";}\n                                         });</div>\n\n<div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">var totalLength = [path[0][0].getTotalLength(), path[0][1].getTotalLength()];</div>\n\n\n   d3.select(path[0][0])\n      .attr(\"stroke-dasharray\", totalLength[0] + \" \" + totalLength[0] ) \n      .attr(\"stroke-dashoffset\", totalLength[0])\n      <div class=\"highlights fea_Animations\" id=\"Animations_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">.transition()\n        .dur<span class=\"fea_Animations_keys udls\">ation</span>(5000)\n        .ease(\"linear\")\n        .attr(\"stroke-dashoffset\", 0);</div>\n\n   d3.select(path[0][1])\n      .attr(\"stroke-dasharray\", totalLength[1] + \" \" + totalLength[1] )\n      .attr(\"stroke-dashoffset\", totalLength[1])\n      <div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">.transition()\n        .dur<span class=\"fea_Animations_keys udls\">ation</span>(5000)\n        .ease(\"linear\")\n        .attr(\"stroke-dashoffset\", 0);</div>\n\n});\n\n//http://bl.ocks.org/atmccann/8966400</code></pre></div>",
    "fir_10": "<div class=\"codeBlock hljs javascript\" id=\"fir_10\"><pre id=\"fir_10_code\" style=\"\"><code class=\"javascript\"><div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 110, left: 40},\n    margin2 = {top: 430, right: 20, bottom: 30, left: 40},\n    <span class=\"fea_Canvas_keys udls\">width</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\") - margin.left - margin.right,\n    <span class=\"fea_Canvas_keys udls\">height</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\") - margin.top - margin.bottom,\n    <span class=\"fea_Canvas_keys udls\">height</span>2 = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\") - margin2.top - margin2.bottom;</div>\n\n<div class=\"highlights fea_Data_Format\" id=\"Data_Format_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var parseDate = d3.timeParse(\"%m/%d/%Y %H:%M\");</div>\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var x = d3.<span class=\"fea_Axis_keys udls\">scale</span>Time().range([0, width]),\n    x2 = d3.<span class=\"fea_Axis_keys udls\">scale</span>Time().range([0, width]),\n    y = d3.<span class=\"fea_Axis_keys udls\">scale</span>Linear().range([height, 0]),\n    y2 = d3.<span class=\"fea_Axis_keys udls\">scale</span>Linear().range([height2, 0]);\n\nvar x<span class=\"fea_Axis_keys udls\">Axis</span> = d3.<span class=\"fea_Axis_keys udls\">axis</span>Bottom(x),\n    x<span class=\"fea_Axis_keys udls\">Axis</span>2 = d3.<span class=\"fea_Axis_keys udls\">axis</span>Bottom(x2),\n    y<span class=\"fea_Axis_keys udls\">Axis</span> = d3.<span class=\"fea_Axis_keys udls\">axis</span>Left(y);</div>\n\n<div class=\"highlights fea_Zoom\" id=\"Zoom_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var <span class=\"fea_Zoom_keys udls\">brush</span> = d3.<span class=\"fea_Zoom_keys udls\">brush</span>X()\n    .extent([[0, 0], [width, height2]])\n    .on(\"<span class=\"fea_Zoom_keys udls\">brush</span> end\", <span class=\"fea_Zoom_keys udls\">brush</span>ed);\n\nvar zoom = d3.zoom()\n    .scaleExtent([1, Infinity])\n    .translateExtent([[0, 0], [width, height]])\n    .extent([[0, 0], [width, height]])\n    .on(\"zoom\", zoomed);</div>\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var line = d3.line()\n    .x(function (d) { return x(d.Date); })\n    .y(function (d) { return y(d.Air_Temp); });\n\nvar line2 = d3.line()\n    .x(function (d) { return x2(d.Date); })\n    .y(function (d) { return y2(d.Air_Temp); });\n\nvar clip = svg.append(\"defs\").append(\"svg:clipPath\")\n    .attr(\"id\", \"clip\")\n    .append(\"svg:rect\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)\n    .attr(\"x\", 0)\n    .attr(\"y\", 0); </div>\n\n\nvar <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>_chart</div> = svg.append(\"g\")\n    .attr(\"class\", \"focus\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n    .attr(\"clip-path\", \"url(#clip)\");\n\n\nvar focus = svg.append(\"g\")\n    .attr(\"class\", \"focus\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nvar context = svg.append(\"g\")\n    .attr(\"class\", \"context\")\n    .attr(\"transform\", \"translate(\" + margin2.left + \",\" + margin2.top + \")\");\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.csv(\"CIMIS_Station_125.csv\"</div>, type, function (error, data) {\n  if (error) throw error;\n\n  x.domain(d3.extent(data, function(d) { return d.Date; }));\n  y.domain([0, d3.max(data, function (d) { return d.Air_Temp; })]);\n  x2.domain(x.domain());\n  y2.domain(y.domain());\n\n\n  focus.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n  focus.append(\"g\")\n      .attr(\"class\", \"axis axis--y\")\n      .call(yAxis);\n\n  Line_chart.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line);\n\n  context.append(\"path\")\n      .datum(data)\n      .attr(\"class\", \"line\")\n      .attr(\"d\", line2);\n\n\n  context.append(\"g\")\n      .attr(\"class\", \"axis axis--x\")\n      .attr(\"transform\", \"translate(0,\" + height2 + \")\")\n      .call(xAxis2);\n\n  context.append(\"g\")\n      .attr(\"class\", \"brush\")\n      .call(brush)\n      .call(brush.move, x.range());\n\n  svg.append(\"rect\")\n      .attr(\"class\", \"zoom\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n      .call(zoom);\n\n\n  console.log(data);\n});\n\n<div class=\"highlights fea_Zoom\" id=\"Zoom_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">function <span class=\"fea_Zoom_keys udls\">brush</span>ed() {\n  if (d3.event.sourceEvent &amp;&amp; d3.event.sourceEvent.type === \"zoom\") return; // ignore <span class=\"fea_Zoom_keys udls\">brush</span>-by-zoom\n  var s = d3.event.selection || x2.range();\n  x.domain(s.map(x2.invert, x2));\n  Line_chart.select(\".line\").attr(\"d\", line);\n  focus.select(\".axis--x\").call(xAxis);\n  svg.select(\".zoom\").call(zoom.transform, d3.zoomIdentity\n      .scale(width / (s[1] - s[0]))\n      .translate(-s[0], 0));\n}\n\nfunction zoomed() {\n  if (d3.event.sourceEvent &amp;&amp; d3.event.sourceEvent.type === \"<span class=\"fea_Zoom_keys udls\">brush</span>\") return; // ignore zoom-by-<span class=\"fea_Zoom_keys udls\">brush</span>\n  var t = d3.event.transform;\n  x.domain(t.rescaleX(x2).domain());\n  Line_chart.select(\".line\").attr(\"d\", line);\n  focus.select(\".axis--x\").call(xAxis);\n  context.select(\".<span class=\"fea_Zoom_keys udls\">brush</span>\").call(<span class=\"fea_Zoom_keys udls\">brush</span>.move, x.range().map(t.invertX, t));\n}</div>\n\nfunction type(d) {\n  d.Date = parseDate(d.Date);\n  d.Air_Temp = +d.Air_Temp;\n  return d;\n}\n//https://bl.ocks.org/EfratVil/92f894ac0ba265192411e73f633a3e2f</code></pre></div>",
    "fir_19": "<div class=\"codeBlock hljs javascript\" id=\"fir_19\"><pre id=\"fir_19_code\"><code class=\"javascript\">import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { geoMercator, geoPath, geoGraticule10 } from 'fir-geo';\nimport { line as firLine, curveCatmullRom } from 'fir-shape';\nimport { select as firSelect, selectAll as firSelectAll } from 'fir-selection';\nimport { interpolate as firInterpolate } from 'fir-interpolate';\nimport { transition as firTransition } from 'fir-transition';\nimport { feature } from 'topojson-client';\nconst { pastData, currData, fcstData } = require('./parsedWeatherData');\n\nclass WorldMap extends Component {\n  constructor() {\n    super()\n    this.state = {\n      worlddata: [],\n      typhoonPath: [...pastData, ...currData, ...fcstData],\n      marker: { name: \"201701\", coordinates: pastData[0].coordinates },\n    }\n  }\n  \n  componentDidMount() {\n     <div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline;\">fetch(\"https://unpkg.com/world-atlas@1/world/50mon\")</div>\n      .then(response =&gt; {\n        if (response.status !== 200) {\n          console.log(`There was a problem: ${response.status}`)\n          return;\n        }\n        responseon().then(worlddata =&gt; {\n          this.setState({\n            worlddata: feature(worlddata, worlddata.objects.countries).features,\n          });\n        })\n      });\n    this.renderLine();\n  }\n\n  projection() {\n    return geoMercator()\n      .scale(500)\n      .center([125.9605, 26.6978]);\n  }\n  \n  renderLine() {\n    const pathCoordinates = [];\n    this.state.typhoonPath.forEach((path, i) =&gt; {\n      pathCoordinates.push({\n        <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline;\">x: this.projection()(path.coordinates)[0],\n        y: this.projection()(path.coordinates)[1]</div>\n      });\n    });\n    \n    <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline;\">const lineFunction = firLine()\n      .x((d) =&gt; d.x)\n      .y((d) =&gt; d.y)\n      .curve(curveCatmullRom);\n\n    // add graticules path\n    const lines = firSelect('path.graticules')\n      .<span class=\"fea_Shapes_keys udls\">data</span>([this.state.graticule]);\n\n    lines.enter().append('path').classed('graticule', true);\n    lines\n      .attr('d', geoPath().projection(this.projection()))\n      .attr('stroke', '#79A09E')\n      .attr('fill', 'none');</div>\n\n    // add path\n    d<div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline;\">3Select('svg')\n      .append('g')\n      .append('path')\n      .attr('class', 'typhoonPath')\n      .attr('d', lineFunction(pathCoordinates))\n      .attr('fill', 'none')\n      .attr('stroke', 'red')\n      .attr('stroke-width', '5px')\n      .attr('className', 'linepath');</div>\n\n    // add marker\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_2\" style=\"display: inline;\">firSelect('svg')\n      .append('g')\n      .append('circle')\n        .attr(\"transform\", () =&gt; {\n            const x = this.projection()(this.state.marker.coordinates)[0]\n            const y = this.projection()(this.state.marker.coordinates)[1]\n            return `translate(${x}, ${y})`;\n        })\n        .attr('r', 10)\n        .attr('fill', 'yellow')\n        .attr('opacity', 0.7)\n        .attr('class', 'typhoonMarker');</div>\n\n  }\n\n  render() {\n\n    return (\n      &lt;svg className=\"map-svg\" width={ 800 } height={ 600 } viewBox=\"0 0 800 600\"&gt;\n        &lt;g className=\"countries\"&gt;\n          {\n            this.state.worlddata.map((d,i) =&gt; (\n              &lt;path\n                key={ `path-${ i }` }\n                d={ geoPath().projection(this.projection())(d) }\n                className=\"country\"\n                fill={ `rgba(219, 163, 43,${ 1 / this.state.worlddata.length * i})` }\n                stroke=\"#FFFFFF\"\n                strokeWidth={ 0.5 }\n              /&gt;\n            ))\n          }\n        &lt;/g&gt;\n      &lt;/svg&gt;\n    )\n  }\n}\n\nrender(&lt;WorldMap /&gt;, document.getElementById('root'));\n#https://codesandbox.io/s/erpyl4q94?file=/index:0-3393</code></pre></div>",
    "fir_20": "<div class=\"codeBlock hljs javascript\" id=\"fir_20\"><pre id=\"fir_20_code\" style=\"\"><code class=\"javascript\">import * as fir from \"fir\";\n\nasync function drawScatter() {\n\n  // 1. Access data\n  let dataset = await firon(\"./data/my_weather_dataon\")\n\n  const xAccessor = d =&gt; d.dewPoint\n  const yAccessor = d =&gt; d.humidity\n\n  // 2. Create chart dimensions\n\n  const width = d3.min([\n    window.innerWidth * 0.9,\n    window.innerHeight * 0.9,\n  ])\n  let dimensions = {\n    width: width,\n    height: width,\n    margin: {\n      top: 10,\n      right: 10,\n      bottom: 50,\n      left: 50,\n    },\n  }\n  dimensions.boundedWidth = dimensions.width\n    - dimensions.margin.left\n    - dimensions.margin.right\n  dimensions.boundedHeight = dimensions.height\n    - dimensions.margin.top\n    - dimensions.margin.bottom\n\n  // 3. Draw canvas\n\n  <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">const wrapper = d3.select(\"#wrapper\")\n    .append(\"svg\")\n      .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", dimensions.<span class=\"fea_Canvas_keys udls\">width</span>)\n      .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", dimensions.<span class=\"fea_Canvas_keys udls\">height</span>)</div>\n\n  const bounds = wrapper.append(\"g\")\n      .style(\"transform\", `translate(${\n        dimensions.margin.left\n      }px, ${\n        dimensions.margin.top\n      }px)`)\n\n  // 4. Create scales\n\n  <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">const x<span class=\"fea_Axis_keys udls\">Scale</span> = d3.<span class=\"fea_Axis_keys udls\">scale</span>Linear()\n    .domain(d3.extent(dataset, xAccessor))\n    .range([0, dimensions.boundedWidth])\n    .nice()\n\n  const y<span class=\"fea_Axis_keys udls\">Scale</span> = d3.<span class=\"fea_Axis_keys udls\">scale</span>Linear()\n    .domain(d3.extent(dataset, yAccessor))\n    .range([dimensions.boundedHeight, 0])\n    .nice()</div>\n\n  // 5. Draw data\n\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">const dots = bounds.selectAll(\"circle\")\n    .<span class=\"fea_Shapes_keys udls\">data</span>(<span class=\"fea_Shapes_keys udls\">data</span>set)\n    .join(\"circle\")\n      .attr(\"cx\", d =&gt; xScale(xAccessor(d)))\n      .attr(\"cy\", d =&gt; yScale(yAccessor(d)))\n      .attr(\"r\", 4)\n      .attr(\"tabindex\", \"0\")</div>\n\n  // 6. Draw peripherals\n\n  <div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">const x<span class=\"fea_Axis_keys udls\">Axis</span>Generator = d3.<span class=\"fea_Axis_keys udls\">axis</span>Bottom()\n    .<span class=\"fea_Axis_keys udls\">scale</span>(x<span class=\"fea_Axis_keys udls\">Scale</span>)\n\n  const x<span class=\"fea_Axis_keys udls\">Axis</span> = bounds.append(\"g\")\n    .call(x<span class=\"fea_Axis_keys udls\">Axis</span>Generator)\n      .style(\"transform\", `translateY(${dimensions.boundedHeight}px)`)\n\n  const x<span class=\"fea_Axis_keys udls\">Axis</span>Label = x<span class=\"fea_Axis_keys udls\">Axis</span>.append(\"text\")\n      .attr(\"class\", \"x-<span class=\"fea_Axis_keys udls\">axis</span>-label\")\n      .attr(\"x\", dimensions.boundedWidth / 2)\n      .attr(\"y\", dimensions.margin.bottom - 10)\n      .html(\"Dew point (°F)\")\n\n  const y<span class=\"fea_Axis_keys udls\">Axis</span>Generator = d3.<span class=\"fea_Axis_keys udls\">axis</span>Left()\n    .<span class=\"fea_Axis_keys udls\">scale</span>(y<span class=\"fea_Axis_keys udls\">Scale</span>)\n    .ticks(4)\n\n  const y<span class=\"fea_Axis_keys udls\">Axis</span> = bounds.append(\"g\")\n      .call(y<span class=\"fea_Axis_keys udls\">Axis</span>Generator)\n\n  const y<span class=\"fea_Axis_keys udls\">Axis</span>Label = y<span class=\"fea_Axis_keys udls\">Axis</span>.append(\"text\")\n      .attr(\"class\", \"y-<span class=\"fea_Axis_keys udls\">axis</span>-label\")\n      .attr(\"x\", -dimensions.boundedHeight / 2)\n      .attr(\"y\", -dimensions.margin.left + 10)\n      .text(\"Relative humidity\")</div>\n}\n<div class=\"highlights fea_Scatter_Plot\" id=\"Scatter_Plot_0\" style=\"background-color: #f6b73c;  display: inline;\">drawScat<span class=\"fea_Scatter_Plot_keys udls\">ter</span></div>()\n#https://codesandbox.io/s/module-5-lesson-5-scatter-plot-h9uo5?file=/chart:0-2336</code></pre></div>",
    "fir_23": "<div class=\"codeBlock hljs javascript\" id=\"fir_23\"><pre id=\"fir_23_code\" style=\"\"><code class=\"javascript\">var width = window.innerWidth, height = window.innerHeight, sizeDivisor = 100, nodePadding = 2.5;\n\n    <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var svg = d3.select(\"body\")\n        .append(\"svg\")\n        .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span>)\n        .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span>);</div>\n\n   <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> var color = d3.<span class=\"fea_Axis_keys udls\">scale</span>Ordinal([\"#66c2a5\", \"#fc8d62\", \"#8da0cb\", \"#e78ac3\", \"#a6d854\", \"#ffd92f\", \"#e5c494\", \"#b3b3b3\"]);</div>\n\n    <div class=\"highlights fea_Force_Directed_Graph\" id=\"Force_Directed_Graph_0\" style=\"background-color: #f6b73c;  display: inline;\">var simulation = d3.forceSimulation()\n        .force(\"forceX\", d3.forceX().strength(.1).x(width * .5))\n        .force(\"forceY\", d3.forceY().strength(.1).y(height * .5))\n        .force(\"center\", d3.forceCenter().x(width * .5).y(height * .5))\n        .force(\"charge\", d3.forceManyBody().strength(-15));</div>\n\n    <div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.csv(\"<span class=\"fea_Import_Data_keys udls\">data</span>.csv\"</div>, types, function(error,graph){\n      if (error) throw error;\n\n      // sort the nodes so that the bigger ones are at the back\n     <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> graph = graph.sort(function(a,b){ return b.size - a.size; });</div>\n\n      //update the simulation based on the data\n      simulation\n          .nodes(graph)\n          .force(\"collide\", d3.forceCollide().strength(.5).radius(function(d){ return d.radius + nodePadding; }).iterations(1))\n          <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">.on(\"tick\", function(d){\n            node\n                .attr(\"cx\", function(d){ return d.x; })\n                .attr(\"cy\", function(d){ return d.y; })\n          });</div>\n\n      <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var node = svg.append(\"g\")\n          .attr(\"class\", \"node\")\n        .selectAll(\"circle\")\n        .<span class=\"fea_Shapes_keys udls\">data</span>(graph)\n        .enter().append(\"circle\")\n          .attr(\"r\", function(d) { return d.radius; })\n          .attr(\"fill\", function(d) { return color(d.continent); })\n          .attr(\"cx\", function(d){ return d.x; })\n          .attr(\"cy\", function(d){ return d.y; })</div>\n          <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">.call(d3.drag()\n              .on(\"start\", dragstarted)\n              .on(\"drag\", dragged)\n              .on(\"end\", dragended));</div>\n\n    });\n\n    function dragstarted(d) {\n      if (!d3.event.active) simulation.alphaTarget(.03).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function dragged(d) {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    }\n\n    function dragended(d) {\n      if (!d3.event.active) simulation.alphaTarget(.03);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    function types(d){\n      d.gdp = +d.gdp;\n      d.size = +d.gdp / sizeDivisor;\n      d.size &lt; 3 ? d.radius = 3 : d.radius = d.size;\n      return d;\n    }\n    #https://bl.ocks.org/HarryStevens/f636199a46fc4b210fbca3b1dc4ef372</code></pre></div>",
    "fir_30": "<div class=\"codeBlock hljs javascript\" id=\"fir_30\"><pre id=\"fir_30_code\" style=\"\"><code class=\"javascript\">// set the dimensions and margins of the graph\nvar margin = {top: 10, right: 30, bottom: 30, left: 40},\n    width = 460 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\n// append the svg object to the body of the page\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var svg = d3.select(\"#my_dataviz\")\n  .append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\",\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\n// Read the data and compute summary statistics for each specie\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">d3.csv(\"https://raw.githubusercontent.com/holtzy/fir-graph-gallery/master/<span class=\"fea_Import_Data_keys udls\">DATA</span>/iris.csv\",</div> function(data) {\n\n  // Build and Show the Y scale\n  <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var y = d3.<span class=\"fea_Axis_keys udls\">scale</span>Linear()\n    .domain([ 3.5,8 ])          // Note that here the Y <span class=\"fea_Axis_keys udls\">scale</span> is set manually\n    .range([height, 0])\n  svg.append(\"g\").call( d3.<span class=\"fea_Axis_keys udls\">axis</span>Left(y) )\n\n  // Build and Show the X <span class=\"fea_Axis_keys udls\">scale</span>. It is a band <span class=\"fea_Axis_keys udls\">scale</span> like for a boxplot: each group has an dedicated RANGE on the <span class=\"fea_Axis_keys udls\">axis</span>. This range has a length of x.bandwidth\n  var x = d3.<span class=\"fea_Axis_keys udls\">scale</span>Band()\n    .range([ 0, width ])\n    .domain([\"setosa\", \"versicolor\", \"virginica\"])\n    .padding(0.05)     // This is important: it is the space between 2 groups. 0 means no padding. 1 is the maximum.\n  svg.append(\"g\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(d3.<span class=\"fea_Axis_keys udls\">axis</span>Bottom(x))</div>\n\n  // Features of the histogram\n  var histogram = d3.<div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">histogram</div>()\n        .domain(y.domain())\n        .thresholds(y.ticks(20))    // Important: how many bins approx are going to be made? It is the 'resolution' of the violin plot\n        .value(d =&gt; d)\n\n  // Compute the binning for each group of the dataset\n  <div class=\"highlights fea_Data_Grouping\" id=\"Data_Grouping_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var sumstat = d3.nest()  // nest <span class=\"fea_Data_Grouping_keys udls\">function</span> allows to group the calculation per level of a factor\n    .key(<span class=\"fea_Data_Grouping_keys udls\">function</span>(d) { <span class=\"fea_Data_Grouping_keys udls\">return</span> d.Species;})\n    .rollup(<span class=\"fea_Data_Grouping_keys udls\">function</span>(d) {   // For each key..\n      input = d.<span class=\"fea_Data_Grouping_keys udls\">map</span>(<span class=\"fea_Data_Grouping_keys udls\">function</span>(g) { <span class=\"fea_Data_Grouping_keys udls\">return</span> g.Sepal_Length;})    // Keep the variable called Sepal_Length\n      bins = histogram(input)   // And compute the binning on it.\n      <span class=\"fea_Data_Grouping_keys udls\">return</span>(bins)\n    })\n    .entries(<span class=\"fea_Data_Grouping_keys udls\">data</span>)</div>\n\n  // What is the biggest number of value in a bin? We need it cause this value will have a width of 100% of the bandwidth.\n  var maxNum = 0\n  for ( i in sumstat ){\n    allBins = sumstat[i].value\n    lengths = allBins.map(function(a){return a.length;})\n    longuest = d3.max(lengths)\n    if (longuest &gt; maxNum) { maxNum = longuest }\n  }\n\n  // The maximum width of a violin must be x.bandwidth = the width dedicated to a group\n  var xNum = d3.scaleLinear()\n    .range([0, x.bandwidth()])\n    .domain([-maxNum,maxNum])\n\n  // Color scale for dots\n  var myColor = d3.scaleSequential()\n    .interpolator(d3.interpolateInferno)\n    .domain([3,9])\n\n  // Add the shape to this svg!\n <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> svg\n    .selectAll(\"myViolin\")\n    .<span class=\"fea_Shapes_keys udls\">data</span>(sumstat)\n    .enter()        // So now we are working group per group\n    .append(\"g\")\n      .attr(\"transform\", function(d){ return(\"translate(\" + x(d.key) +\" ,0)\") } ) // Translation on the right to be at the group position\n    .append(\"path\")\n        .datum(function(d){ return(d.value)})     // So now we are working bin per bin\n        .style(\"stroke\", \"none\")\n        .style(\"fill\",\"grey\")\n        .attr(\"d\", d3.area()\n            .x0( xNum(0) )\n            .x1(function(d){ return(xNum(d.length)) } )\n            .y(function(d){ return(y(d.x0)) } )\n            .curve(d3.curveCatmullRom)    // This makes the line smoother to give the violin appearance. Try d3.curveStep to see the difference\n        )</div>\n\n  // Add individual points with jitter\n  var jitterWidth = 40\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">svg\n    .selectAll(\"indPoints\")\n    .<span class=\"fea_Shapes_keys udls\">data</span>(<span class=\"fea_Shapes_keys udls\">data</span>)\n    .enter()\n    .append(\"circle\")\n      .attr(\"cx\", function(d){return(x(d.Species) + x.bandwidth()/2 - Math.random()*jitterWidth )})\n      .attr(\"cy\", function(d){return(y(d.Sepal_Length))})\n      .attr(\"r\", 5)\n      .style(\"fill\", function(d){ return(myColor(d.Sepal_Length))})\n      .attr(\"stroke\", \"white\")</div>\n\n})\n#https://www.fir-graph-gallery.com/graph/violin_jitter.html</code></pre></div>",
    "fir_22": "<div class=\"codeBlock hljs javascript\" id=\"fir_22\"><pre id=\"fir_22_code\" style=\"\"><code class=\"javascript\">const margin = {top: 40, right: 10, bottom: 10, left: 10},\n      width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom,\n      <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\">color = d3.<span class=\"fea_Axis_keys udls\">scale</span>Ordinal().range(d3.schemeCategory20c);</div>\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">const treemap = d3.treemap().size([width, height]);</div>\n\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">const div = d3.select(\"body\").append(\"div\")\n    .style(\"position\", \"relative\")\n    .style(\"<span class=\"fea_Canvas_keys udls\">width</span>\", (<span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right) + \"px\")\n    .style(\"<span class=\"fea_Canvas_keys udls\">height</span>\", (<span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom) + \"px\")\n    .style(\"left\", margin.left + \"px\")\n    .style(\"top\", margin.top + \"px\");</div>\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">firon(\"flareon\"</div>, function(error, data) {\n  if (error) throw error;\n\n <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> const root = d3.hierarchy(<span class=\"fea_Shapes_keys udls\">data</span>, (d) =&gt; d.children)\n    .sum((d) =&gt; d.size);\n\n  const tree = treemap(root);\n\n  const node = div.datum(root).selectAll(\".node\")\n      .<span class=\"fea_Shapes_keys udls\">data</span>(tree.leaves())\n    .enter().append(\"div\")\n      .attr(\"class\", \"node\")\n      .style(\"left\", (d) =&gt; d.x0 + \"px\")\n      .style(\"top\", (d) =&gt; d.y0 + \"px\")\n      .style(\"width\", (d) =&gt; Math.max(0, d.x1 - d.x0 - 1) + \"px\")\n      .style(\"height\", (d) =&gt; Math.max(0, d.y1 - d.y0  - 1) + \"px\")\n      .style(\"background\", (d) =&gt; color(d.parent.<span class=\"fea_Shapes_keys udls\">data</span>.name))\n      .text((d) =&gt; d.<span class=\"fea_Shapes_keys udls\">data</span>.name);</div>\n\n <div class=\"highlights fea_Selection\" id=\"Selection_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> d3.selectAll(\"input\").on(\"<span class=\"fea_Selection_keys udls\">change</span>\", function <span class=\"fea_Selection_keys udls\">change</span>() {\n    const <span class=\"fea_Selection_keys udls\">value</span> = <span class=\"fea_Selection_keys udls\">this</span>.<span class=\"fea_Selection_keys udls\">value</span> === \"count\"\n        ? (d) =&gt; { return d.size ? 1 : 0;}\n        : (d) =&gt; { return d.size; };\n\n    const newRoot = d3.hierarchy(<span class=\"fea_Selection_keys udls\">data</span>, (d) =&gt; d.children)\n      .sum(<span class=\"fea_Selection_keys udls\">value</span>);\n\n    node.<span class=\"fea_Selection_keys udls\">data</span>(treemap(newRoot).leaves())\n      .transition()\n        .duration(1500)\n        .style(\"left\", (d) =&gt; d.x0 + \"px\")\n        .style(\"top\", (d) =&gt; d.y0 + \"px\")\n        .style(\"width\", (d) =&gt; Math.max(0, d.x1 - d.x0 - 1) + \"px\")\n        .style(\"height\", (d) =&gt; Math.max(0, d.y1 - d.y0  - 1) + \"px\")\n  });\n});</div>\n#https://bl.ocks.org/ganezasan/52fcefir4d2182483995f0ca3960fe228</code></pre></div>",
    "fir_27": "<div class=\"codeBlock hljs javascript\" id=\"fir_27\"><pre id=\"fir_27_code\" style=\"\"><code class=\"javascript\"><div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var svg = d3.select(\"#my_dataviz\")\n  .append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", 440)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", 440)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(220,220)\")</div>\n\n// create a matrix\nvar matrix = [\n  [0,  5871, 8916, 2868],\n  [ 1951, 0, 2060, 6171],\n  [ 8010, 16145, 0, 8045],\n  [ 1013,   990,  940, 0]\n];\n\n// 4 groups, so create a vector of 4 colors\nvar colors = [ \"#440154ff\", \"#31668dff\", \"#37b578ff\", \"#fde725ff\"]\n\n// give this matrix to <div class=\"highlights fea_Chord_Diagram\" id=\"Chord_Diagram_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.chord()</div>: it will calculates all the info we need to draw arc and ribbon\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var res = d3.chord()\n    .padAngle(0.05)\n    .sortSubgroups(d3.descending)\n    (matrix)</div>\n\n// add the groups on the outer part of the circle\n<div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">svg\n  .datum(res)\n  .append(\"g\")\n  .selectAll(\"g\")\n  .<span class=\"fea_Shapes_keys udls\">data</span>(function(d) { return d.groups; })\n  .enter()\n  .append(\"g\")\n  .append(\"path\")\n    .style(\"fill\", function(d,i){ return colors[i] })\n    .style(\"stroke\", \"black\")\n    .attr(\"d\", d3.arc()\n      .innerRadius(200)\n      .outerRadius(210)\n    )</div>\n\n// Add the links between groups\nsvg\n  .datum(res)\n  .append(\"g\")\n  .selectAll(\"path\")\n  .data(function(d) { return d; })\n  .enter()\n  .append(\"path\")\n    .attr(\"d\", d3.ribbon()\n      .radius(200)\n    )\n    .style(\"fill\", function(d){ return(colors[d.source.index]) }) // colors depend on the source group. Change to target otherwise.\n    .style(\"stroke\", \"black\");\n    #https://www.fir-graph-gallery.com/graph/chord_colors.html</code></pre></div>",
    "fir_18": "<div class=\"codeBlock hljs javascript\" id=\"fir_18\"><pre id=\"fir_18_code\"><code class=\"javascript\">import React, { Component } from \"react\";\nimport ReactDOM from 'react-dom';\nimport { geoMercator, geoPath, geoGraticule10 } from \"fir-geo\";\nimport { line as firLine, curveCatmullRom } from 'fir-shape';\nimport { select as firSelect, selectAll as firSelectAll } from 'fir-selection';\nimport { interpolate as firInterpolate } from 'fir-interpolate';\nimport { transition as firTransition } from 'fir-transition';\nimport { feature, neighbors } from \"topojson-client\";\nconst parsedWeatherData = require('./parsedWeatherData');\n\nclass WorldMap extends Component {\n  constructor() {\n    super()\n    const typhoonPaths = [];\n    const startPoints = [];\n    <div class=\"highlights fea_Data_Grouping\" id=\"Data_Grouping_0\" style=\"display: inline;\">parsedWeather<span class=\"fea_Data_Grouping_keys udls\">Data</span>.forEach((path<span class=\"fea_Data_Grouping_keys udls\">Data</span>, i) =&gt; {\n      if (i === 0) <span class=\"fea_Data_Grouping_keys udls\">return</span>;\n      const { past<span class=\"fea_Data_Grouping_keys udls\">Data</span>, curr<span class=\"fea_Data_Grouping_keys udls\">Data</span>, fcst<span class=\"fea_Data_Grouping_keys udls\">Data</span> } = path<span class=\"fea_Data_Grouping_keys udls\">Data</span>;\n      typhoonPaths.push([...past<span class=\"fea_Data_Grouping_keys udls\">Data</span>, ...curr<span class=\"fea_Data_Grouping_keys udls\">Data</span>, ...fcst<span class=\"fea_Data_Grouping_keys udls\">Data</span>]);\n      startPoints.push({ name: '201701', coordinates: past<span class=\"fea_Data_Grouping_keys udls\">Data</span>[0].coordinates });\n    });</div>\n    this.progress = {};\n    this.speed = 0.7;\n    this.dir = -1;\n    this.invisibleSVGPath = {};\n    this.renderedPath = {};\n    this.lineInterval = {};\n    this.radius = {};\n    this.allDone = {};\n    this.state = {\n      worlddata: [],\n      mapScaleWidth: 1200,\n      cities: [\n        { name: '東京', coordinates: [139.6917, 35.6895] },\n        { name: '馬尼拉', coordinates: [120.9842, 14.5995] },\n        { name: '曼谷', coordinates: [100.5018, 13.7563] },\n        { name: '上海', coordinates: [121.4737, 31.2304] },\n        { name: '福岡', coordinates: [130.4017, 33.5904] },\n        { name: '胡志明市', coordinates: [106.6297, 10.8231] },\n        { name: '香港', coordinates: [114.1095, 22.3964] },\n        { name: '大阪', coordinates: [135.5022, 34.6937] },\n      ],\n      typhoonPaths,\n      startPoints,\n      graticule: geoGraticule10(),\n    };\n    this.distanceCalculate = this.distanceCalculate.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"https://unpkg.com/world-atlas@1/world/50mon\")\n      .then(response =&gt; {\n        if (response.status !== 200) {\n          console.log(`There was a problem: ${response.status}`)\n          return;\n        }\n        responseon().then(worlddata =&gt; {\n          this.setState({\n            worlddata: feature(worlddata, worlddata.objects.countries),\n            neighbors: neighbors(worlddata.objects.countries.geometries),\n          }, () =&gt; {\n            this.renderMap();\n            this.state.typhoonPaths.forEach((typhoonPath, idx) =&gt; {\n              const canvasTyphoon = document.createElement('canvas');\n              canvasTyphoon.id = `typhoonPath-canvasTyphoon-${idx}`;\n              canvasTyphoon.width = 1000;\n              canvasTyphoon.height = 600;\n              canvasTyphoon.style.position = 'absolute';\n              canvasTyphoon.style.top = 0;\n              canvasTyphoon.style.left = 0;\n              canvasTyphoon.style.right = 0;\n              canvasTyphoon.style.margin = 'auto';\n              const canvasTyphoonMarker = document.createElement('canvas');\n              canvasTyphoonMarker.id = `typhoonPath-canvasTyphoonMarker-${idx}`;\n              canvasTyphoonMarker.width = 1000;\n              canvasTyphoonMarker.height = 600;\n              canvasTyphoonMarker.style.position = 'absolute';\n              canvasTyphoonMarker.style.top = 0;\n              canvasTyphoonMarker.style.left = 0;\n              canvasTyphoonMarker.style.right = 0;\n              canvasTyphoonMarker.style.margin = 'auto';\n              document.body.appendChild(canvasTyphoon);\n              document.body.appendChild(canvasTyphoonMarker);\n              const canvasHolder = document.getElementById(`typhoonPath-canvasTyphoon-${idx}`);\n              const canvasCtx = canvasHolder.getContext('2d');\n              const canvasTyphoonMarkerHolder = document.getElementById(`typhoonPath-canvasTyphoonMarker-${idx}`);\n              const canvasTyphoonMarkerCtx = canvasTyphoonMarkerHolder.getContext('2d');\n              this.renderLine(canvasCtx, canvasTyphoonMarkerCtx, typhoonPath, this.state.startPoints[idx], idx);\n            });\n          });\n        })\n      })\n  }\n\n  projection() {\n    return geoMercator()\n      .scale(1000)\n      .center([122.9605, 26.6978]);\n  }\n\n  distanceCalculate(pixelLocSource, [longitude, latitude], distance) {\n    // Latitude: 1 deg = 110.574 km\n    // Longitude: 1 deg = 111.320*cos(latitude) km\n    const lat_diff = distance / 110.574;\n    const lon_distance = 111.320 * Math.cos(latitude * Math.PI / 180);\n    const lon_diff = distance / lon_distance;\n\n    const E = longitude + Math.abs(lon_diff);\n    // S = latitude - Math.abs(lat_diff);\n    // N = latitude + Math.abs(lat_diff);\n    // W = longitude - Math.abs(lon_diff);\n    const pixelLoc = this.projection()([E, latitude]);\n    // distance calculate\n    return Math.sqrt(Math.pow(pixelLocSource[0] - pixelLoc[0], 2) + Math.pow(pixelLocSource[1] - pixelLoc[1], 2));\n  }\n\n  timeRangeCalculate = (pathTime, range = 24) =&gt; {\n    const pathDate = new Date(pathTime).getTime();\n    const currDate = new Date('2017-07-27T14:00:00+08:00').getTime();\n    return (pathDate - currDate) &gt; range * 60 * 60 * 1000;\n  }\n\n  moveDash = (canvasCtx, canvasTyphoonMarkerCtx, typhoonId, typhoonPath, length, marker, frac, dir = -1) =&gt; {\n    // default direction right-&gt;left\n    canvasCtx.setLineDash([length]);\n    canvasCtx.lineDashOffset = dir * (frac + length);\n    canvasCtx.globalCompositeOperation = 'destination-over';\n    canvasCtx.stroke();\n    const p = this.invisibleSVGPath[typhoonId].getPointAtLength(frac);\n    canvasCtx.save();\n    // Move typhoon marker\n    canvasTyphoonMarkerCtx.clearRect(0, 0, 1000, 600);\n    canvasTyphoonMarkerCtx.beginPath();\n    canvasTyphoonMarkerCtx.setLineDash([0]);\n    canvasTyphoonMarkerCtx.lineDashOffset = 0;\n    canvasTyphoonMarkerCtx.lineWidth = 1;\n    canvasTyphoonMarkerCtx.strokeStyle = 'rgba(53, 247, 14,0.8)';\n    canvasTyphoonMarkerCtx.arc(p.x, p.y, 10, 0, Math.PI * 2, true);\n    canvasTyphoonMarkerCtx.closePath();\n    canvasTyphoonMarkerCtx.stroke();\n  }\n\n  defineLine(canvasCtx, typhoonPath, marker, typhoonId) {\n    if (this.allDone[typhoonId]) {\n      return;\n    }\n    // define path\n    canvasCtx.beginPath();\n    // start point\n    const startPoint = {\n      x: this.projection()(marker.coordinates)[0],\n      y: this.projection()(marker.coordinates)[1],\n    };\n    canvasCtx.moveTo(startPoint.x, startPoint.y);\n    typhoonPath.forEach((path) =&gt; {\n      const x = this.projection()(path.coordinates)[0];\n      const y = this.projection()(path.coordinates)[1];\n      canvasCtx.lineTo(x, y);\n    });\n    canvasCtx.lineWidth = 2;\n    canvasCtx.strokeStyle = 'rgba(17, 229, 13,0.7)';\n  }\n\n  updateLine(canvasCtx, canvasTyphoonMarkerCtx, typhoonPath, length, marker, typhoonId) {\n    // define the line\n    this.defineLine(canvasCtx, typhoonPath, marker, typhoonId);\n    this.progress[typhoonId] = this.progress[typhoonId] || 0;\n    if (this.progress[typhoonId] &lt; length) {\n      this.progress[typhoonId] += this.speed;\n      this.moveDash(canvasCtx, canvasTyphoonMarkerCtx, typhoonId, typhoonPath, length, marker, this.progress[typhoonId], this.dir);\n      requestAnimationFrame(this.updateLine.bind(this, canvasCtx, canvasTyphoonMarkerCtx, typhoonPath, length, marker, typhoonId));\n    } else {\n    \n      canvasCtx.clearRect(0, 0, 1000, 600);\n      this.progress[typhoonId] = 0;\n      this.renderedPath = {};\n      setTimeout(() =&gt; requestAnimationFrame(this.updateLine.bind(this, canvasCtx, canvasTyphoonMarkerCtx, typhoonPath, 500, marker, typhoonId)), 1000);\n    }\n  }\n\n  renderMap() {\n    const self = this;\n    const canvasNode = firSelect('#mapCanvas').node();\n    const context = canvasNode.getContext('2d');\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline;\">const path = geoPath().context(context);</div>\n    context.beginPath();\n    path.projection(this.projection());\n    this.state.worlddata.features.forEach((d, i) =&gt; {\n      context.fillStyle = `rgba(38,50,56,${1 / this.state.worlddata.features.length * i})`\n      context.beginPath();\n      path(d);\n      context.fill();\n    });\n\n    // add graticules path\n    context.beginPath();\n    path.projection(this.projection());\n    path(this.state.graticule);\n    context.fillStyle = 'none';\n    context.strokeStyle = '#79A09E';\n    context.stroke();\n  }\n\n  renderLine(canvasCtx, canvasTyphoonMarker, typhoonPath, marker, typhoonId) {\n    const pathCoordinates = [];\n    typhoonPath.forEach((path) =&gt; {\n      pathCoordinates.push({\n        x: this.projection()(path.coordinates)[0],\n        y: this.projection()(path.coordinates)[1],\n      });\n    });\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline;\">const lineFunction = firLine()\n      .x((d) =&gt; d.x)\n      .y((d) =&gt; d.y)\n      .curve(curveCatmullRom);</div>\n    // use svg path to get length\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_2\" style=\"display: inline;\">const invisiblePath = firSelect('svg')\n      .append('g')\n      .append('path')\n      .attr('d', lineFunction(pathCoordinates))\n      .attr('fill', 'none')\n      .attr('stroke', 'none')\n      .attr('class', 'invisiblePath');</div>\n    this.invisibleSVGPath[typhoonId] = invisiblePath.node();\n    const length = this.invisibleSVGPath[typhoonId].getTotalLength();\n    // this clears itself once the line is drawn\n    this.radius[typhoonId] = this.distanceCalculate(marker.coordinates[0], marker.coordinates, marker.radius);\n    this.lineInterval[typhoonId] = requestAnimationFrame(this.updateLine.bind(this, canvasCtx, canvasTyphoonMarker, typhoonPath, length, marker, typhoonId));\n  }\n\n  render() {\n    return (\n      &lt;div&gt;\n        &lt;svg&gt;&lt;/svg&gt;\n        &lt;canvas\n          id=\"mapCanvas\"\n          width=\"1000\"\n          height=\"600\"\n          style={{\n            position: 'absolute',\n            margin: '0 auto',\n            right: 0,\n            left: 0,\n            top: 0,\n            backgroundColor: '#0c6d97'\n          }}\n        &gt;\n          Please update your browser\n        &lt;/canvas&gt;\n      &lt;/div&gt;\n    )\n  }\n}\n\nexport default WorldMap;\n\n\nReactDOM.render(&lt;WorldMap /&gt;, document.getElementById('root'));\n#https://codesandbox.io/s/0xoy5yn4rp?file=/index:0-9817</code></pre></div>",
    "fir_4": "<div class=\"codeBlock hljs javascript\" id=\"fir_4\"><pre id=\"fir_4_code\"><code class=\"javascript\">//Width and height of map\nvar width = 960;\nvar height = 500;\n\n// D3 Projection\n<div class=\"highlights fea_Geo_Maps\" id=\"Geo_Maps_0\" style=\"background-color: #f6b73c; display: inline;\">var projection = d3.geo.albersUsa()\n\t.translate([width/2, height/2])    // translate to center of screen\n\t.scale([1000]);          // scale things down so see entire US\n        \n// Define path generator\nvar path = d3.geo.path()               // path generator that will convert GeoJSON to SVG paths\n\t.projection(projection);</div>  // tell path generator to use albersUsa projection\n\n\t\t\n// Define linear scale for output\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c; display: inline;\">var color = d3.<span class=\"fea_Axis_keys udls\">scale</span>.linear()\n\t.range([\"rgb(213,222,217)\",\"rgb(69,173,168)\",\"rgb(84,36,55)\",\"rgb(217,91,67)\"]);</div>\n\nvar legendText = [\"Cities Lived\", \"States Lived\", \"States Visited\", \"Nada\"];\n\n//Create SVG element and append map to the SVG\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c; display: inline;\">var svg = d3.select(\"body\")\n\t.append(\"svg\")\n\t.attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span>)\n\t.attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span>);</div>\n        \n// Append Div for tooltip to SVG\n<div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"background-color: #f6b73c; display: inline;\">var div = d3.select(\"body\")\n\t.append(\"div\")   \n\t.attr(\"class\", \"<span class=\"fea_Tooltip_keys udls\">tooltip</span>\")               \n\t.style(\"opacity\", 0);</div>\n\n// Load in my states data!\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"background-color: #f6b73c; display: inline;\">d3.csv(\"stateslived.csv\", function(<span class=\"fea_Import_Data_keys udls\">data</span>) {</div>\ncolor.domain([0,1,2,3]); // setting the range of the input data\n\n// Load GeoJSON data and merge with states data\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_1\" style=\"background-color: #f6b73c; display: inline;\">d3.json(\"us-states.json\", function(json) {</div>\n\n// Loop through each state data value in the .csv file\nfor (var i = 0; i &lt; data.length; i++) {\n\n\t// Grab State Name\n\tvar dataState = data[i].state;\n\n\t// Grab data value \n\tvar dataValue = data[i].visited;\n\n\t// Find the corresponding state inside the GeoJSON\n\tfor (var j = 0; j &lt; json.features.length; j++)  {\n\t\tvar jsonState = json.features[j].properties.name;\n\n\t\tif (dataState == jsonState) {\n\n\t\t// Copy the data value into the JSON\n\t\tjson.features[j].properties.visited = dataValue; \n\n\t\t// Stop looking through the JSON\n\t\tbreak;\n\t\t}\n\t}\n}\n\t\t\n// Bind the data to the SVG and create one path per GeoJSON feature\n<div class=\"highlights fea_Geo_Maps\" id=\"Geo_Maps_1\" style=\"background-color: #f6b73c; display: inline;\">svg.selectAll(\"path\")\n\t.data(json.features)\n\t.enter()\n\t.append(\"path\")\n\t.attr(\"d\", path)\n\t.style(\"stroke\", \"#fff\")\n\t.style(\"stroke-width\", \"1\")\n\t.style(\"fill\", function(d) {\n\n\t// Get data value\n\tvar value = d.properties.visited;\n\n\tif (value) {\n\t//If value exists…\n\treturn color(value);\n\t} else {\n\t//If value is undefined…\n\treturn \"rgb(213,222,217)\";\n\t}\n});</div>\n\n\t\t \n// Map the cities I have lived in!\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_2\" style=\"background-color: #f6b73c; display: inline;\">d3.csv(\"cities-lived.csv\", function(<span class=\"fea_Import_Data_keys udls\">data</span>) {</div>\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c; display: inline;\">svg.selectAll(\"circle\")\n\t.<span class=\"fea_Shapes_keys udls\">data</span>(<span class=\"fea_Shapes_keys udls\">data</span>)\n\t.enter()\n\t.append(\"circle\")\n\t.attr(\"cx\", function(d) {\n\t\treturn projection([d.lon, d.lat])[0];\n\t})\n\t.attr(\"cy\", function(d) {\n\t\treturn projection([d.lon, d.lat])[1];\n\t})\n\t.attr(\"r\", function(d) {\n\t\treturn Math.sqrt(d.years) * 4;\n\t})\n\t\t.style(\"fill\", \"rgb(217,91,67)\")\t\n\t\t.style(\"opacity\", 0.85)\t</div>\n\n\t// Modification of custom tooltip code provided by Malcolm Maclean, \"D3 Tips and Tricks\" \n\t// http://www.d3noob.org/2013/01/adding-tooltips-to-d3js-graph.html\n\t<div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"background-color: #f6b73c; display: inline;\">.on(\"<span class=\"fea_Mouse_Events_keys udls\">mouse</span><span class=\"fea_Mouse_Events_keys udls\">ove</span>r\", function(d) {      \n    \tdiv.transition()        \n      \t   .duration(200)      \n           .style(\"opacity\", .9);      \n           div.text(d.place)\n           .style(\"left\", (d3.event.pageX) + \"px\")     \n           .style(\"top\", (d3.event.pageY - 28) + \"px\");    \n\t}) </div>  \n\n    // fade out tooltip on mouse out               \n    <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_1\" style=\"background-color: #f6b73c; display: inline;\">.on(\"<span class=\"fea_Mouse_Events_keys udls\">mouse</span>out\", function(d) {       \n        div.transition()        \n           .duration(500)      \n           .style(\"opacity\", 0);   \n    });</div>\n});  \n        \n// Modified Legend Code from Mike Bostock: http://bl.ocks.org/mbostock/3888852\n<div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"background-color: #f6b73c; display: inline;\">var <span class=\"fea_Legend_keys udls\">legend</span> = d3.select(\"body\").append(\"svg\")\n\t.attr(\"class\", \"<span class=\"fea_Legend_keys udls\">legend</span>\")\n\t.attr(\"width\", 140)\n\t.attr(\"height\", 200)\n\t.selectAll(\"g\")\n\t.data(color.domain().slice().reverse())\n\t.enter()\n\t.append(\"g\")\n\t.attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });</div>\n\n  \t<div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"background-color: #f6b73c; display: inline;\">legend.append(\"rect\")\n\t\t.attr(\"width\", 18)\n\t\t.attr(\"height\", 18)\n\t\t.style(\"fill\", color);</div>\n\n  \t<div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c; display: inline;\">legend.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n\t\t.data(legend<span class=\"fea_Text_keys udls\">Text</span>)\n\t\t.attr(\"x\", 24)\n\t\t.attr(\"y\", 9)\n\t\t.attr(\"dy\", \".35em\")\n\t\t.<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d; });\n\t});</div>\n\n});</code></pre></div>",
    "fir_5": "<div class=\"codeBlock hljs javascript\" id=\"fir_5\"><pre id=\"fir_5_code\"><code class=\"javascript\">var width = 960,\n    height = 500;\n// sets the type of view\n<div class=\"highlights fea_Geo_Maps\" id=\"Geo_Maps_0\" style=\"background-color: #f6b73c; display: inline;\">var projection = d3.geo.albersUsa()\n    .scale(1070) // size, bigger is bigger\n    .translate([width / 2, height / 2]);</div>\n\n//creates a new geographic path generator\n<div class=\"highlights fea_Geo_Maps\" id=\"Geo_Maps_1\" style=\"background-color: #f6b73c; display: inline;\">var path = d3.geo.path().projection(projection);</div>\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c; display: inline;\">var x<span class=\"fea_Axis_keys udls\">Scale</span> = d3.<span class=\"fea_Axis_keys udls\">scale</span>.linear()\n    .domain([0, 7])\n    .range([0, 500]);\n\nvar x<span class=\"fea_Axis_keys udls\">Axis</span> = d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>()\n    .<span class=\"fea_Axis_keys udls\">scale</span>(x<span class=\"fea_Axis_keys udls\">Scale</span>)\n    .orient(\"bottom\")\n    .tickSize(13)\n    .tickFormat(d3.format(\"0.0f\"));</div>\n\n\n//set svg window\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c; display: inline;\">var svg = d3.select(\"body\")\n      .append(\"svg\")\n      .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span>)\n      .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span>)</div>\n\n<div class=\"highlights fea_Geo_Maps\" id=\"Geo_Maps_2\" style=\"background-color: #f6b73c; display: inline;\">var graticule = d3.geo.graticule()\n    .extent([[-98 - 45, 38 - 45], [-98 + 45, 38 + 45]])\n    .step([5, 5]);</div>\n\n// adding a blank background\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c; display: inline;\">svg.append(\"rect\")\n    .datum(graticule)\n    .attr(\"class\", \"background\")\n    .attr(\"width\", width)\n    .attr(\"height\", height)</div>\n   // .on(\"click\", clicked);\n\n//declare g as our appended svg\nvar g = svg.append(\"g\");\n\nvar defaultFill = \"#aaa\";\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"background-color: #f6b73c; display: inline;\">d3.json(\"nielsentopo.json\", function(error, dma) {</div>\n\n  var nielsen = dma.objects.nielsen_dma.geometries;\n\n  // adding data from tv json (number of TVs, etc) to map json\n  <div class=\"highlights fea_Import_Data\" id=\"Import_Data_1\" style=\"background-color: #f6b73c; display: inline;\">d3.json(\"tv.json\", function(error, tv){</div>\n    for (var i = 0; i &lt; nielsen.length; i++){\n      var dma_code = nielsen[i].id;\n      for (key in tv[dma_code]){\n        nielsen[i].properties[key] = tv[dma_code][key];\n      }\n    }\n  dma.objects.nielsen_dma.geometries = nielsen;\n\n  <div class=\"highlights fea_Geo_Maps\" id=\"Geo_Maps_3\" style=\"background-color: #f6b73c; display: inline;\">g.append(\"g\")\n    .attr(\"id\", \"dmas\")\n    .selectAll(\"path\")\n    .data(topojson.feature(dma, dma.objects.nielsen_dma).features)\n    .enter()\n    .append(\"path\")\n    .attr(\"d\", path)</div>\n    //.on(\"click\", clicked)\n    \n    <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"background-color: #f6b73c; display: inline;\">.on(\"<span class=\"fea_Mouse_Events_keys udls\">mouse</span><span class=\"fea_Mouse_Events_keys udls\">ove</span>r\", function(d){</div>\n      d3.select(this)\n      .attr(\"fill\", \"orange\");\n\n      var prop = d.properties;\n\n      var string = \"&lt;p&gt;&lt;strong&gt;Market Area Name&lt;/strong&gt;: \" + prop.dma1 + \"&lt;/p&gt;\";\n      string += \"&lt;p&gt;&lt;strong&gt;Homes with TVs&lt;/strong&gt;: \" + numberWithCommas(prop[\"TV Homes\"]) + \"&lt;/p&gt;\";\n      string += \"&lt;p&gt;&lt;strong&gt;% with Cable&lt;/strong&gt;: \" + prop.cableperc + \"%&lt;/p&gt;\";\n      string += \"&lt;p&gt;&lt;strong&gt;Nielsen Rank&lt;/strong&gt;: \" + prop.Rank + \"&lt;/p&gt;\";\n\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c; display: inline;\">d3.select(\"#<span class=\"fea_Text_keys udls\">text</span>box\")\n        .html(\"\")\n        .append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n        .html(string)\n    })</div>\n\n    <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_1\" style=\"background-color: #f6b73c; display: inline;\">.on(\"<span class=\"fea_Mouse_Events_keys udls\">mouse</span>out\", function(d){</div>\n      d3.select(this)\n      .attr(\"fill\", defaultFill)\n    })\n    \n    .attr(\"opacity\", 0.9)\n    .attr(\"fill\", defaultFill);\n\n  // add dma borders\n  <div class=\"highlights fea_Geo_Maps\" id=\"Geo_Maps_4\" style=\"background-color: #f6b73c; display: inline;\">g.append(\"path\", \".graticule\")\n      .datum(topojson.mesh(dma, dma.objects.nielsen_dma, function(a, b) { \n        return true;\n      }))\n      .attr(\"id\", \"dma-borders\")\n      .attr(\"d\", path);\n  })</div>\n})\n\n// via http://stackoverflow.com/a/2901298\nfunction numberWithCommas(x) {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}</code></pre></div>",
    "fir_9": "<div class=\"codeBlock hljs javascript\" id=\"fir_9\"><pre id=\"fir_9_code\"><code class=\"javascript\"><div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c; display: inline;\">var svg = d3.select(\"svg\"),\n    <span class=\"fea_Canvas_keys udls\">width</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\"),\n    <span class=\"fea_Canvas_keys udls\">height</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\");</div>\n\nvar unemployment = d3.map();\n\n<div class=\"highlights fea_Geo_Maps\" id=\"Geo_Maps_0\" style=\"background-color: #f6b73c; display: inline;\">var path = d3.geoPath();</div>\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c; display: inline;\">var x = d3.<span class=\"fea_Axis_keys udls\">scale</span>Linear()\n    .domain([1, 10])\n    .rangeRound([600, 860]);\n\nvar color = d3.<span class=\"fea_Axis_keys udls\">scale</span>Threshold()\n    .domain(d3.range(2, 10))\n    .range(d3.schemeBlues[9]);</div>\n\nvar g = svg.append(\"g\")\n    .attr(\"class\", \"key\")\n    .attr(\"transform\", \"translate(0,40)\");\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c; display: inline;\">g.selectAll(\"rect\")\n  .<span class=\"fea_Shapes_keys udls\">data</span>(color.range().map(function(d) {\n      d = color.invertExtent(d);\n      if (d[0] == null) d[0] = x.domain()[0];\n      if (d[1] == null) d[1] = x.domain()[1];\n      return d;\n    }))\n  .enter().append(\"rect\")\n    .attr(\"height\", 8)\n    .attr(\"x\", function(d) { return x(d[0]); })\n    .attr(\"width\", function(d) { return x(d[1]) - x(d[0]); })\n    .attr(\"fill\", function(d) { return color(d[0]); });</div>\n\n<div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c; display: inline;\">g.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n    .attr(\"class\", \"caption\")\n    .attr(\"x\", x.range()[0])\n    .attr(\"y\", -6)\n    .attr(\"fill\", \"#000\")\n    .attr(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\", \"start\")\n    .attr(\"font-weight\", \"bold\")\n    .<span class=\"fea_Text_keys udls\">text</span>(\"Unemployment rate\");</div>\n\n<div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"background-color: #f6b73c; display: inline;\">g.call(d3.<span class=\"fea_Axis_keys udls\">axis</span>Bottom(x)\n    .tickSize(13)\n    .tickFormat(function(x, i) { return i ? x : x + \"%\"; })\n    .tickValues(color.domain()))\n  .select(\".domain\")\n    .remove();</div>\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"background-color: #f6b73c; display: inline;\">d3.queue()\n    .defer(d3.json, \"https://d3js.org/us-10m.v1.json\")\n    .defer(d3.tsv,</div> \"unemployment.tsv\", function(d) { unemployment.set(d.id, +d.rate); })\n    .await(ready);\n\nfunction ready(error, us) {\n  if (error) throw error;\n\n  <div class=\"highlights fea_Geo_Maps\" id=\"Geo_Maps_1\" style=\"background-color: #f6b73c; display: inline;\">svg.append(\"g\")\n      .attr(\"class\", \"counties\")\n    .selectAll(\"path\")\n    .data(topojson.feature(us, us.objects.counties).features)\n    .enter().append(\"path\")\n      .attr(\"fill\", function(d) { return color(d.rate = unemployment.get(d.id)); })\n      .attr(\"d\", path)\n    .append(\"title\")\n      .text(function(d) { return d.rate + \"%\"; });</div></code></pre></div>",
    "sec_8": "<div class=\"codeBlock hljs javascript\" id=\"sec_8\"><pre id=\"sec_8_code\" style=\"\"><code class=\"javascript\">var canvas = document.getElementById(\"canvas\");\n\n// Apply multiply blend when drawing datasets\nvar multiply = {\n  beforeDatasetsDraw: function(chart, options, el) {\n    chart.ctx.globalCompositeOperation = 'multiply';\n  },\n  afterDatasetsDraw: function(chart, options) {\n    chart.ctx.globalCompositeOperation = 'source-over';\n  },\n};\n\n// Gradient color - this week\nvar gradientThisWeek = canvas.getContext('2d').createLinearGradient(0, 0, 0, 150);\ngradientThisWeek.addColorStop(0, '#5555FF');\ngradientThisWeek.addColorStop(1, '#9787FF');\n\n// Gradient color - previous week\nvar gradientPrevWeek = canvas.getContext('2d').createLinearGradient(0, 0, 0, 150);\ngradientPrevWeek.addColorStop(0, '#FF55B8');\ngradientPrevWeek.addColorStop(1, '#FF8787');\n\nvar config = {\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">type: 'line',</div>\n    data: {\n        labels: [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\", \"MON\"],\n        datasets: [\n          {\n              label: 'Temperature',\n              data: [18, 26, 14, 22, 12, 20, 12, 18, 10],\n              <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">fill: false,\n              borderColor: 'rgba(255, 255, 255, 0.2)',\n              borderWidth: 2,\n              pointBackgroundColor: 'transparent',\n              pointBorderColor: '#FFFFFF',\n              pointBorderWidth: 3,\n              pointHoverBorderColor: 'rgba(255, 255, 255, 0.2)',\n              pointHoverBorderWidth: 10,\n              <span class=\"fea_Line_Chart_keys udls\">line</span>Tension: 0,</div>\n          }\n        ]\n    },\n    options: {\n    \tresponsive: false,\n      elements: { \n        <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">point: {\n          radius: 6,\n          hitRadius: 6, \n          hoverRadius: 6 \n        }</div> \n      },\n      <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Legend_keys udls\">legend</span>: {\n        display: false,\n      },</div>\n      <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Tooltip_keys udls\">tooltip</span>s: {\n      \tbackgroundColor: 'transparent',\n        displayColors: false,\n        bodyFontSize: 14,\n        callbacks: {\n          label: function(<span class=\"fea_Tooltip_keys udls\">tooltip</span>Items, data) { \n            return <span class=\"fea_Tooltip_keys udls\">tooltip</span>Items.yLabel + '°C';\n          }\n        }\n      },</div>\n     <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> <span class=\"fea_Axis_keys udls\">scale</span>s: {\n        xAxes: [{\n          display: false,\n        }],\n        yAxes: [{\n          display: false,\n          ticks: {\n            beginAtZero: true,\n          },\n        }]\n      }\n    },</div>\n    plugins: [multiply],\n};\n\nwindow.chart = new Chart(canvas, config);</code></pre></div>",
    "sec_14": "<div class=\"codeBlock hljs javascript\" id=\"sec_14\"><pre id=\"sec_14_code\" style=\"\"><code class=\"javascript\">// ============================================\n// As of Chart v2.5.0\n// http://www.chartjs.org/docs\n// ============================================\n\nvar chart    = document.getElementById('chart').getContext('2d'),\n    gradient = chart.createLinearGradient(0, 0, 0, 450);\n\ngradient.addColorStop(0, 'rgba(255, 0,0, 0.5)');\ngradient.addColorStop(0.5, 'rgba(255, 0, 0, 0.25)');\ngradient.addColorStop(1, 'rgba(255, 0, 0, 0)');\n\n\nvar data  = {\n    labels: [ 'January', 'February', 'March', 'April', 'May', 'June' ],\n    datasets: [{\n\t\t\tlabel: 'Custom Label Name',\n\t\t\tbackgroundColor: gradient,\n\t\t\tpointBackgroundColor: 'white',\n\t\t\tborderWidth: 1,\n\t\t\tborderColor: '#911215',\n\t\t\tdata: [50, 55, 80, 81, 54, 50]\n    }]\n};\n\n\nvar options = {\n\tresponsive: true,\n\tmaintainAspectRatio: true,\n\t<div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">anim<span class=\"fea_Animations_keys udls\">ation</span>: {\n\t\teasing: 'easeInOutQuad',\n\t\tdur<span class=\"fea_Animations_keys udls\">ation</span>: 520\n\t},</div>\n\t<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Axis_keys udls\">scale</span>s: {\n\t\txAxes: [{\n\t\t\tgridLines: {\n\t\t\t\tcolor: 'rgba(200, 200, 200, 0.05)',\n\t\t\t\tlineWidth: 1\n\t\t\t}\n\t\t}],\n\t\tyAxes: [{\n\t\t\tgridLines: {\n\t\t\t\tcolor: 'rgba(200, 200, 200, 0.08)',\n\t\t\t\tlineWidth: 1\n\t\t\t}\n\t\t}]\n\t},</div>\n\t<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">elements: {\n\t\tline: {\n\t\t\ttension: 0.4\n\t\t}\n\t}</div>,\n\t<div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Legend_keys udls\">legend</span>: {\n\t\tdisplay: false\n\t},</div>\n\t<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">point: {\n\t\tbackgroundColor: 'white'\n\t},</div>\n\t<div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Tooltip_keys udls\">tooltip</span>s: {\n\t\ttitleFontFamily: 'Open Sans',\n\t\tbackgroundColor: 'rgba(0,0,0,0.3)',\n\t\ttitleFontColor: 'red',\n\t\tcaretSize: 5,\n\t\tcornerRadius: 2,\n\t\txPadding: 10,\n\t\tyPadding: 10\n\t}</div>\n};\n\n\nvar chartInstance = new Chart(chart, {\n    <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: '<span class=\"fea_Line_Chart_keys udls\">line</span>'</div>,\n    data: data,\n\t\toptions: options\n});</code></pre></div>",
    "sec_17": "<div class=\"codeBlock hljs javascript\" id=\"sec_17\"><pre id=\"sec_17_code\" style=\"\"><code class=\"javascript\">// &lt;block:setup:3&gt;\nconst DATA_COUNT = 5;\nUtils.srand(110);\n\nconst chartColors = Utils.CHART_COLORS;\nconst colors = [chartColors.red, chartColors.orange, chartColors.yellow, chartColors.green, chartColors.blue];\n\nconst cache = new Map();\nlet width = null;\nlet height = null;\n\nconst actions = [\n  {\n    name: 'Randomize',\n    handler(chart) {\n      chart.data.datasets.forEach(dataset =&gt; {\n        dataset.data = generateData();\n      });\n      chart.update();\n    }\n  },\n];\n// &lt;/block:setup&gt;\n\n// &lt;block:createRadialGradient3:0&gt;\nfunction createRadialGradient3(context, c1, c2, c3) {\n <div class=\"highlights fea_Area_Chart\" id=\"Area_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"> const chart<span class=\"fea_Area_Chart_keys udls\">Area</span> = context.chart.chart<span class=\"fea_Area_Chart_keys udls\">Area</span>;</div>\n  if (!chartArea) {\n    // This case happens on initial chart load\n    return null;\n  }\n\n  const chartWidth = chartArea.right - chartArea.left;\n  const chartHeight = chartArea.bottom - chartArea.top;\n  if (width !== chartWidth || height !== chartHeight) {\n    cache.clear();\n  }\n  var gradient = cache.get(c1 + c2 + c3);\n  if (!gradient) {\n    // Create the gradient because this is either the first render\n    // or the size of the chart has changed\n    <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Canvas_keys udls\">width</span> = chart<span class=\"fea_Canvas_keys udls\">Width</span>;\n    <span class=\"fea_Canvas_keys udls\">height</span> = chart<span class=\"fea_Canvas_keys udls\">Height</span>;</div>\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const r = Math.min(\n      (chartArea.right - chartArea.left) / 2,\n      (chartArea.bottom - chartArea.top) / 2\n    );\n    var ctx = context.chart.ctx;\n    gradient = ctx.createRadialGradient(centerX, centerY, 0, centerX, centerY, r);\n    gradient.addColorStop(0, c1);\n    gradient.addColorStop(0.5, c2);\n    gradient.addColorStop(1, c3);\n    cache.set(c1 + c2 + c3, gradient);\n  }\n\n  return gradient;\n}\n// &lt;/block:createRadialGradient3&gt;\n\n// &lt;block:data:2&gt;\nfunction generateData() {\n  return Utils.numbers({\n    count: DATA_COUNT,\n    min: 0,\n    max: 100\n  });\n}\n\nconst data = {\n  labels: Utils.months({count: DATA_COUNT}),\n  datasets: [{\n    data: generateData()\n  }]\n};\n// &lt;/block:data&gt;\n\n// &lt;block:config:1&gt;\nconst config = {\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">type: 'polarArea',</div>\n  data: data,\n  options: {\n    plugins: {\n      <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Legend_keys udls\">legend</span>: false,</div>\n      <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Tooltip_keys udls\">tooltip</span>: false,</div>\n    },\n    elements: {\n      arc: {\n        backgroundColor: function(context) {\n          let c = colors[context.dataIndex];\n          if (!c) {\n            return;\n          }\n          if (context.active) {\n            c = helpers.getHoverColor(c);\n          }\n          const mid = helpers.color(c).desaturate(0.2).darken(0.2).rgbString();\n          const start = helpers.color(c).lighten(0.2).rotate(270).rgbString();\n          const end = helpers.color(c).lighten(0.1).rgbString();\n          return createRadialGradient3(context, start, mid, end);\n        },\n      }\n    }\n  }\n};\n// &lt;/block:config&gt;\n\nmodule.exports = {\n  actions,\n  config,\n};\n//https://www.chartjs.org/docs/latest/samples/advanced/radial-gradient.html</code></pre></div>",
    "sec_18": "<div class=\"codeBlock hljs javascript\" id=\"sec_18\"><pre id=\"sec_18_code\" style=\"\"><code class=\"javascript\">\n// &lt;block:data:2&gt;\nconst data = [];\nconst data2 = [];\nlet prev = 100;\nlet prev2 = 80;\nfor (let i = 0; i &lt; 1000; i++) {\n  prev += 5 - Math.random() * 10;\n  data.push({x: i, y: prev});\n  prev2 += 5 - Math.random() * 10;\n  data2.push({x: i, y: prev2});\n}\n// &lt;/block:data&gt;\n\n// &lt;block:animation:1&gt;\nconst totalDuration = 10000;\nconst delayBetweenPoints = totalDuration / data.length;\nconst previousY = (ctx) =&gt; ctx.index === 0 ? ctx.chart.scales.y.getPixelForValue(100) : ctx.chart.getDatasetMeta(ctx.datasetIndex).data[ctx.index - 1].getProps(['y'], true).y;\n<div class=\"highlights fea_Animations\" id=\"Animations_1\" style=\"background-color: #f6b73c;  display: inline;\">const anim<span class=\"fea_Animations_keys udls\">ation</span> = {\n  x: {\n    type: 'number',\n    easing: 'linear',\n    dur<span class=\"fea_Animations_keys udls\">ation</span>: delayBetweenPoints,\n    from: NaN, // the point is initially skipped\n    delay(ctx) {\n      if (ctx.type !== 'data' || ctx.xStarted) {\n        return 0;\n      }\n      ctx.xStarted = true;\n      return ctx.index * delayBetweenPoints;\n    }\n  },\n  y: {\n    type: 'number',\n    easing: 'linear',\n    dur<span class=\"fea_Animations_keys udls\">ation</span>: delayBetweenPoints,\n    from: previousY,\n    delay(ctx) {\n      if (ctx.type !== 'data' || ctx.yStarted) {\n        return 0;\n      }\n      ctx.yStarted = true;\n      return ctx.index * delayBetweenPoints;\n    }\n  }\n};</div>\n// &lt;/block:animation&gt;\n\n// &lt;block:config:0&gt;\nconst config = {\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">type: 'line',</div>\n  data: {\n    datasets: [{\n      borderColor: Utils.CHART_COLORS.red,\n      borderWidth: 1,\n      radius: 0,\n      data: data,\n    },\n    {\n      borderColor: Utils.CHART_COLORS.blue,\n      borderWidth: 1,\n      radius: 0,\n      data: data2,\n    }]\n  },\n  options: {\n    <div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">anim<span class=\"fea_Animations_keys udls\">ation</span></div>,\n    interaction: {\n      intersect: false\n    },\n    plugins: {\n      <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Legend_keys udls\">legend</span>: false</div>\n    },\n    <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Axis_keys udls\">scale</span>s: {\n      x: {\n        type: 'linear'\n      }\n    }</div>\n  }\n};\n// &lt;/block:config&gt;\n\nmodule.exports = {\n  config\n};\n\n//https://www.chartjs.org/docs/latest/samples/animations/<div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">progressive-<span class=\"fea_Line_Chart_keys udls\">line</span></div>.html</code></pre></div>",
    "sec_21": "<div class=\"codeBlock hljs javascript\" id=\"sec_21\"><pre id=\"sec_21_code\" style=\"\"><code class=\"javascript\">// &lt;block:setup:2&gt;\nconst DATA_COUNT = 16;\nconst MIN_XY = -150;\nconst MAX_XY = 100;\nUtils.srand(110);\n\nconst actions = [\n  {\n    name: 'Randomize',\n    handler(chart) {\n      chart.data.datasets.forEach(dataset =&gt; {\n        dataset.data = generateData();\n      });\n      chart.update();\n    }\n  },\n];\n// &lt;/block:setup&gt;\n\n// &lt;block:data:1&gt;\nfunction generateData() {\n  var data = [];\n  var i;\n\n  for (i = 0; i &lt; DATA_COUNT; ++i) {\n    data.push({\n      x: Utils.rand(MIN_XY, MAX_XY),\n      y: Utils.rand(MIN_XY, MAX_XY),\n      v: Utils.rand(0, 1000)\n    });\n  }\n\n  return data;\n}\n\nconst data = {\n  datasets: [{\n    data: generateData()\n  }, {\n    data: generateData()\n  }]\n};\n// &lt;/block:data&gt;\n\n// &lt;block:options:0&gt;\nfunction channelValue(x, y, values) {\n  return x &lt; 0 &amp;&amp; y &lt; 0 ? values[0] : x &lt; 0 ? values[1] : y &lt; 0 ? values[2] : values[3];\n}\n\nfunction colorize(opaque, context) {\n  var value = context.raw;\n  var x = value.x / 100;\n  var y = value.y / 100;\n  var r = channelValue(x, y, [250, 150, 50, 0]);\n  var g = channelValue(x, y, [0, 50, 150, 250]);\n  var b = channelValue(x, y, [0, 150, 150, 250]);\n  var a = opaque ? 1 : 0.5 * value.v / 1000;\n\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\nconst config = {\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">type: 'bubble',</div>\n  data: data,\n  options: {\n    aspectRatio: 1,\n    plugins: {\n      <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Legend_keys udls\">legend</span>: false,</div>\n      <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Tooltip_keys udls\">tooltip</span>: false,</div>\n    },\n    elements: {\n      point: {\n        backgroundColor: colorize.bind(null, false),\n\n        borderColor: colorize.bind(null, true),\n\n        borderWidth: function(context) {\n          return Math.min(Math.max(1, context.datasetIndex + 1), 8);\n        },\n\n        <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">h<span class=\"fea_Mouse_Events_keys udls\">ove</span>rBackgroundColor: 'transparent',\n\n        h<span class=\"fea_Mouse_Events_keys udls\">ove</span>rBorderColor: function(context) {\n          return Utils.color(context.datasetIndex);\n        },\n\n        h<span class=\"fea_Mouse_Events_keys udls\">ove</span>rBorderWidth: function(context) {\n          return Math.round(8 * context.raw.v / 1000);\n        },</div>\n\n        radius: function(context) {\n          var size = context.chart.width;\n          var base = Math.abs(context.raw.v) / 1000;\n          return (size / 24) * base;\n        }\n      }\n    }\n  }\n};\n// &lt;/block:options&gt;\n\nmodule.exports = {\n  actions,\n  config,\n};\n//https://www.chartjs.org/docs/latest/samples/scriptable/<div class=\"highlights fea_Bubble_Chart\" id=\"Bubble_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">bubble</div>.html</code></pre></div>",
    "sec_25": "<div class=\"codeBlock hljs javascript\" id=\"sec_25\"><pre id=\"sec_25_code\" style=\"\"><code class=\"javascript\">// &lt;block:setup:1&gt;\nconst DATA_COUNT = 5;\nconst NUMBER_CFG = {count: DATA_COUNT, min: 0, max: 100};\n\nconst labels = Utils.months({count: 7});\nconst data = {\n  labels: ['Overall Yay', 'Overall Nay', 'Group A Yay', 'Group A Nay', 'Group B Yay', 'Group B Nay', 'Group C Yay', 'Group C Nay'],\n  datasets: [\n    {\n      backgroundColor: ['#AAA', '#777'],\n      data: [21, 79]\n    },\n    {\n      backgroundColor: ['hsl(0, 100%, 60%)', 'hsl(0, 100%, 35%)'],\n      data: [33, 67]\n    },\n    {\n      backgroundColor: ['hsl(100, 100%, 60%)', 'hsl(100, 100%, 35%)'],\n      data: [20, 80]\n    },\n    {\n      backgroundColor: ['hsl(180, 100%, 60%)', 'hsl(180, 100%, 35%)'],\n      data: [10, 90]\n    }\n  ]\n};\n// &lt;/block:setup&gt;\n\n// &lt;block:config:0&gt;\nconst config = {\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">type: 'pie',</div>\n  data: data,\n  options: {\n    responsive: true,\n    plugins: {\n      <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Legend_keys udls\">legend</span>:</div> {\n        labels: {\n          generateLabels: function(chart) {\n            // Get the default label list\n            const original = Chart.overrides.pie.plugins.legend.labels.generateLabels;\n            const labelsOriginal = original.call(this, chart);\n\n            // Build an array of colors used in the datasets of the chart\n            <div class=\"highlights fea_Data_Grouping\" id=\"Data_Grouping_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">var <span class=\"fea_Data_Grouping_keys udls\">data</span>setColors = chart.<span class=\"fea_Data_Grouping_keys udls\">data</span>.<span class=\"fea_Data_Grouping_keys udls\">data</span>sets.<span class=\"fea_Data_Grouping_keys udls\">map</span>(<span class=\"fea_Data_Grouping_keys udls\">function</span>(e) {\n              <span class=\"fea_Data_Grouping_keys udls\">return</span> e.backgroundColor;\n            });</div>\n            datasetColors = datasetColors.flat();\n\n            // Modify the color and hide state of each label\n            labelsOriginal.forEach(label =&gt; {\n              // There are twice as many labels as there are datasets. This converts the label index into the corresponding dataset index\n              <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">label.<span class=\"fea_Data_Transformation_keys udls\">data</span>setIndex = (label.index - label.index % 2) / 2;</div>\n\n              // The hidden state must match the dataset's hidden state\n              label.hidden = !chart.isDatasetVisible(label.datasetIndex);\n\n              // Change the color to match the dataset\n              label.fillStyle = datasetColors[label.index];\n            });\n\n            return labelsOriginal;\n          }\n        },\n        <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">onClick: function(<span class=\"fea_Mouse_Events_keys udls\">mouse</span>Event, legendItem, legend) </div>{\n          // toggle the visibility of the dataset from what it currently is\n          legend.chart.getDatasetMeta(\n            legendItem.datasetIndex\n          ).hidden = legend.chart.isDatasetVisible(legendItem.datasetIndex);\n          legend.chart.update();\n        }\n      },\n      <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Tooltip_keys udls\">tooltip</span>: {\n        callbacks: {\n          label: function(context) {\n            const labelIndex = (context.datasetIndex * 2) + context.dataIndex;\n            return context.chart.data.labels[labelIndex] + ': ' + context.formattedValue;\n          }\n        }\n      }</div>\n    }\n  },\n};\n// &lt;/block:config&gt;\n\nmodule.exports = {\n  config: config,\n};\n//https://www.chartjs.org/docs/latest/samples/other-charts/<div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">multi-series-<span class=\"fea_Pie_Chart_keys udls\">pie</span></div>.html</code></pre></div>",
    "sec_26": "<div class=\"codeBlock hljs javascript\" id=\"sec_26\"><pre id=\"sec_26_code\" style=\"\"><code class=\"javascript\">// &lt;block:actions:2&gt;\nconst actions = [\n  {\n    name: 'Randomize',\n    handler(chart) {\n      chart.data.datasets.forEach(dataset =&gt; {\n        dataset.data = Utils.bubbles({count: chart.data.labels.length, rmin: 1, rmax: 1, min: 0, max: 100});\n      });\n      chart.update();\n    }\n  },\n  {\n    name: 'Add Dataset',\n    handler(chart) {\n      const data = chart.data;\n      const dsColor = Utils.namedColor(chart.data.datasets.length);\n      const newDataset = {\n        label: 'Dataset ' + (data.datasets.length + 1),\n        backgroundColor: Utils.transparentize(dsColor, 0.5),\n        borderColor: dsColor,\n        data: Utils.bubbles({count: data.labels.length, rmin: 1, rmax: 1, min: 0, max: 100}),\n      };\n      chart.data.datasets.push(newDataset);\n      chart.update();\n    }\n  },\n  {\n    name: 'Add Data',\n    handler(chart) {\n      const data = chart.data;\n      if (data.datasets.length &gt; 0) {\n\n        for (var index = 0; index &lt; data.datasets.length; ++index) {\n          data.datasets[index].data.push(Utils.bubbles({count: 1, rmin: 1, rmax: 1, min: 0, max: 100})[0]);\n        }\n\n        chart.update();\n      }\n    }\n  },\n  {\n    name: 'Remove Dataset',\n    handler(chart) {\n      chart.data.datasets.pop();\n      chart.update();\n    }\n  },\n  {\n    name: 'Remove Data',\n    handler(chart) {\n      chart.data.labels.splice(-1, 1); // remove the label first\n\n      chart.data.datasets.forEach(dataset =&gt; {\n        dataset.data.pop();\n      });\n\n      chart.update();\n    }\n  }\n];\n// &lt;/block:actions&gt;\n\n// &lt;block:setup:1&gt;\nconst DATA_COUNT = 7;\nconst NUMBER_CFG = {count: DATA_COUNT, rmin: 1, rmax: 1, min: 0, max: 100};\n\nconst labels = Utils.months({count: 7});\nconst data = {\n  labels: labels,\n  datasets: [\n    {\n      label: 'Dataset 1',\n      data: Utils.bubbles(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.red,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, 0.5),\n    },\n    {\n      label: 'Dataset 2',\n      data: Utils.bubbles(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.orange,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.orange, 0.5),\n    }\n  ]\n};\n// &lt;/block:setup&gt;\n\n// &lt;block:config:0&gt;\nconst config = {\n <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> type: 'scatter',</div>\n  data: data,\n  options: {\n    responsive: true,\n    plugins: {\n      <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Legend_keys udls\">legend</span>: {\n        position: 'top',\n      },</div>\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">title: {\n        display: true,\n        <span class=\"fea_Text_keys udls\">text</span>: 'Chart Scatter Chart'\n      }</div>\n    }\n  },\n};\n// &lt;/block:config&gt;\n\nmodule.exports = {\n  actions: actions,\n  config: config,\n};\n//https://www.chartjs.org/docs/latest/samples/other-charts/<div class=\"highlights fea_Scatter_Plot\" id=\"Scatter_Plot_0\" style=\"background-color: #f6b73c;  display: inline;\">scat<span class=\"fea_Scatter_Plot_keys udls\">ter</span></div>.html</code></pre></div>",
    "sec_27": "<div class=\"codeBlock hljs javascript\" id=\"sec_27\"><pre id=\"sec_27_code\" style=\"\"><code class=\"javascript\">// &lt;block:actions:2&gt;\nconst actions = [\n  {\n    name: 'Randomize',\n    handler(chart) {\n      chart.data.datasets.forEach(dataset =&gt; {\n        dataset.data = Utils.bubbles({count: chart.data.labels.length, rmin: 5, rmax: 15, min: 0, max: 100});\n      });\n      chart.update();\n    }\n  },\n  {\n    name: 'Add Dataset',\n    handler(chart) {\n      const data = chart.data;\n      const dsColor = Utils.namedColor(chart.data.datasets.length);\n      const newDataset = {\n        label: 'Dataset ' + (data.datasets.length + 1),\n        backgroundColor: Utils.transparentize(dsColor, 0.5),\n        borderColor: dsColor,\n        data: Utils.bubbles({count: data.labels.length, rmin: 5, rmax: 15, min: 0, max: 100}),\n      };\n      chart.data.datasets.push(newDataset);\n      chart.update();\n    }\n  },\n  {\n    name: 'Add Data',\n    handler(chart) {\n      const data = chart.data;\n      if (data.datasets.length &gt; 0) {\n\n        for (var index = 0; index &lt; data.datasets.length; ++index) {\n          data.datasets[index].data.push(Utils.bubbles({count: 1, rmin: 5, rmax: 15, min: 0, max: 100})[0]);\n        }\n\n        chart.update();\n      }\n    }\n  },\n  {\n    name: 'Remove Dataset',\n    handler(chart) {\n      chart.data.datasets.pop();\n      chart.update();\n    }\n  },\n  {\n    name: 'Remove Data',\n    handler(chart) {\n      chart.data.labels.splice(-1, 1); // remove the label first\n\n      chart.data.datasets.forEach(dataset =&gt; {\n        dataset.data.pop();\n      });\n\n      chart.update();\n    }\n  }\n];\n// &lt;/block:actions&gt;\n\n// &lt;block:setup:1&gt;\nconst DATA_COUNT = 7;\nconst NUMBER_CFG = {count: DATA_COUNT, rmin: 5, rmax: 15, min: 0, max: 100};\n\nconst labels = Utils.months({count: 7});\nconst data = {\n  labels: labels,\n  datasets: [\n    {\n      label: 'Dataset 1',\n      data: Utils.bubbles(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.red,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, 0.5),\n    },\n    {\n      label: 'Dataset 2',\n      data: Utils.bubbles(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.orange,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.orange, 0.5),\n    }\n  ]\n};\n// &lt;/block:setup&gt;\n\n// &lt;block:config:0&gt;\nconst config = {\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">type: 'bubble',</div>\n  data: data,\n  options: {\n    responsive: true,\n    plugins: {\n      <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Legend_keys udls\">legend</span>: {\n        position: 'top',\n      }</div>,\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">title: {\n        display: true,\n        <span class=\"fea_Text_keys udls\">text</span>: 'Chart Bubble Chart'\n      }\n    }</div>\n  },\n};\n// &lt;/block:config&gt;\n\nmodule.exports = {\n  actions: actions,\n  config: config,\n};\n//https://www.chartjs.org/docs/latest/samples/other-charts/<div class=\"highlights fea_Bubble_Chart\" id=\"Bubble_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">bubble</div>.html</code></pre></div>",
    "sec_30": "<div class=\"codeBlock hljs javascript\" id=\"sec_30\"><pre id=\"sec_30_code\" style=\"\"><code class=\"javascript\">// &lt;block:actions:2&gt;\nconst actions = [\n  {\n    name: 'Randomize',\n    handler(chart) {\n      chart.data.datasets.forEach(dataset =&gt; {\n        dataset.data = Utils.numbers({count: chart.data.labels.length, min: -100, max: 100});\n      });\n      chart.update();\n    }\n  },\n  {\n    name: 'Add Dataset',\n    handler(chart) {\n      const data = chart.data;\n      const dsColor = Utils.namedColor(chart.data.datasets.length);\n      const newDataset = {\n        label: 'Dataset ' + (data.datasets.length + 1),\n        backgroundColor: Utils.transparentize(dsColor, 0.5),\n        borderColor: dsColor,\n        borderWidth: 1,\n        data: Utils.numbers({count: data.labels.length, min: -100, max: 100}),\n      };\n      chart.data.datasets.push(newDataset);\n      chart.update();\n    }\n  },\n  {\n    name: 'Add Data',\n    handler(chart) {\n      const data = chart.data;\n      if (data.datasets.length &gt; 0) {\n        data.labels = Utils.months({count: data.labels.length + 1});\n\n        for (var index = 0; index &lt; data.datasets.length; ++index) {\n          data.datasets[index].data.push(Utils.rand(-100, 100));\n        }\n\n        chart.update();\n      }\n    }\n  },\n  {\n    name: 'Remove Dataset',\n    handler(chart) {\n      chart.data.datasets.pop();\n      chart.update();\n    }\n  },\n  {\n    name: 'Remove Data',\n    handler(chart) {\n      chart.data.labels.splice(-1, 1); // remove the label first\n\n      chart.data.datasets.forEach(dataset =&gt; {\n        dataset.data.pop();\n      });\n\n      chart.update();\n    }\n  }\n];\n// &lt;/block:actions&gt;\n\n// &lt;block:setup:1&gt;\nconst DATA_COUNT = 7;\nconst NUMBER_CFG = {count: DATA_COUNT, min: -100, max: 100};\n\nconst labels = Utils.months({count: 7});\nconst data = {\n  labels: labels,\n  datasets: [\n    {\n      label: 'Dataset 1',\n      data: Utils.numbers(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.red,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, 0.5),\n    },\n    {\n      label: 'Dataset 2',\n      data: Utils.numbers(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.blue,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.blue, 0.5),\n    }\n  ]\n};\n// &lt;/block:setup&gt;\n\n// &lt;block:config:0&gt;\nconst config = {\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">type: 'bar',</div>\n  data: data,\n  options: {\n    responsive: true,\n    plugins: {\n      <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Legend_keys udls\">legend</span>: {\n        position: 'top',\n      }</div>,\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">title: {\n        display: true,\n        <span class=\"fea_Text_keys udls\">text</span>: 'Chart Bar Chart'\n      }</div>\n    }\n  },\n};\n// &lt;/block:config&gt;\n\nmodule.exports = {\n  actions: actions,\n  config: config,\n};\n//https://www.chartjs.org/docs/latest/samples/bar/<div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">vertical</div>.html</code></pre></div>",
    "sec_2": "<div class=\"codeBlock hljs javascript\" id=\"sec_2\"><pre id=\"sec_2_code\" style=\"\"><code class=\"javascript\">var data = {\n    labels : [\"SUN\",\"MON\",\"TUE\",\"WED\",\"THU\",\"FRI\",\"SAT\"],\n    datasets : [\n        {\n            <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">fillColor : \"rgba(255,255,255,0.1)\",\n            strokeColor : \"rgba(0,0,0,0.25)\",\n            pointColor : \"rgba(255,255,255,1)\",\n            pointStrokeColor : \"#fe9fir7\",\n            <span class=\"fea_Shapes_keys udls\">data</span> : [135,185,225,385,275,215,265]</div>\n        }\n    ]\n}\n\nvar options = {\n    scaleFontColor : \"rgba(0,0,0,1)\",\n    scaleLineColor : \"rgba(0,0,0,0.1)\",\n    scaleGridLineColor : \"rgba(0,0,0,0.1)\",\n    scaleShowLabels : false,\n    scaleShowHorizontalLines : false,\n    bezierCurve : false,\n    pointDot : true,\n    pointDotRadius : 5,\n    pointDotStrokeWidth : 2,\n    scaleOverride : true,\n    scaleSteps : 6,\n    scaleStepWidth : 100,\n    responsive : true,\n    showTooltips: true,\n    <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Tooltip_keys udls\">tooltip</span>Template: \"&lt;%= value %&gt; \" + \"Students\",\n    <span class=\"fea_Tooltip_keys udls\">tooltip</span>FontSize: 16,\n    <span class=\"fea_Tooltip_keys udls\">tooltip</span>YPadding: 12,\n    <span class=\"fea_Tooltip_keys udls\">tooltip</span>XPadding: 12,\n    <span class=\"fea_Tooltip_keys udls\">tooltip</span>CornerRadius: 3,\n    <span class=\"fea_Tooltip_keys udls\">tooltip</span>FillColor: \"#3797fir\",</div>\n        \n    <div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">onAnim<span class=\"fea_Animations_keys udls\">ation</span>Complete</div> : function() {\n        var arrSelector = [];\n        this.datasets[0].points.forEach(function(point){\n            if(point.label == 'WED'){\n                arrSelector.push(point);\n            }\n        });\n\n        this.showTooltip(arrSelector, true);          \n    },\n    tooltipEvents: []\n}\n\nnew Chart(c1.getContext(\"2d\")).<div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span></div>(data,options);</code></pre></div>",
    "sec_5": "<div class=\"codeBlock hljs javascript\" id=\"sec_5\"><pre id=\"sec_5_code\" style=\"\"><code class=\"javascript\">Chart.defaults.global = {\n    // Boolean - Whether to animate the chart\n    <div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">anim<span class=\"fea_Animations_keys udls\">ation</span>: true,</div>\n\n    // Number - Number of animation steps\n    animationSteps: 60,\n\n    // String - Animation easing effect\n    // Possible effects are:\n    // [easeInOutQuart, linear, easeOutBounce, easeInBack, easeInOutQuad,\n    //  easeOutQuart, easeOutQuad, easeInOutBounce, easeOutSine, easeInOutCubic,\n    //  easeInExpo, easeInOutBack, easeInCirc, easeInOutElastic, easeOutBack,\n    //  easeInQuad, easeInOutExpo, easeInQuart, easeOutQuint, easeInOutCirc,\n    //  easeInSine, easeOutExpo, easeOutCirc, easeOutCubic, easeInQuint,\n    //  easeInElastic, easeInOutSine, easeInOutQuint, easeInBounce,\n    //  easeOutElastic, easeInCubic]\n    <div class=\"highlights fea_Animations\" id=\"Animations_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">anim<span class=\"fea_Animations_keys udls\">ation</span>Easing: \"easeOutBack\",</div>\n\n    // Boolean - If we should show the scale at all\n    showScale: true,\n\n    // Boolean - If we want to override with a hard coded scale\n    scaleOverride: false,\n\n    // ** Required if scaleOverride is true **\n    // Number - The number of steps in a hard coded scale\n    scaleSteps: null,\n    // Number - The value jump in the hard coded scale\n    scaleStepWidth: null,\n    // Number - The scale starting value\n    scaleStartValue: null,\n\n    // String - Colour of the scale line\n    <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Axis_keys udls\">scale</span>LineColor: \"rgba(0,0,0,.1)\",</div>\n\n    // Number - Pixel width of the scale line\n    <div class=\"highlights fea_Axis\" id=\"Axis_2\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Axis_keys udls\">scale</span>LineWidth: 1,</div>\n\n    // Boolean - Whether to show labels on the scale\n    scaleShowLabels: true,\n\n    // Interpolated JS string - can access value\n    <div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Axis_keys udls\">scale</span>Label: \"&lt;%=value%&gt;\",</div>\n\n    // Boolean - Whether the scale should stick to integers, not floats even if drawing space is there\n    scaleIntegersOnly: true,\n\n    // Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n    scaleBeginAtZero: false,\n\n    // String - Scale label font declaration for the scale label\n    scaleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n    // Number - Scale label font size in pixels\n    scaleFontSize: 12,\n\n    // String - Scale label font weight style\n    scaleFontStyle: \"normal\",\n\n    // String - Scale label font colour\n    scaleFontColor: \"#666\",\n\n    // Boolean - whether or not the chart should be responsive and resize when the browser does.\n    responsive: true,\n\n    // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container\n    maintainAspectRatio: true,\n\n    // Boolean - Determines whether to draw tooltips on the canvas or not\n    <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">show<span class=\"fea_Tooltip_keys udls\">Tooltip</span>s: true,</div>\n\n    // Function - Determines whether to execute the customTooltips function instead of drawing the built in tooltips (See [Advanced - External Tooltips](#advanced-usage-custom-tooltips))\n    customTooltips: false,\n\n    // Array - Array of string names to attach tooltip events\n    <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">tooltipEvents: [\"<span class=\"fea_Mouse_Events_keys udls\">mouse</span>m<span class=\"fea_Mouse_Events_keys udls\">ove</span>\", \"touchstart\", \"touchm<span class=\"fea_Mouse_Events_keys udls\">ove</span>\"]</div>,\n\n    // String - Tooltip background colour\n    tooltipFillColor: \"rgba(0,0,0,0.8)\",\n\n    // String - Tooltip label font declaration for the scale label\n    <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">tooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",</div>\n\n    // Number - Tooltip label font size in pixels\n    tooltipFontSize: 14,\n\n    // String - Tooltip font weight style\n    tooltipFontStyle: \"normal\",\n\n    // String - Tooltip label font colour\n    tooltipFontColor: \"#fff\",\n\n    // String - Tooltip title font declaration for the scale label\n    tooltipTitleFontFamily:\n        \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n    // Number - Tooltip title font size in pixels\n    tooltipTitleFontSize: 14,\n\n    // String - Tooltip title font weight style\n    tooltipTitleFontStyle: \"bold\",\n\n    // String - Tooltip title font colour\n    tooltipTitleFontColor: \"#fff\",\n\n    // Number - pixel width of padding around tooltip text\n    tooltipYPadding: 6,\n\n    // Number - pixel width of padding around tooltip text\n    tooltipXPadding: 6,\n\n    // Number - Size of the caret on the tooltip\n    tooltipCaretSize: 8,\n\n    // Number - Pixel radius of the tooltip border\n    tooltipCornerRadius: 6,\n\n    // Number - Pixel offset from point x to tooltip edge\n    tooltipXOffset: 10,\n\n    // String - Template string for single tooltips\n    tooltipTemplate: \"&lt;%if (label){%&gt;&lt;%=label%&gt;: &lt;%}%&gt;&lt;%= value %&gt;\",\n\n    // String - Template string for multiple tooltips\n    multiTooltipTemplate: \"&lt;%= value %&gt;\",\n\n    // Function - Will fire on animation progression.\n    onAnimationProgress: function () {},\n\n    // Function - Will fire on animation completion.\n    onAnimationComplete: function () {}\n};\n\n// BEGIN POLAR DATA ============================================\n\nconst barData = {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    datasets: [\n        {\n            label: \"My First dataset\",\n            fillColor: \"rgba(220,220,220,0.5)\",\n            strokeColor: \"rgba(220,220,220,0.8)\",\n            highlightFill: \"rgba(220,220,220,0.75)\",\n            highlightStroke: \"rgba(220,220,220,1)\",\n            data: [35, 59, 80, 81, 56, 55, 40]\n        },\n        {\n            label: \"My Second dataset\",\n            fillColor: \"rgba(151,187,205,0.5)\",\n            strokeColor: \"rgba(151,187,205,0.8)\",\n            highlightFill: \"rgba(151,187,205,0.75)\",\n            highlightStroke: \"rgba(151,187,205,1)\",\n            data: [28, 48, 40, 19, 86, 27, 90]\n        }\n    ]\n};\n\nconst barOptions = {\n    //Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n    scaleBeginAtZero: true,\n\n    //Boolean - Whether grid lines are shown across the chart\n    scaleShowGridLines: true,\n\n    //String - Colour of the grid lines\n    scaleGridLineColor: \"rgba(0,0,0,.05)\",\n\n    //Number - Width of the grid lines\n    scaleGridLineWidth: 1,\n\n    //Boolean - Whether to show horizontal lines (except X axis)\n    scaleShowHorizontalLines: true,\n\n    //Boolean - Whether to show vertical lines (except Y axis)\n    scaleShowVerticalLines: true,\n\n    //Boolean - If there is a stroke on each bar\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">barShowStroke: true,</div>\n\n    //Number - Pixel width of the bar stroke\n    barStrokeWidth: 2,\n\n    //Number - Spacing between each of the X value sets\n    barValueSpacing: 5,\n\n    //Number - Spacing between data sets within X values\n    barDatasetSpacing: 1,\n\n    //String - A legend template\n    legendTemplate:\n        '&lt;ul class=\"&lt;%=name.toLowerCase()%&gt;-legend\"&gt;&lt;% for (var i=0; i&lt;datasets.length; i++){%&gt;&lt;li&gt;&lt;span style=\"background-color:&lt;%=datasets[i].fillColor%&gt;\"&gt;&lt;/span&gt;&lt;%if(datasets[i].label){%&gt;&lt;%=datasets[i].label%&gt;&lt;%}%&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;'\n};\n\nconst barCtx = document.getElementById(\"myBarGraph\").getContext(\"2d\");\n\nconst myBarChart = new Chart(barCtx).Bar(barData, barOptions);\n\n// BEGIN POLAR DATA ============================================\n\nconst polarData = [\n    {\n        value: 300,\n        color: \"#F7464A\",\n        highlight: \"#FF5A5E\",\n        label: \"Red\"\n    },\n    {\n        value: 50,\n        color: \"#46BFBD\",\n        highlight: \"#5AfirD1\",\n        label: \"Green\"\n    },\n    {\n        value: 100,\n        color: \"#FDB45C\",\n        highlight: \"#FFC870\",\n        label: \"Yellow\"\n    },\n    {\n        value: 40,\n        color: \"#949FB1\",\n        highlight: \"#A8B3C5\",\n        label: \"Grey\"\n    },\n    {\n        value: 120,\n        color: \"#4D5360\",\n        highlight: \"#616774\",\n        label: \"Dark Grey\"\n    }\n];\n\nconst polarOptions = {\n    //Boolean - Show a backdrop to the scale label\n    scaleShowLabelBackdrop: true,\n\n    //String - The colour of the label backdrop\n    scaleBackdropColor: \"rgba(255,255,255,0.75)\",\n\n    // Boolean - Whether the scale should begin at zero\n    scaleBeginAtZero: true,\n\n    //Number - The backdrop padding above &amp; below the label in pixels\n    scaleBackdropPaddingY: 2,\n\n    //Number - The backdrop padding to the side of the label in pixels\n    scaleBackdropPaddingX: 2,\n\n    //Boolean - Show line for each value in the scale\n    scaleShowLine: true,\n\n    //Boolean - Stroke a line around each segment in the chart\n    segmentShowStroke: true,\n\n    //String - The colour of the stroke on each segement.\n    segmentStrokeColor: \"#fff\",\n\n    //Number - The width of the stroke value in pixels\n    segmentStrokeWidth: 2,\n\n    //Number - Amount of animation steps\n    animationSteps: 100,\n\n    //String - Animation easing effect.\n    animationEasing: \"easeOutBounce\",\n\n    //Boolean - Whether to animate the rotation of the chart\n    animateRotate: true,\n\n    //Boolean - Whether to animate scaling the chart from the centre\n    animateScale: false,\n\n    //String - A legend template\n    legendTemplate:\n        '&lt;ul class=\"&lt;%=name.toLowerCase()%&gt;-legend\"&gt;&lt;% for (var i=0; i&lt;segments.length; i++){%&gt;&lt;li&gt;&lt;span style=\"background-color:&lt;%=segments[i].fillColor%&gt;\"&gt;&lt;/span&gt;&lt;%if(segments[i].label){%&gt;&lt;%=segments[i].label%&gt;&lt;%}%&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;'\n};\n\nconst polarCtx = document.getElementById(\"myPolarGraph\").getContext(\"2d\");\nconst myPolarChart = new Chart(polarCtx).PolarArea(polarData, polarOptions);\n\n// BEGIN LINE CHART ============================================\n\nconst lineGraphData = {\n    labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n    datasets: [\n        {\n            label: \"My First dataset\",\n            fillColor: \"rgba(220,220,220,0.2)\",\n            strokeColor: \"rgba(220,220,220,1)\",\n            pointColor: \"rgba(220,220,220,1)\",\n            pointStrokeColor: \"#fff\",\n            pointHighlightFill: \"#fff\",\n            pointHighlightStroke: \"rgba(220,220,220,1)\",\n            data: [10, 59, 80, 81, 56, 55, 40]\n        },\n        {\n            label: \"My Second dataset\",\n            fillColor: \"rgba(151,187,205,0.2)\",\n            strokeColor: \"rgba(151,187,205,1)\",\n            pointColor: \"rgba(151,187,205,1)\",\n            pointStrokeColor: \"#fff\",\n            pointHighlightFill: \"#fff\",\n            pointHighlightStroke: \"rgba(151,187,205,1)\",\n            data: [28, 48, 40, 19, 86, 27, 90]\n        }\n    ]\n};\n\nconst lineGraphOptions = {\n    ///Boolean - Whether grid lines are shown across the chart\n    scaleShowGridLines: true,\n\n    //String - Colour of the grid lines\n    scaleGridLineColor: \"rgba(0,0,0,.05)\",\n\n    //Number - Width of the grid lines\n    scaleGridLineWidth: 1,\n\n    //Boolean - Whether to show horizontal lines (except X axis)\n    scaleShowHorizontalLines: true,\n\n    //Boolean - Whether to show vertical lines (except Y axis)\n    scaleShowVerticalLines: true,\n\n    //Boolean - Whether the line is curved between points\n    bezierCurve: true,\n\n    //Number - Tension of the bezier curve between points\n    bezierCurveTension: 0.4,\n\n    //Boolean - Whether to show a dot for each point\n    pointDot: true,\n\n    //Number - Radius of each point dot in pixels\n    pointDotRadius: 4,\n\n    //Number - Pixel width of point dot stroke\n    pointDotStrokeWidth: 1,\n\n    //Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n    pointHitDetectionRadius: 20,\n\n    //Boolean - Whether to show a stroke for datasets\n    datasetStroke: true,\n\n    //Number - Pixel width of dataset stroke\n    datasetStrokeWidth: 2,\n\n    //Boolean - Whether to fill the dataset with a colour\n    datasetFill: true,\n\n    //String - A legend template\n    legendTemplate:\n        '&lt;ul class=\"&lt;%=name.toLowerCase()%&gt;-legend\"&gt;&lt;% for (var i=0; i&lt;datasets.length; i++){%&gt;&lt;li&gt;&lt;span style=\"background-color:&lt;%=datasets[i].strokeColor%&gt;\"&gt;&lt;/span&gt;&lt;%if(datasets[i].label){%&gt;&lt;%=datasets[i].label%&gt;&lt;%}%&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;'\n};\n\nconst lineCtx = document.getElementById(\"myGraph\").getContext(\"2d\");\nconst myLineChart = new Chart(lineCtx).Line(lineGraphData, lineGraphOptions);\n\n// BEGIN RADAR CHART ============================================\n\nconst radarData = {\n    labels: [\"Ford\", \"Chevy\", \"Toyota\", \"Honda\", \"Mazda\"],\n    datasets: [\n        {\n            label: \"My First dataset\",\n            fillColor: \"rgba(22,170,133,0.2)\",\n            strokeColor: \"rgba(22,160,133,1)\",\n            pointColor: \"rgba(22,160,133,1)\",\n            pointStrokeColor: \"#fff\",\n            pointHighlightFill: \"#ccc\",\n            pointHighlightStroke: \"rgba(22,160,133,1)\",\n            data: [12, 3, 5, 18, 7]\n        }\n    ]\n};\n\nconst radarOptions = {\n    ///Boolean - Whether grid lines are shown across the chart\n    scaleShowGridLines: true,\n\n    //String - Colour of the grid lines\n    scaleGridLineColor: \"rgba(0,0,0,.2)\",\n\n    //Number - Width of the grid lines\n    scaleGridLineWidth: 1,\n\n    //Boolean - Whether to show horizontal lines (except X axis)\n    scaleShowHorizontalLines: true,\n\n    //Boolean - Whether to show vertical lines (except Y axis)\n    scaleShowVerticalLines: true,\n\n    //Boolean - Whether the line is curved between points\n    bezierCurve: true,\n\n    //Number - Tension of the bezier curve between points\n    bezierCurveTension: 0.4,\n\n    //Boolean - Whether to show a dot for each point\n    pointDot: true,\n\n    //Number - Radius of each point dot in pixels\n    pointDotRadius: 4,\n\n    //Number - Pixel width of point dot stroke\n    pointDotStrokeWidth: 1,\n\n    //Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n    pointHitDetectionRadius: 20,\n\n    //Boolean - Whether to show a stroke for datasets\n    datasetStroke: true,\n\n    //Number - Pixel width of dataset stroke\n    datasetStrokeWidth: 2,\n\n    //Boolean - Whether to fill the dataset with a colour\n    datasetFill: true,\n\n    //String - A legend template\n    legendTemplate:\n        '&lt;ul class=\"&lt;%=name.toLowerCase()%&gt;-legend\"&gt;&lt;% for (var i=0; i&lt;datasets.length; i++){%&gt;&lt;li&gt;&lt;span style=\"background-color:&lt;%=datasets[i].strokeColor%&gt;\"&gt;&lt;/span&gt;&lt;%if(datasets[i].label){%&gt;&lt;%=datasets[i].label%&gt;&lt;%}%&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;'\n};\n\nconst radarCtx = document.getElementById(\"myRadarGraph\").getContext(\"2d\");\nconst myRadarChart = new Chart(radarCtx).Radar(radarData, radarOptions);\n\n// BEGIN PIE CHART ============================================\n\nconst pieData = [\n    {\n        value: 300,\n        color: \"#F7464A\",\n        highlight: \"#FF5A5E\",\n        label: \"Red\"\n    },\n    {\n        value: 50,\n        color: \"#46BFBD\",\n        highlight: \"#5AfirD1\",\n        label: \"Green\"\n    },\n    {\n        value: 100,\n        color: \"#FDB45C\",\n        highlight: \"#FFC870\",\n        label: \"Yellow\"\n    }\n];\n\nconst pieOptions = {\n    //Boolean - Whether we should show a stroke on each segment\n    segmentShowStroke: true,\n\n    //String - The colour of each segment stroke\n    segmentStrokeColor: \"#fff\",\n\n    //Number - The width of each segment stroke\n    segmentStrokeWidth: 2,\n\n    //Number - The percentage of the chart that we cut out of the middle\n    percentageInnerCutout: 0, // This is 0 for Pie charts\n\n    //Number - Amount of animation steps\n    animationSteps: 100,\n\n    //String - Animation easing effect\n    animationEasing: \"easeOutBounce\",\n\n    //Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n\n    //Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false,\n\n    //String - A legend template\n    legendTemplate:\n        '&lt;ul class=\"&lt;%=name.toLowerCase()%&gt;-legend\"&gt;&lt;% for (var i=0; i&lt;segments.length; i++){%&gt;&lt;li&gt;&lt;span style=\"background-color:&lt;%=segments[i].fillColor%&gt;\"&gt;&lt;/span&gt;&lt;%if(segments[i].label){%&gt;&lt;%=segments[i].label%&gt;&lt;%}%&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;'\n};\n\nconst pieCtx = document.getElementById(\"myPieGraph\").getContext(\"2d\");\nconst myPieChart = new Chart(pieCtx).Pie(pieData, pieOptions);\n\n// BEGIN DOUGHNUT CHART ============================================\n\nconst doughnutData = [\n    {\n        value: 300,\n        color: \"#F7464A\",\n        highlight: \"#FF5A5E\",\n        label: \"Red\"\n    },\n    {\n        value: 50,\n        color: \"#46BFBD\",\n        highlight: \"#5AfirD1\",\n        label: \"Green\"\n    },\n    {\n        value: 100,\n        color: \"#FDB45C\",\n        highlight: \"#FFC870\",\n        label: \"Yellow\"\n    }\n];\n\nconst doughnutOptions = {\n    //Boolean - Whether we should show a stroke on each segment\n    segmentShowStroke: true,\n\n    //String - The colour of each segment stroke\n    segmentStrokeColor: \"#fff\",\n\n    //Number - The width of each segment stroke\n    segmentStrokeWidth: 2,\n\n    //Number - The percentage of the chart that we cut out of the middle\n    percentageInnerCutout: 50, // This is 0 for Pie charts\n\n    //Number - Amount of animation steps\n    animationSteps: 100,\n\n    //String - Animation easing effect\n    animationEasing: \"easeOutBounce\",\n\n    //Boolean - Whether we animate the rotation of the Doughnut\n    animateRotate: true,\n\n    //Boolean - Whether we animate scaling the Doughnut from the centre\n    animateScale: false,\n\n    //String - A legend template\n    legendTemplate:\n        '&lt;ul class=\"&lt;%=name.toLowerCase()%&gt;-legend\"&gt;&lt;% for (var i=0; i&lt;segments.length; i++){%&gt;&lt;li&gt;&lt;span style=\"background-color:&lt;%=segments[i].fillColor%&gt;\"&gt;&lt;/span&gt;&lt;%if(segments[i].label){%&gt;&lt;%=segments[i].label%&gt;&lt;%}%&gt;&lt;/li&gt;&lt;%}%&gt;&lt;/ul&gt;'\n};\n\nconst doughnutCtx = document.getElementById(\"myDoughnutGraph\").getContext(\"2d\");\n\nconst myDoughnutChart = new Chart(doughnutCtx).Doughnut(\n    <div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">doughnut</div>Data,\n    doughnutOptions\n);\n\n</code></pre></div>",
    "sec_9": "<div class=\"codeBlock hljs javascript\" id=\"sec_9\"><pre id=\"sec_9_code\" style=\"\"><code class=\"javascript\">// Navigation Variables\nvar caret = $(\".fa.fa-caret-down\");\nvar box = $(\".account-box\").hide();\n\nvar nav = $(\".fa.fa-bars\");\nvar menu = $(\".menu\").hide();\n\n// Trigger Click Event For Navigation\ncaret.click(function(e) {\n\n  e.preventDefault();\n\n  box.fadeToggle();\n\n});\n\nnav.click(function() {\n\n  menu.fadeToggle();\n\n});\n\n// <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span> Chart</div>\nvar lineChartData = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  datasets: [{\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">label: \"My First <span class=\"fea_Shapes_keys udls\">data</span>set\",\n    fillColor: \"rgba(41, 128, 185, 0.5)\",\n    strokeColor: \"none\",\n    pointColor: \"rgba(41, 128, 185, 0.9)\",\n    pointStrokeColor: \"rgba(41, 128, 185, 0)\",\n    pointHighlightFill: \"rgba(41, 128, 185, 0.9)\",\n    pointHighlightStroke: \"rgba(41, 128, 185, 0)\",\n    <span class=\"fea_Shapes_keys udls\">data</span>: [100, 70, 20, 100, 120, 50, 70, 50, 50, 100, 50, 90]</div>\n  }, {\n    label: \"My Second dataset\",\n    fillColor: \"rgba(155, 89, 182, 0.5)\",\n    strokeColor: \"none\",\n    pointColor: \"rgba(155, 89, 182, 0.9)\",\n    pointStrokeColor: \"rgba(231, 76, 60, 255, 0)\",\n    pointHighlightFill: \"rgba(155, 89, 182, 0.9)\",\n    pointHighlightStroke: \"rgba(231, 76, 60, 0)\",\n    data: [28, 48, 40, 19, 86, 27, 20, 90, 50, 20, 90, 20]\n  }]\n};\n\nwindow.onload = function() {\n  var ctx1 = document.getElementById(\"myChart\").getContext(\"2d\");\n  window.myLine = new Chart(ctx1).Line(lineChartData, {\n\n    responsive: true\n  });\n};\n\nChart.defaults.global = {\n    // Boolean - Whether to animate the chart\n    <div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">anim<span class=\"fea_Animations_keys udls\">ation</span>: true,</div>\n\n    // Number - Number of animation steps\n    animationSteps: 60,\n\n    // String - Animation easing effect\n    // Possible effects are:\n    // [easeInOutQuart, linear, easeOutBounce, easeInBack, easeInOutQuad,\n    //  easeOutQuart, easeOutQuad, easeInOutBounce, easeOutSine, easeInOutCubic,\n    //  easeInExpo, easeInOutBack, easeInCirc, easeInOutElastic, easeOutBack,\n    //  easeInQuad, easeInOutExpo, easeInQuart, easeOutQuint, easeInOutCirc,\n    //  easeInSine, easeOutExpo, easeOutCirc, easeOutCubic, easeInQuint,\n    //  easeInElastic, easeInOutSine, easeInOutQuint, easeInBounce,\n    //  easeOutElastic, easeInCubic]\n    animationEasing: \"easeOutQuart\",\n\n    // Boolean - If we should show the scale at all\n    <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">show<span class=\"fea_Axis_keys udls\">Scale</span>: false,</div>\n\n    // Boolean - If we want to override with a hard coded scale\n    scaleOverride: false,\n\n    // ** Required if scaleOverride is true **\n    // Number - The number of steps in a hard coded scale\n    scaleSteps: null,\n    // Number - The value jump in the hard coded scale\n    scaleStepWidth: null,\n    // Number - The scale starting value\n    scaleStartValue: null,\n\n    // String - Colour of the scale line\n    scaleLineColor: \"rgba(0,0,0,.1)\",\n\n    // Number - Pixel width of the scale line\n    scaleLineWidth: 1,\n\n    // Boolean - Whether to show labels on the scale\n    scaleShowLabels: true,\n\n    // Interpolated JS string - can access value\n    scaleLabel: \"&lt;%=value%&gt;\",\n\n    // Boolean - Whether the scale should stick to integers, not floats even if drawing space is there\n    scaleIntegersOnly: true,\n\n    // Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n    scaleBeginAtZero: false,\n\n    // String - Scale label font declaration for the scale label\n    scaleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n    // Number - Scale label font size in pixels\n    scaleFontSize: 12,\n\n    // String - Scale label font weight style\n    scaleFontStyle: \"normal\",\n\n    // String - Scale label font colour\n    scaleFontColor: \"#666\",\n\n    // Boolean - whether or not the chart should be responsive and resize when the browser does.\n    responsive: false,\n\n    // Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container\n    maintainAspectRatio: true,\n\n    // Boolean - Determines whether to draw tooltips on the canvas or not\n    <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">show<span class=\"fea_Tooltip_keys udls\">Tooltip</span>s: true,</div>\n\n    // Function - Determines whether to execute the customTooltips function instead of drawing the built in tooltips (See [Advanced - External Tooltips](#advanced-usage-custom-tooltips))\n    customTooltips: false,\n\n    // Array - Array of string names to attach tooltip events\n    <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">tooltipEvents: [\"<span class=\"fea_Mouse_Events_keys udls\">mouse</span>m<span class=\"fea_Mouse_Events_keys udls\">ove</span>\", \"touchstart\", \"touchm<span class=\"fea_Mouse_Events_keys udls\">ove</span>\"],</div>\n\n    // String - Tooltip background colour\n    tooltipFillColor: \"rgba(0,0,0,0.8)\",\n\n    // String - Tooltip label font declaration for the scale label\n   <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> tooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",</div>\n\n    // Number - Tooltip label font size in pixels\n    tooltipFontSize: 14,\n\n    // String - Tooltip font weight style\n    tooltipFontStyle: \"normal\",\n\n    // String - Tooltip label font colour\n    tooltipFontColor: \"#fff\",\n\n    // String - Tooltip title font declaration for the scale label\n    tooltipTitleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n    // Number - Tooltip title font size in pixels\n    tooltipTitleFontSize: 14,\n\n    // String - Tooltip title font weight style\n    tooltipTitleFontStyle: \"bold\",\n\n    // String - Tooltip title font colour\n    tooltipTitleFontColor: \"#fff\",\n\n    // Number - pixel width of padding around tooltip text\n    tooltipYPadding: 6,\n\n    // Number - pixel width of padding around tooltip text\n    tooltipXPadding: 6,\n\n    // Number - Size of the caret on the tooltip\n    tooltipCaretSize: 8,\n\n    // Number - Pixel radius of the tooltip border\n    tooltipCornerRadius: 6,\n\n    // Number - Pixel offset from point x to tooltip edge\n    tooltipXOffset: 10,\n\n    // String - Template string for single tooltips\n    tooltipTemplate: \"&lt;%if (label){%&gt;&lt;%=label%&gt;: &lt;%}%&gt;&lt;%= value %&gt;\",\n\n    // String - Template string for multiple tooltips\n    multiTooltipTemplate: \"&lt;%= value %&gt;\",\n\n    // Function - Will fire on animation progression.\n    onAnimationProgress: function(){},\n\n    // Function - Will fire on animation completion.\n    onAnimationComplete: function(){}\n}</code></pre></div>",
    "sec_12": "<div class=\"codeBlock hljs javascript\" id=\"sec_12\"><pre id=\"sec_12_code\" style=\"\"><code class=\"javascript\">var chartData = {\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"],\n  datasets: [\n    {\n      <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">type: \"line\",</div>\n      label: \"Dataset 1\",\n      borderColor: window.chartColors.blue,\n      borderWidth: 2,\n      fill: false,\n      data: [\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor()\n      ]\n    },\n    {\n      type: \"bar\",\n      label: \"Dataset 2\",\n      backgroundColor: window.chartColors.red,\n      data: [\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor()\n      ],\n      borderColor: \"white\",\n      borderWidth: 2\n    },\n    {\n      type: \"bar\",\n      label: \"Dataset 3\",\n      backgroundColor: window.chartColors.green,\n      data: [\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor(),\n        randomScalingFactor()\n      ]\n    }\n  ]\n};\nwindow.onload = function() {\n  var ctx = document.getElementById(\"canvas\").getContext(\"2d\");\n  window.myMixedChart = new Chart(ctx, {\n    <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: \"<span class=\"fea_Bar_Chart_keys udls\">bar</span>\",</div>\n    data: chartData,\n    options: {\n      responsive: true,\n      title: {\n        display: true,\n        text: \"Chart Combo Bar Line Chart\"\n      },\n      <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Tooltip_keys udls\">tooltip</span>s: {\n        mode: \"index\",\n        intersect: true\n      }</div>,\n      annotation: {\n        <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">events: [\"click\"],</div>\n        annotations: [\n          {\n            drawTime: \"afterDatasetsDraw\",\n            id: \"hline\",\n            type: \"line\",\n            mode: \"horizontal\",\n            scaleID: \"y-axis-0\",\n            value: randomScalingFactor(),\n            borderColor: \"black\",\n            borderWidth: 5,\n            <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">label: {\n              backgroundColor: \"red\",\n              content: \"Test Label\",\n              enabled: true\n            },</div>\n            onClick: function(e) {\n              // The annotation is is bound to the `this` variable\n              console.log(\"Annotation\", e.type, this);\n            }\n          },\n          {\n            drawTime: \"beforeDatasetsDraw\",\n            type: \"box\",\n            <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">x<span class=\"fea_Axis_keys udls\">Scale</span>ID: \"x-<span class=\"fea_Axis_keys udls\">axis</span>-0\",\n            y<span class=\"fea_Axis_keys udls\">Scale</span>ID: \"y-<span class=\"fea_Axis_keys udls\">axis</span>-0\",\n            xMin: \"February\",\n            xMax: \"April\",\n            yMin: randomScalingFactor(),\n            yMax: randomScalingFactor(),</div>\n            backgroundColor: \"rgba(101, 33, 171, 0.5)\",\n            borderColor: \"rgb(101, 33, 171)\",\n            borderWidth: 1,\n            onClick: function(e) {\n              console.log(\"Box\", e.type, this);\n            }\n          }\n        ]\n      }\n    }\n  });\n};\n\ndocument.getElementById(\"randomizeData\").addEventListener(\"click\", function() {\n  chartData.datasets.forEach(function(dataset) {\n    <div class=\"highlights fea_Data_Grouping\" id=\"Data_Grouping_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Data_Grouping_keys udls\">data</span>set.<span class=\"fea_Data_Grouping_keys udls\">data</span> = <span class=\"fea_Data_Grouping_keys udls\">data</span>set.<span class=\"fea_Data_Grouping_keys udls\">data</span>.<span class=\"fea_Data_Grouping_keys udls\">map</span>(<span class=\"fea_Data_Grouping_keys udls\">function</span>() {\n      <span class=\"fea_Data_Grouping_keys udls\">return</span> randomScalingFactor();\n    });</div>\n  });\n  window.myMixedChart.update();\n});\n\n</code></pre></div>",
    "sec_16": "<div class=\"codeBlock hljs javascript\" id=\"sec_16\"><pre id=\"sec_16_code\" style=\"\"><code class=\"javascript\">// &lt;block:hover:0&gt;\nfunction triggerHover(chart) {\n  if (chart.getActiveElements().length &gt; 0) {\n    chart.setActiveElements([]);\n  } else {\n    chart.setActiveElements([\n      {\n        datasetIndex: 0,\n        index: 0,\n      }, {\n        datasetIndex: 1,\n        index: 0,\n      }\n    ]);\n  }\n  chart.update();\n}\n// &lt;/block:hover&gt;\n\n// &lt;block:tooltip:1&gt;\nfunction triggerTooltip(chart) {\n <div class=\"highlights fea_Tooltip\" id=\"Tooltip_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> const <span class=\"fea_Tooltip_keys udls\">tooltip</span> = chart.<span class=\"fea_Tooltip_keys udls\">tooltip</span>;</div>\n  if (tooltip.getActiveElements().length &gt; 0) {\n    tooltip.setActiveElements([], {x: 0, y: 0});\n  } else {\n    const chartArea = chart.chartArea;\n    <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Tooltip_keys udls\">tooltip</span>.setActiveElements([\n      {\n        datasetIndex: 0,\n        index: 2,\n      }, {\n        datasetIndex: 1,\n        index: 2,\n      }\n    ],</div>\n    {\n      x: (chartArea.left + chartArea.right) / 2,\n      y: (chartArea.top + chartArea.bottom) / 2,\n    });\n  }\n\n  chart.update();\n}\n// &lt;/block:tooltip&gt;\n\n// &lt;block:actions:2&gt;\nconst actions = [\n  {\n    name: 'Trigger Hover',\n    handler: triggerHover\n  },\n  {\n    name: 'Trigger Tooltip',\n    handler: triggerTooltip\n  }\n];\n// &lt;/block:actions&gt;\n\n// &lt;block:setup:4&gt;\nconst DATA_COUNT = 7;\nconst NUMBER_CFG = {count: DATA_COUNT, min: -100, max: 100};\n\nconst labels = Utils.months({count: 7});\nconst data = {\n  labels: labels,\n  datasets: [\n    {\n      label: 'Dataset 1',\n      data: Utils.numbers(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.red,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, 0.5),\n      <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">h<span class=\"fea_Mouse_Events_keys udls\">ove</span>rBorderWidth: 5,\n      h<span class=\"fea_Mouse_Events_keys udls\">ove</span>rBorderColor: 'green',</div>\n    },\n    {\n      label: 'Dataset 2',\n      data: Utils.numbers(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.blue,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.blue, 0.5),\n      hoverBorderWidth: 5,\n      hoverBorderColor: 'green',\n    }\n  ]\n};\n// &lt;/block:setup&gt;\n\n// &lt;block:config:3&gt;\n<div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">const config = {</div>\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">type: 'bar',</div>\n  data: data,\n  options: {\n  },\n};\n// &lt;/block:config&gt;\n\nmodule.exports = {\n  actions: actions,\n  config: config,\n};\n//https://www.chartjs.org/docs/latest/samples/advanced/programmatic-events.html</code></pre></div>",
    "sec_19": "<div class=\"codeBlock hljs javascript\" id=\"sec_19\"><pre id=\"sec_19_code\" style=\"\"><code class=\"javascript\">// &lt;block:actions:2&gt;\nconst actions = [\n  {\n    name: 'Randomize',\n    handler(chart) {\n      chart.data.datasets.forEach(dataset =&gt; {\n        <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Data_Transformation_keys udls\">data</span>set.<span class=\"fea_Data_Transformation_keys udls\">data</span> = Utils.bubbles({count: chart.<span class=\"fea_Data_Transformation_keys udls\">data</span>.labels.length, rmin: 1, r<span class=\"fea_Data_Transformation_keys udls\">max</span>: 1, min: -100, <span class=\"fea_Data_Transformation_keys udls\">max</span>: 100});</div>\n      });\n      chart.update();\n    }\n  },\n  {\n    name: 'Add Dataset',\n    handler(chart) {\n      const data = chart.data;\n      const dsColor = Utils.namedColor(chart.data.datasets.length);\n      const newDataset = {\n        label: 'Dataset ' + (data.datasets.length + 1),\n        backgroundColor: Utils.transparentize(dsColor, 0.5),\n        borderColor: dsColor,\n        data: Utils.bubbles({count: data.labels.length, rmin: 1, rmax: 1, min: -100, max: 100}),\n      };\n      chart.data.datasets.push(newDataset);\n      chart.update();\n    }\n  },\n  {\n    name: 'Add Data',\n    handler(chart) {\n      const data = chart.data;\n      if (data.datasets.length &gt; 0) {\n\n        for (var index = 0; index &lt; data.datasets.length; ++index) {\n          data.datasets[index].data.push(Utils.bubbles({count: 1, rmin: 1, rmax: 1, min: -100, max: 100})[0]);\n        }\n\n        chart.update();\n      }\n    }\n  },\n  {\n    name: 'Remove Dataset',\n    handler(chart) {\n      chart.data.datasets.pop();\n      chart.update();\n    }\n  },\n  {\n    name: 'Remove Data',\n    handler(chart) {\n      chart.data.labels.splice(-1, 1); // remove the label first\n\n      chart.data.datasets.forEach(dataset =&gt; {\n        dataset.data.pop();\n      });\n\n      chart.update();\n    }\n  }\n];\n// &lt;/block:actions&gt;\n\n// &lt;block:setup:1&gt;\nconst DATA_COUNT = 7;\nconst NUMBER_CFG = {count: DATA_COUNT, rmin: 1, rmax: 1, min: -100, max: 100};\n\nconst labels = Utils.months({count: 7});\nconst data = {\n  labels: labels,\n  datasets: [\n    {\n      label: 'Dataset 1',\n      data: Utils.bubbles(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.red,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, 0.5),\n      yAxisID: 'y',\n    },\n    {\n      label: 'Dataset 2',\n      data: Utils.bubbles(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.orange,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.orange, 0.5),\n      yAxisID: 'y2',\n    }\n  ]\n};\n// &lt;/block:setup&gt;\n\n// &lt;block:config:0&gt;\nconst config = {\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">type: 'scatter',</div>\n  data: data,\n  options: {\n    responsive: true,\n    plugins: {\n      <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">legend: {\n        position: 'top',\n      }</div>,\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">title: {\n        display: true,\n        <span class=\"fea_Text_keys udls\">text</span>: 'Chart Scatter Multi Axis Chart'\n      }</div>\n    },\n    <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Axis_keys udls\">scale</span>s: {\n      y: {\n        type: 'linear', // only linear but allow <span class=\"fea_Axis_keys udls\">scale</span> type registration. This allows extensions to exist solely for log <span class=\"fea_Axis_keys udls\">scale</span> for instance\n        position: 'left',\n        ticks: {\n          color: Utils.CHART_COLORS.red\n        }\n      },\n      y2: {\n        type: 'linear', // only linear but allow <span class=\"fea_Axis_keys udls\">scale</span> type registration. This allows extensions to exist solely for log <span class=\"fea_Axis_keys udls\">scale</span> for instance\n        position: 'right',\n        reverse: true,\n        ticks: {\n          color: Utils.CHART_COLORS.blue\n        },\n        grid: {\n          drawOnChartArea: false // only want the grid lines for one <span class=\"fea_Axis_keys udls\">axis</span> to show up\n        }\n      }</div>\n    }\n  },\n};\n// &lt;/block:config&gt;\n\nmodule.exports = {\n  actions: actions,\n  config: config,\n};\n//https://www.chartjs.org/docs/latest/samples/other-charts/<div class=\"highlights fea_Scatter_Plot\" id=\"Scatter_Plot_0\" style=\"background-color: #f6b73c;  display: inline;\">scat<span class=\"fea_Scatter_Plot_keys udls\">ter</span></div>-multi-axis.html</code></pre></div>",
    "sec_11": "<div class=\"codeBlock hljs javascript\" id=\"sec_11\"><pre id=\"sec_11_code\" style=\"\"><code class=\"javascript\">$(function(){\n  $(\"#doughnutChart\").drawDoughnutChart([\n    { title: \"Tokyo\",         value : 120,  color: \"#2C3E50\" },\n    { title: \"San Francisco\", value:  80,   color: \"#FC4349\" },\n    { title: \"New York\",      value:  70,   color: \"#6DBCDB\" },\n    { title: \"London\",        value : 50,   color: \"#F7E248\" },\n    { title: \"Sydney\",        value : 40,   color: \"#D7DADB\" },\n    { title: \"Berlin\",        value : 20,   color: \"#FFF\" }\n  ]);\n});\n/*!\n * jquery.drawDoughnutChart\n * Version: 0.4.1(Beta)\n * Inspired by Chart(http://www.chartjs.org/)\n *\n * Copyright 2014 hiro\n * https://github.com/githiro/drawDoughnutChart\n * Released under the MIT license.\n * \n */\n;(function($, undefined) {\n  $.fn.drawDoughnutChart = function(data, options) {\n    var $this = this,\n      W = $this.width(),\n      H = $this.height(),\n      centerX = W/2,\n      centerY = H/2,\n      cos = Math.cos,\n      sin = Math.sin,\n      PI = Math.PI,\n      settings = $.extend({\n        segmentShowStroke : true,\n        segmentStrokeColor : \"#0C1013\",\n        segmentStrokeWidth : 1,\n        baseColor: \"rgba(0,0,0,0.5)\",\n        baseOffset: 4,\n        edgeOffset : 10,//offset from edge of $this\n        percentageInnerCutout : 75,\n        <div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">anim<span class=\"fea_Animations_keys udls\">ation</span> : true,\n        anim<span class=\"fea_Animations_keys udls\">ation</span>Steps : 90,\n        anim<span class=\"fea_Animations_keys udls\">ation</span>Easing : \"easeInOutExpo\",\n        animateRotate : true,</div>\n        tipOffsetX: -8,\n        tipOffsetY: -45,\n        tipClass: \"doughnutTip\",\n        summaryClass: \"doughnutSummary\",\n        <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">summaryTitle: \"TOTAL:\"</div>,\n        summaryTitleClass: \"doughnutSummaryTitle\",\n        summaryNumberClass: \"doughnutSummaryNumber\",\n        beforeDraw: function() {  },\n        afterDrawed : function() {  },\n        onPathEnter : function(e,data) {  },\n        onPathLeave : function(e,data) {  }\n      }, options),\n      animationOptions = {\n        linear : function (t) {\n          return t;\n        },\n        easeInOutExpo: function (t) {\n          var v = t&lt;.5 ? 8*t*t*t*t : 1-8*(--t)*t*t*t;\n          return (v&gt;1) ? 1 : v;\n        }\n      },\n      requestAnimFrame = function() {\n        return window.requestAnimationFrame ||\n          window.webkitRequestAnimationFrame ||\n          window.mozRequestAnimationFrame ||\n          window.oRequestAnimationFrame ||\n          window.msRequestAnimationFrame ||\n          function(callback) {\n            window.setTimeout(callback, 1000 / 60);\n          };\n      }();\n\n    settings.beforeDraw.call($this);\n\n    var $svg = $('&lt;svg width=\"' + W + '\" height=\"' + H + '\" viewBox=\"0 0 ' + W + ' ' + H + '\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"&gt;&lt;/svg&gt;').appendTo($this),\n        $paths = [],\n        easingFunction = animationOptions[settings.animationEasing],\n        doughnutRadius = Min([H / 2,W / 2]) - settings.edgeOffset,\n        cutoutRadius = doughnutRadius * (settings.percentageInnerCutout / 100),\n        segmentTotal = 0;\n\n    //Draw base <div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">doughnut</div>\n    var baseDoughnutRadius = doughnutRadius + settings.baseOffset,\n        baseCutoutRadius = cutoutRadius - settings.baseOffset;\n    $(document.createElementNS('http://www.w3.org/2000/svg', 'path'))\n      .attr({\n        \"d\": getHollowCirclePath(baseDoughnutRadius, baseCutoutRadius),\n        \"fill\": settings.baseColor\n      })\n      .appendTo($svg);\n\n    //Set up pie segments wrapper\n    var $pathGroup = $(document.createElementNS('http://www.w3.org/2000/svg', 'g'));\n    $pathGroup.attr({opacity: 0}).appendTo($svg);\n\n    //Set up tooltip\n    var $tip = $('&lt;div class=\"' + settings.tipClass + '\" /&gt;').appendTo('body').hide(),\n        tipW = $tip.width(),\n        tipH = $tip.height();\n\n    //Set up center text area\n    var summarySize = (cutoutRadius - (doughnutRadius - cutoutRadius)) * 2,\n        $summary = $('&lt;div class=\"' + settings.summaryClass + '\" /&gt;')\n                   .appendTo($this)\n                   .css({ \n                     width: summarySize + \"px\",\n                     height: summarySize + \"px\",\n                     \"margin-left\": -(summarySize / 2) + \"px\",\n                     \"margin-top\": -(summarySize / 2) + \"px\"\n                   });\n    var $summaryTitle = $('&lt;p class=\"' + settings.summaryTitleClass + '\"&gt;' + settings.summaryTitle + '&lt;/p&gt;').appendTo($summary);\n    var $summaryNumber = $('&lt;p class=\"' + settings.summaryNumberClass + '\"&gt;&lt;/p&gt;').appendTo($summary).css({opacity: 0});\n\n    for (var i = 0, len = data.length; i &lt; len; i++) {\n      segmentTotal += data[i].value;\n      <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">$paths[i] = $(document.createElementNS('http://www.w3.org/2000/svg', 'path'))\n        .attr({\n          \"stroke-width\": settings.segmentStrokeWidth,\n          \"stroke\": settings.segmentStrokeColor,\n          \"fill\": <span class=\"fea_Shapes_keys udls\">data</span>[i].color,\n          \"<span class=\"fea_Shapes_keys udls\">data</span>-order\": i\n        })</div>\n        .appendTo($pathGroup)\n        <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">.on(\"<span class=\"fea_Mouse_Events_keys udls\">mouse</span>enter\", path<span class=\"fea_Mouse_Events_keys udls\">Mouse</span>Enter)\n        .on(\"<span class=\"fea_Mouse_Events_keys udls\">mouse</span>leave\", path<span class=\"fea_Mouse_Events_keys udls\">Mouse</span>Leave)\n        .on(\"<span class=\"fea_Mouse_Events_keys udls\">mouse</span>m<span class=\"fea_Mouse_Events_keys udls\">ove</span>\", path<span class=\"fea_Mouse_Events_keys udls\">Mouse</span>M<span class=\"fea_Mouse_Events_keys udls\">ove</span>);</div>\n    }\n\n    //Animation start\n    animationLoop(drawPieSegments);\n\n    //Functions\n    function getHollowCirclePath(doughnutRadius, cutoutRadius) {\n        //Calculate values for the path.\n        //We needn't calculate startRadius, segmentAngle and endRadius, because base doughnut doesn't animate.\n        var startRadius = -1.570,// -Math.PI/2\n            segmentAngle = 6.2831,// 1 * ((99.9999/100) * (PI*2)),\n            endRadius = 4.7131,// startRadius + segmentAngle\n            startX = centerX + cos(startRadius) * doughnutRadius,\n            startY = centerY + sin(startRadius) * doughnutRadius,\n            endX2 = centerX + cos(startRadius) * cutoutRadius,\n            endY2 = centerY + sin(startRadius) * cutoutRadius,\n            endX = centerX + cos(endRadius) * doughnutRadius,\n            endY = centerY + sin(endRadius) * doughnutRadius,\n            startX2 = centerX + cos(endRadius) * cutoutRadius,\n            startY2 = centerY + sin(endRadius) * cutoutRadius;\n        var cmd = [\n          'M', startX, startY,\n          'A', doughnutRadius, doughnutRadius, 0, 1, 1, endX, endY,//Draw outer circle\n          'Z',//Close path\n          'M', startX2, startY2,//Move pointer\n          'A', cutoutRadius, cutoutRadius, 0, 1, 0, endX2, endY2,//Draw inner circle\n          'Z'\n        ];\n        cmd = cmd.join(' ');\n        return cmd;\n    };\n    function pathMouseEnter(e) {\n      var order = $(this).data().order;\n      $tip.text(data[order].title + \": \" + data[order].value)\n          .fadeIn(200);\n      settings.onPathEnter.apply($(this),[e,data]);\n    }\n    function pathMouseLeave(e) {\n      $tip.hide();\n      settings.onPathLeave.apply($(this),[e,data]);\n    }\n    function pathMouseMove(e) {\n      $tip.css({\n        top: e.pageY + settings.tipOffsetY,\n        left: e.pageX - $tip.width() / 2 + settings.tipOffsetX\n      });\n    }\n    function drawPieSegments (animationDecimal) {\n      var startRadius = -PI / 2,//-90 degree\n          rotateAnimation = 1;\n      if (settings.animation &amp;&amp; settings.animateRotate) rotateAnimation = animationDecimal;//count up between0~1\n\n      drawDoughnutText(animationDecimal, segmentTotal);\n\n      $pathGroup.attr(\"opacity\", animationDecimal);\n\n      //If data have only one value, we draw hollow circle(#1).\n      if (data.length === 1 &amp;&amp; (4.7122 &lt; (rotateAnimation * ((data[0].value / segmentTotal) * (PI * 2)) + startRadius))) {\n        $paths[0].attr(\"d\", getHollowCirclePath(doughnutRadius, cutoutRadius));\n        return;\n      }\n      for (var i = 0, len = data.length; i &lt; len; i++) {\n        var segmentAngle = rotateAnimation * ((data[i].value / segmentTotal) * (PI * 2)),\n            endRadius = startRadius + segmentAngle,\n            largeArc = ((endRadius - startRadius) % (PI * 2)) &gt; PI ? 1 : 0,\n            startX = centerX + cos(startRadius) * doughnutRadius,\n            startY = centerY + sin(startRadius) * doughnutRadius,\n            endX2 = centerX + cos(startRadius) * cutoutRadius,\n            endY2 = centerY + sin(startRadius) * cutoutRadius,\n            endX = centerX + cos(endRadius) * doughnutRadius,\n            endY = centerY + sin(endRadius) * doughnutRadius,\n            startX2 = centerX + cos(endRadius) * cutoutRadius,\n            startY2 = centerY + sin(endRadius) * cutoutRadius;\n        var cmd = [\n          'M', startX, startY,//Move pointer\n          'A', doughnutRadius, doughnutRadius, 0, largeArc, 1, endX, endY,//Draw outer arc path\n          'L', startX2, startY2,//Draw line path(this line connects outer and innner arc paths)\n          'A', cutoutRadius, cutoutRadius, 0, largeArc, 0, endX2, endY2,//Draw inner arc path\n          'Z'//Cloth path\n        ];\n        $paths[i].attr(\"d\", cmd.join(' '));\n        startRadius += segmentAngle;\n      }\n    }\n    function drawDoughnutText(animationDecimal, segmentTotal) {\n      $summaryNumber\n        .css({opacity: animationDecimal})\n        .text((segmentTotal * animationDecimal).toFixed(1));\n    }\n    function animateFrame(cnt, drawData) {\n      var easeAdjustedAnimationPercent =(settings.animation)? CapValue(easingFunction(cnt), null, 0) : 1;\n      drawData(easeAdjustedAnimationPercent);\n    }\n    function animationLoop(drawData) {\n      var animFrameAmount = (settings.animation)? 1 / CapValue(settings.animationSteps, Number.MAX_VALUE, 1) : 1,\n          cnt =(settings.animation)? 0 : 1;\n      requestAnimFrame(function() {\n          cnt += animFrameAmount;\n          animateFrame(cnt, drawData);\n          if (cnt &lt;= 1) {\n            requestAnimFrame(arguments.callee);\n          } else {\n            settings.afterDrawed.call($this);\n          }\n      });\n    }\n    function Max(arr) {\n      return Math.max.apply(null, arr);\n    }\n    function Min(arr) {\n      return Math.min.apply(null, arr);\n    }\n    function isNumber(n) {\n      return !isNaN(parseFloat(n)) &amp;&amp; isFinite(n);\n    }\n    function CapValue(valueToCap, maxValue, minValue) {\n      if (isNumber(maxValue) &amp;&amp; valueToCap &gt; maxValue) return maxValue;\n      if (isNumber(minValue) &amp;&amp; valueToCap &lt; minValue) return minValue;\n      return valueToCap;\n    }\n    return $this;\n  };\n})(jQuery);</code></pre></div>",
    "sec_15": "<div class=\"codeBlock hljs javascript\" id=\"sec_15\"><pre id=\"sec_15_code\" style=\"\"><code class=\"javascript\">$(document).ready(function(){\n  var count = 10;\n  var data = {\n\t  labels : [\"1\",\"2\",\"3\",\"4\",\"5\", \"6\", \"7\", \"8\", \"9\", \"10\"],\n\t\tdatasets : [\n\t\t  {\n\t\t\t\tfillColor : \"rgba(220,220,220,0.5)\",\n\t\t\t\tstrokeColor : \"rgba(220,220,220,1)\",\n\t\t\t\tpointColor : \"rgba(220,220,220,1)\",\n\t\t\t\tpointStrokeColor : \"#fff\",\n\t\t\t\tdata : [65,59,90,81,56,45,30,20,3,37]\n\t\t\t},\n\t\t\t{\n\t\t\t\tfillColor : \"rgba(151,187,205,0.5)\",\n\t\t\t\tstrokeColor : \"rgba(151,187,205,1)\",\n\t\t\t\tpointColor : \"rgba(151,187,205,1)\",\n\t\t\t\tpointStrokeColor : \"#fff\",\n\t\t\t\tdata : [28,48,40,19,96,87,66,97,92,85]\n\t\t\t}\n\t\t]\n  }\n  // this is ugly, don't judge me\n  var updateData = function(oldData){\n    var labels = oldData[\"labels\"];\n    var dataSetA = oldData[\"datasets\"][0][\"data\"];\n    var dataSetB = oldData[\"datasets\"][1][\"data\"];\n    \n    labels.shift();\n    count++;\n    labels.push(count.toString());\n    var newDataA = dataSetA[9] + (20 - Math.floor(Math.random() * (41)));\n    var newDataB = dataSetB[9] + (20 - Math.floor(Math.random() * (41)));\n    dataSetA.push(newDataA);\n    dataSetB.push(newDataB);\n    dataSetA.shift();\n    dataSetB.shift();    };\n      \n  var optionsAnimation = {\n    //Boolean - If we want to override with a hard coded scale\n    scaleOverride : true,\n    //** Required if scaleOverride is true **\n    //Number - The number of steps in a hard coded scale\n    scaleSteps : 10,\n    //Number - The value jump in the hard coded scale\n    scaleStepWidth : 10,\n    //Number - The scale starting value\n    scaleStartValue : 0\n  }\n  \n  // Not sure why the scaleOverride isn't working...\n  var optionsNoAnimation = {\n    animation : false,\n    //Boolean - If we want to override with a hard coded scale\n    scaleOverride : true,\n    //** Required if scaleOverride is true **\n    //Number - The number of steps in a hard coded scale\n    scaleSteps : 20,\n    //Number - The value jump in the hard coded scale\n    scaleStepWidth : 10,\n    //Number - The scale starting value\n    scaleStartValue : 0\n  }\n  \n  //Get the context of the canvas element we want to select\n  var ctx = document.getElementById(\"myChart\").getContext(\"2d\");\n  var optionsNoAnimation = {animation : false}\n  var myNewChart = new Chart(ctx);\n  myNewChart.Line(data, optionsAnimation);\t\n  \n  setInterval(function(){\n    updateData(data);\n    myNewChart.Line(data, optionsNoAnimation)\n    ;}, 2000\n  );\n});\n\n\n// ChartJS\nvar Chart = function(s) {\n    function v(a, c, b) {\n        a = A((a - c.graphMin) / (c.steps * c.stepValue), 1, 0);\n        return b * c.steps * a\n    }\n\n    function x(a, c, b, e) {\n        function h() {\n            g += f;\n            var k = a.animation ? A(d(g), null, 0) : 1;\n            e.clearRect(0, 0, q, u);\n            a.scaleOverlay ? (b(k), c()) : (c(), b(k));\n            if (1 &gt;= g) D(h);\n            else if (\"function\" == typeof a.onAnimationComplete) a.onAnimationComplete()\n        }\n        var f = a.animation ? 1 / A(a.animationSteps, Number.MAX_VALUE, 1) : 1,\n            d = B[a.animationEasing],\n            g = a.animation ? 0 : 1;\n        \"function\" !== typeof c &amp;&amp; (c = function() {});\n        D(h)\n    }\n\n    function C(a, c, b, e, h, f) {\n        var d;\n        a =\n            Math.floor(Math.log(e - h) / Math.LN10);\n        h = Math.floor(h / (1 * Math.pow(10, a))) * Math.pow(10, a);\n        e = Math.ceil(e / (1 * Math.pow(10, a))) * Math.pow(10, a) - h;\n        a = Math.pow(10, a);\n        for (d = Math.round(e / a); d &lt; b || d &gt; c;) a = d &lt; b ? a / 2 : 2 * a, d = Math.round(e / a);\n        c = [];\n        z(f, c, d, h, a);\n        return {\n            steps: d,\n            stepValue: a,\n            graphMin: h,\n            labels: c\n        }\n    }\n\n    function z(a, c, b, e, h) {\n        if (a)\n            for (var f = 1; f &lt; b + 1; f++) c.push(E(a, {\n                value: (e + h * f).toFixed(0 != h % 1 ? h.toString().split(\".\")[1].length : 0)\n            }))\n    }\n\n    function A(a, c, b) {\n        return !isNaN(parseFloat(c)) &amp;&amp; isFinite(c) &amp;&amp; a &gt; c ? c : !isNaN(parseFloat(b)) &amp;&amp;\n            isFinite(b) &amp;&amp; a &lt; b ? b : a\n    }\n\n    function y(a, c) {\n        var b = {},\n            e;\n        for (e in a) b[e] = a[e];\n        for (e in c) b[e] = c[e];\n        return b\n    }\n\n    function E(a, c) {\n        var b = !/\\W/.test(a) ? F[a] = F[a] || E(document.getElementById(a).innerHTML) : new Function(\"obj\", \"var p=[],print=function(){p.push.apply(p,arguments);};with(obj){p.push('\" + a.replace(/[\\r\\t\\n]/g, \" \").split(\"&lt;%\").join(\"\\t\").replace(/((^|%&gt;)[^\\t]*)'/g, \"$1\\r\").replace(/\\t=(.*?)%&gt;/g, \"',$1,'\").split(\"\\t\").join(\"');\").split(\"%&gt;\").join(\"p.push('\").split(\"\\r\").join(\"\\\\'\") + \"');}return p.join('');\");\n        return c ?\n            b(c) : b\n    }\n    var r = this,\n        B = {\n            linear: function(a) {\n                return a\n            },\n            easeInQuad: function(a) {\n                return a * a\n            },\n            easeOutQuad: function(a) {\n                return -1 * a * (a - 2)\n            },\n            easeInOutQuad: function(a) {\n                return 1 &gt; (a /= 0.5) ? 0.5 * a * a : -0.5 * (--a * (a - 2) - 1)\n            },\n            easeInCubic: function(a) {\n                return a * a * a\n            },\n            easeOutCubic: function(a) {\n                return 1 * ((a = a / 1 - 1) * a * a + 1)\n            },\n            easeInOutCubic: function(a) {\n                return 1 &gt; (a /= 0.5) ? 0.5 * a * a * a : 0.5 * ((a -= 2) * a * a + 2)\n            },\n            easeInQuart: function(a) {\n                return a * a * a * a\n            },\n            easeOutQuart: function(a) {\n                return -1 * ((a = a / 1 - 1) * a * a * a - 1)\n            },\n            easeInOutQuart: function(a) {\n                return 1 &gt; (a /= 0.5) ?\n                    0.5 * a * a * a * a : -0.5 * ((a -= 2) * a * a * a - 2)\n            },\n            easeInQuint: function(a) {\n                return 1 * (a /= 1) * a * a * a * a\n            },\n            easeOutQuint: function(a) {\n                return 1 * ((a = a / 1 - 1) * a * a * a * a + 1)\n            },\n            easeInOutQuint: function(a) {\n                return 1 &gt; (a /= 0.5) ? 0.5 * a * a * a * a * a : 0.5 * ((a -= 2) * a * a * a * a + 2)\n            },\n            easeInSine: function(a) {\n                return -1 * Math.cos(a / 1 * (Math.PI / 2)) + 1\n            },\n            easeOutSine: function(a) {\n                return 1 * Math.sin(a / 1 * (Math.PI / 2))\n            },\n            easeInOutSine: function(a) {\n                return -0.5 * (Math.cos(Math.PI * a / 1) - 1)\n            },\n            easeInExpo: function(a) {\n                return 0 == a ? 1 : 1 * Math.pow(2, 10 * (a / 1 - 1))\n            },\n            easeOutExpo: function(a) {\n                return 1 ==\n                    a ? 1 : 1 * (-Math.pow(2, -10 * a / 1) + 1)\n            },\n            easeInOutExpo: function(a) {\n                return 0 == a ? 0 : 1 == a ? 1 : 1 &gt; (a /= 0.5) ? 0.5 * Math.pow(2, 10 * (a - 1)) : 0.5 * (-Math.pow(2, -10 * --a) + 2)\n            },\n            easeInCirc: function(a) {\n                return 1 &lt;= a ? a : -1 * (Math.sqrt(1 - (a /= 1) * a) - 1)\n            },\n            easeOutCirc: function(a) {\n                return 1 * Math.sqrt(1 - (a = a / 1 - 1) * a)\n            },\n            easeInOutCirc: function(a) {\n                return 1 &gt; (a /= 0.5) ? -0.5 * (Math.sqrt(1 - a * a) - 1) : 0.5 * (Math.sqrt(1 - (a -= 2) * a) + 1)\n            },\n            easeInElastic: function(a) {\n                var c = 1.70158,\n                    b = 0,\n                    e = 1;\n                if (0 == a) return 0;\n                if (1 == (a /= 1)) return 1;\n                b || (b = 0.3);\n                e &lt; Math.abs(1) ? (e = 1, c = b / 4) : c = b / (2 *\n                    Math.PI) * Math.asin(1 / e);\n                return -(e * Math.pow(2, 10 * (a -= 1)) * Math.sin((1 * a - c) * 2 * Math.PI / b))\n            },\n            easeOutElastic: function(a) {\n                var c = 1.70158,\n                    b = 0,\n                    e = 1;\n                if (0 == a) return 0;\n                if (1 == (a /= 1)) return 1;\n                b || (b = 0.3);\n                e &lt; Math.abs(1) ? (e = 1, c = b / 4) : c = b / (2 * Math.PI) * Math.asin(1 / e);\n                return e * Math.pow(2, -10 * a) * Math.sin((1 * a - c) * 2 * Math.PI / b) + 1\n            },\n            easeInOutElastic: function(a) {\n                var c = 1.70158,\n                    b = 0,\n                    e = 1;\n                if (0 == a) return 0;\n                if (2 == (a /= 0.5)) return 1;\n                b || (b = 1 * 0.3 * 1.5);\n                e &lt; Math.abs(1) ? (e = 1, c = b / 4) : c = b / (2 * Math.PI) * Math.asin(1 / e);\n                return 1 &gt; a ? -0.5 * e * Math.pow(2, 10 *\n                    (a -= 1)) * Math.sin((1 * a - c) * 2 * Math.PI / b) : 0.5 * e * Math.pow(2, -10 * (a -= 1)) * Math.sin((1 * a - c) * 2 * Math.PI / b) + 1\n            },\n            easeInBack: function(a) {\n                return 1 * (a /= 1) * a * (2.70158 * a - 1.70158)\n            },\n            easeOutBack: function(a) {\n                return 1 * ((a = a / 1 - 1) * a * (2.70158 * a + 1.70158) + 1)\n            },\n            easeInOutBack: function(a) {\n                var c = 1.70158;\n                return 1 &gt; (a /= 0.5) ? 0.5 * a * a * (((c *= 1.525) + 1) * a - c) : 0.5 * ((a -= 2) * a * (((c *= 1.525) + 1) * a + c) + 2)\n            },\n            easeInBounce: function(a) {\n                return 1 - B.easeOutBounce(1 - a)\n            },\n            easeOutBounce: function(a) {\n                return (a /= 1) &lt; 1 / 2.75 ? 1 * 7.5625 * a * a : a &lt; 2 / 2.75 ? 1 * (7.5625 * (a -= 1.5 / 2.75) *\n                    a + 0.75) : a &lt; 2.5 / 2.75 ? 1 * (7.5625 * (a -= 2.25 / 2.75) * a + 0.9375) : 1 * (7.5625 * (a -= 2.625 / 2.75) * a + 0.984375)\n            },\n            easeInOutBounce: function(a) {\n                return 0.5 &gt; a ? 0.5 * B.easeInBounce(2 * a) : 0.5 * B.easeOutBounce(2 * a - 1) + 0.5\n            }\n        },\n        q = s.canvas.width,\n        u = s.canvas.height;\n    window.devicePixelRatio &amp;&amp; (s.canvas.style.width = q + \"px\", s.canvas.style.height = u + \"px\", s.canvas.height = u * window.devicePixelRatio, s.canvas.width = q * window.devicePixelRatio, s.scale(window.devicePixelRatio, window.devicePixelRatio));\n    this.PolarArea = function(a, c) {\n        r.PolarArea.defaults = {\n            scaleOverlay: !0,\n            scaleOverride: !1,\n            scaleSteps: null,\n            scaleStepWidth: null,\n            scaleStartValue: null,\n            scaleShowLine: !0,\n            scaleLineColor: \"rgba(0,0,0,.1)\",\n            scaleLineWidth: 1,\n            scaleShowLabels: !0,\n            scaleLabel: \"&lt;%=value%&gt;\",\n            scaleFontFamily: \"'Arial'\",\n            scaleFontSize: 12,\n            scaleFontStyle: \"normal\",\n            scaleFontColor: \"#666\",\n            scaleShowLabelBackdrop: !0,\n            scaleBackdropColor: \"rgba(255,255,255,0.75)\",\n            scaleBackdropPaddingY: 2,\n            scaleBackdropPaddingX: 2,\n            segmentShowStroke: !0,\n            segmentStrokeColor: \"#fff\",\n            segmentStrokeWidth: 2,\n            animation: !0,\n            animationSteps: 100,\n            animationEasing: \"easeOutBounce\",\n            animateRotate: !0,\n            animateScale: !1,\n            onAnimationComplete: null\n        };\n        var b = c ? y(r.PolarArea.defaults, c) : r.PolarArea.defaults;\n        return new G(a, b, s)\n    };\n    this.Radar = function(a, c) {\n        r.Radar.defaults = {\n            <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Axis_keys udls\">scale</span>Overlay: !1,\n            <span class=\"fea_Axis_keys udls\">scale</span>Override: !1,\n            <span class=\"fea_Axis_keys udls\">scale</span>Steps: null,\n            <span class=\"fea_Axis_keys udls\">scale</span>StepWidth: null,\n            <span class=\"fea_Axis_keys udls\">scale</span>StartValue: null,\n            <span class=\"fea_Axis_keys udls\">scale</span>ShowLine: !0,\n            <span class=\"fea_Axis_keys udls\">scale</span>LineColor: \"rgba(0,0,0,.1)\",\n            <span class=\"fea_Axis_keys udls\">scale</span>LineWidth: 1,\n            <span class=\"fea_Axis_keys udls\">scale</span>ShowLabels: !1,\n            <span class=\"fea_Axis_keys udls\">scale</span>Label: \"&lt;%=value%&gt;\",\n            <span class=\"fea_Axis_keys udls\">scale</span>FontFamily: \"'Arial'\",\n            <span class=\"fea_Axis_keys udls\">scale</span>FontSize: 12,\n            <span class=\"fea_Axis_keys udls\">scale</span>FontStyle: \"normal\",\n            <span class=\"fea_Axis_keys udls\">scale</span>FontColor: \"#666\",\n            <span class=\"fea_Axis_keys udls\">scale</span>ShowLabelBackdrop: !0,\n            <span class=\"fea_Axis_keys udls\">scale</span>BackdropColor: \"rgba(255,255,255,0.75)\",\n            <span class=\"fea_Axis_keys udls\">scale</span>BackdropPaddingY: 2,\n            <span class=\"fea_Axis_keys udls\">scale</span>BackdropPaddingX: 2,</div>\n            angleShowLineOut: !0,\n            angleLineColor: \"rgba(0,0,0,.1)\",\n            angleLineWidth: 1,\n           <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> pointLabelFontFamily: \"'Arial'\",\n            pointLabelFontStyle: \"normal\",\n            pointLabelFontSize: 12,\n            pointLabelFontColor: \"#666\",</div>\n            pointDot: !0,\n            pointDotRadius: 3,\n            pointDotStrokeWidth: 1,\n            datasetStroke: !0,\n            datasetStrokeWidth: 2,\n            datasetFill: !0,\n            <div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">anim<span class=\"fea_Animations_keys udls\">ation</span>: !0,\n            anim<span class=\"fea_Animations_keys udls\">ation</span>Steps: 60,\n            anim<span class=\"fea_Animations_keys udls\">ation</span>Easing: \"easeOutQuart\",\n            onAnim<span class=\"fea_Animations_keys udls\">ation</span>Complete: null</div>\n        };\n        var b = c ? y(r.Radar.defaults, c) : r.Radar.defaults;\n        return new H(a, b, s)\n    };\n    <div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">this.<span class=\"fea_Pie_Chart_keys udls\">Pie</span></div> = function(a,\n        c) {\n        r.Pie.defaults = {\n            segmentShowStroke: !0,\n            segmentStrokeColor: \"#fff\",\n            segmentStrokeWidth: 2,\n            animation: !0,\n            animationSteps: 100,\n            animationEasing: \"easeOutBounce\",\n            animateRotate: !0,\n            animateScale: !1,\n            onAnimationComplete: null\n        };\n        var b = c ? y(r.Pie.defaults, c) : r.Pie.defaults;\n        return new I(a, b, s)\n    };\n    this.Doughnut = function(a, c) {\n        r.Doughnut.defaults = {\n            segmentShowStroke: !0,\n            segmentStrokeColor: \"#fff\",\n            segmentStrokeWidth: 2,\n            percentageInnerCutout: 50,\n            animation: !0,\n            animationSteps: 100,\n            animationEasing: \"easeOutBounce\",\n            animateRotate: !0,\n            animateScale: !1,\n            onAnimationComplete: null\n        };\n        var b = c ? y(r.Doughnut.defaults, c) : r.Doughnut.defaults;\n        return new J(a, b, s)\n    };\n    this.Line = function(a, c) {\n        r.Line.defaults = {\n            scaleOverlay: !1,\n            scaleOverride: !1,\n            scaleSteps: null,\n            scaleStepWidth: null,\n            scaleStartValue: null,\n            scaleLineColor: \"rgba(0,0,0,.1)\",\n            scaleLineWidth: 1,\n            scaleShowLabels: !0,\n            scaleLabel: \"&lt;%=value%&gt;\",\n            scaleFontFamily: \"'Arial'\",\n            scaleFontSize: 12,\n            scaleFontStyle: \"normal\",\n            scaleFontColor: \"#666\",\n            scaleShowGridLines: !0,\n            scaleGridLineColor: \"rgba(0,0,0,.05)\",\n            scaleGridLineWidth: 1,\n            bezierCurve: !0,\n            pointDot: !0,\n            pointDotRadius: 4,\n            pointDotStrokeWidth: 2,\n            datasetStroke: !0,\n            datasetStrokeWidth: 2,\n            datasetFill: !0,\n            animation: !0,\n            animationSteps: 60,\n            animationEasing: \"easeOutQuart\",\n            onAnimationComplete: null\n        };\n        var b = c ? y(r.Line.defaults, c) : r.Line.defaults;\n        return new K(a, b, s)\n    };\n    this.Bar = function(a, c) {\n        r.Bar.defaults = {\n            scaleOverlay: !1,\n            scaleOverride: !1,\n            scaleSteps: null,\n            scaleStepWidth: null,\n            scaleStartValue: null,\n            scaleLineColor: \"rgba(0,0,0,.1)\",\n            scaleLineWidth: 1,\n            scaleShowLabels: !0,\n            scaleLabel: \"&lt;%=value%&gt;\",\n            scaleFontFamily: \"'Arial'\",\n            scaleFontSize: 12,\n            scaleFontStyle: \"normal\",\n            scaleFontColor: \"#666\",\n            scaleShowGridLines: !0,\n            scaleGridLineColor: \"rgba(0,0,0,.05)\",\n            scaleGridLineWidth: 1,\n            barShowStroke: !0,\n            barStrokeWidth: 2,\n            barValueSpacing: 5,\n            barDatasetSpacing: 1,\n            animation: !0,\n            animationSteps: 60,\n            animationEasing: \"easeOutQuart\",\n            onAnimationComplete: null\n        };\n        var b = c ? y(r.Bar.defaults, c) : r.Bar.defaults;\n        return new L(a, b, s)\n    };\n    var G = function(a, c, b) {\n            var e, h, f, d, g, k, j, l, m;\n            g = Math.min.apply(Math, [q, u]) / 2;\n            g -= Math.max.apply(Math, [0.5 * c.scaleFontSize, 0.5 * c.scaleLineWidth]);\n            d = 2 * c.scaleFontSize;\n            c.scaleShowLabelBackdrop &amp;&amp; (d += 2 * c.scaleBackdropPaddingY, g -= 1.5 * c.scaleBackdropPaddingY);\n            l = g;\n            d = d ? d : 5;\n            e = Number.MIN_VALUE;\n            h = Number.MAX_VALUE;\n            for (f = 0; f &lt; a.length; f++) a[f].value &gt; e &amp;&amp; (e = a[f].value), a[f].value &lt; h &amp;&amp; (h = a[f].value);\n            f = Math.floor(l / (0.66 * d));\n            d = Math.floor(0.5 * (l / d));\n            m = c.scaleShowLabels ? c.scaleLabel : null;\n            c.scaleOverride ? (j = {\n                steps: c.scaleSteps,\n                stepValue: c.scaleStepWidth,\n                graphMin: c.scaleStartValue,\n                labels: []\n            }, z(m, j.labels, j.steps, c.scaleStartValue, c.scaleStepWidth)) : j = C(l, f, d, e, h,\n                m);\n            k = g / j.steps;\n            x(c, function() {\n                for (var a = 0; a &lt; j.steps; a++)\n                    if (c.scaleShowLine &amp;&amp; (b.beginPath(), b.arc(q / 2, u / 2, k * (a + 1), 0, 2 * Math.PI, !0), b.strokeStyle = c.scaleLineColor, b.lineWidth = c.scaleLineWidth, b.stroke()), c.scaleShowLabels) {\n                        b.textAlign = \"center\";\n                        b.font = c.scaleFontStyle + \" \" + c.scaleFontSize + \"px \" + c.scaleFontFamily;\n                        var e = j.labels[a];\n                        if (c.scaleShowLabelBackdrop) {\n                            var d = b.measureText(e).width;\n                            b.fillStyle = c.scaleBackdropColor;\n                            b.beginPath();\n                            b.rect(Math.round(q / 2 - d / 2 - c.scaleBackdropPaddingX), Math.round(u / 2 - k * (a +\n                                1) - 0.5 * c.scaleFontSize - c.scaleBackdropPaddingY), Math.round(d + 2 * c.scaleBackdropPaddingX), Math.round(c.scaleFontSize + 2 * c.scaleBackdropPaddingY));\n                            b.fill()\n                        }\n                        b.textBaseline = \"middle\";\n                        b.fillStyle = c.scaleFontColor;\n                        b.fillText(e, q / 2, u / 2 - k * (a + 1))\n                    }\n            }, function(e) {\n                var d = -Math.PI / 2,\n                    g = 2 * Math.PI / a.length,\n                    f = 1,\n                    h = 1;\n                c.animation &amp;&amp; (c.animateScale &amp;&amp; (f = e), c.animateRotate &amp;&amp; (h = e));\n                for (e = 0; e &lt; a.length; e++) b.beginPath(), b.arc(q / 2, u / 2, f * v(a[e].value, j, k), d, d + h * g, !1), b.lineTo(q / 2, u / 2), b.closePath(), b.fillStyle = a[e].color, b.fill(),\n                    c.segmentShowStroke &amp;&amp; (b.strokeStyle = c.segmentStrokeColor, b.lineWidth = c.segmentStrokeWidth, b.stroke()), d += h * g\n            }, b)\n        },\n        H = function(a, c, b) {\n            var e, h, f, d, g, k, j, l, m;\n            a.labels || (a.labels = []);\n            g = Math.min.apply(Math, [q, u]) / 2;\n            d = 2 * c.scaleFontSize;\n            for (e = l = 0; e &lt; a.labels.length; e++) b.font = c.pointLabelFontStyle + \" \" + c.pointLabelFontSize + \"px \" + c.pointLabelFontFamily, h = b.measureText(a.labels[e]).width, h &gt; l &amp;&amp; (l = h);\n            g -= Math.max.apply(Math, [l, 1.5 * (c.pointLabelFontSize / 2)]);\n            g -= c.pointLabelFontSize;\n            l = g = A(g, null, 0);\n            d = d ? d : 5;\n            e = Number.MIN_VALUE;\n            h = Number.MAX_VALUE;\n            for (f = 0; f &lt; a.datasets.length; f++)\n                for (m = 0; m &lt; a.datasets[f].data.length; m++) a.datasets[f].data[m] &gt; e &amp;&amp; (e = a.datasets[f].data[m]), a.datasets[f].data[m] &lt; h &amp;&amp; (h = a.datasets[f].data[m]);\n            f = Math.floor(l / (0.66 * d));\n            d = Math.floor(0.5 * (l / d));\n            m = c.scaleShowLabels ? c.scaleLabel : null;\n            c.scaleOverride ? (j = {\n                steps: c.scaleSteps,\n                stepValue: c.scaleStepWidth,\n                graphMin: c.scaleStartValue,\n                labels: []\n            }, z(m, j.labels, j.steps, c.scaleStartValue, c.scaleStepWidth)) : j = C(l, f, d, e, h, m);\n            k = g / j.steps;\n            x(c, function() {\n                var e = 2 * Math.PI /\n                    a.datasets[0].data.length;\n                b.save();\n                b.translate(q / 2, u / 2);\n                if (c.angleShowLineOut) {\n                    b.strokeStyle = c.angleLineColor;\n                    b.lineWidth = c.angleLineWidth;\n                    for (var d = 0; d &lt; a.datasets[0].data.length; d++) b.rotate(e), b.beginPath(), b.moveTo(0, 0), b.lineTo(0, -g), b.stroke()\n                }\n                for (d = 0; d &lt; j.steps; d++) {\n                    b.beginPath();\n                    if (c.scaleShowLine) {\n                        b.strokeStyle = c.scaleLineColor;\n                        b.lineWidth = c.scaleLineWidth;\n                        b.moveTo(0, -k * (d + 1));\n                        for (var f = 0; f &lt; a.datasets[0].data.length; f++) b.rotate(e), b.lineTo(0, -k * (d + 1));\n                        b.closePath();\n                        b.stroke()\n                    }\n                    c.scaleShowLabels &amp;&amp;\n                        (b.textAlign = \"center\", b.font = c.scaleFontStyle + \" \" + c.scaleFontSize + \"px \" + c.scaleFontFamily, b.textBaseline = \"middle\", c.scaleShowLabelBackdrop &amp;&amp; (f = b.measureText(j.labels[d]).width, b.fillStyle = c.scaleBackdropColor, b.beginPath(), b.rect(Math.round(-f / 2 - c.scaleBackdropPaddingX), Math.round(-k * (d + 1) - 0.5 * c.scaleFontSize - c.scaleBackdropPaddingY), Math.round(f + 2 * c.scaleBackdropPaddingX), Math.round(c.scaleFontSize + 2 * c.scaleBackdropPaddingY)), b.fill()), b.fillStyle = c.scaleFontColor, b.fillText(j.labels[d], 0, -k * (d +\n                            1)))\n                }\n                for (d = 0; d &lt; a.labels.length; d++) {\n                    b.font = c.pointLabelFontStyle + \" \" + c.pointLabelFontSize + \"px \" + c.pointLabelFontFamily;\n                    b.fillStyle = c.pointLabelFontColor;\n                    var f = Math.sin(e * d) * (g + c.pointLabelFontSize),\n                        h = Math.cos(e * d) * (g + c.pointLabelFontSize);\n                    b.textAlign = e * d == Math.PI || 0 == e * d ? \"center\" : e * d &gt; Math.PI ? \"right\" : \"left\";\n                    b.textBaseline = \"middle\";\n                    b.fillText(a.labels[d], f, -h)\n                }\n                b.restore()\n            }, function(d) {\n                var e = 2 * Math.PI / a.datasets[0].data.length;\n                b.save();\n                b.translate(q / 2, u / 2);\n                for (var g = 0; g &lt; a.datasets.length; g++) {\n                    b.beginPath();\n                    b.moveTo(0, d * -1 * v(a.datasets[g].data[0], j, k));\n                    for (var f = 1; f &lt; a.datasets[g].data.length; f++) b.rotate(e), b.lineTo(0, d * -1 * v(a.datasets[g].data[f], j, k));\n                    b.closePath();\n                    b.fillStyle = a.datasets[g].fillColor;\n                    b.strokeStyle = a.datasets[g].strokeColor;\n                    b.lineWidth = c.datasetStrokeWidth;\n                    b.fill();\n                    b.stroke();\n                    if (c.pointDot) {\n                        b.fillStyle = a.datasets[g].pointColor;\n                        b.strokeStyle = a.datasets[g].pointStrokeColor;\n                        b.lineWidth = c.pointDotStrokeWidth;\n                        for (f = 0; f &lt; a.datasets[g].data.length; f++) b.rotate(e), b.beginPath(), b.arc(0, d * -1 *\n                            v(a.datasets[g].data[f], j, k), c.pointDotRadius, 2 * Math.PI, !1), b.fill(), b.stroke()\n                    }\n                    b.rotate(e)\n                }\n                b.restore()\n            }, b)\n        },\n        I = function(a, c, b) {\n            for (var e = 0, h = Math.min.apply(Math, [u / 2, q / 2]) - 5, f = 0; f &lt; a.length; f++) e += a[f].value;\n            x(c, null, function(d) {\n                var g = -Math.PI / 2,\n                    f = 1,\n                    j = 1;\n                c.animation &amp;&amp; (c.animateScale &amp;&amp; (f = d), c.animateRotate &amp;&amp; (j = d));\n                for (d = 0; d &lt; a.length; d++) {\n                    var l = j * a[d].value / e * 2 * Math.PI;\n                    b.beginPath();\n                    b.arc(q / 2, u / 2, f * h, g, g + l);\n                    b.lineTo(q / 2, u / 2);\n                    b.closePath();\n                    b.fillStyle = a[d].color;\n                    b.fill();\n                    c.segmentShowStroke &amp;&amp; (b.lineWidth =\n                        c.segmentStrokeWidth, b.strokeStyle = c.segmentStrokeColor, b.stroke());\n                    g += l\n                }\n            }, b)\n        },\n        J = function(a, c, b) {\n            for (var e = 0, h = Math.min.apply(Math, [u / 2, q / 2]) - 5, f = h * (c.percentageInnerCutout / 100), d = 0; d &lt; a.length; d++) e += a[d].value;\n            x(c, null, function(d) {\n                var k = -Math.PI / 2,\n                    j = 1,\n                    l = 1;\n                c.animation &amp;&amp; (c.animateScale &amp;&amp; (j = d), c.animateRotate &amp;&amp; (l = d));\n                for (d = 0; d &lt; a.length; d++) {\n                    var m = l * a[d].value / e * 2 * Math.PI;\n                    b.beginPath();\n                    b.arc(q / 2, u / 2, j * h, k, k + m, !1);\n                    b.arc(q / 2, u / 2, j * f, k + m, k, !0);\n                    b.closePath();\n                    b.fillStyle = a[d].color;\n                    b.fill();\n                    c.segmentShowStroke &amp;&amp;\n                        (b.lineWidth = c.segmentStrokeWidth, b.strokeStyle = c.segmentStrokeColor, b.stroke());\n                    k += m\n                }\n            }, b)\n        },\n        K = function(a, c, b) {\n            var e, h, f, d, g, k, j, l, m, t, r, n, p, s = 0;\n            g = u;\n            b.font = c.scaleFontStyle + \" \" + c.scaleFontSize + \"px \" + c.scaleFontFamily;\n            t = 1;\n            for (d = 0; d &lt; a.labels.length; d++) e = b.measureText(a.labels[d]).width, t = e &gt; t ? e : t;\n            q / a.labels.length &lt; t ? (s = 45, q / a.labels.length &lt; Math.cos(s) * t ? (s = 90, g -= t) : g -= Math.sin(s) * t) : g -= c.scaleFontSize;\n            d = c.scaleFontSize;\n            g = g - 5 - d;\n            e = Number.MIN_VALUE;\n            h = Number.MAX_VALUE;\n            for (f = 0; f &lt; a.datasets.length; f++)\n                for (l =\n                    0; l &lt; a.datasets[f].data.length; l++) a.datasets[f].data[l] &gt; e &amp;&amp; (e = a.datasets[f].data[l]), a.datasets[f].data[l] &lt; h &amp;&amp; (h = a.datasets[f].data[l]);\n            f = Math.floor(g / (0.66 * d));\n            d = Math.floor(0.5 * (g / d));\n            l = c.scaleShowLabels ? c.scaleLabel : \"\";\n            c.scaleOverride ? (j = {\n                steps: c.scaleSteps,\n                stepValue: c.scaleStepWidth,\n                graphMin: c.scaleStartValue,\n                labels: []\n            }, z(l, j.labels, j.steps, c.scaleStartValue, c.scaleStepWidth)) : j = C(g, f, d, e, h, l);\n            k = Math.floor(g / j.steps);\n            d = 1;\n            if (c.scaleShowLabels) {\n                b.font = c.scaleFontStyle + \" \" + c.scaleFontSize + \"px \" + c.scaleFontFamily;\n                for (e = 0; e &lt; j.labels.length; e++) h = b.measureText(j.labels[e]).width, d = h &gt; d ? h : d;\n                d += 10\n            }\n            r = q - d - t;\n            m = Math.floor(r / (a.labels.length - 1));\n            n = q - t / 2 - r;\n            p = g + c.scaleFontSize / 2;\n            x(c, function() {\n                b.lineWidth = c.scaleLineWidth;\n                b.strokeStyle = c.scaleLineColor;\n                b.beginPath();\n                b.moveTo(q - t / 2 + 5, p);\n                b.lineTo(q - t / 2 - r - 5, p);\n                b.stroke();\n                0 &lt; s ? (b.save(), b.textAlign = \"right\") : b.textAlign = \"center\";\n                b.fillStyle = c.scaleFontColor;\n                for (var d = 0; d &lt; a.labels.length; d++) b.save(), 0 &lt; s ? (b.translate(n + d * m, p + c.scaleFontSize), b.rotate(-(s * (Math.PI / 180))), b.fillText(a.labels[d],\n                    0, 0), b.restore()) : b.fillText(a.labels[d], n + d * m, p + c.scaleFontSize + 3), b.beginPath(), b.moveTo(n + d * m, p + 3), c.scaleShowGridLines &amp;&amp; 0 &lt; d ? (b.lineWidth = c.scaleGridLineWidth, b.strokeStyle = c.scaleGridLineColor, b.lineTo(n + d * m, 5)) : b.lineTo(n + d * m, p + 3), b.stroke();\n                b.lineWidth = c.scaleLineWidth;\n                b.strokeStyle = c.scaleLineColor;\n                b.beginPath();\n                b.moveTo(n, p + 5);\n                b.lineTo(n, 5);\n                b.stroke();\n                b.textAlign = \"right\";\n                b.textBaseline = \"middle\";\n                for (d = 0; d &lt; j.steps; d++) b.beginPath(), b.moveTo(n - 3, p - (d + 1) * k), c.scaleShowGridLines ? (b.lineWidth = c.scaleGridLineWidth,\n                    b.strokeStyle = c.scaleGridLineColor, b.lineTo(n + r + 5, p - (d + 1) * k)) : b.lineTo(n - 0.5, p - (d + 1) * k), b.stroke(), c.scaleShowLabels &amp;&amp; b.fillText(j.labels[d], n - 8, p - (d + 1) * k)\n            }, function(d) {\n                function e(b, c) {\n                    return p - d * v(a.datasets[b].data[c], j, k)\n                }\n                for (var f = 0; f &lt; a.datasets.length; f++) {\n                    b.strokeStyle = a.datasets[f].strokeColor;\n                    b.lineWidth = c.datasetStrokeWidth;\n                    b.beginPath();\n                    b.moveTo(n, p - d * v(a.datasets[f].data[0], j, k));\n                    for (var g = 1; g &lt; a.datasets[f].data.length; g++) c.bezierCurve ? b.bezierCurveTo(n + m * (g - 0.5), e(f, g - 1), n + m * (g - 0.5),\n                        e(f, g), n + m * g, e(f, g)) : b.lineTo(n + m * g, e(f, g));\n                    b.stroke();\n                    c.datasetFill ? (b.lineTo(n + m * (a.datasets[f].data.length - 1), p), b.lineTo(n, p), b.closePath(), b.fillStyle = a.datasets[f].fillColor, b.fill()) : b.closePath();\n                    if (c.pointDot) {\n                        b.fillStyle = a.datasets[f].pointColor;\n                        b.strokeStyle = a.datasets[f].pointStrokeColor;\n                        b.lineWidth = c.pointDotStrokeWidth;\n                        for (g = 0; g &lt; a.datasets[f].data.length; g++) b.beginPath(), b.arc(n + m * g, p - d * v(a.datasets[f].data[g], j, k), c.pointDotRadius, 0, 2 * Math.PI, !0), b.fill(), b.stroke()\n                    }\n                }\n            }, b)\n        },\n        L = function(a,\n            c, b) {\n            var e, h, f, d, g, k, j, l, m, t, r, n, p, s, w = 0;\n            g = u;\n            b.font = c.scaleFontStyle + \" \" + c.scaleFontSize + \"px \" + c.scaleFontFamily;\n            t = 1;\n            for (d = 0; d &lt; a.labels.length; d++) e = b.measureText(a.labels[d]).width, t = e &gt; t ? e : t;\n            q / a.labels.length &lt; t ? (w = 45, q / a.labels.length &lt; Math.cos(w) * t ? (w = 90, g -= t) : g -= Math.sin(w) * t) : g -= c.scaleFontSize;\n            d = c.scaleFontSize;\n            g = g - 5 - d;\n            e = Number.MIN_VALUE;\n            h = Number.MAX_VALUE;\n            for (f = 0; f &lt; a.datasets.length; f++)\n                for (l = 0; l &lt; a.datasets[f].data.length; l++) a.datasets[f].data[l] &gt; e &amp;&amp; (e = a.datasets[f].data[l]), a.datasets[f].data[l] &lt;\n                    h &amp;&amp; (h = a.datasets[f].data[l]);\n            f = Math.floor(g / (0.66 * d));\n            d = Math.floor(0.5 * (g / d));\n            l = c.scaleShowLabels ? c.scaleLabel : \"\";\n            c.scaleOverride ? (j = {\n                steps: c.scaleSteps,\n                stepValue: c.scaleStepWidth,\n                graphMin: c.scaleStartValue,\n                labels: []\n            }, z(l, j.labels, j.steps, c.scaleStartValue, c.scaleStepWidth)) : j = C(g, f, d, e, h, l);\n            k = Math.floor(g / j.steps);\n            d = 1;\n            if (c.scaleShowLabels) {\n                b.font = c.scaleFontStyle + \" \" + c.scaleFontSize + \"px \" + c.scaleFontFamily;\n                for (e = 0; e &lt; j.labels.length; e++) h = b.measureText(j.labels[e]).width, d = h &gt; d ? h : d;\n                d += 10\n            }\n            r = q - d - t;\n            m =\n                Math.floor(r / a.labels.length);\n            s = (m - 2 * c.scaleGridLineWidth - 2 * c.barValueSpacing - (c.barDatasetSpacing * a.datasets.length - 1) - (c.barStrokeWidth / 2 * a.datasets.length - 1)) / a.datasets.length;\n            n = q - t / 2 - r;\n            p = g + c.scaleFontSize / 2;\n            x(c, function() {\n                b.lineWidth = c.scaleLineWidth;\n                b.strokeStyle = c.scaleLineColor;\n                b.beginPath();\n                b.moveTo(q - t / 2 + 5, p);\n                b.lineTo(q - t / 2 - r - 5, p);\n                b.stroke();\n                0 &lt; w ? (b.save(), b.textAlign = \"right\") : b.textAlign = \"center\";\n                b.fillStyle = c.scaleFontColor;\n                for (var d = 0; d &lt; a.labels.length; d++) b.save(), 0 &lt; w ? (b.translate(n +\n                    d * m, p + c.scaleFontSize), b.rotate(-(w * (Math.PI / 180))), b.fillText(a.labels[d], 0, 0), b.restore()) : b.fillText(a.labels[d], n + d * m + m / 2, p + c.scaleFontSize + 3), b.beginPath(), b.moveTo(n + (d + 1) * m, p + 3), b.lineWidth = c.scaleGridLineWidth, b.strokeStyle = c.scaleGridLineColor, b.lineTo(n + (d + 1) * m, 5), b.stroke();\n                b.lineWidth = c.scaleLineWidth;\n                b.strokeStyle = c.scaleLineColor;\n                b.beginPath();\n                b.moveTo(n, p + 5);\n                b.lineTo(n, 5);\n                b.stroke();\n                b.textAlign = \"right\";\n                b.textBaseline = \"middle\";\n                for (d = 0; d &lt; j.steps; d++) b.beginPath(), b.moveTo(n - 3, p - (d + 1) *\n                    k), c.scaleShowGridLines ? (b.lineWidth = c.scaleGridLineWidth, b.strokeStyle = c.scaleGridLineColor, b.lineTo(n + r + 5, p - (d + 1) * k)) : b.lineTo(n - 0.5, p - (d + 1) * k), b.stroke(), c.scaleShowLabels &amp;&amp; b.fillText(j.labels[d], n - 8, p - (d + 1) * k)\n            }, function(d) {\n                b.lineWidth = c.barStrokeWidth;\n                for (var e = 0; e &lt; a.datasets.length; e++) {\n                    b.fillStyle = a.datasets[e].fillColor;\n                    b.strokeStyle = a.datasets[e].strokeColor;\n                    for (var f = 0; f &lt; a.datasets[e].data.length; f++) {\n                        var g = n + c.barValueSpacing + m * f + s * e + c.barDatasetSpacing * e + c.barStrokeWidth * e;\n                        b.beginPath();\n                        b.moveTo(g, p);\n                        b.lineTo(g, p - d * v(a.datasets[e].data[f], j, k) + c.barStrokeWidth / 2);\n                        b.lineTo(g + s, p - d * v(a.datasets[e].data[f], j, k) + c.barStrokeWidth / 2);\n                        b.lineTo(g + s, p);\n                        c.barShowStroke &amp;&amp; b.stroke();\n                        b.closePath();\n                        b.fill()\n                    }\n                }\n            }, b)\n        },\n        D = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(a) {\n            window.setTimeout(a, 1E3 / 60)\n        },\n        F = {}\n};</code></pre></div>",
    "sec_22": "<div class=\"codeBlock hljs javascript\" id=\"sec_22\"><pre id=\"sec_22_code\" style=\"\"><code class=\"javascript\">// &lt;block:actions:2&gt;\nconst actions = [\n  {\n    name: 'Randomize',\n    handler(chart) {\n      chart.data.datasets.forEach(dataset =&gt; {\n        dataset.data = Utils.numbers({count: chart.data.labels.length, min: 0, max: 100});\n      });\n      chart.update();\n    }\n  },\n];\n// &lt;/block:actions&gt;\n\n// &lt;block:setup:1&gt;\nconst DATA_COUNT = 7;\nconst NUMBER_CFG = {count: DATA_COUNT, min: 0, max: 100};\n\nconst labels = [];\n\nfor (let i = 0; i &lt; DATA_COUNT; ++i) {\n  labels.push(Utils.newDate(i));\n}\n\nconst data = {\n  labels: labels,\n  datasets: [{\n   <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> type: 'bar',</div>\n    label: 'Dataset 1',\n    backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, 0.5),\n    borderColor: Utils.CHART_COLORS.red,\n    data: Utils.numbers(NUMBER_CFG),\n  }, {\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">type: 'bar',</div>\n    label: 'Dataset 2',\n    backgroundColor: Utils.transparentize(Utils.CHART_COLORS.blue, 0.5),\n    borderColor: Utils.CHART_COLORS.blue,\n    data: Utils.numbers(NUMBER_CFG),\n  }, {\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_2\" style=\"display: inline; background-color: rgb(246, 183, 60);\">type: 'line',</div>\n    label: 'Dataset 3',\n    backgroundColor: Utils.transparentize(Utils.CHART_COLORS.green, 0.5),\n    borderColor: Utils.CHART_COLORS.green,\n    fill: false,\n    data: Utils.numbers(NUMBER_CFG),\n  }]\n};\n// &lt;/block:setup&gt;\n\n// &lt;block:config:0&gt;\nconst config = {\n  <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: '<span class=\"fea_Line_Chart_keys udls\">line</span>',</div>\n  data: data,\n  options: {\n    plugins: {\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">title: {\n        <span class=\"fea_Text_keys udls\">text</span>: 'Chart Combo Time Scale',\n        display: true\n      }</div>\n    },\n    <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Axis_keys udls\">scale</span>s: {\n      x: {\n        type: 'time',\n        display: true,\n        offset: true,\n        time: {\n          unit: 'day'\n        }\n      },\n    }</div>,\n  },\n};\n// &lt;/block:config&gt;\n\nmodule.exports = {\n  actions: actions,\n  config: config,\n};\n//https://www.chartjs.org/docs/latest/samples/scales/time-combo.html</code></pre></div>",
    "sec_23": "<div class=\"codeBlock hljs javascript\" id=\"sec_23\"><pre id=\"sec_23_code\" style=\"\"><code class=\"javascript\">// &lt;block:actions:2&gt;\nconst actions = [\n  {\n    name: 'Randomize',\n    handler(chart) {\n      chart.data.datasets.forEach(dataset =&gt; {\n        <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Data_Transformation_keys udls\">data</span>set.<span class=\"fea_Data_Transformation_keys udls\">data</span> = Utils.numbers({count: chart.<span class=\"fea_Data_Transformation_keys udls\">data</span>.labels.length, min: 0, <span class=\"fea_Data_Transformation_keys udls\">max</span>: 100});</div>\n      });\n      chart.update();\n    }\n  },\n  {\n    name: 'Add Dataset',\n    handler(chart) {\n      const data = chart.data;\n      const dsColor = Utils.namedColor(chart.data.datasets.length);\n      const newDataset = {\n        label: 'Dataset ' + (data.datasets.length + 1),\n        backgroundColor: Utils.transparentize(dsColor, 0.5),\n        borderColor: dsColor,\n        borderWidth: 1,\n        stack: 'combined',\n        data: Utils.numbers({count: data.labels.length, min: 0, max: 100}),\n      };\n      chart.data.datasets.push(newDataset);\n      chart.update();\n    }\n  },\n  {\n    name: 'Add Data',\n    handler(chart) {\n      const data = chart.data;\n      if (data.datasets.length &gt; 0) {\n        data.labels = Utils.months({count: data.labels.length + 1});\n\n        for (var index = 0; index &lt; data.datasets.length; ++index) {\n          data.datasets[index].data.push(Utils.rand(0, 100));\n        }\n\n        chart.update();\n      }\n    }\n  },\n  {\n    name: 'Remove Dataset',\n    handler(chart) {\n      chart.data.datasets.pop();\n      chart.update();\n    }\n  },\n  {\n    name: 'Remove Data',\n    handler(chart) {\n      chart.data.labels.splice(-1, 1); // remove the label first\n\n      chart.data.datasets.forEach(dataset =&gt; {\n        dataset.data.pop();\n      });\n\n      chart.update();\n    }\n  }\n];\n// &lt;/block:actions&gt;\n\n// &lt;block:setup:1&gt;\nconst DATA_COUNT = 7;\nconst NUMBER_CFG = {count: DATA_COUNT, min: 0, max: 100};\n\nconst labels = Utils.months({count: 7});\nconst data = {\n  labels: labels,\n  datasets: [\n    {\n      label: 'Dataset 1',\n      data: Utils.numbers(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.red,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, 0.5),\n      stack: 'combined',\n      type: 'bar'\n    },\n    {\n      label: 'Dataset 2',\n      data: Utils.numbers(NUMBER_CFG),\n      borderColor: Utils.CHART_COLORS.blue,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.blue, 0.5),\n      stack: 'combined'\n    }\n  ]\n};\n// &lt;/block:setup&gt;\n\n// &lt;block:config:0&gt;\nconst config = {\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">type: 'line',</div>\n  data: data,\n  options: {\n    plugins: {\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">title: {\n        display: true,\n        <span class=\"fea_Text_keys udls\">text</span>: 'Chart Stacked Line/Bar Chart'\n      }\n    },</div>\n    <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Axis_keys udls\">scale</span>s: {\n      y: {\n        stacked: true\n      }\n    }</div>\n  },\n};\n// &lt;/block:config&gt;\n\nmodule.exports = {\n  actions: actions,\n  config: config,\n};\n//https://www.chartjs.org/docs/latest/samples/other-charts/stacked-<div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Bar_Chart_keys udls\">bar</span></div>-<div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">line</span></div>.html</code></pre></div>",
    "sec_24": "<div class=\"codeBlock hljs javascript\" id=\"sec_24\"><pre id=\"sec_24_code\" style=\"\"><code class=\"javascript\">// &lt;block:actions:2&gt;\nconst actions = [\n  {\n    name: 'Randomize',\n    handler(chart) {\n      chart.data.datasets.forEach((dataset, i) =&gt; {\n       <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> const <span class=\"fea_Data_Transformation_keys udls\">data</span> = Utils.numbers({count: chart.<span class=\"fea_Data_Transformation_keys udls\">data</span>.labels.length, min: 0, <span class=\"fea_Data_Transformation_keys udls\">max</span>: 100});</div>\n\n        if (i === 0) {\n          data[0] = null;\n        } else if (i === 1) {\n          data[Number.parseInt(data.length / 2, 10)] = null;\n        } else {\n          data[data.length - 1] = null;\n        }\n\n        dataset.data = data;\n      });\n      chart.update();\n    }\n  }\n];\n// &lt;/block:actions&gt;\n\n// &lt;block:setup:1&gt;\nconst DATA_COUNT = 7;\nconst NUMBER_CFG = {count: DATA_COUNT, min: 0, max: 100};\n\nconst labels = Utils.months({count: 7});\nconst dataFirstSkip = Utils.numbers(NUMBER_CFG);\nconst dataMiddleSkip = Utils.numbers(NUMBER_CFG);\nconst dataLastSkip = Utils.numbers(NUMBER_CFG);\n\ndataFirstSkip[0] = null;\ndataMiddleSkip[Number.parseInt(dataMiddleSkip.length / 2, 10)] = null;\ndataLastSkip[dataLastSkip.length - 1] = null;\n\nconst data = {\n  labels: labels,\n  datasets: [\n    {\n      label: 'Skip first dataset',\n      data: dataFirstSkip,\n      borderColor: Utils.CHART_COLORS.red,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.red, 0.5),\n    },\n    {\n      label: 'Skip mid dataset',\n      data: dataMiddleSkip,\n      borderColor: Utils.CHART_COLORS.blue,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.blue, 0.5),\n    },\n    {\n      label: 'Skip last dataset',\n      data: dataLastSkip,\n      borderColor: Utils.CHART_COLORS.green,\n      backgroundColor: Utils.transparentize(Utils.CHART_COLORS.green, 0.5),\n    }\n  ]\n};\n// &lt;/block:setup&gt;\n\n// &lt;block:config:0&gt;\nconst config = {\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">type: 'radar',</div>\n  data: data,\n  options: {\n    responsive: true,\n    plugins: {\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">title: {\n        display: true,\n        <span class=\"fea_Text_keys udls\">text</span>: 'Chart Radar Skip Points Chart'\n      }</div>\n    }\n  },\n};\n// &lt;/block:config&gt;\n\nmodule.exports = {\n  actions: actions,\n  config: config\n};\n//https://www.chartjs.org/docs/latest/samples/other-charts/<div class=\"highlights fea_Radar_Chart\" id=\"Radar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Radar_Chart_keys udls\">radar</span></div>-skip-points.html</code></pre></div>",
    "sec_28": "<div class=\"codeBlock hljs javascript\" id=\"sec_28\"><pre id=\"sec_28_code\" style=\"\"><code class=\"javascript\">// &lt;block:setup:1&gt;\nconst DATA_COUNT = 12;\nconst labels = [];\nfor (let i = 0; i &lt; DATA_COUNT; ++i) {\n  labels.push(i.toString());\n}\nconst datapoints = [0, 20, 20, 60, 60, 120, NaN, 180, 120, 125, 105, 110, 170];\nconst data = {\n  labels: labels,\n  datasets: [\n    {\n      label: 'Cubic interpolation (monotone)',\n      data: datapoints,\n      borderColor: Utils.CHART_COLORS.red,\n      fill: false,\n      cubicInterpolationMode: 'monotone',\n      tension: 0.4\n    }, {\n      label: 'Cubic interpolation',\n      data: datapoints,\n      borderColor: Utils.CHART_COLORS.blue,\n      fill: false,\n      tension: 0.4\n    }, {\n      label: 'Linear interpolation (default)',\n      data: datapoints,\n      borderColor: Utils.CHART_COLORS.green,\n      fill: false\n    }\n  ]\n};\n// &lt;/block:setup&gt;\n\n// &lt;block:config:0&gt;\nconst config = {\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">type: 'line',</div>\n  data: data,\n  options: {\n    responsive: true,\n    plugins: {\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">title: {\n        display: true,\n        <span class=\"fea_Text_keys udls\">text</span>: 'Chart Line Chart - Cubic interpolation mode'\n      },</div>\n    },\n    interaction: {\n      intersect: false,\n    },\n    <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Axis_keys udls\">scale</span>s: {\n      x: {\n        display: true,\n        title: {\n          display: true\n        }\n      },\n      y: {\n        display: true,\n        title: {\n          display: true,\n          text: 'Value'\n        },\n        suggestedMin: -10,\n        suggestedMax: 200\n      }\n    }</div>\n  },\n};\n// &lt;/block:config&gt;\n\nmodule.exports = {\n  actions: [],\n  config: config,\n};\n//https://www.chartjs.org/docs/latest/samples/<div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">line</span></div>/interpolation.html</code></pre></div>",
    "sec_29": "<div class=\"codeBlock hljs javascript\" id=\"sec_29\"><pre id=\"sec_29_code\" style=\"\"><code class=\"javascript\">// &lt;block:actions:2&gt;\nconst actions = [\n  {\n    name: 'Randomize',\n    handler(chart) {\n      chart.data.datasets.forEach(dataset =&gt; {\n        dataset.data = Utils.numbers({count: chart.data.labels.length, min: -100, max: 100});\n      });\n      chart.update();\n    }\n  },\n];\n// &lt;/block:actions&gt;\n\n// &lt;block:setup:1&gt;\nconst DATA_COUNT = 7;\nconst NUMBER_CFG = {count: DATA_COUNT, min: -100, max: 100};\n\nconst labels = Utils.months({count: 7});\nconst data = {\n  labels: labels,\n  datasets: [\n    {\n      label: 'Dataset 1',\n      data: Utils.numbers(NUMBER_CFG),\n      backgroundColor: Utils.CHART_COLORS.red,\n      stack: 'Stack 0',\n    },\n    {\n      label: 'Dataset 2',\n      data: Utils.numbers(NUMBER_CFG),\n      backgroundColor: Utils.CHART_COLORS.blue,\n      stack: 'Stack 0',\n    },\n    {\n      label: 'Dataset 3',\n      data: Utils.numbers(NUMBER_CFG),\n      backgroundColor: Utils.CHART_COLORS.green,\n      stack: 'Stack 1',\n    },\n  ]\n};\n// &lt;/block:setup&gt;\n\n// &lt;block:config:0&gt;\nconst config = {\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">type: 'bar',</div>\n  data: data,\n  options: {\n    plugins: {\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">title: {\n        display: true,\n        <span class=\"fea_Text_keys udls\">text</span>: 'Chart Bar Chart - Stacked'\n      },</div>\n    },\n    responsive: true,\n    interaction: {\n      intersect: false,\n    },\n    <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Axis_keys udls\">scale</span>s: {\n      x: {\n        stacked: true,\n      },\n      y: {\n        stacked: true\n      }\n    }</div>\n  }\n};\n// &lt;/block:config&gt;\n\nmodule.exports = {\n  actions: actions,\n  config: config,\n};\n//https://www.chartjs.org/docs/latest/samples/<div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Bar_Chart_keys udls\">bar</span></div>/stacked-groups.html</code></pre></div>",
    "sec_3": "<div class=\"codeBlock hljs javascript\" id=\"sec_3\"><pre id=\"sec_3_code\" style=\"\"><code class=\"javascript\">Vue.component(\"<div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">doughnut</div>\", {\n  props: [\"data\", \"labels\"],\n  data: function() {\n    ctx: null;\n  },\n  template: `\n    &lt;canvas&gt;&lt;/canvas&gt;\n  `,\n  mounted: function() {\n    let self = this;\n    this.ctx = this.$el.getContext(\"2d\");\n\n   <div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_0\" style=\"background-color: #f6b73c;  display: inline;\"> new <span class=\"fea_Multiple_Charts_keys udls\">Chart</span>(this.ctx, {\n      type: \"doughnut\",\n      options: {\n        cutoutPercentage: 80\n      },</div>\n      data: {\n        labels: self.labels,\n        datasets: [{\n          data: self.data,\n          backgroundColor: [\"#1BC98E\", \"#1CA8DD\"],\n          hoverBackgroundColor: [\"#1BC98E\", \"#1CA8DD\"]\n        }]\n      }\n    });\n  }\n});\n\nVue.component(\"sparkline\", {\n  props: [\"title\", \"value\"],\n  data: function() {\n    ctx: null;\n  },\n  template: `\n    &lt;div class=\"br2\"&gt;\n      &lt;div class=\"pa3 flex-auto bb b--white-10\"&gt;\n        &lt;h3 class=\"mt0 mb1 f6 ttu white o-70\"&gt;{{ title }}&lt;/h3&gt;\n        &lt;h2 class=\"mv0 f2 fw5 white\"&gt;{{ value }}&lt;/h2&gt;\n      &lt;/div&gt;\n      &lt;div class=\"pt2\"&gt;\n        &lt;canvas&gt;&lt;/canvas&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  `,\n  mounted: function() {\n    this.ctx = this.$el.querySelector(\"canvas\").getContext(\"2d\");\n    let sparklineGradient = this.ctx.createLinearGradient(0, 0, 0, 135);\n    sparklineGradient.addColorStop(0, \"rgba(255,255,255,0.35)\");\n    sparklineGradient.addColorStop(1, \"rgba(255,255,255,0)\");\n\n    let data = {\n      labels: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"],\n      datasets: [{\n        <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">backgroundColor: sparklineGradient,\n        borderColor: \"#FFFFFF\",\n        <span class=\"fea_Shapes_keys udls\">data</span>: [2, 4, 6, 4, 8, 10]</div>\n      }]\n    };\n\n    <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">Chart.<span class=\"fea_Line_Chart_keys udls\">Line</span></div>(this.ctx, {\n      data: data,\n      options: {\n        elements: {\n          point: {\n            radius: 0\n          }\n        },\n        <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Axis_keys udls\">scale</span>s: {\n          xAxes: [{\n            display: false\n          }],\n          yAxes: [{\n            display: false\n          }]\n        }</div>\n      }\n    });\n  }\n});\n\nVue.component(\"metric-list-item\", {\n  props: [\"name\", \"value\", \"showBar\"],\n  computed: {\n    barWidth: function() {\n      return `${this.value}%`;\n    }\n  },\n  template: `\n    &lt;a href=\"#\" class=\"link dark-gray flex justify-between relative pa3 bb b--black-10 hover-bg-near-white\"&gt;\n      &lt;span v-if=\"showBar\" class=\"absolute top-0 left-0 right-0 bottom-0 h-100 bg-near-white\" v-bind:style=\"{ width: barWidth, zIndex: -1 }\"&gt;&lt;/span&gt;\n      &lt;span&gt;{{ name }}&lt;/span&gt;\n      &lt;span&gt;{{ value }}&lt;/span&gt;\n    &lt;/a&gt;\n  `\n});\n\nnew Vue({\n  el: \"#dashboard\",\n  data: {\n    newVsReturning: {\n      data: [130, 230],\n      labels: [\"New\", \"Returning\"]\n    },\n    newVsRecurring: {\n      data: [30, 330],\n      labels: [\"New\", \"Recurring\"]\n    },\n    directVsReferrals: {\n      data: [260, 160],\n      labels: [\"Direct\", \"Referrals\"]\n    },\n    countryData: [{\n        name: \"United States\",\n        value: \"62.4\",\n        showBar: true\n      },\n      {\n        name: \"India\",\n        value: \"15\",\n        showBar: true\n      },\n      {\n        name: \"United Kingdom\",\n        value: \"5\",\n        showBar: true\n      },\n      {\n        name: \"Canada\",\n        value: \"5\",\n        showBar: true\n      },\n      {\n        name: \"Russia\",\n        value: \"4.5\",\n        showBar: true\n      },\n      {\n        name: \"Mexico\",\n        value: \"2.3\",\n        showBar: true\n      },\n      {\n        name: \"Spain\",\n        value: \"1.7\",\n        showBar: true\n      }\n    ],\n    pageData: [{\n        name: \"/ (Logged out)\",\n        value: \"3,929,481\",\n        showBar: false\n      },\n\n      {\n        name: \"/ (Logged in)\",\n        value: \"1,143,393\",\n        showBar: false\n      },\n\n      {\n        name: \"/tour\",\n        value: \"938,287\",\n        showBar: false\n      },\n\n      {\n        name: \"/features/something\",\n        value: \"749,393\",\n        showBar: false\n      },\n\n      {\n        name: \"/features/another-thing\",\n        value: \"695,912\",\n        showBar: false\n      },\n\n      {\n        name: \"/users/username\",\n        value: \"501,938\",\n        showBar: false\n      },\n\n      {\n        name: \"/page-title\",\n        value: \"392,842\",\n        showBar: false\n      }\n    ],\n    deviceData: [{\n        name: \"Desktop (1920x1080)\",\n        value: \"3,929,481\",\n        showBar: false\n      },\n\n      {\n        name: \"Desktop (1366x768)\",\n        value: \"1,143,393\",\n        showBar: false\n      },\n\n      {\n        name: \"Desktop (1440x900)\",\n        value: \"938,287\",\n        showBar: false\n      },\n\n      {\n        name: \"Desktop (1280x800)\",\n        value: \"749,393\",\n        showBar: false\n      },\n\n      {\n        name: \"Tablet (1024x768)\",\n        value: \"695,912\",\n        showBar: false\n      },\n\n      {\n        name: \"Tablet (768x1024)\",\n        value: \"501,938\",\n        showBar: false\n      },\n\n      {\n        name: \"Phone (320x480)\",\n        value: \"392,842\",\n        showBar: false\n      },\n\n      {\n        name: \"Phone (720x450)\",\n        value: \"298,183\",\n        showBar: false\n      },\n\n      {\n        name: \"Desktop (2560x1080)\",\n        value: \"193,129\",\n        showBar: false\n      },\n\n      {\n        name: \"Desktop (2560x1600)\",\n        value: \"93,382\",\n        showBar: false\n      }\n    ]\n  },\n  created: function() {\n    Chart.defaults.global.legend.display = false;\n  }\n});</code></pre></div>",
    "sec_6": "<div class=\"codeBlock hljs javascript\" id=\"sec_6\"><pre id=\"sec_6_code\" style=\"\"><code class=\"javascript\">// https://dribbble.com/shots/1821178-Sales-Report?list=buckets&amp;offset=0\n\n// <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span> Chart</div>\nvar salesData = {\n  labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\n  datasets: [\n    {\n      label: \"Front\",\n      fillColor: \"rgba(195, 40, 96, 0.1)\",\n      strokeColor: \"rgba(195, 40, 96, 1)\",\n      pointColor: \"rgba(195, 40, 96, 1)\",\n      pointStrokeColor: \"#202b33\",\n      pointHighlightStroke: \"rgba(225,225,225,0.9)\",\n      data: [3400, 3000, 2500, 4500, 2500, 3400, 3000]\n    },\n    {\n      label: \"Middle\",\n      fillColor: \"rgba(255, 172, 100, 0.1)\",\n      strokeColor: \"rgba(255, 172, 100, 1)\",\n      pointColor: \"rgba(255, 172, 100, 1)\",\n      pointStrokeColor: \"#202b33\",\n      pointHighlightStroke: \"rgba(225,225,225,0.9)\",\n      data: [1900, 1700, 2100, 3600, 2200, 2500, 2000]\n    },\n    {\n      label: \"Back\",\n      fillColor: \"rgba(19, 71, 34, 0.3)\",\n      strokeColor: \"rgba(88, 188, 116, 1)\",\n      pointColor: \"rgba(88, 188, 116, 1)\",\n      pointStrokeColor: \"#202b33\",\n      pointHighlightStroke: \"rgba(225,225,225,0.9)\",\n      data: [1000, 1400, 1100, 2600, 2000, 900, 1400]\n    }\n  ]\n};\nvar ctx = document.getElementById(\"salesData\").getContext(\"2d\");\nwindow.myLineChart = new Chart(ctx).Line(salesData, {\n <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> pointDotRadius : 6,\n  pointDotStrokeWidth : 2,</div>\n  datasetStrokeWidth : 3,\n  <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Axis_keys udls\">scale</span>ShowVerticalLines: false,\n  <span class=\"fea_Axis_keys udls\">scale</span>GridLineWidth : 2,\n  <span class=\"fea_Axis_keys udls\">scale</span>ShowGridLines : true,\n  <span class=\"fea_Axis_keys udls\">scale</span>GridLineColor : \"rgba(225, 255, 255, 0.02)\",\n  <span class=\"fea_Axis_keys udls\">scale</span>Override: true,\n  <span class=\"fea_Axis_keys udls\">scale</span>Steps: 9,\n  <span class=\"fea_Axis_keys udls\">scale</span>StepWidth: 500,\n  <span class=\"fea_Axis_keys udls\">scale</span>StartValue: 0,</div>\n\n  responsive: true\n\n});\n\n//Credit Sales\nvar creditSales = new ProgressBar.Circle('#creditSales', {\n  color: '#e81760',\n  strokeWidth: 3,\n  trailWidth: 3,\n  <div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">dur<span class=\"fea_Animations_keys udls\">ation</span>: 1500,</div>\n  text: {\n    value: '0%'\n  },\n  step: function(state, bar) {\n    bar.setText((bar.value() * 100).toFixed(0) + \"%\");\n  }\n});\nvar channelSales = new ProgressBar.Circle('#channelSales', {\n  color: '#e88e3c',\n  strokeWidth: 3,\n  trailWidth: 3,\n  <div class=\"highlights fea_Animations\" id=\"Animations_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">dur<span class=\"fea_Animations_keys udls\">ation</span>: 1500,</div>\n  text: {\n    value: '0%'\n  },\n  step: function(state, bar) {\n    bar.setText((bar.value() * 100).toFixed(0) + \"%\");\n  }\n});\nvar directSales = new ProgressBar.Circle('#directSales', {\n  color: '#2bab51',\n  strokeWidth: 3,\n  trailWidth: 3,\n  duration: 1500,\n  text: {\n    value: '0%'\n  },\n  step: function(state, bar) {\n    bar.setText((bar.value() * 100).toFixed(0) + \"%\");\n  }\n});\ncreditSales.animate(0.8);\nchannelSales.animate(0.64);\ndirectSales.animate(0.34);</code></pre></div>",
    "sec_13": "<div class=\"codeBlock hljs javascript\" id=\"sec_13\"><pre id=\"sec_13_code\" style=\"display: block;\"><code class=\"javascript\">var canvas = document.getElementById(\"canvas\");\n\n// Apply multiply blend when drawing datasets\nvar multiply = {\n  beforeDatasetsDraw: function(chart, options, el) {\n    chart.ctx.globalCompositeOperation = 'multiply';\n  },\n  afterDatasetsDraw: function(chart, options) {\n    chart.ctx.globalCompositeOperation = 'source-over';\n  },\n};\n\n// Gradient color - this week\nvar gradientThisWeek = canvas.getContext('2d').createLinearGradient(0, 0, 0, 150);\ngradientThisWeek.addColorStop(0, '#5555FF');\ngradientThisWeek.addColorStop(1, '#9787FF');\n\n// Gradient color - previous week\nvar gradientPrevWeek = canvas.getContext('2d').createLinearGradient(0, 0, 0, 150);\ngradientPrevWeek.addColorStop(0, '#FF55B8');\ngradientPrevWeek.addColorStop(1, '#FF8787');\n\n\nvar config = {\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">type: 'line',</div>\n    data: {\n        labels: [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\", \"SUN\"],\n        datasets: [\n          {\n              label: 'This week',\n              data: [24, 18, 16, 18, 24, 36, 28],\n              backgroundColor: gradientThisWeek,\n              borderColor: 'transparent',\n              pointBackgroundColor: '#FFFFFF',\n              pointBorderColor: '#FFFFFF',\n              <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">line</span>Tension: 0.40,</div>\n          },\n          {\n              label: 'Previous week',\n              data: [20, 22, 30, 22, 18, 22, 30],\n              backgroundColor: gradientPrevWeek,\n              borderColor: 'transparent',\n              pointBackgroundColor: '#FFFFFF',\n              pointBorderColor: '#FFFFFF',\n              lineTension: 0.40,\n          }\n        ]\n    },\n    options: {\n    \t\telements: { \n        \tpoint: {\n          \tradius: 0,\n          \t<div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">hitRadius: 5, \n            h<span class=\"fea_Mouse_Events_keys udls\">ove</span>rRadius: 5</div> \n          } \n        },\n    \t\tlegend: {\n        \t\tdisplay: false,\n        },\n        <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Axis_keys udls\">scale</span>s: {\n            xAxes: [{\n            \t\tdisplay: false,\n            }],\n            yAxes: [{\n            \t\tdisplay: false,\n                ticks: {\n                \tbeginAtZero: true,\n              \t},\n            }]\n        }</div>\n    },\n    plugins: [multiply],\n};\n\nwindow.chart = new Chart(canvas, config);</code></pre></div>",
    "sec_20": "<div class=\"codeBlock hljs javascript\" id=\"sec_20\"><pre id=\"sec_20_code\" style=\"\"><code class=\"javascript\">// &lt;block:actions:2&gt;\nconst actions = [\n  {\n    name: 'Randomize',\n    handler(chart) {\n      chart.data.datasets.forEach(dataset =&gt; {\n        <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Data_Transformation_keys udls\">data</span>set.<span class=\"fea_Data_Transformation_keys udls\">data</span> = Utils.numbers({count: chart.<span class=\"fea_Data_Transformation_keys udls\">data</span>.labels.length, min: -100, <span class=\"fea_Data_Transformation_keys udls\">max</span>: 100});</div>\n      });\n      chart.update();\n    }\n  },\n];\n// &lt;/block:actions&gt;\n\n// &lt;block:setup:1&gt;\nconst DATA_COUNT = 7;\nconst NUMBER_CFG = {count: DATA_COUNT, min: -100, max: 100};\n\nconst labels = Utils.months({count: 7});\nconst data = {\n  labels: labels,\n  datasets: [\n    {\n      label: 'Dataset 1',\n      data: Utils.numbers(NUMBER_CFG),\n      backgroundColor: Utils.CHART_COLORS.red,\n    },\n    {\n      label: 'Dataset 2',\n      data: Utils.numbers(NUMBER_CFG),\n      backgroundColor: Utils.CHART_COLORS.blue,\n    },\n    {\n      label: 'Dataset 3',\n      data: Utils.numbers(NUMBER_CFG),\n      backgroundColor: Utils.CHART_COLORS.green,\n    },\n  ]\n};\n// &lt;/block:setup&gt;\n\n// &lt;block:config:0&gt;\nvar delayed;\n<div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">const config = {</div>\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">type: 'bar'</div>,\n  data: data,\n  options: {\n    <div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">anim<span class=\"fea_Animations_keys udls\">ation</span>: {\n      onComplete: () =&gt; {\n        delayed = true;\n      },\n      delay: (context) =&gt; {\n        let delay = 0;\n        if (context.type === 'data' &amp;&amp; context.mode === 'default' &amp;&amp; !delayed) {\n          delay = context.dataIndex * 300 + context.datasetIndex * 100;\n        }\n        return delay;\n      },\n    },</div>\n    <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Axis_keys udls\">scale</span>s: {\n      x: {\n        stacked: true,\n      },\n      y: {\n        stacked: true\n      }\n    }</div>\n  }\n};\n// &lt;/block:config&gt;\n\nmodule.exports = {\n  actions: actions,\n  config: config,\n};\n//https://www.chartjs.org/docs/latest/samples/animations/delay.html</code></pre></div>",
    "sec_1": "<div class=\"codeBlock hljs javascript\" id=\"sec_1\"><pre id=\"sec_1_code\" style=\"\"><code class=\"javascript\">// Line Chart\n<div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">var <span class=\"fea_Line_Chart_keys udls\">line</span>ChartData = {</div>\n  labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  datasets: [{\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">label: \"Growth\",\n    fillColor: \"#66C8D8\",\n    strokeColor: \"rgba(0,0,0,0)\",\n    pointColor: \"rgba(255, 255, 255, 0)\",\n    pointStrokeColor: \"rgba(255, 255, 255, 0)\",\n    <span class=\"fea_Shapes_keys udls\">data</span>: [300, 200, 250, 100, 120, 50, 170, 150, 150, 220, 200, 300]</div>\n  }, {\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">label: \"Loss\",\n    fillColor: \"#EE5286\",\n    pointColor: \"rgba(255, 255, 255, 0)\",\n    pointStrokeColor: \"rgba(255, 255, 255, 0)\",\n    <span class=\"fea_Shapes_keys udls\">data</span>: [100, 150, 100, 70, 10, 20, 90, 90, 120, 120, 150, 150]</div>\n  }]\n};\n\nwindow.onload = function() {\n  var ctx1 = document.getElementById(\"canvas\").getContext(\"2d\");\n  window.myLine = new Chart(ctx1).Line(lineChartData, {\n\n    responsive: true\n  });\n};\n\nChart.defaults.global = {\n\n  <div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">anim<span class=\"fea_Animations_keys udls\">ation</span>: true,\n\n  anim<span class=\"fea_Animations_keys udls\">ation</span>Steps: 50,\n\n  anim<span class=\"fea_Animations_keys udls\">ation</span>Easing: \"easeOutBounce\",</div>\n\n  scaleLabel: \"&lt;%=value%&gt;\",\n\n  bezierCurve: true,\n\n  bezierCurveTension: 1,\n\n  scaleIntegersOnly: true,\n\n  scaleBeginAtZero: false,\n\n  maintainAspectRatio: true,\n\n  onAnimationProgress: function() {},\n\n  onAnimationComplete: function() {}\n}</code></pre></div>",
    "sec_4": "<div class=\"codeBlock hljs javascript\" id=\"sec_4\"><pre id=\"sec_4_code\" style=\"\"><code class=\"javascript\">var ctx = document.getElementById('myChart').getContext('2d');\n<div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">var myChart = new Chart(ctx, {</div>\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">type: 'line',</div>\n  data: {\n    labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\n    datasets: [{\n      label: 'apples',\n      data: [12, 19, 3, 17, 6, 3, 7],\n      backgroundColor: \"rgba(153,255,51,0.6)\"\n    }, {\n      label: 'oranges',\n      data: [2, 29, 5, 5, 2, 3, 10],\n      backgroundColor: \"rgba(255,153,0,0.6)\"\n    }]\n  }\n});</code></pre></div>",
    "sec_10": "<div class=\"codeBlock hljs javascript\" id=\"sec_10\"><pre id=\"sec_10_code\" style=\"\"><code class=\"javascript\">// <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">line</span> chart</div> data\nvar buyerData = {\n    labels : [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\"],\n    datasets : [\n    {\n       <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> fillColor : \"rgba(172,194,132,0.4)\",\n        strokeColor : \"#ACC26D\",\n        pointColor : \"#fff\",\n        pointStrokeColor : \"#9DB86D\",\n        <span class=\"fea_Shapes_keys udls\">data</span> : [203,156,99,251,305,247]</div>\n    }\n]\n}\n// get line chart canvas\nvar buyers = document.getElementById('buyers').getContext('2d');\n// draw line chart\nnew Chart(buyers).Line(buyerData);\n// pie chart data\nvar pieData = [\n    {\n        value: 20,\n        color:\"#878BB6\"\n    },\n    {\n        value : 40,\n        color : \"#4ACAB4\"\n    },\n    {\n        value : 10,\n        color : \"#FF8153\"\n    },\n    {\n        value : 30,\n        color : \"#FFEA88\"\n    }\n];\n// <div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Pie_Chart_keys udls\">pie</span> chart</div> options\nvar pieOptions = {\n     segmentShowStroke : false,\n    <div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> animateScale : true</div>\n}\n// get pie chart canvas\nvar countries= document.getElementById(\"countries\").getContext(\"2d\");\n// draw pie chart\nnew Chart(countries).Pie(pieData, pieOptions);\n// bar chart data\nvar barData = {\n    labels : [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\"],\n    datasets : [\n        {\n            fillColor : \"#48A497\",\n            strokeColor : \"#48A4D1\",\n            data : [456,479,324,569,702,600]\n        },\n        {\n            fillColor : \"rgba(73,188,170,0.4)\",\n            strokeColor : \"rgba(72,174,209,0.4)\",\n            data : [364,504,605,400,345,320]\n        }\n    ]\n}\n// get <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Bar_Chart_keys udls\">bar</span> chart</div> canvas\nvar income = document.getElementById(\"income\").getContext(\"2d\");\n// draw bar chart\n<div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_0\" style=\"background-color: #f6b73c;  display: inline;\">new <span class=\"fea_Multiple_Charts_keys udls\">Chart</span>(income).Bar(barData);</div></code></pre></div>",
    "thr_14": "<div class=\"codeBlock hljs javascript\" id=\"thr_14\"><pre id=\"thr_14_code\" style=\"\"><code class=\"javascript\">import React, { Component } from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport {\n  AreaChart,\n  Area,\n  <div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"background-color: #f6b73c;  display: inline;\">X<span class=\"fea_Axis_keys udls\">Axis</span>,\n  Y<span class=\"fea_Axis_keys udls\">Axis</span>,</div>\n  <div class=\"highlights fea_Tooltip\" id=\"Tooltip_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Tooltip_keys udls\">Tooltip</span></div>,\n  ResponsiveContainer,\n  <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Legend_keys udls\">Legend</span></div>,\n  BarChart,\n  Bar\n} from \"recharts\";\nimport moment from \"moment\";\nimport numeral from \"numeral\";\nimport cubejs from \"@cubejs-client/core\";\nimport Chart from \"./Chart\";\n\nconst cubejsApi = cubejs(process.env.REACT_APP_CUBEJS_TOKEN, {\n  apiUrl: process.env.REACT_APP_API_URL\n});\nconst numberFormatter = (item) =&gt; numeral(item).format(\"0,0\");\nconst dateFormatter = (item) =&gt; moment(item).format(\"MMM YY\");\n\nconst renderSingleValue = (resultSet, key) =&gt; (\n  &lt;h1 height={300}&gt;{numberFormatter(resultSet.chartPivot()[0][key])}&lt;/h1&gt;\n);\n\nclass App extends Component {\n  render() {\n    return (\n      &lt;Container fluid&gt;\n        &lt;Row&gt;\n          <div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;Col sm=\"4\"&gt;</div>\n            &lt;Chart\n              cubejsApi={cubejsApi}\n              <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">title=\"Total Users\"</div>\n              query={{ measures: [\"Users.count\"] }}\n              render={(resultSet) =&gt;\n                renderSingleValue(resultSet, \"Users.count\")\n              }\n            /&gt;\n          &lt;/Col&gt;\n          <div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_2\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;Col sm=\"4\"&gt;</div>\n            &lt;Chart\n              cubejsApi={cubejsApi}\n              title=\"Total Orders\"\n              query={{ measures: [\"Orders.count\"] }}\n              render={(resultSet) =&gt;\n                renderSingleValue(resultSet, \"Orders.count\")\n              }\n            /&gt;\n          &lt;/Col&gt;\n         <div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> &lt;Col sm=\"4\"&gt;</div>\n            &lt;Chart\n              cubejsApi={cubejsApi}\n              title=\"Shipped Orders\"\n              query={{\n                measures: [\"Orders.count\"],\n                filters: [\n                  {\n                    dimension: \"Orders.status\",\n                    operator: \"equals\",\n                    values: [\"shipped\"]\n                  }\n                ]\n              }}\n              render={(resultSet) =&gt;\n                renderSingleValue(resultSet, \"Orders.count\")\n              }\n            /&gt;\n          &lt;/Col&gt;\n        &lt;/Row&gt;\n        &lt;br /&gt;\n        &lt;br /&gt;\n        &lt;Row&gt;\n          <div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_3\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;Col sm=\"6\"&gt;</div>\n            &lt;Chart\n              cubejsApi={cubejsApi}\n              title=\"New Users Over Time\"\n              query={{\n                measures: [\"Users.count\"],\n                timeDimensions: [\n                  {\n                    dimension: \"Users.createdAt\",\n                    dateRange: [\"2019-01-01\", \"2020-12-31\"],\n                    granularity: \"month\"\n                  }\n                ]\n              }}\n              render={(resultSet) =&gt; (\n                &lt;ResponsiveContainer width=\"100%\" height={300}&gt;\n                  &lt;<div class=\"highlights fea_Area_Chart\" id=\"Area_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Area_Chart_keys udls\">Area</span>Chart</div> data={resultSet.chartPivot()}&gt;\n                   <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> <x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"category\" tickFormatter={dateFormatter} /&gt;\n                    <y class=\"fea_Axis_keys udls\">Axis</y> tickFormatter={numberFormatter} /&gt;</div>\n                    <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> labelFormatter={dateFormatter} /&gt;</div>\n                    <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><area class=\"fea_Shapes_keys udls\" type=\"monotone\"/><span class=\"fea_Shapes_keys udls\">data</span>Key=\"Users.count\"\n                      name=\"Users\"\n                      stroke=\"rgb(106, 110, 229)\"\n                      fill=\"rgba(106, 110, 229, .16)\"\n                    /&gt;</div>\n                  &lt;/AreaChart&gt;\n                &lt;/ResponsiveContainer&gt;\n              )}\n            /&gt;\n          &lt;/Col&gt;\n          &lt;Col sm=\"6\"&gt;\n            &lt;<div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_4\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Multiple_Charts_keys udls\">Chart</span></div>\n              cubejsApi={cubejsApi}\n              title=\"Orders by Status Over time\"\n              query={{\n                measures: [\"Orders.count\"],\n                dimensions: [\"Orders.status\"],\n                timeDimensions: [\n                  {\n                    dimension: \"Orders.createdAt\",\n                    dateRange: [\"2019-01-01\", \"2020-12-31\"],\n                    granularity: \"month\"\n                  }\n                ]\n              }}\n              render={(resultSet) =&gt; {\n                return (\n                  &lt;ResponsiveContainer width=\"100%\" height={300}&gt;\n                    &lt;<div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Bar_Chart_keys udls\">Bar</span>Chart</div> data={resultSet.chartPivot()}&gt;\n                      &lt;XAxis tickFormatter={dateFormatter} dataKey=\"x\" /&gt;\n                      &lt;YAxis tickFormatter={numberFormatter} /&gt;\n                      &lt;Bar\n                        stackId=\"a\"\n                        dataKey=\"shipped, Orders.count\"\n                        name=\"Shipped\"\n                        fill=\"#7DB3FF\"\n                      /&gt;\n                      &lt;Bar\n                        stackId=\"a\"\n                        dataKey=\"processing, Orders.count\"\n                        name=\"Processing\"\n                        fill=\"#49457B\"\n                      /&gt;\n                      &lt;Bar\n                        stackId=\"a\"\n                        dataKey=\"completed, Orders.count\"\n                        name=\"Completed\"\n                        fill=\"#FF7C78\"\n                      /&gt;\n                      &lt;Legend /&gt;\n                      &lt;Tooltip /&gt;\n                    &lt;/BarChart&gt;\n                  &lt;/ResponsiveContainer&gt;\n                );\n              }}\n            /&gt;\n          &lt;/Col&gt;\n        &lt;/Row&gt;\n      &lt;/Container&gt;\n    );\n  }\n}\n\nexport default App;\n</code></pre></div>",
    "thr_2": "<div class=\"codeBlock hljs javascript\" id=\"thr_2\"><pre id=\"thr_2_code\" style=\"\"><code class=\"javascript\">import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Bar_Chart_keys udls\">Bar</span>Chart</div>, Bar, <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>, Line, XAxis, YAxis, CartesianGrid, <div class=\"highlights fea_Tooltip\" id=\"Tooltip_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Tooltip_keys udls\">Tooltip</span></div>, <div class=\"highlights fea_Legend\" id=\"Legend_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Legend_keys udls\">Legend</span></div>, ResponsiveContainer, <div class=\"highlights fea_Zoom\" id=\"Zoom_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Zoom_keys udls\">Brush</span></div> \n} from '<div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_0\" style=\"background-color: #f6b73c;  display: inline;\">re<span class=\"fea_Multiple_Charts_keys udls\">chart</span>s</div>';\n\nconst data = [\n  {\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2600, red: 5630\n  },\n  {\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210, red: 3500,\n  },\n  {\n    name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n  },\n  {\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n  },\n  {\n    name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n  },\n  {\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n  },\n  {\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n  },\n];\n\nconst color = [\"#8884d8\", \"#82ca9d\", \"orange\", \"pink\"]\n\nclass App extends React.Component {\n\n  state = {\n    type: \"Line\"\n  }\n\n  handleChange = (e) =&gt; {\n    this.setState({type: e.target.value})\n  }\n\n  fetchChart = () =&gt; {\n    const {type} = this.state\n    switch(type){\n      <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">case \"Line\": return <my class=\"fea_Shapes_keys udls\">Line</my>Chart key={type}/&gt;\n      case \"Bar\": return <mybarchart key=\"{type}/\">\n      case \"Stacked\": return <mybarchart key=\"{type}/\" stacked=\"\"></mybarchart></mybarchart></div>\n      default: return &lt;MyLineChart /&gt;\n    }\n  }\n  render(){\n    return (\n      &lt;div&gt;\n        &lt;select onChange={this.handleChange}&gt;\n          &lt;option&gt;Line&lt;/option&gt;\n          &lt;option&gt;Bar&lt;/option&gt;\n          &lt;option&gt;Stacked&lt;/option&gt;\n        &lt;/select&gt;\n      {this.fetchChart()}\n      &lt;/div&gt;\n    )\n  }\n}\n\nclass MyLineChart extends React.Component {\n\n  getLineChart = () =&gt; {\n    const keysArr = Object.keys(data[0]).slice(1);\n    const lineArr= [];\n    keysArr.forEach((item, index)=&gt; {\n      lineArr.push(&lt;Line type=\"monotone\" dataKey={item} stroke={color[index]} /&gt;)\n    })\n    return lineArr;\n  }\n\n  modifyFormatter = (value, name, props) =&gt; {\n    const nameJSX = &lt;span&gt;&lt;span style={{\n      display: \"inline-block\",\n      marginRight: \"5px\",\n      borderRadius: \"10px\",\n      width: \"10px\",\n      height: \"10px\",\n      backgroundColor: props.color\n    }}&gt;&lt;/span&gt;{name} : {value}&lt;/span&gt;\n    return [nameJSX];\n  }\n\n  render() {\n    return (\n      // &lt;ResponsiveContainer&gt;\n       <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> <linechart class=\"fea_Shapes_keys udls\" height=\"{300}\" width=\"{500}\">data</linechart>={<span class=\"fea_Shapes_keys udls\">data</span>}\n          margin={{\n            top: 5, right: 30, left: 20, bottom: 5,\n          }}\n        &gt;</div>\n         <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> &lt;CartesianGrid strokeDasharray=\"3 3\" horizontal={false} vertical={false}/&gt;</div>\n          <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x> dataKey={Object.keys(data[0])[0]} /&gt;\n          <y class=\"fea_Axis_keys udls\">Axis</y> /&gt;</div>\n          <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> formatter={this.modifyFormatter}/&gt;</div>\n          <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Legend_keys udls\">Legend</span> /&gt;</div>\n        {this.getLineChart()}\n        &lt;Brush dataKey={Object.keys(data[0])[0]}&gt;\n          &lt;LineChart&gt;\n            {this.getLineChart()}\n          &lt;/LineChart&gt;\n        &lt;/Brush&gt;\n        &lt;/LineChart&gt;\n      //  &lt;/ResponsiveContainer&gt;\n    );\n  }\n}\n\nclass MyBarChart extends React.Component {\n\n  getBar = () =&gt; {\n    const {stacked} = this.props;\n    const keysArr = Object.keys(data[0]).slice(1);\n    const barArr= [];\n    keysArr.forEach((item, index)=&gt; {\n      barArr.push(&lt;Bar dataKey={item} stackId={stacked ? \"a\" : null} fill={color[index]} /&gt;)\n    })\n    return barArr;\n  }\n\n  modifyFormatter = (value, name, props) =&gt; {\n    console.log(value, name , props, \"props\");\n    const nameJSX = &lt;span&gt;&lt;span style={{\n      display: \"inline-block\",\n      marginRight: \"5px\",\n      borderRadius: \"10px\",\n      width: \"10px\",\n      height: \"10px\",\n      backgroundColor: props.color\n    }}&gt;&lt;/span&gt;{name} : {value}&lt;/span&gt;;\n    let result = [nameJSX].reverse();\n    // console.log(result, \"result\");\n    return result;\n  }\n\n  handleSort = (item1, item2) =&gt; {\n    // console.log(item1, item2);\n    return 1;\n  }\n\n  render() {\n    return (\n      &lt;BarChart\n        width={500}\n        height={300}\n        data={data}\n        margin={{\n          top: 20, right: 30, left: 20, bottom: 5,\n        }}\n      &gt;\n        &lt;CartesianGrid strokeDasharray=\"3 3\" horizontal={false} vertical={false}/&gt;\n        &lt;XAxis dataKey={Object.keys(data[0])[0]} /&gt;\n        &lt;YAxis /&gt;\n        &lt;Tooltip formatter={this.modifyFormatter} itemSorter={this.handleSort}/&gt;\n        &lt;Legend /&gt;\n        {this.getBar()}\n        &lt;Brush dataKey={Object.keys(data[0])[0]}&gt;\n          &lt;BarChart&gt;\n            {this.getBar()}\n          &lt;/BarChart&gt;\n        &lt;/Brush&gt;\n      &lt;/BarChart&gt;\n    );\n  }\n}\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(&lt;App /&gt;, rootElement);\n</code></pre></div>",
    "thr_3": "<div class=\"codeBlock hljs javascript\" id=\"thr_3\"><pre id=\"thr_3_code\" style=\"\"><code class=\"javascript\">import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Bar_Chart_keys udls\">Bar</span>Chart</div>, Bar, <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>, Line, XAxis, YAxis, CartesianGrid, <div class=\"highlights fea_Tooltip\" id=\"Tooltip_2\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Tooltip_keys udls\">Tooltip</span></div>, <div class=\"highlights fea_Legend\" id=\"Legend_2\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Legend_keys udls\">Legend</span></div>, ResponsiveContainer, <div class=\"highlights fea_Zoom\" id=\"Zoom_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Zoom_keys udls\">Brush</span></div> \n} from '<div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_0\" style=\"background-color: #f6b73c;  display: inline;\">re<span class=\"fea_Multiple_Charts_keys udls\">chart</span>s</div>';\n\nconst data = [\n  {\n    name: 'Page A', uv: 4000, pv: 2400, amt: 2600, red: 5630\n  },\n  {\n    name: 'Page B', uv: 3000, pv: 1398, amt: 2210, red: 3500,\n  },\n  {\n    name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n  },\n  {\n    name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n  },\n  {\n    name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n  },\n  {\n    name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n  },\n  {\n    name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n  },\n];\n\nconst color = [\"#8884d8\", \"#82ca9d\", \"orange\", \"pink\"]\n\nclass App extends React.Component {\n\n  state = {\n    type: \"Line\"\n  }\n\n  handleChange = (e) =&gt; {\n    this.setState({type: e.target.value})\n  }\n\n  fetchChart = () =&gt; {\n    const {type} = this.state\n    switch(type){\n      case \"Line\": return &lt;MyLineChart key={type}/&gt;\n      case \"Bar\": return &lt;MyBarChart key={type}/&gt;\n      case \"Stacked\": return &lt;MyBarChart stacked key={type}/&gt;\n      default: return &lt;MyLineChart /&gt;\n    }\n  }\n  render(){\n    return (\n      &lt;div&gt;\n        &lt;select onChange={this.handleChange}&gt;\n          &lt;option&gt;Line&lt;/option&gt;\n          &lt;option&gt;Bar&lt;/option&gt;\n          &lt;option&gt;Stacked&lt;/option&gt;\n        &lt;/select&gt;\n      {this.fetchChart()}\n      &lt;/div&gt;\n    )\n  }\n}\n\nclass MyLineChart extends React.Component {\n\n  getLineChart = () =&gt; {\n    const keysArr = Object.keys(data[0]).slice(1);\n    const lineArr= [];\n    keysArr.forEach((item, index)=&gt; {\n      lineArr.push(&lt;Line type=\"monotone\" dataKey={item} stroke={color[index]} /&gt;)\n    })\n    return lineArr;\n  }\n\n  modifyFormatter = (value, name, props) =&gt; {\n    const nameJSX = &lt;span&gt;&lt;span style={{\n      display: \"inline-block\",\n      marginRight: \"5px\",\n      borderRadius: \"10px\",\n      width: \"10px\",\n      height: \"10px\",\n      backgroundColor: props.color\n    }}&gt;&lt;/span&gt;{name} : {value}&lt;/span&gt;\n    return [nameJSX];\n  }\n\n  render() {\n    return (\n      // &lt;ResponsiveContainer&gt;\n        &lt;LineChart\n          <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Canvas_keys udls\">width</span>={500}\n          <span class=\"fea_Canvas_keys udls\">height</span>={300}\n          data={data}\n          margin={{\n            top: 5, right: 30, left: 20, bottom: 5,\n          }}</div>\n        &gt;\n          &lt;CartesianGrid strokeDasharray=\"3 3\" horizontal={false} vertical={false}/&gt;\n          <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x> dataKey={Object.keys(data[0])[0]} /&gt;\n          <y class=\"fea_Axis_keys udls\">Axis</y> /&gt;</div>\n          <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> formatter={this.modifyFormatter}/&gt;</div>\n         <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> &lt;<span class=\"fea_Legend_keys udls\">Legend</span> /&gt;</div>\n        {this.getLineChart()}\n        &lt;Brush dataKey={Object.keys(data[0])[0]}&gt;\n          <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;LineChart&gt;\n            {this.getLineChart()}\n          <!--<span class=\"fea_Shapes_keys udls\"-->LineChart&gt;</div>\n        &lt;/Brush&gt;\n        &lt;/LineChart&gt;\n      //  &lt;/ResponsiveContainer&gt;\n    );\n  }\n}\n\nclass MyBarChart extends React.Component {\n\n  getBar = () =&gt; {\n    const {stacked} = this.props;\n    const keysArr = Object.keys(data[0]).slice(1);\n    const barArr= [];\n    keysArr.forEach((item, index)=&gt; {\n      barArr.push(&lt;Bar dataKey={item} stackId={stacked ? \"a\" : null} fill={color[index]} /&gt;)\n    })\n    return barArr;\n  }\n\n  modifyFormatter = (value, name, props) =&gt; {\n    console.log(value, name , props, \"props\");\n    const nameJSX = &lt;span&gt;&lt;span style={{\n      display: \"inline-block\",\n      marginRight: \"5px\",\n      borderRadius: \"10px\",\n      width: \"10px\",\n      height: \"10px\",\n      backgroundColor: props.color\n    }}&gt;&lt;/span&gt;{name} : {value}&lt;/span&gt;;\n    let result = [nameJSX].reverse();\n    // console.log(result, \"result\");\n    return result;\n  }\n\n  handleSort = (item1, item2) =&gt; {\n    // console.log(item1, item2);\n    return 1;\n  }\n\n  render() {\n    return (\n      &lt;BarChart\n        <div class=\"highlights fea_Canvas\" id=\"Canvas_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Canvas_keys udls\">width</span>={500}\n        <span class=\"fea_Canvas_keys udls\">height</span>={300}\n        data={data}\n        margin={{\n          top: 20, right: 30, left: 20, bottom: 5,\n        }}</div>\n      &gt;\n        &lt;CartesianGrid strokeDasharray=\"3 3\" horizontal={false} vertical={false}/&gt;\n        <div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x> dataKey={Object.keys(data[0])[0]} /&gt;\n        <y class=\"fea_Axis_keys udls\">Axis</y> /&gt;</div>\n       <div class=\"highlights fea_Tooltip\" id=\"Tooltip_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> &lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> formatter={this.modifyFormatter} itemSorter={this.handleSort}/&gt;</div>\n        <div class=\"highlights fea_Legend\" id=\"Legend_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Legend_keys udls\">Legend</span> /&gt;</div>\n        <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">{this.getBar()}</div>\n        &lt;Brush dataKey={Object.keys(data[0])[0]}&gt;\n          <div class=\"highlights fea_Canvas\" id=\"Canvas_2\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;BarChart&gt;\n            {this.getBar()}\n          &lt;/BarChart&gt;</div>\n        &lt;/Brush&gt;\n      &lt;/BarChart&gt;\n    );\n  }\n}\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(&lt;App /&gt;, rootElement);\n</code></pre></div>",
    "thr_8": "<div class=\"codeBlock hljs javascript\" id=\"thr_8\"><pre id=\"thr_8_code\" style=\"\"><code class=\"javascript\">import React, { Component } from \"react\";\nimport moment from \"moment\";\nimport {\n  <div class=\"highlights fea_Area_Chart\" id=\"Area_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Area_Chart_keys udls\">Area</span>Chart</div>,\n  XAxis,\n  YAxis,\n  Area,\n  <div class=\"highlights fea_Tooltip\" id=\"Tooltip_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Tooltip_keys udls\">Tooltip</span></div>,\n  CartesianGrid,\n  <div class=\"highlights fea_Legend\" id=\"Legend_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Legend_keys udls\">Legend</span></div>\n} from \"recharts\";\nimport { simpleData } from \"../util\";\nimport styles from \"./styles\";\n\nexport class RechartsAreaChart extends Component {\n  constructor() {\n    super();\n    this.state = {\n      data: simpleData().map(({ x, y }) =&gt; ({ x, y, y1: y }))\n    };\n  }\n  render() {\n    const { data } = this.state;\n    return (\n      &lt;div style={styles.container}&gt;\n        &lt;h3 style={styles.title}&gt;Recharts Stacked Area Chart&lt;/h3&gt;\n        &lt;AreaChart\n          <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Canvas_keys udls\">width</span>={styles.<span class=\"fea_Canvas_keys udls\">width</span>}\n          <span class=\"fea_Canvas_keys udls\">height</span>={styles.<span class=\"fea_Canvas_keys udls\">height</span>}\n          data={data}\n          margin={{ top: 32, right: 32, left: -16, bottom: 20 }}</div>\n        &gt;\n          &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n          <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Legend_keys udls\">Legend</span> wrapperStyle={{ margin: 4, fontSize: 12 }} /&gt;</div>\n          <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x>\n            dataKey=\"x\"\n            tickFormatter={tick =&gt; {\n              const label = moment(tick).format(\"hh:mm:ss\");\n              return label;\n            }}\n            style={{ fontSize: 10 }}\n          /&gt;\n          <y class=\"fea_Axis_keys udls\">Axis</y>\n            dataKey=\"y\"\n            domain={[0, 2 * Math.max(...data.map(d =&gt; d.y))]}\n            style={{ fontSize: 10 }}\n          /&gt;</div>\n          <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> wrapperStyle={{ fontSize: 8 }} /&gt;</div>\n          <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><area class=\"fea_Shapes_keys udls\" isanimationactive=\"{false}\" stackid=\"1\" type=\"monotone\"/><span class=\"fea_Shapes_keys udls\">data</span>Key=\"y1\"\n            stroke=\"rgb(77, 175, 10)\"\n            fill=\"rgb(77, 175, 10)\"\n          /&gt;\n          <area class=\"fea_Shapes_keys udls\" isanimationactive=\"{false}\" stackid=\"1\" type=\"monotone\"/><span class=\"fea_Shapes_keys udls\">data</span>Key=\"y\"\n            stroke=\"rgb(110, 161, 207)\"\n            fill=\"rgb(110, 161, 207)\"\n          /&gt;</div>\n        &lt;/AreaChart&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n</code></pre></div>",
    "thr_13": "<div class=\"codeBlock hljs javascript\" id=\"thr_13\"><pre id=\"thr_13_code\" style=\"\"><code class=\"javascript\">import FileSaver from \"file-saver\";\nimport React, { useCallback, useState } from \"react\";\nimport {\n  Area,\n  <div class=\"highlights fea_Area_Chart\" id=\"Area_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Area_Chart_keys udls\">Area</span>Chart</div>,\n  Bar,\n  <div class=\"highlights fea_Zoom\" id=\"Zoom_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Zoom_keys udls\">Brush</span></div>,\n  CartesianGrid,\n  ComposedChart,\n  <div class=\"highlights fea_Legend\" id=\"Legend_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Legend_keys udls\">Legend</span></div>,\n  <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span></div>,\n  Pie,\n  <div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Pie_Chart_keys udls\">Pie</span>Chart</div>,\n  ResponsiveContainer,\n  <div class=\"highlights fea_Tooltip\" id=\"Tooltip_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Tooltip_keys udls\">Tooltip</span></div>,\n  XAxis,\n  YAxis\n} from \"<div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_0\" style=\"background-color: #f6b73c;  display: inline;\">re<span class=\"fea_Multiple_Charts_keys udls\">chart</span>s</div>\";\nimport { useCurrentPng } from \"recharts-to-png\";\nimport \"./App.css\";\nimport { getLgData, getLgPieData, getSmPieData } from \"./data\";\n\nfunction App(): JSX.Element {\n  // Area chart setup\n  const [areaData] = useState(getLgData(100));\n  const [getAreaPng, { ref: areaRef }] = useCurrentPng();\n  const handleAreaDownload = useCallback(async () =&gt; {\n    const png = await getAreaPng();\n    if (png) {\n      FileSaver.saveAs(png, \"area-chart.png\");\n    }\n  }, [getAreaPng]);\n\n  // Pie chart setup\n  const [data01] = useState(getSmPieData());\n  const [data02] = useState(getLgPieData());\n  const [getPiePng, { ref: pieRef }] = useCurrentPng();\n  const handlePieDownload = useCallback(async () =&gt; {\n    const png = await getPiePng();\n    if (png) {\n      FileSaver.saveAs(png, \"pie-chart.png\");\n    }\n  }, [getPiePng]);\n\n  // Composed chart setup\n  const [composedData] = useState(getLgData(500));\n  const [getComposedPng, { ref: composedRef, isLoading }] = useCurrentPng();\n  const handleComposedDownload = useCallback(async () =&gt; {\n    const png = await getComposedPng();\n    if (png) {\n      FileSaver.saveAs(png, \"composed-chart.png\");\n    }\n  }, [getComposedPng]);\n\n  return (\n    &lt;div className=\"grid-container\"&gt;\n      &lt;div className=\"area-chart\"&gt;\n        &lt;h4&gt;\n          &lt;code&gt;Example: useCurrentPng for Responsive Area Chart&lt;/code&gt;\n        &lt;/h4&gt;\n        <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><responsivecontainer class=\"fea_Canvas_keys udls\">width</responsivecontainer>=\"100%\" <span class=\"fea_Canvas_keys udls\">height</span>={300}&gt;\n          <areachart bottom:=\"\" data=\"{areaData}\" left:=\"\" margin=\"{{\" ref=\"{areaRef}\" right:=\"\" top:=\"\"></areachart></div>\n            &lt;defs&gt;\n              <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\"&gt;\n                <stop offset=\"5%\" stopcolor=\"#8884d8\" stopopacity=\"{0.8}\"></stop>\n<stop offset=\"95%\" stopcolor=\"#8884d8\" stopopacity=\"{0}\"></stop>\n<!--<span class=\"fea_Shapes_keys udls\"-->linearGradient&gt;\n              &lt;linearGradient id=\"colorPv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\"&gt;\n                <stop offset=\"5%\" stopcolor=\"#82ca9d\" stopopacity=\"{0.8}\"></stop>\n<stop offset=\"95%\" stopcolor=\"#82ca9d\" stopopacity=\"{0}\"></stop>\n<!--<span class=\"fea_Shapes_keys udls\"-->linearGradient&gt;</div>\n            &lt;/defs&gt;\n            <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"name\" /&gt;\n            <y class=\"fea_Axis_keys udls\">Axis</y> /&gt;</div>\n            &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n            <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> /&gt;</div>\n            <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><area class=\"fea_Shapes_keys udls\" type=\"monotone\"/><span class=\"fea_Shapes_keys udls\">data</span>Key=\"uv\"\n              stroke=\"#8884d8\"\n              fillOpacity={1}\n              fill=\"url(#colorUv)\"\n            /&gt;\n            <area class=\"fea_Shapes_keys udls\" type=\"monotone\"/><span class=\"fea_Shapes_keys udls\">data</span>Key=\"pv\"\n              stroke=\"#82ca9d\"\n              fillOpacity={1}\n              fill=\"url(#colorPv)\"\n            /&gt;</div>\n          &lt;/AreaChart&gt;\n        &lt;/ResponsiveContainer&gt;\n        &lt;br /&gt;\n        &lt;button onClick={handleAreaDownload}&gt;\n          &lt;code&gt;Download Area Chart&lt;/code&gt;\n        &lt;/button&gt;\n      &lt;/div&gt;\n      &lt;div className=\"pie-chart\"&gt;\n        &lt;h4&gt;\n          &lt;code&gt;Example: useCurrentPng for Responsive Pie Chart&lt;/code&gt;\n        &lt;/h4&gt;\n        &lt;ResponsiveContainer width=\"100%\" height={300}&gt;\n          &lt;PieChart ref={pieRef}&gt;\n            <div class=\"highlights fea_Shapes\" id=\"Shapes_2\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><pie class=\"fea_Shapes_keys udls\">data</pie>={<span class=\"fea_Shapes_keys udls\">data</span>01}\n              <span class=\"fea_Shapes_keys udls\">data</span>Key=\"value\"\n              nameKey=\"name\"\n              cx=\"50%\"\n              cy=\"50%\"\n              outerRadius={50}\n              fill=\"#8884d8\"\n            /&gt;\n            <pie class=\"fea_Shapes_keys udls\">data</pie>={<span class=\"fea_Shapes_keys udls\">data</span>02}\n              <span class=\"fea_Shapes_keys udls\">data</span>Key=\"value\"\n              nameKey=\"name\"\n              cx=\"50%\"\n              cy=\"50%\"\n              innerRadius={60}\n              outerRadius={80}\n              fill=\"#82ca9d\"\n              label\n            /&gt;</div>\n          &lt;/PieChart&gt;\n        &lt;/ResponsiveContainer&gt;\n        &lt;br /&gt;\n        &lt;button onClick={handlePieDownload}&gt;\n          &lt;code&gt;Download Pie Chart&lt;/code&gt;\n        &lt;/button&gt;\n      &lt;/div&gt;\n      &lt;div className=\"composed-chart\"&gt;\n        &lt;h4&gt;\n          &lt;code&gt;\n            Example: useCurrentPng for Responsive Composed Chart, with isLoading\n            for button state change\n          &lt;/code&gt;\n        &lt;/h4&gt;\n        &lt;ResponsiveContainer width=\"100%\" height={300}&gt;\n          &lt;ComposedChart data={composedData} ref={composedRef}&gt;\n            &lt;XAxis dataKey=\"name\" /&gt;\n            &lt;YAxis /&gt;\n            &lt;Tooltip /&gt;\n            <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Legend_keys udls\">Legend</span> /&gt;</div>\n            &lt;CartesianGrid stroke=\"#f5f5f5\" /&gt;\n            <div class=\"highlights fea_Shapes\" id=\"Shapes_3\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><area class=\"fea_Shapes_keys udls\" type=\"monotone\"/><span class=\"fea_Shapes_keys udls\">data</span>Key=\"amt\"\n              fill=\"#8884d8\"\n              stroke=\"#8884d8\"\n            /&gt;\n            <bar class=\"fea_Shapes_keys udls\">data</bar>Key=\"pv\" barSize={20} fill=\"#413ea0\" /&gt;\n            <line class=\"fea_Shapes_keys udls\" type=\"monotone\">data</line>Key=\"uv\" stroke=\"#ff7300\" /&gt;</div>\n            &lt;Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" /&gt;\n          &lt;/ComposedChart&gt;\n        &lt;/ResponsiveContainer&gt;\n        &lt;br /&gt;\n        &lt;button disabled={isLoading} onClick={handleComposedDownload}&gt;\n          {isLoading ? (\n            &lt;span className=\"download-button-content\"&gt;\n              &lt;i className=\"gg-spinner\" /&gt;\n              &lt;span className=\"download-button-text\"&gt;\n                &lt;code&gt;Downloading...&lt;/code&gt;\n              &lt;/span&gt;\n            &lt;/span&gt;\n          ) : (\n            &lt;span className=\"download-button-content\"&gt;\n              &lt;i className=\"gg-software-download\" /&gt;\n              &lt;span className=\"download-button-text\"&gt;\n                &lt;code&gt;Download Composed Chart&lt;/code&gt;\n              &lt;/span&gt;\n            &lt;/span&gt;\n          )}\n        &lt;/button&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );\n}\n\nexport default App;\n</code></pre></div>",
    "thr_16": "<div class=\"codeBlock hljs javascript\" id=\"thr_16\"><pre id=\"thr_16_code\" style=\"\"><code class=\"javascript\">import React, { PureComponent } from 'react';\nimport { <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>, Line, XAxis, YAxis, CartesianGrid, <div class=\"highlights fea_Tooltip\" id=\"Tooltip_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Tooltip_keys udls\">Tooltip</span></div>, <div class=\"highlights fea_Legend\" id=\"Legend_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Legend_keys udls\">Legend</span></div>, ResponsiveContainer } from 'recharts';\n\nconst data = [\n  {\n    name: 'Page A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: 'Page B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: 'Page C',\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: 'Page D',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: 'Page E',\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: 'Page F',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: 'Page G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nexport default class Example extends PureComponent {\n  static demoUrl = 'https://codesandbox.io/s/customized-legend-event-l19fo';\n\n  state = {\n    opacity: {\n      uv: 1,\n      pv: 1,\n    },\n  };\n\n  handleMouseEnter = (o) =&gt; {\n    const { dataKey } = o;\n    const { opacity } = this.state;\n\n    this.setState({\n      opacity: { ...opacity, [dataKey]: 0.5 },\n    });\n  };\n\n  handleMouseLeave = (o) =&gt; {\n    const { dataKey } = o;\n    const { opacity } = this.state;\n\n    this.setState({\n      opacity: { ...opacity, [dataKey]: 1 },\n    });\n  };\n\n  render() {\n    const { opacity } = this.state;\n\n    return (\n      &lt;div style={{ width: '100%' }}&gt;\n        &lt;ResponsiveContainer width=\"100%\" height={300}&gt;\n          &lt;LineChart\n            <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Canvas_keys udls\">width</span>={500}\n            <span class=\"fea_Canvas_keys udls\">height</span>={300}</div>\n            data={data}\n            margin={{\n              top: 5,\n              right: 30,\n              left: 20,\n              bottom: 5,\n            }}\n          &gt;\n            &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n            <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"name\" /&gt;\n            <y class=\"fea_Axis_keys udls\">Axis</y> /&gt;</div>\n            <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> /&gt;</div>\n            <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Legend_keys udls\">Legend</span> onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave} /&gt;</div>\n            <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><line class=\"fea_Shapes_keys udls\" type=\"monotone\">data</line>Key=\"pv\" strokeOpacity={opacity.pv} stroke=\"#8884d8\" activeDot={{ r: 8 }} /&gt;\n            <line class=\"fea_Shapes_keys udls\" type=\"monotone\">data</line>Key=\"uv\" strokeOpacity={opacity.uv} stroke=\"#82ca9d\" /&gt;</div>\n          &lt;/LineChart&gt;\n        &lt;/ResponsiveContainer&gt;\n        &lt;p className=\"notes\"&gt;Tips: Hover the legend !&lt;/p&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n//https://recharts.org/en-US/examples/LegendEffectOpacity</code></pre></div>",
    "thr_17": "<div class=\"codeBlock hljs javascript\" id=\"thr_17\"><pre id=\"thr_17_code\" style=\"\"><code class=\"javascript\">import React, { PureComponent } from 'react';\nimport { <div class=\"highlights fea_Radar_Chart\" id=\"Radar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">RadialBarChart</div>, RadialBar, <div class=\"highlights fea_Legend\" id=\"Legend_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Legend_keys udls\">Legend</span></div>, ResponsiveContainer } from 'recharts';\n\nconst data = [\n  {\n    name: '18-24',\n    uv: 31.47,\n    pv: 2400,\n    fill: '#8884d8',\n  },\n  {\n    name: '25-29',\n    uv: 26.69,\n    pv: 4567,\n    fill: '#83a6ed',\n  },\n  {\n    name: '30-34',\n    uv: 15.69,\n    pv: 1398,\n    fill: '#8dd1e1',\n  },\n  {\n    name: '35-39',\n    uv: 8.22,\n    pv: 9800,\n    fill: '#82ca9d',\n  },\n  {\n    name: '40-49',\n    uv: 8.63,\n    pv: 3908,\n    fill: '#a4de6c',\n  },\n  {\n    name: '50+',\n    uv: 2.63,\n    pv: 4800,\n    fill: '#d0ed57',\n  },\n  {\n    name: 'unknow',\n    uv: 6.67,\n    pv: 4800,\n    fill: '#ffc658',\n  },\n];\n\nconst style = {\n  top: '50%',\n  right: 0,\n  transform: 'translate(0, -50%)',\n  lineHeight: '24px',\n};\n\nexport default class Example extends PureComponent {\n  static demoUrl = 'https://codesandbox.io/s/simple-radial-bar-chart-qf8fz';\n\n  render() {\n    return (\n      &lt;ResponsiveContainer width=\"100%\" height=\"100%\"&gt;\n        &lt;RadialBarChart cx=\"50%\" cy=\"50%\" innerRadius=\"10%\" outerRadius=\"80%\" barSize={10} data={data}&gt;\n          <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><radialbar background=\"\" class=\"fea_Shapes_keys udls\" clockwise=\"\" fill:=\"\" label=\"{{\" minangle=\"{15}\" position:=\"\">data</radialbar>Key=\"uv\"\n          /&gt;</div>\n          <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Legend_keys udls\">Legend</span> iconSize={10} layout=\"vertical\" verticalAlign=\"middle\" wrapperStyle={style} /&gt;</div>\n        &lt;/RadialBarChart&gt;\n      &lt;/ResponsiveContainer&gt;\n    );\n  }\n}\n//https://recharts.org/en-US/examples/SimpleRadialBarChart</code></pre></div>",
    "thr_18": "<div class=\"codeBlock hljs javascript\" id=\"thr_18\"><pre id=\"thr_18_code\" style=\"\"><code class=\"javascript\">import React, { PureComponent } from 'react';\nimport { Radar, <div class=\"highlights fea_Radar_Chart\" id=\"Radar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Radar_Chart_keys udls\">Radar</span>Chart</div>, PolarGrid, <div class=\"highlights fea_Legend\" id=\"Legend_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Legend_keys udls\">Legend</span></div>, PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer } from 'recharts';\n\nconst data = [\n  {\n    subject: 'Math',\n    A: 120,\n    B: 110,\n    fullMark: 150,\n  },\n  {\n    subject: 'Chinese',\n    A: 98,\n    B: 130,\n    fullMark: 150,\n  },\n  {\n    subject: 'English',\n    A: 86,\n    B: 130,\n    fullMark: 150,\n  },\n  {\n    subject: 'Geography',\n    A: 99,\n    B: 100,\n    fullMark: 150,\n  },\n  {\n    subject: 'Physics',\n    A: 85,\n    B: 90,\n    fullMark: 150,\n  },\n  {\n    subject: 'History',\n    A: 65,\n    B: 85,\n    fullMark: 150,\n  },\n];\n\nexport default class Example extends PureComponent {\n  static demoUrl = 'https://codesandbox.io/s/radar-chart-specified-domain-mfl04';\n\n  render() {\n    return (\n      &lt;ResponsiveContainer width=\"100%\" height=\"100%\"&gt;\n        &lt;RadarChart cx=\"50%\" cy=\"50%\" outerRadius=\"80%\" data={data}&gt;\n          &lt;PolarGrid /&gt;\n          &lt;PolarAngleAxis dataKey=\"subject\" /&gt;\n          <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><polarradiusaxis angle=\"{30}\" domain=\"{[0,\"></polarradiusaxis>\n<radar class=\"fea_Shapes_keys udls\" name=\"Mike\">data</radar>Key=\"A\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6} /&gt;\n          <radar class=\"fea_Shapes_keys udls\" name=\"Lily\">data</radar>Key=\"B\" stroke=\"#82ca9d\" fill=\"#82ca9d\" fillOpacity={0.6} /&gt;</div>\n         <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> &lt;<span class=\"fea_Legend_keys udls\">Legend</span> /&gt;</div>\n        &lt;/RadarChart&gt;\n      &lt;/ResponsiveContainer&gt;\n    );\n  }\n}\n//https://recharts.org/en-US/examples/SpecifiedDomainRadarChart</code></pre></div>",
    "thr_20": "<div class=\"codeBlock hljs javascript\" id=\"thr_20\"><pre id=\"thr_20_code\" style=\"\"><code class=\"javascript\">import React, { PureComponent } from 'react';\nimport { <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Bar_Chart_keys udls\">Bar</span>Chart</div>, Bar, XAxis, YAxis, CartesianGrid, <div class=\"highlights fea_Tooltip\" id=\"Tooltip_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Tooltip_keys udls\">Tooltip</span></div>, <div class=\"highlights fea_Legend\" id=\"Legend_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Legend_keys udls\">Legend</span></div>, ResponsiveContainer } from 'recharts';\n\nconst data = [\n  {\n    name: 'Page A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: 'Page B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: 'Page C',\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: 'Page D',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: 'Page E',\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: 'Page F',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: 'Page G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nconst getIntroOfPage = (label) =&gt; {\n  if (label === 'Page A') {\n    return \"Page A is about men's clothing\";\n  }\n  if (label === 'Page B') {\n    return \"Page B is about women's dress\";\n  }\n  if (label === 'Page C') {\n    return \"Page C is about women's bag\";\n  }\n  if (label === 'Page D') {\n    return 'Page D is about household goods';\n  }\n  if (label === 'Page E') {\n    return 'Page E is about food';\n  }\n  if (label === 'Page F') {\n    return 'Page F is about baby food';\n  }\n  return '';\n};\n\nconst CustomTooltip = ({ active, payload, label }) =&gt; {\n  if (active &amp;&amp; payload &amp;&amp; payload.length) {\n    return (\n      &lt;div className=\"custom-tooltip\"&gt;\n        &lt;p className=\"label\"&gt;{`${label} : ${payload[0].value}`}&lt;/p&gt;\n        &lt;p className=\"intro\"&gt;{getIntroOfPage(label)}&lt;/p&gt;\n        &lt;p className=\"desc\"&gt;Anything you want can be displayed here.&lt;/p&gt;\n      &lt;/div&gt;\n    );\n  }\n\n  return null;\n};\n\nexport default class Example extends PureComponent {\n  static demoUrl = 'https://codesandbox.io/s/tooltip-with-customized-content-lyxvs';\n\n  render() {\n    return (\n      &lt;ResponsiveContainer width=\"100%\" height=\"100%\"&gt;\n        &lt;BarChart\n          <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Canvas_keys udls\">width</span>={500}\n          <span class=\"fea_Canvas_keys udls\">height</span>={300}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}</div>\n        &gt;\n          &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n          <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"name\" /&gt;\n          <y class=\"fea_Axis_keys udls\">Axis</y> /&gt;</div>\n          <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> content={<custom class=\"fea_Tooltip_keys udls\">Tooltip</custom> /&gt;} /&gt;</div>\n          <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Legend_keys udls\">Legend</span> /&gt;</div>\n         <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> <bar class=\"fea_Shapes_keys udls\">data</bar>Key=\"pv\" barSize={20} fill=\"#8884d8\" /&gt;</div>\n        &lt;/BarChart&gt;\n      &lt;/ResponsiveContainer&gt;\n    );\n  }\n}\n//https://recharts.org/en-US/examples/CustomContentOfTooltip</code></pre></div>",
    "thr_21": "<div class=\"codeBlock hljs javascript\" id=\"thr_21\"><pre id=\"thr_21_code\" style=\"\"><code class=\"javascript\">import React, { PureComponent } from 'react';\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>,</div>\n  <div class=\"highlights fea_Area_Chart\" id=\"Area_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Area_Chart_keys udls\">Area</span></div>,\n  <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Bar_Chart_keys udls\">Bar</span></div>,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from '<div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_0\" style=\"background-color: #f6b73c;  display: inline;\">re<span class=\"fea_Multiple_Charts_keys udls\">chart</span>s</div>';\n\nconst data = [\n  {\n    name: 'Page A',\n    uv: 590,\n    pv: 800,\n    amt: 1400,\n  },\n  {\n    name: 'Page B',\n    uv: 868,\n    pv: 967,\n    amt: 1506,\n  },\n  {\n    name: 'Page C',\n    uv: 1397,\n    pv: 1098,\n    amt: 989,\n  },\n  {\n    name: 'Page D',\n    uv: 1480,\n    pv: 1200,\n    amt: 1228,\n  },\n  {\n    name: 'Page E',\n    uv: 1520,\n    pv: 1108,\n    amt: 1100,\n  },\n  {\n    name: 'Page F',\n    uv: 1400,\n    pv: 680,\n    amt: 1700,\n  },\n];\n\nexport default class Example extends PureComponent {\n  static demoUrl = 'https://codesandbox.io/s/composed-chart-in-responsive-container-pkqmy';\n\n  render() {\n    return (\n      &lt;div style={{ width: '100%', height: 300 }}&gt;\n        &lt;ResponsiveContainer&gt;\n          &lt;ComposedChart\n            <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Canvas_keys udls\">width</span>={500}\n            <span class=\"fea_Canvas_keys udls\">height</span>={400}\n            data={data}\n            margin={{\n              top: 20,\n              right: 20,\n              bottom: 20,\n              left: 20,\n            }}</div>\n          &gt;\n            &lt;CartesianGrid stroke=\"#f5f5f5\" /&gt;\n            <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><xaxis class=\"fea_Axis_keys udls\" datakey=\"name\">scale</xaxis>=\"band\" /&gt;\n            <yaxis></yaxis></div>\n            <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> /&gt;</div>\n            <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Legend_keys udls\">Legend</span> /&gt;</div>\n            <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><area class=\"fea_Shapes_keys udls\" type=\"monotone\"/><span class=\"fea_Shapes_keys udls\">data</span>Key=\"amt\" fill=\"#8884d8\" stroke=\"#8884d8\" /&gt;\n            <bar class=\"fea_Shapes_keys udls\">data</bar>Key=\"pv\" barSize={20} fill=\"#413ea0\" /&gt;\n            <line class=\"fea_Shapes_keys udls\" type=\"monotone\">data</line>Key=\"uv\" stroke=\"#ff7300\" /&gt;</div>\n          &lt;/ComposedChart&gt;\n        &lt;/ResponsiveContainer&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n//https://recharts.org/en-US/examples/ComposedResponsiveContainer</code></pre></div>",
    "thr_24": "<div class=\"codeBlock hljs javascript\" id=\"thr_24\"><pre id=\"thr_24_code\" style=\"\"><code class=\"javascript\">import React, { PureComponent } from 'react';\nimport {\n  <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Bar_Chart_keys udls\">Bar</span>Chart</div>,\n  Bar,\n  <div class=\"highlights fea_Zoom\" id=\"Zoom_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Zoom_keys udls\">Brush</span></div>,\n  ReferenceLine,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  <div class=\"highlights fea_Tooltip\" id=\"Tooltip_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Tooltip_keys udls\">Tooltip</span></div>,\n  Legend,\n  ResponsiveContainer,\n} from 'recharts';\n\nconst data = [\n  { name: '1', uv: 300, pv: 456 },\n  { name: '2', uv: -145, pv: 230 },\n  { name: '3', uv: -100, pv: 345 },\n  { name: '4', uv: -8, pv: 450 },\n  { name: '5', uv: 100, pv: 321 },\n  { name: '6', uv: 9, pv: 235 },\n  { name: '7', uv: 53, pv: 267 },\n  { name: '8', uv: 252, pv: -378 },\n  { name: '9', uv: 79, pv: -210 },\n  { name: '10', uv: 294, pv: -23 },\n  { name: '12', uv: 43, pv: 45 },\n  { name: '13', uv: -74, pv: 90 },\n  { name: '14', uv: -71, pv: 130 },\n  { name: '15', uv: -117, pv: 11 },\n  { name: '16', uv: -186, pv: 107 },\n  { name: '17', uv: -16, pv: 926 },\n  { name: '18', uv: -125, pv: 653 },\n  { name: '19', uv: 222, pv: 366 },\n  { name: '20', uv: 372, pv: 486 },\n  { name: '21', uv: 182, pv: 512 },\n  { name: '22', uv: 164, pv: 302 },\n  { name: '23', uv: 316, pv: 425 },\n  { name: '24', uv: 131, pv: 467 },\n  { name: '25', uv: 291, pv: -190 },\n  { name: '26', uv: -47, pv: 194 },\n  { name: '27', uv: -415, pv: 371 },\n  { name: '28', uv: -182, pv: 376 },\n  { name: '29', uv: -93, pv: 295 },\n  { name: '30', uv: -99, pv: 322 },\n  { name: '31', uv: -52, pv: 246 },\n  { name: '32', uv: 154, pv: 33 },\n  { name: '33', uv: 205, pv: 354 },\n  { name: '34', uv: 70, pv: 258 },\n  { name: '35', uv: -25, pv: 359 },\n  { name: '36', uv: -59, pv: 192 },\n  { name: '37', uv: -63, pv: 464 },\n  { name: '38', uv: -91, pv: -2 },\n  { name: '39', uv: -66, pv: 154 },\n  { name: '40', uv: -50, pv: 186 },\n];\n\nexport default class Example extends PureComponent {\n  static demoUrl = 'https://codesandbox.io/s/bar-chart-with-brush-ghsz3';\n\n  render() {\n    return (\n      &lt;ResponsiveContainer width=\"100%\" height=\"100%\"&gt;\n        &lt;BarChart\n          <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Canvas_keys udls\">width</span>={500}\n          <span class=\"fea_Canvas_keys udls\">height</span>={300}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}</div>\n        &gt;\n          &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n          <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"name\" /&gt;\n          <y class=\"fea_Axis_keys udls\">Axis</y> /&gt;</div>\n          <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> /&gt;</div>\n          <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Legend_keys udls\">Legend</span> verticalAlign=\"top\" wrapperStyle={{ lineHeight: '40px' }} /&gt;</div>\n          &lt;ReferenceLine y={0} stroke=\"#000\" /&gt;\n          &lt;Brush dataKey=\"name\" height={30} stroke=\"#8884d8\" /&gt;\n          <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><bar class=\"fea_Shapes_keys udls\">data</bar>Key=\"pv\" fill=\"#8884d8\" /&gt;\n          <bar class=\"fea_Shapes_keys udls\">data</bar>Key=\"uv\" fill=\"#82ca9d\" /&gt;</div>\n        &lt;/BarChart&gt;\n      &lt;/ResponsiveContainer&gt;\n    );\n  }\n}\n//https://recharts.org/en-US/examples/BrushBarChart</code></pre></div>",
    "thr_25": "<div class=\"codeBlock hljs javascript\" id=\"thr_25\"><pre id=\"thr_25_code\" style=\"\"><code class=\"javascript\">import React, { PureComponent } from 'react';\nimport {\n  BarChart,\n  Bar,\n  Cell,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  LabelList,\n  ResponsiveContainer,\n} from 'recharts';\n\nconst data = [\n  {\n    name: 'Page A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: 'Page B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: 'Page C',\n    uv: 2000,\n    pv: 8,\n    amt: 2290,\n  },\n  {\n    name: 'Page D',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: 'Page E',\n    uv: 18,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: 'Page F',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: 'Page G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nconst renderCustomizedLabel = (props) =&gt; {\n  const { x, y, width, height, value } = props;\n  const radius = 10;\n\n  return (\n    &lt;g&gt;\n      &lt;circle cx={x + width / 2} cy={y - radius} r={radius} fill=\"#8884d8\" /&gt;\n      &lt;text x={x + width / 2} y={y - radius} fill=\"#fff\" textAnchor=\"middle\" dominantBaseline=\"middle\"&gt;\n        {value.split(' ')[1]}\n      &lt;/text&gt;\n    &lt;/g&gt;\n  );\n};\n\nexport default class Example extends PureComponent {\n  static demoUrl = 'https://codesandbox.io/s/bar-chart-with-min-height-3ilfq';\n\n  render() {\n    return (\n      &lt;ResponsiveContainer width=\"100%\" height=\"100%\"&gt;\n        &lt;<div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Bar_Chart_keys udls\">Bar</span>Chart</div>\n         <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> <span class=\"fea_Canvas_keys udls\">width</span>={500}\n          <span class=\"fea_Canvas_keys udls\">height</span>={300}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}</div>\n        &gt;\n          &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n          <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"name\" /&gt;\n          <y class=\"fea_Axis_keys udls\">Axis</y> /&gt;</div>\n         <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> &lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> /&gt;</div>\n         <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> &lt;<span class=\"fea_Legend_keys udls\">Legend</span> /&gt;</div>\n          <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><bar class=\"fea_Shapes_keys udls\">data</bar>Key=\"pv\" fill=\"#8884d8\" minPointSize={5}&gt;\n            <labellist class=\"fea_Shapes_keys udls\">data</labellist>Key=\"name\" content={renderCustomizedLabel} /&gt;\n          \n<bar class=\"fea_Shapes_keys udls\">data</bar>Key=\"uv\" fill=\"#82ca9d\" minPointSize={10} /&gt;</div>\n        &lt;/BarChart&gt;\n      &lt;/ResponsiveContainer&gt;\n    );\n  }\n}\n//https://recharts.org/en-US/examples/BarChartWithMinHeight</code></pre></div>",
    "thr_26": "<div class=\"codeBlock hljs javascript\" id=\"thr_26\"><pre id=\"thr_26_code\" style=\"\"><code class=\"javascript\">import React, { PureComponent } from 'react';\nimport { <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Bar_Chart_keys udls\">Bar</span>Chart</div>, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\n\nconst data = [\n  {\n    name: 'Page A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: 'Page B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: 'Page C',\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: 'Page D',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: 'Page E',\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: 'Page F',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: 'Page G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nexport default class Example extends PureComponent {\n  static demoUrl = 'https://codesandbox.io/s/mixed-bar-chart-q4hgc';\n\n  render() {\n    return (\n      &lt;ResponsiveContainer width=\"100%\" height=\"100%\"&gt;\n        &lt;BarChart\n          <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Canvas_keys udls\">width</span>={500}\n          <span class=\"fea_Canvas_keys udls\">height</span>={300}\n          data={data}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}</div>\n        &gt;\n          &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n          <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"name\" /&gt;\n          <y class=\"fea_Axis_keys udls\">Axis</y> /&gt;</div>\n          <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> /&gt;</div>\n          <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Legend_keys udls\">Legend</span> /&gt;</div>\n          <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><bar class=\"fea_Shapes_keys udls\">data</bar>Key=\"pv\" stackId=\"a\" fill=\"#8884d8\" /&gt;\n          <bar class=\"fea_Shapes_keys udls\">data</bar>Key=\"amt\" stackId=\"a\" fill=\"#82ca9d\" /&gt;\n          <bar class=\"fea_Shapes_keys udls\">data</bar>Key=\"uv\" fill=\"#ffc658\" /&gt;</div>\n        &lt;/BarChart&gt;\n      &lt;/ResponsiveContainer&gt;\n    );\n  }\n}\n//https://recharts.org/en-US/examples/MixBarChart</code></pre></div>",
    "thr_28": "<div class=\"codeBlock hljs javascript\" id=\"thr_28\"><pre id=\"thr_28_code\" style=\"\"><code class=\"javascript\">import React, { PureComponent } from 'react';\nimport { <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\n\nconst data = [\n  {\n    name: 'Page A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: 'Page B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: 'Page C',\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: 'Page D',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: 'Page E',\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: 'Page F',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: 'Page G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nexport default class Example extends PureComponent {\n  static demoUrl = 'https://codesandbox.io/s/line-chart-of-different-axis-interval-oxw2p';\n\n  render() {\n    return (\n      &lt;div&gt;\n        <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><linechart class=\"fea_Canvas_keys udls\">width</linechart>={200} <span class=\"fea_Canvas_keys udls\">height</span>={100}</div> data={data}&gt;\n          &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n          <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"name\" interval=\"preserveEnd\" /&gt;\n          <y class=\"fea_Axis_keys udls\">Axis</y> interval=\"preserveEnd\" /&gt;</div>\n          <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Legend_keys udls\">Legend</span> /&gt;</div>\n         <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> <line class=\"fea_Shapes_keys udls\" type=\"monotone\">data</line>Key=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} /&gt;\n          <line class=\"fea_Shapes_keys udls\" type=\"monotone\">data</line>Key=\"uv\" stroke=\"#82ca9d\" /&gt;</div>\n        &lt;/LineChart&gt;\n\n        &lt;LineChart width={200} height={100} data={data}&gt;\n          &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n          &lt;XAxis dataKey=\"name\" interval=\"preserveStart\" /&gt;\n          &lt;YAxis interval=\"preserveStart\" /&gt;\n          &lt;Legend /&gt;\n          &lt;Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} /&gt;\n          &lt;Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" /&gt;\n        &lt;/LineChart&gt;\n\n        &lt;LineChart width={200} height={100} data={data}&gt;\n          &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n          &lt;XAxis dataKey=\"name\" interval=\"preserveStartEnd\" /&gt;\n          &lt;YAxis interval=\"preserveStartEnd\" /&gt;\n          &lt;Legend /&gt;\n          &lt;Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} /&gt;\n          &lt;Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" /&gt;\n        &lt;/LineChart&gt;\n\n        &lt;LineChart width={200} height={100} data={data}&gt;\n          &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n          &lt;XAxis dataKey=\"name\" interval={0} angle={30} dx={20} /&gt;\n          &lt;YAxis /&gt;\n          &lt;Legend /&gt;\n          &lt;Line type=\"monotone\" dataKey=\"pv\" stroke=\"#8884d8\" activeDot={{ r: 8 }} /&gt;\n          &lt;Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" /&gt;\n        &lt;/LineChart&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n//https://recharts.org/en-US/examples/LineChartAxisInterval</code></pre></div>",
    "thr_1": "<div class=\"codeBlock hljs javascript\" id=\"thr_1\"><pre id=\"thr_1_code\" style=\"\"><code class=\"javascript\">import * as React from 'react'\nimport {\n  <div class=\"highlights fea_Zoom\" id=\"Zoom_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Zoom_keys udls\">Brush</span></div>,\n  CartesianGrid,\n  Line,\n  <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>,\n  ReferenceLine,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from 'recharts'\nimport { convertToRs } from './currency.util'\nimport { tooltipWrapperStyle } from './analysis.utils'\n\nexport interface ITransaction {\n  date: string\n  type: any\n  summary?: string\n  category: any\n  reference: string\n  depositAmount: number\n  withdrawalAmount: number\n  balanceAmount: number\n  particular: string\n}\n\ninterface IProps {\n  allTransactions: ITransaction[]\n}\n\nclass AllTransactionsGraph extends React.Component&lt;IProps&gt; {\n  public render () {\n    return (\n      &lt;ResponsiveContainer minHeight={400}&gt;\n        &lt;LineChart\n          data={this.props.allTransactions}\n          margin={{ top: 20, right: 50, left: 20, bottom: 5 }}\n        &gt;\n          <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x>\n            dataKey=\"particular\"\n            tickSize={0}\n            tickFormatter={() =&gt; ''}\n            <span class=\"fea_Axis_keys udls\">axis</span>Line={false}\n          /&gt;\n          <y class=\"fea_Axis_keys udls\">Axis</y> tickFormatter={convertToRs} <span class=\"fea_Axis_keys udls\">axis</span>Line={false}/&gt;</div>\n          <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span>\n            cursor={{ fill: '#f5f5fa', strokeDasharray: '1 4' }}\n            wrapperStyle={<span class=\"fea_Tooltip_keys udls\">tooltip</span>WrapperStyle}\n            formatter={this.handle<span class=\"fea_Tooltip_keys udls\">Tooltip</span>Format}\n          /&gt;</div>\n          &lt;CartesianGrid strokeDasharray={'1 20'}/&gt;\n          &lt;ReferenceLine y={0} stroke={'#767676'}/&gt;\n          <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><line class=\"fea_Shapes_keys udls\" dot=\"{false}\" type=\"natural\">data</line>Key=\"balanceAmount\"\n            stroke=\"#5d6494\"\n          /&gt;</div>\n          &lt;Brush fill=\"#f5f5fa\" stroke=\"#848ab8\"/&gt;\n        &lt;/LineChart&gt;\n      &lt;/ResponsiveContainer&gt;\n    )\n  }\n\n  private handleTooltipFormat=(balanceAmount:any)=&gt;{\n    return convertToRs(balanceAmount)\n  }\n}\n\nexport default AllTransactionsGraph</code></pre></div>",
    "thr_4": "<div class=\"codeBlock hljs javascript\" id=\"thr_4\"><pre id=\"thr_4_code\" style=\"\"><code class=\"javascript\">import \"./styles.css\";\nimport React from \"react\";\nimport {\n  <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  <div class=\"highlights fea_Zoom\" id=\"Zoom_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Zoom_keys udls\">Brush</span></div>,\n  <div class=\"highlights fea_Area_Chart\" id=\"Area_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Area_Chart_keys udls\">Area</span>Chart</div>,\n  Area\n} from \"<div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_0\" style=\"background-color: #f6b73c;  display: inline;\">re<span class=\"fea_Multiple_Charts_keys udls\">chart</span>s</div>\";\n\nconst data = [\n  {\n    name: \"Page A\",\n    uv: 4000,\n    pv: 2400,\n    amt: 2400\n  },\n  {\n    name: \"Page B\",\n    uv: 3000,\n    pv: 1398,\n    amt: 2210\n  },\n  {\n    name: \"Page C\",\n    uv: 2000,\n    pv: 9800,\n    amt: 2290\n  },\n  {\n    name: \"Page D\",\n    uv: 2780,\n    pv: 3908,\n    amt: 2000\n  },\n  {\n    name: \"Page E\",\n    uv: 1890,\n    pv: 4800,\n    amt: 2181\n  },\n  {\n    name: \"Page F\",\n    uv: 2390,\n    pv: 3800,\n    amt: 2500\n  },\n  {\n    name: \"Page G\",\n    uv: 3490,\n    pv: 4300,\n    amt: 2100\n  }\n];\n\nexport default function App() {\n  return (\n    &lt;div&gt;\n      &lt;h4&gt;A demo of synchronized AreaCharts&lt;/h4&gt;\n      &lt;LineChart\n        <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Canvas_keys udls\">width</span>={500}\n        <span class=\"fea_Canvas_keys udls\">height</span>={200}\n        data={data}\n        syncId=\"anyId\"\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        }}</div>\n      &gt;\n        &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n        <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"name\" /&gt;\n        <y class=\"fea_Axis_keys udls\">Axis</y> /&gt;</div>\n        <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> /&gt;</div>\n        <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><line class=\"fea_Shapes_keys udls\" type=\"monotone\">data</line>Key=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" /&gt;</div>\n      &lt;/LineChart&gt;\n      &lt;p&gt;Maybe some other content&lt;/p&gt;\n      &lt;LineChart\n        width={500}\n        height={200}\n        data={data}\n        syncId=\"anyId\"\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        }}\n      &gt;\n        &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n        &lt;XAxis dataKey=\"name\" /&gt;\n        &lt;YAxis /&gt;\n        &lt;Tooltip /&gt;\n        &lt;Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fill=\"#82ca9d\" /&gt;\n        &lt;Brush /&gt;\n      &lt;/LineChart&gt;\n      &lt;AreaChart\n        width={500}\n        height={200}\n        data={data}\n        syncId=\"anyId\"\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        }}\n      &gt;\n        &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n        &lt;XAxis dataKey=\"name\" /&gt;\n        &lt;YAxis /&gt;\n        &lt;Tooltip /&gt;\n        &lt;Area type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fill=\"#82ca9d\" /&gt;\n      &lt;/AreaChart&gt;\n    &lt;/div&gt;\n  );\n}\n</code></pre></div>",
    "thr_5": "<div class=\"codeBlock hljs javascript\" id=\"thr_5\"><pre id=\"thr_5_code\" style=\"\"><code class=\"javascript\">import React, { PureComponent } from \"react\";\nimport {\n  <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ReferenceLine\n} from \"recharts\";\nimport * as moment from \"moment\";\n\nconst series = [\n  {\n    name: \"Actual Order\",\n    data: [\n      { orderDate: \"1\", value: 8 },\n      { orderDate: \"2\", value: 5 },\n      { orderDate: \"3\", value: 5.5 },\n      { orderDate: \"4\", value: 4.25 }\n    ],\n    stroke: \"#ffc220\"\n  },\n  {\n    name: \"HVI Prediction\",\n    data: [\n      { orderDate: \"1\", value: 6 },\n      { orderDate: \"2\", value: 5.5 },\n      { orderDate: \"3\", value: 4.25 },\n      { orderDate: \"4\", value: 5 }\n    ],\n    stroke: \"#a0b5e8\"\n  },\n  {\n    name: \"HVI Order\",\n    data: [\n      { orderDate: \"8\", value: 6 },\n      { orderDate: \"9\", value: 4.5, HVIRecommendedOrder: true }\n    ],\n    stroke: \"#0065ff\",\n    strokeDasharray: \"7 7\"\n  }\n];\n\nconst CustomizedDot = props =&gt; {\n  const { cx, cy, stroke, payload } = props;\n\n  if (!payload.HVIRecommendedOrder) {\n    return (\n      &lt;svg\n        <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">x={cx - 10}\n        y={cy - 10}\n        <span class=\"fea_Canvas_keys udls\">width</span>={40}\n        <span class=\"fea_Canvas_keys udls\">height</span>={40}\n        fill={stroke}\n        viewBox=\"0 0 200 200\"</div>\n      &gt;\n        <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><circle class=\"fea_Shapes_keys udls\" cx=\"50\" cy=\"50\" r=\"40\">stroke</circle>Width=\"3\" fill={stroke} /&gt;</div>\n      &lt;/svg&gt;\n    );\n  }\n\n  return (\n    &lt;svg x={cx - 20} y={cy - 15} width={40} height={40} viewBox=\"0 0 200 200\"&gt;\n      &lt;rect\n        width=\"15\"\n        height=\"15\"\n        fill=\"white\"\n        stroke={stroke}\n        strokeWidth=\"2\"\n        transform=\"matrix(3 3 -3 3 100 25)\"\n      /&gt;\n    &lt;/svg&gt;\n  );\n};\n\nconst CustomLine = props =&gt; {\n  const { x, y } = props.viewBox;\n  return (\n    <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Text_keys udls\">text</span>\n      fontSize=\"10px\"\n      fontWeight=\"bold\"\n      fill=\"green\"\n      x={x}\n      y={y - 10}\n      className=\"recharts-<span class=\"fea_Text_keys udls\">text</span> recharts-label\"\n      <span class=\"fea_Text_keys udls\">text</span>Anchor=\"middle\"\n    &gt;</div>\n      &lt;tspan x={x} dy=\"0.355em\"&gt;\n        Activated 4/10\n      &lt;/tspan&gt;\n    &lt;/text&gt;\n  );\n};\n\nexport default class Example extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.tooltip = null;\n    this.tooltipQty = null;\n    this.tooltipDate = null;\n  }\n\n  customMouseOver = (e, name) =&gt; {\n    let x = Math.round(e.cx);\n    let y = Math.round(e.cy);\n    this.tooltip.style.opacity = \"1\";\n    this.tooltip.style.transform = `translate(${x - 120}px, ${y - 140}px)`;\n    this.tooltipQty.innerHTML = e.payload[\"value\"];\n    this.tooltipDate.innerHTML = moment(e.payload[\"orderDate\"] + \"\", \"M\")\n      .format(\"MMM\")\n      .toUpperCase();\n  };\n\n  over = e =&gt; {\n    this.tooltip.style.opacity = \"0\";\n  };\n\n  xAxisTickFormatter(month) {\n    return month;\n  }\n\n  render() {\n    return (\n      &lt;div&gt;\n        &lt;LineChart width={900} height={300} margin={{ top: 20, right: 20 }}&gt;\n          &lt;CartesianGrid vertical={false} /&gt;\n         <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> <x class=\"fea_Axis_keys udls\">Axis</x>\n            dataKey=\"orderDate\"\n            tick={{ fontSize: 14, fontWeight: \"bold\" }}\n            domain={[1, 12]}\n            tickCount={12}\n            tickFormatter={this.x<span class=\"fea_Axis_keys udls\">Axis</span>TickFormatter}\n            type=\"number\"\n            tickLine={false}\n            allowDuplicatedCategory={false}\n            padding={{ left: 30, right: 30 }}\n          /&gt;\n          <y class=\"fea_Axis_keys udls\">Axis</y>\n            dataKey=\"value\"\n            tick={{ fontSize: 13, fill: \"#6d6e71\" }}\n            domain={[0, \"dataMax + 12\"]}\n            tickCount={20}\n            allowDecimals={false}\n            tickLine={false}\n          /&gt;</div>\n          <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> cursor={false} wrapperStyle={{ display: \"none\" }} /&gt;</div>\n          <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><reference class=\"fea_Shapes_keys udls\">Line</reference>\n            x=\"7\"\n            strokeDasharray=\"5,5\"\n            stroke=\"green\"\n            label={<custom class=\"fea_Shapes_keys udls\">Line</custom> /&gt;}\n          /&gt;</div>\n          {series.map(s =&gt; (\n            &lt;Line\n              <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">activeDot={{\n                on<span class=\"fea_Mouse_Events_keys udls\">Mouse</span><span class=\"fea_Mouse_Events_keys udls\">Ove</span>r: e =&gt; this.custom<span class=\"fea_Mouse_Events_keys udls\">Mouse</span><span class=\"fea_Mouse_Events_keys udls\">Ove</span>r(e, s.name),\n                on<span class=\"fea_Mouse_Events_keys udls\">Mouse</span>Leave: this.<span class=\"fea_Mouse_Events_keys udls\">ove</span>r\n              }}</div>\n              <div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">isAnim<span class=\"fea_Animations_keys udls\">ation</span>Active={false}</div>\n              dataKey=\"value\"\n              dot={&lt;CustomizedDot /&gt;}\n              stroke={s.stroke}\n              strokeDasharray={s.strokeDasharray}\n              data={s.data}\n              name={s.name}\n              key={s.name}\n            /&gt;\n          ))}\n        &lt;/LineChart&gt;\n        &lt;div className=\"ui-chart-tooltip\" ref={ref =&gt; (this.tooltip = ref)}&gt;\n          &lt;div className=\"ui-chart-tooltip-content\"&gt;\n            &lt;div className=\"tooltip-heading\"&gt;Inventory Order&lt;/div&gt;\n            &lt;div className=\"qty\"&gt;\n              &lt;div className=\"name\"&gt;Qty (Cases)&lt;/div&gt;\n              &lt;div ref={ref =&gt; (this.tooltipQty = ref)} className=\"value\" /&gt;\n            &lt;/div&gt;\n            &lt;div className=\"date\"&gt;\n              &lt;div className=\"name\"&gt;Date of Order&lt;/div&gt;\n              &lt;div ref={ref =&gt; (this.tooltipDate = ref)} className=\"value\" /&gt;\n            &lt;/div&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n</code></pre></div>",
    "thr_10": "<div class=\"codeBlock hljs javascript\" id=\"thr_10\"><pre id=\"thr_10_code\" style=\"\"><code class=\"javascript\">import React from \"react\";\nimport {\n  Label,\n  <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ReferenceArea\n} from \"recharts\";\n\nconst data = [\n  { name: 1, cost: 4.11, impression: 100 },\n  { name: 2, cost: 2.39, impression: 120 },\n  { name: 3, cost: 1.37, impression: 150 },\n  { name: 4, cost: 1.16, impression: 180 },\n  { name: 5, cost: 2.29, impression: 200 },\n  { name: 6, cost: 3, impression: 499 },\n  { name: 7, cost: 0.53, impression: 50 },\n  { name: 8, cost: 2.52, impression: 100 },\n  { name: 9, cost: 1.79, impression: 200 },\n  { name: 10, cost: 2.94, impression: 222 },\n  { name: 11, cost: 4.3, impression: 210 },\n  { name: 12, cost: 4.41, impression: 300 },\n  { name: 13, cost: 2.1, impression: 50 },\n  { name: 14, cost: 8, impression: 190 },\n  { name: 15, cost: 0, impression: 300 },\n  { name: 16, cost: 9, impression: 400 },\n  { name: 17, cost: 3, impression: 200 },\n  { name: 18, cost: 2, impression: 50 },\n  { name: 19, cost: 3, impression: 100 },\n  { name: 20, cost: 7, impression: 100 }\n];\n\nconst getAxisYDomain = (from, to, ref, offset) =&gt; {\n  const refData = data.slice(from - 1, to);\n  let [bottom, top] = [refData[0][ref], refData[0][ref]];\n  refData.forEach(d =&gt; {\n    if (d[ref] &gt; top) top = d[ref];\n    if (d[ref] &lt; bottom) bottom = d[ref];\n  });\n\n  return [(bottom | 0) - offset, (top | 0) + offset];\n};\n\nconst initialState = {\n  data,\n  left: \"dataMin\",\n  right: \"dataMax\",\n  refAreaLeft: \"\",\n  refAreaRight: \"\",\n  top: \"dataMax+1\",\n  bottom: \"dataMin-1\",\n  top2: \"dataMax+20\",\n  bottom2: \"dataMin-20\",\n  animation: true\n};\n\nexport default class StreamingDemo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  zoom() {\n    let { refAreaLeft, refAreaRight, data } = this.state;\n\n    if (refAreaLeft === refAreaRight || refAreaRight === \"\") {\n      this.setState(() =&gt; ({\n        refAreaLeft: \"\",\n        refAreaRight: \"\"\n      }));\n      return;\n    }\n\n    // xAxis domain\n    if (refAreaLeft &gt; refAreaRight)\n      [refAreaLeft, refAreaRight] = [refAreaRight, refAreaLeft];\n\n    // yAxis domain\n    const [bottom, top] = getAxisYDomain(refAreaLeft, refAreaRight, \"cost\", 1);\n    const [bottom2, top2] = getAxisYDomain(\n      refAreaLeft,\n      refAreaRight,\n      \"impression\",\n      50\n    );\n\n    this.setState(() =&gt; ({\n      refAreaLeft: \"\",\n      refAreaRight: \"\",\n      data: data.slice(),\n      left: refAreaLeft,\n      right: refAreaRight,\n      bottom,\n      top,\n      bottom2,\n      top2\n    }));\n  }\n\n  zoomOut() {\n    this.setState(({ data }) =&gt; ({\n      data: data.slice(),\n      refAreaLeft: \"\",\n      refAreaRight: \"\",\n      left: \"dataMin\",\n      right: \"dataMax\",\n      top: \"dataMax+1\",\n      top2: \"dataMax+50\",\n      bottom: \"dataMin\"\n    }));\n  }\n\n  render() {\n    const {\n      data,\n      left,\n      right,\n      refAreaLeft,\n      refAreaRight,\n      top,\n      bottom,\n      top2,\n      bottom2\n    } = this.state;\n\n    return (\n      &lt;div className=\"highlight-bar-charts\"&gt;\n        &lt;button className=\"btn update\" onClick={this.zoomOut.bind(this)}&gt;\n          Zoom Out\n        &lt;/button&gt;\n\n        &lt;p&gt;Highlight / Zoom - able Line Chart&lt;/p&gt;\n        &lt;LineChart\n          width={800}\n          height={400}\n          data={data}\n          onMouseDown={e =&gt; this.setState({ refAreaLeft: e.activeLabel })}\n          onMouseMove={e =&gt;\n            this.state.refAreaLeft &amp;&amp;\n            this.setState({ refAreaRight: e.activeLabel })\n          }\n          onMouseUp={this.zoom.bind(this)}\n        &gt;\n          &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n          <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x>\n            allowDataOverflow={true}\n            dataKey=\"name\"\n            domain={[left, right]}\n            type=\"number\"\n          /&gt;\n          <y class=\"fea_Axis_keys udls\">Axis</y>\n            allowDataOverflow={true}\n            domain={[bottom, top]}\n            type=\"number\"\n            y<span class=\"fea_Axis_keys udls\">Axis</span>Id=\"1\"\n          /&gt;\n          <y class=\"fea_Axis_keys udls\">Axis</y>\n            orientation=\"right\"\n            allowDataOverflow={true}\n            domain={[bottom2, top2]}\n            type=\"number\"\n            y<span class=\"fea_Axis_keys udls\">Axis</span>Id=\"2\"\n          /&gt;</div>\n          <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> /&gt;</div>\n         <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> <line class=\"fea_Shapes_keys udls\" type=\"natural\" yaxisid=\"1\">data</line>Key=\"cost\"\n            stroke=\"#8884d8\"</div>\n            <div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">anim<span class=\"fea_Animations_keys udls\">ation</span>Dur<span class=\"fea_Animations_keys udls\">ation</span>={300}</div>\n          /&gt;\n         <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> <line class=\"fea_Shapes_keys udls\" type=\"natural\" yaxisid=\"2\">data</line>Key=\"impression\"\n            stroke=\"#82ca9d\"</div>\n            <div class=\"highlights fea_Animations\" id=\"Animations_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">anim<span class=\"fea_Animations_keys udls\">ation</span>Dur<span class=\"fea_Animations_keys udls\">ation</span>={300}</div>\n          /&gt;\n\n          {refAreaLeft &amp;&amp; refAreaRight ? (\n            &lt;ReferenceArea\n              yAxisId=\"1\"\n              x1={refAreaLeft}\n              x2={refAreaRight}\n              strokeOpacity={0.3}\n            /&gt;\n          ) : null}\n        &lt;/LineChart&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n</code></pre></div>",
    "thr_11": "<div class=\"codeBlock hljs javascript\" id=\"thr_11\"><pre id=\"thr_11_code\" style=\"\"><code class=\"javascript\">import React from \"react\";\nimport { add, format, differenceInCalendarDays, isFuture } from \"date-fns\";\nimport {\n  <div class=\"highlights fea_Area_Chart\" id=\"Area_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Area_Chart_keys udls\">Area</span>Chart</div>,\n  Area,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ResponsiveContainer\n} from \"recharts\";\nimport DataUtils from \"./DataUtils\";\nimport CustomTooltip from \"./CustomTooltip\";\n\nconst dateFormatter = date =&gt; {\n  return format(new Date(date), \"dd/MMM\");\n};\n\n/**\n * get the dates between `startDate` and `endSate` with equal granularity\n */\nconst getTicks = (startDate, endDate, num) =&gt; {\n  const diffDays = differenceInCalendarDays(endDate, startDate);\n\n  let current = startDate,\n    velocity = Math.round(diffDays / (num - 1));\n\n  const ticks = [startDate.getTime()];\n\n  for (let i = 1; i &lt; num - 1; i++) {\n    ticks.push(add(current, { days: i * velocity }).getTime());\n  }\n\n  ticks.push(endDate.getTime());\n  return ticks;\n};\n\n/**\n * Add data of the date in ticks,\n * if there is no data in that date in `data`.\n *\n * @param Array&lt;number&gt; _ticks\n * @param {*} data\n */\nconst fillTicksData = (_ticks, data) =&gt; {\n  const ticks = [..._ticks];\n  const filled = [];\n  let currentTick = ticks.shift();\n  let lastData = null;\n  for (const it of data) {\n    if (ticks.length &amp;&amp; it.date &gt; currentTick &amp;&amp; lastData) {\n      filled.push({ ...lastData, ...{ date: currentTick } });\n      currentTick = ticks.shift();\n    } else if (ticks.length &amp;&amp; it.date === currentTick) {\n      currentTick = ticks.shift();\n    }\n\n    filled.push(it);\n    lastData = it;\n  }\n\n  return filled;\n};\n\nconst DateArea = () =&gt; {\n  // const startDate = new Date(2019, 0, 1);\n  // const endDate = new Date(2020, 0, 15);\n  // const data = [\n  //   ...DataUtils.days(startDate, 10),\n  //   ...DataUtils.days(add(startDate, { months: 2 }), 5),\n  //   ...DataUtils.months(add(startDate, { months: 5 }), 1),\n  //   ...DataUtils.months(add(startDate, { months: 8 }), 1)\n  // ].map(it =&gt; ({\n  //   date: it.date.getTime(),\n  //   val: it.val\n  // }));\n\n  const startDate = new Date(2019, 0, 11);\n  const endDate = new Date(2019, 9, 15);\n  const data = [\n    { date: startDate.getTime(), val: 2000 },\n    { date: new Date(2019, 4, 30).getTime(), val: 5000 },\n    { date: new Date(2019, 5, 30).getTime(), val: 5000 },\n    { date: new Date(2019, 6, 21).getTime(), val: 6000 },\n    { date: new Date(2019, 6, 28).getTime(), val: 9000 }\n  ];\n\n  const domain = [dataMin =&gt; dataMin, () =&gt; endDate.getTime()];\n  const ticks = getTicks(startDate, endDate, 5);\n  const filledData = fillTicksData(ticks, data);\n\n  return (\n    &lt;div&gt;\n      &lt;p&gt;AreaChart with custom tooltip&lt;/p&gt;\n      &lt;ResponsiveContainer width=\"90%\" height={200}&gt;\n        &lt;AreaChart\n          <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Canvas_keys udls\">width</span>={900}\n          <span class=\"fea_Canvas_keys udls\">height</span>={250}\n          data={filledData}\n          margin={{\n            top: 10,\n            right: 0,\n            bottom: 10,\n            left: 0\n          }}</div>\n        &gt;\n          <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><xaxis class=\"fea_Axis_keys udls\" datakey=\"date\" hastick=\"\">scale</xaxis>=\"time\"\n            tickFormatter={dateFormatter}\n            type=\"number\"\n            domain={domain}\n            ticks={ticks}\n          /&gt;\n          <yaxis hastick=\"\" tickcount=\"{7}\"></yaxis></div>\n          <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> content={<custom class=\"fea_Tooltip_keys udls\">Tooltip</custom> /&gt;} /&gt;</div>\n          <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><area class=\"fea_Shapes_keys udls\" type=\"monotone\"/><span class=\"fea_Shapes_keys udls\">data</span>Key=\"val\"\n            stroke=\"#ff7300\"\n            fill=\"#ff7300\"\n            fillOpacity={0.9}\n          /&gt;</div>\n        &lt;/AreaChart&gt;\n      &lt;/ResponsiveContainer&gt;\n    &lt;/div&gt;\n  );\n};\n\nexport default DateArea;\n</code></pre></div>",
    "thr_15": "<div class=\"codeBlock hljs javascript\" id=\"thr_15\"><pre id=\"thr_15_code\" style=\"\"><code class=\"javascript\">import React, { PureComponent } from 'react';\nimport <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div> from '@bit/recharts.recharts.line-chart';\nimport XAxis from '@bit/recharts.recharts.x-axis';\nimport YAxis from '@bit/recharts.recharts.y-axis';\nimport CartesianGrid from '@bit/recharts.recharts.cartesian-grid';\nimport Line from '@bit/recharts.recharts.line';\nimport Tooltip from '@bit/recharts.recharts.tooltip';\nimport ReferenceArea from '@bit/recharts.recharts.reference-area';\n\nconst data = [\n\t{ name: 1, cost: 4.11, impression: 100 },\n\t{ name: 2, cost: 2.39, impression: 120 },\n\t{ name: 3, cost: 1.37, impression: 150 },\n\t{ name: 4, cost: 1.16, impression: 180 },\n\t{ name: 5, cost: 2.29, impression: 200 },\n\t{ name: 6, cost: 3, impression: 499 },\n\t{ name: 7, cost: 0.53, impression: 50 },\n\t{ name: 8, cost: 2.52, impression: 100 },\n\t{ name: 9, cost: 1.79, impression: 200 },\n\t{ name: 10, cost: 2.94, impression: 222 },\n\t{ name: 11, cost: 4.3, impression: 210 },\n\t{ name: 12, cost: 4.41, impression: 300 },\n\t{ name: 13, cost: 2.1, impression: 50 },\n\t{ name: 14, cost: 8, impression: 190 },\n\t{ name: 15, cost: 0, impression: 300 },\n\t{ name: 16, cost: 9, impression: 400 },\n\t{ name: 17, cost: 3, impression: 200 },\n\t{ name: 18, cost: 2, impression: 50 },\n\t{ name: 19, cost: 3, impression: 100 },\n\t{ name: 20, cost: 7, impression: 100 },\n];\n\nconst getAxisYDomain = (from, to, ref, offset) =&gt; {\n\tconst refData = data.slice(from - 1, to);\n\tlet [bottom, top] = [refData[0][ref], refData[0][ref]];\n\trefData.forEach((d) =&gt; {\n\t\tif (d[ref] &gt; top) top = d[ref];\n\t\tif (d[ref] &lt; bottom) bottom = d[ref];\n\t});\n\n\treturn [(bottom | 0) - offset, (top | 0) + offset];\n};\n\nconst initialState = {\n\tdata,\n\tleft: 'dataMin',\n\tright: 'dataMax',\n\trefAreaLeft: '',\n\trefAreaRight: '',\n\ttop: 'dataMax+1',\n\tbottom: 'dataMin-1',\n\ttop2: 'dataMax+20',\n\tbottom2: 'dataMin-20',\n\tanimation: true,\n};\n\nexport default class Example extends PureComponent {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = initialState;\n\t}\n\n\tzoom() {\n\t\tlet { refAreaLeft, refAreaRight, data } = this.state;\n\n\t\tif (refAreaLeft === refAreaRight || refAreaRight === '') {\n\t\t\tthis.setState(() =&gt; ({\n\t\t\t\trefAreaLeft: '',\n\t\t\t\trefAreaRight: '',\n\t\t\t}));\n\t\t\treturn;\n\t\t}\n\n\t\t// xAxis domain\n\t\tif (refAreaLeft &gt; refAreaRight) [refAreaLeft, refAreaRight] = [refAreaRight, refAreaLeft];\n\n\t\t// yAxis domain\n\t\tconst [bottom, top] = getAxisYDomain(refAreaLeft, refAreaRight, 'cost', 1);\n\t\tconst [bottom2, top2] = getAxisYDomain(refAreaLeft, refAreaRight, 'impression', 50);\n\n\t\tthis.setState(() =&gt; ({\n\t\t\trefAreaLeft: '',\n\t\t\trefAreaRight: '',\n\t\t\tdata: data.slice(),\n\t\t\tleft: refAreaLeft,\n\t\t\tright: refAreaRight,\n\t\t\tbottom,\n\t\t\ttop,\n\t\t\tbottom2,\n\t\t\ttop2,\n\t\t}));\n\t}\n\n\tzoomOut() {\n\t\tconst { data } = this.state;\n\t\tthis.setState(() =&gt; ({\n\t\t\tdata: data.slice(),\n\t\t\trefAreaLeft: '',\n\t\t\trefAreaRight: '',\n\t\t\tleft: 'dataMin',\n\t\t\tright: 'dataMax',\n\t\t\ttop: 'dataMax+1',\n\t\t\tbottom: 'dataMin',\n\t\t\ttop2: 'dataMax+50',\n\t\t\tbottom: 'dataMin+50',\n\t\t}));\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tdata, barIndex, left, right, refAreaLeft, refAreaRight, top, bottom, top2, bottom2,\n\t\t} = this.state;\n\n\t\treturn (\n\t\t\t&lt;div className=\"highlight-bar-charts\" style={{ userSelect: 'none' }}&gt;\n\t\t\t\t&lt;button\n\t\t\t\t\thref=\"javascript: void(0);\"\n\t\t\t\t\tclassName=\"btn update\"\n\t\t\t\t\t<div class=\"highlights fea_Zoom\" id=\"Zoom_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">onClick={this.zoomOut.bind(this)}</div>\n\t\t\t\t&gt;\n\t\t\t\t\tZoom Out\n\n        &lt;/button&gt;\n\n\t\t\t\t&lt;LineChart\n\t\t\t\t\t<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Canvas_keys udls\">width</span>={800}\n\t\t\t\t\t<span class=\"fea_Canvas_keys udls\">height</span>={400}</div>\n\t\t\t\t\tdata={data}\n\t\t\t\t\t<div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">on<span class=\"fea_Mouse_Events_keys udls\">Mouse</span>Down={e =&gt; this.setState({ refAreaLeft: e.activeLabel })}\n\t\t\t\t\ton<span class=\"fea_Mouse_Events_keys udls\">Mouse</span>M<span class=\"fea_Mouse_Events_keys udls\">ove</span>={e =&gt; this.state.refAreaLeft &amp;&amp; this.setState({ refAreaRight: e.activeLabel })}\n\t\t\t\t\ton<span class=\"fea_Mouse_Events_keys udls\">Mouse</span>Up={this.zoom.bind(this)}</div>\n\t\t\t\t&gt;\n\t\t\t\t\t&lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n\t\t\t\t\t<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x>\n\t\t\t\t\t\tallowDataOverflow\n\t\t\t\t\t\tdataKey=\"name\"\n\t\t\t\t\t\tdomain={[left, right]}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t/&gt;\n\t\t\t\t\t<y class=\"fea_Axis_keys udls\">Axis</y>\n\t\t\t\t\t\tallowDataOverflow\n\t\t\t\t\t\tdomain={[bottom, top]}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\ty<span class=\"fea_Axis_keys udls\">Axis</span>Id=\"1\"\n\t\t\t\t\t/&gt;\n\t\t\t\t\t<y class=\"fea_Axis_keys udls\">Axis</y>\n\t\t\t\t\t\torientation=\"right\"\n\t\t\t\t\t\tallowDataOverflow\n\t\t\t\t\t\tdomain={[bottom2, top2]}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\ty<span class=\"fea_Axis_keys udls\">Axis</span>Id=\"2\"\n\t\t\t\t\t/&gt;</div>\n\t\t\t\t\t<div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> /&gt;</div>\n\t\t\t\t\t&lt;<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">Line yAxisId=\"1\" type=\"natural\" <span class=\"fea_Shapes_keys udls\">data</span>Key=\"cost\" stroke=\"#8884d8\" animationDuration={300} /&gt;\n\t\t\t\t\t<line class=\"fea_Shapes_keys udls\" type=\"natural\" yaxisid=\"2\">data</line>Key=\"impression\" stroke=\"#82ca9d\" animationDuration={300} /&gt;</div>\n\n\t\t\t\t\t{\n\t\t\t\t\t\t(refAreaLeft &amp;&amp; refAreaRight) ? (\n\t\t\t\t\t\t\t&lt;ReferenceArea yAxisId=\"1\" x1={refAreaLeft} x2={refAreaRight} strokeOpacity={0.3} /&gt;) : null\n\t\t\t\t\t}\n\t\t\t\t&lt;/LineChart&gt;\n\n\t\t\t&lt;/div&gt;\n\t\t);\n\t}\n}\n</code></pre></div>",
    "thr_22": "<div class=\"codeBlock hljs javascript\" id=\"thr_22\"><pre id=\"thr_22_code\" style=\"\"><code class=\"javascript\">import React, { PureComponent } from 'react';\nimport { <div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Pie_Chart_keys udls\">Pie</span>Chart</div>, Pie, Legend, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst data01 = [\n  { name: 'Group A', value: 400 },\n  { name: 'Group B', value: 300 },\n  { name: 'Group C', value: 300 },\n  { name: 'Group D', value: 200 },\n  { name: 'Group E', value: 278 },\n  { name: 'Group F', value: 189 },\n];\n\nconst data02 = [\n  { name: 'Group A', value: 2400 },\n  { name: 'Group B', value: 4567 },\n  { name: 'Group C', value: 1398 },\n  { name: 'Group D', value: 9800 },\n  { name: 'Group E', value: 3908 },\n  { name: 'Group F', value: 4800 },\n];\n\nexport default class Example extends PureComponent {\n  static demoUrl = 'https://codesandbox.io/s/two-simple-pie-chart-otx9h';\n\n  render() {\n    return (\n      &lt;ResponsiveContainer width=\"100%\" height=\"100%\"&gt;\n        &lt;PieChart width={400} height={400}&gt;\n          <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><pie class=\"fea_Shapes_keys udls\">data</pie>Key=\"value\"\n            isAnimationActive={false}\n            <span class=\"fea_Shapes_keys udls\">data</span>={<span class=\"fea_Shapes_keys udls\">data</span>01}\n            cx=\"50%\"\n            cy=\"50%\"\n            outerRadius={80}\n            fill=\"#8884d8\"\n            label\n          /&gt;</div>\n          &lt;Pie dataKey=\"value\" data={data02} cx={500} cy={200} innerRadius={40} outerRadius={80} fill=\"#82ca9d\" /&gt;\n         <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> &lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> /&gt;</div>\n        &lt;/PieChart&gt;\n      &lt;/ResponsiveContainer&gt;\n    );\n  }\n}\n//https://recharts.org/en-US/examples/TwoSimplePieChart</code></pre></div>",
    "thr_23": "<div class=\"codeBlock hljs javascript\" id=\"thr_23\"><pre id=\"thr_23_code\" style=\"\"><code class=\"javascript\">import React, { PureComponent } from 'react';\nimport { <div class=\"highlights fea_Scatter_Plot\" id=\"Scatter_Plot_0\" style=\"background-color: #f6b73c;  display: inline;\">Scat<span class=\"fea_Scatter_Plot_keys udls\">ter</span>Chart</div>, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst data01 = [\n  { x: 100, y: 200, z: 200 },\n  { x: 120, y: 100, z: 260 },\n  { x: 170, y: 300, z: 400 },\n  { x: 140, y: 250, z: 280 },\n  { x: 150, y: 400, z: 500 },\n  { x: 110, y: 280, z: 200 },\n];\nconst data02 = [\n  { x: 300, y: 300, z: 200 },\n  { x: 400, y: 500, z: 260 },\n  { x: 200, y: 700, z: 400 },\n  { x: 340, y: 350, z: 280 },\n  { x: 560, y: 500, z: 500 },\n  { x: 230, y: 780, z: 200 },\n  { x: 500, y: 400, z: 200 },\n  { x: 300, y: 500, z: 260 },\n  { x: 240, y: 300, z: 400 },\n  { x: 320, y: 550, z: 280 },\n  { x: 500, y: 400, z: 500 },\n  { x: 420, y: 280, z: 200 },\n];\n\nexport default class Example extends PureComponent {\n  static demoUrl = 'https://codesandbox.io/s/scatter-chart-with-double-yaxes-tiuob';\n\n  render() {\n    return (\n      &lt;ResponsiveContainer width=\"100%\" height=\"100%\"&gt;\n        &lt;ScatterChart\n          <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Canvas_keys udls\">width</span>={500}\n          <span class=\"fea_Canvas_keys udls\">height</span>={400}\n          margin={{\n            top: 20,\n            right: 20,\n            bottom: 20,\n            left: 20,\n          }}</div>\n        &gt;\n          &lt;CartesianGrid /&gt;\n          <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x> type=\"number\" dataKey=\"x\" name=\"stature\" unit=\"cm\" /&gt;\n          <y class=\"fea_Axis_keys udls\">Axis</y> y<span class=\"fea_Axis_keys udls\">Axis</span>Id=\"left\" type=\"number\" dataKey=\"y\" name=\"weight\" unit=\"kg\" stroke=\"#8884d8\" /&gt;\n          <y class=\"fea_Axis_keys udls\">Axis</y>\n            y<span class=\"fea_Axis_keys udls\">Axis</span>Id=\"right\"\n            type=\"number\"\n            dataKey=\"y\"\n            name=\"weight\"\n            unit=\"kg\"\n            orientation=\"right\"\n            stroke=\"#82ca9d\"\n          /&gt;</div>\n          <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> cursor={{ strokeDasharray: '3 3' }} /&gt;</div>\n         <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> <scatter class=\"fea_Shapes_keys udls\" name=\"A school\" yaxisid=\"left\">data</scatter>={<span class=\"fea_Shapes_keys udls\">data</span>01} fill=\"#8884d8\" /&gt;\n          <scatter class=\"fea_Shapes_keys udls\" name=\"A school\" yaxisid=\"right\">data</scatter>={<span class=\"fea_Shapes_keys udls\">data</span>02} fill=\"#82ca9d\" /&gt;</div>\n        &lt;/ScatterChart&gt;\n      &lt;/ResponsiveContainer&gt;\n    );\n  }\n}\n//https://recharts.org/en-US/examples/MultipleYAxesScatterChart</code></pre></div>",
    "thr_27": "<div class=\"codeBlock hljs javascript\" id=\"thr_27\"><pre id=\"thr_27_code\" style=\"\"><code class=\"javascript\">import React, { PureComponent } from 'react';\nimport { <div class=\"highlights fea_Area_Chart\" id=\"Area_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Area_Chart_keys udls\">Area</span>Chart</div>, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\n\nconst data = [\n  {\n    name: 'Page A',\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: 'Page B',\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: 'Page C',\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: 'Page D',\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: 'Page E',\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: 'Page F',\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: 'Page G',\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nexport default class Example extends PureComponent {\n  static demoUrl = 'https://codesandbox.io/s/stacked-area-chart-ix341';\n\n  render() {\n    return (\n      &lt;ResponsiveContainer width=\"100%\" height=\"100%\"&gt;\n        &lt;AreaChart\n          <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Canvas_keys udls\">width</span>={500}\n          <span class=\"fea_Canvas_keys udls\">height</span>={400}\n          data={data}\n          margin={{\n            top: 10,\n            right: 30,\n            left: 0,\n            bottom: 0,\n          }}</div>\n        &gt;\n          &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n         <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> <x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"name\" /&gt;\n          <y class=\"fea_Axis_keys udls\">Axis</y> /&gt;</div>\n          <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> /&gt;</div>\n          <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><area class=\"fea_Shapes_keys udls\" type=\"monotone\"/><span class=\"fea_Shapes_keys udls\">data</span>Key=\"uv\" stackId=\"1\" stroke=\"#8884d8\" fill=\"#8884d8\" /&gt;\n          <area class=\"fea_Shapes_keys udls\" type=\"monotone\"/><span class=\"fea_Shapes_keys udls\">data</span>Key=\"pv\" stackId=\"1\" stroke=\"#82ca9d\" fill=\"#82ca9d\" /&gt;\n          <area class=\"fea_Shapes_keys udls\" type=\"monotone\"/><span class=\"fea_Shapes_keys udls\">data</span>Key=\"amt\" stackId=\"1\" stroke=\"#ffc658\" fill=\"#ffc658\" /&gt;</div>\n        &lt;/AreaChart&gt;\n      &lt;/ResponsiveContainer&gt;\n    );\n  }\n}\n//https://recharts.org/en-US/examples/StackedAreaChart</code></pre></div>",
    "thr_29": "<div class=\"codeBlock hljs javascript\" id=\"thr_29\"><pre id=\"thr_29_code\" style=\"\"><code class=\"javascript\">import \"./styles.css\";\nimport React from \"react\";\nimport {\n  <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  <div class=\"highlights fea_Zoom\" id=\"Zoom_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Zoom_keys udls\">Brush</span></div>,\n  <div class=\"highlights fea_Area_Chart\" id=\"Area_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Area_Chart_keys udls\">Area</span>Chart</div>,\n  Area\n} from \"<div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_0\" style=\"background-color: #f6b73c;  display: inline;\">re<span class=\"fea_Multiple_Charts_keys udls\">chart</span>s</div>\";\n\nconst data = [\n  {\n    name: \"Page A\",\n    uv: 4000,\n    pv: 2400,\n    amt: 2400\n  },\n  {\n    name: \"Page B\",\n    uv: 3000,\n    pv: 1398,\n    amt: 2210\n  },\n  {\n    name: \"Page C\",\n    uv: 2000,\n    pv: 9800,\n    amt: 2290\n  },\n  {\n    name: \"Page D\",\n    uv: 2780,\n    pv: 3908,\n    amt: 2000\n  },\n  {\n    name: \"Page E\",\n    uv: 1890,\n    pv: 4800,\n    amt: 2181\n  },\n  {\n    name: \"Page F\",\n    uv: 2390,\n    pv: 3800,\n    amt: 2500\n  },\n  {\n    name: \"Page G\",\n    uv: 3490,\n    pv: 4300,\n    amt: 2100\n  }\n];\n\nexport default function App() {\n  return (\n    &lt;div&gt;\n      &lt;h4&gt;A demo of synchronized AreaCharts&lt;/h4&gt;\n      &lt;LineChart\n       <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> <span class=\"fea_Canvas_keys udls\">width</span>={500}\n        <span class=\"fea_Canvas_keys udls\">height</span>={200}\n        data={data}\n        syncId=\"anyId\"\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        }}</div>\n      &gt;\n        &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n       <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> <x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"name\" /&gt;\n        <y class=\"fea_Axis_keys udls\">Axis</y> /&gt;</div>\n       <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> &lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> /&gt;</div>\n        <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><line class=\"fea_Shapes_keys udls\" type=\"monotone\">data</line>Key=\"uv\" stroke=\"#8884d8\" fill=\"#8884d8\" /&gt;</div>\n      &lt;/LineChart&gt;\n      &lt;p&gt;Maybe some other content&lt;/p&gt;\n      &lt;LineChart\n        width={500}\n        height={200}\n        <div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Import_Data_keys udls\">data</span>={<span class=\"fea_Import_Data_keys udls\">data</span>}</div>\n        syncId=\"anyId\"\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        }}\n      &gt;\n        &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n        &lt;XAxis dataKey=\"name\" /&gt;\n        &lt;YAxis /&gt;\n        &lt;Tooltip /&gt;\n        &lt;Line type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fill=\"#82ca9d\" /&gt;\n        &lt;Brush /&gt;\n      &lt;/LineChart&gt;\n      &lt;AreaChart\n        width={500}\n        height={200}\n        data={data}\n        syncId=\"anyId\"\n        margin={{\n          top: 10,\n          right: 30,\n          left: 0,\n          bottom: 0\n        }}\n      &gt;\n        &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n        &lt;XAxis dataKey=\"name\" /&gt;\n        &lt;YAxis /&gt;\n        &lt;Tooltip /&gt;\n        &lt;Area type=\"monotone\" dataKey=\"pv\" stroke=\"#82ca9d\" fill=\"#82ca9d\" /&gt;\n      &lt;/AreaChart&gt;\n    &lt;/div&gt;\n  );\n}\n//https://codesandbox.io/s/synchronized-line-charts-zc3nl?file=/src/App.tsx:0-2165</code></pre></div>",
    "thr_30": "<div class=\"codeBlock hljs javascript\" id=\"thr_30\"><pre id=\"thr_30_code\" style=\"\"><code class=\"javascript\">import React, { PureComponent } from 'react';\nimport {\n  Label,\n  <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  ReferenceArea,\n  ResponsiveContainer,\n} from 'recharts';\n\nconst initialData = [\n  { name: 1, cost: 4.11, impression: 100 },\n  { name: 2, cost: 2.39, impression: 120 },\n  { name: 3, cost: 1.37, impression: 150 },\n  { name: 4, cost: 1.16, impression: 180 },\n  { name: 5, cost: 2.29, impression: 200 },\n  { name: 6, cost: 3, impression: 499 },\n  { name: 7, cost: 0.53, impression: 50 },\n  { name: 8, cost: 2.52, impression: 100 },\n  { name: 9, cost: 1.79, impression: 200 },\n  { name: 10, cost: 2.94, impression: 222 },\n  { name: 11, cost: 4.3, impression: 210 },\n  { name: 12, cost: 4.41, impression: 300 },\n  { name: 13, cost: 2.1, impression: 50 },\n  { name: 14, cost: 8, impression: 190 },\n  { name: 15, cost: 0, impression: 300 },\n  { name: 16, cost: 9, impression: 400 },\n  { name: 17, cost: 3, impression: 200 },\n  { name: 18, cost: 2, impression: 50 },\n  { name: 19, cost: 3, impression: 100 },\n  { name: 20, cost: 7, impression: 100 },\n];\n\nconst getAxisYDomain = (from, to, ref, offset) =&gt; {\n  const refData = initialData.slice(from - 1, to);\n  let [bottom, top] = [refData[0][ref], refData[0][ref]];\n  refData.forEach((d) =&gt; {\n    if (d[ref] &gt; top) top = d[ref];\n    if (d[ref] &lt; bottom) bottom = d[ref];\n  });\n\n  return [(bottom | 0) - offset, (top | 0) + offset];\n};\n\nconst initialState = {\n  data: initialData,\n  left: 'dataMin',\n  right: 'dataMax',\n  refAreaLeft: '',\n  refAreaRight: '',\n  top: 'dataMax+1',\n  bottom: 'dataMin-1',\n  top2: 'dataMax+20',\n  bottom2: 'dataMin-20',\n  animation: true,\n};\n\nexport default class Example extends PureComponent {\n  static demoUrl = 'https://codesandbox.io/s/highlight-zomm-line-chart-v77bt';\n\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  zoom() {\n    let { refAreaLeft, refAreaRight } = this.state;\n    const { data } = this.state;\n\n    if (refAreaLeft === refAreaRight || refAreaRight === '') {\n      this.setState(() =&gt; ({\n        refAreaLeft: '',\n        refAreaRight: '',\n      }));\n      return;\n    }\n\n    // xAxis domain\n    if (refAreaLeft &gt; refAreaRight) [refAreaLeft, refAreaRight] = [refAreaRight, refAreaLeft];\n\n    // yAxis domain\n    const [bottom, top] = getAxisYDomain(refAreaLeft, refAreaRight, 'cost', 1);\n    const [bottom2, top2] = getAxisYDomain(refAreaLeft, refAreaRight, 'impression', 50);\n\n    this.setState(() =&gt; ({\n      refAreaLeft: '',\n      refAreaRight: '',\n      data: data.slice(),\n      left: refAreaLeft,\n      right: refAreaRight,\n      bottom,\n      top,\n      bottom2,\n      top2,\n    }));\n  }\n\n  zoomOut() {\n    const { data } = this.state;\n    this.setState(() =&gt; ({\n      data: data.slice(),\n      refAreaLeft: '',\n      refAreaRight: '',\n      left: 'dataMin',\n      right: 'dataMax',\n      top: 'dataMax+1',\n      bottom: 'dataMin',\n      top2: 'dataMax+50',\n      bottom2: 'dataMin+50',\n    }));\n  }\n\n  render() {\n    const { data, barIndex, left, right, refAreaLeft, refAreaRight, top, bottom, top2, bottom2 } = this.state;\n\n    return (\n      &lt;div className=\"highlight-bar-charts\" style={{ userSelect: 'none', width: '100%' }}&gt;\n        &lt;button type=\"button\" className=\"btn update\" onClick={this.zoomOut.bind(this)}&gt;\n          Zoom Out\n        &lt;/button&gt;\n\n        &lt;ResponsiveContainer width=\"100%\" height={400}&gt;\n          &lt;LineChart\n           <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> <span class=\"fea_Canvas_keys udls\">width</span>={800}\n            <span class=\"fea_Canvas_keys udls\">height</span>={400}</div>\n            <div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Import_Data_keys udls\">data</span>={<span class=\"fea_Import_Data_keys udls\">data</span>}</div>\n            <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">on<span class=\"fea_Mouse_Events_keys udls\">Mouse</span>Down={(e) =&gt; this.setState({ refAreaLeft: e.activeLabel })}\n            on<span class=\"fea_Mouse_Events_keys udls\">Mouse</span>M<span class=\"fea_Mouse_Events_keys udls\">ove</span>={(e) =&gt; this.state.refAreaLeft &amp;&amp; this.setState({ refAreaRight: e.activeLabel })}\n            // eslint-disable-next-line react/jsx-no-bind\n            on<span class=\"fea_Mouse_Events_keys udls\">Mouse</span>Up={this.zoom.bind(this)}</div>\n          &gt;\n            &lt;CartesianGrid strokeDasharray=\"3 3\" /&gt;\n            <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x> allowDataOverflow dataKey=\"name\" domain={[left, right]} type=\"number\" /&gt;\n            <y class=\"fea_Axis_keys udls\">Axis</y> allowDataOverflow domain={[bottom, top]} type=\"number\" y<span class=\"fea_Axis_keys udls\">Axis</span>Id=\"1\" /&gt;\n            <y class=\"fea_Axis_keys udls\">Axis</y> orientation=\"right\" allowDataOverflow domain={[bottom2, top2]} type=\"number\" y<span class=\"fea_Axis_keys udls\">Axis</span>Id=\"2\" /&gt;</div>\n           <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> &lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> /&gt;</div>\n            <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><line class=\"fea_Shapes_keys udls\" type=\"natural\" yaxisid=\"1\">data</line>Key=\"cost\" stroke=\"#8884d8\" animationDuration={300} /&gt;\n            <line class=\"fea_Shapes_keys udls\" type=\"natural\" yaxisid=\"2\">data</line>Key=\"impression\" stroke=\"#82ca9d\" animationDuration={300} /&gt;\n</div>\n            {refAreaLeft &amp;&amp; refAreaRight ? (\n              &lt;ReferenceArea yAxisId=\"1\" x1={refAreaLeft} x2={refAreaRight} strokeOpacity={0.3} /&gt;\n            ) : null}\n          &lt;/LineChart&gt;\n        &lt;/ResponsiveContainer&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n//https://recharts.org/en-US/examples/HighlightAndZoomLineChart</code></pre></div>",
    "thr_6": "<div class=\"codeBlock hljs javascript\" id=\"thr_6\"><pre id=\"thr_6_code\" style=\"\"><code class=\"javascript\">import React, { useState } from \"react\";\nimport { render } from \"react-dom\";\n\nimport { <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>, Line, XAxis, YAxis, ReferenceArea } from \"recharts\";\n\nconst styles = {\n  fontFamily: \"sans-serif\",\n  textAlign: \"center\"\n};\n\nconst data = [];\n\nconst rand = 300;\nfor (let i = 0; i &lt; 7; i++) {\n  let d = {\n    year: 2000 + i,\n    value: Math.random() * (rand + 50) + 100\n  };\n\n  data.push(d);\n}\n\nconst App = () =&gt; {\n  const [showCircle, setShowCircle] = useState(false);\n\n  const onMouseOver = () =&gt; {\n    setShowCircle(true);\n  };\n\n  const onMouseOut = () =&gt; {\n    setShowCircle(false);\n  };\n\n  return (\n    &lt;div style={styles}&gt;\n      &lt;LineChart\n        <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Canvas_keys udls\">width</span>={500}\n        <span class=\"fea_Canvas_keys udls\">height</span>={300}\n        data={data}\n        margin={{ top: 5, right: 20, bottom: 5, left: 0 }}</div>\n      &gt;\n        <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><line class=\"fea_Shapes_keys udls\" type=\"monotone\">data</line>Key=\"value\" stroke=\"#8884d8\" dot={false} /&gt;</div>\n        <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"year\" /&gt;\n        <y class=\"fea_Axis_keys udls\">Axis</y> /&gt;</div>\n        &lt;ReferenceArea\n          x1={2001}\n          x2={2003}\n          <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">on<span class=\"fea_Mouse_Events_keys udls\">Mouse</span>Out={on<span class=\"fea_Mouse_Events_keys udls\">Mouse</span>Out}\n          on<span class=\"fea_Mouse_Events_keys udls\">Mouse</span><span class=\"fea_Mouse_Events_keys udls\">Ove</span>r={on<span class=\"fea_Mouse_Events_keys udls\">Mouse</span><span class=\"fea_Mouse_Events_keys udls\">Ove</span>r}</div>\n          label=\"an important period\"\n        /&gt;\n        <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">{showCircle ? &lt;circle cx={150} cy={50} r=\"10\" fill=\"red\" /&gt; : null}</div>\n      &lt;/LineChart&gt;\n    &lt;/div&gt;\n  );\n};\n\nrender(&lt;App /&gt;, document.getElementById(\"root\"));\n</code></pre></div>",
    "thr_7": "<div class=\"codeBlock hljs javascript\" id=\"thr_7\"><pre id=\"thr_7_code\" style=\"\"><code class=\"javascript\">import React, { useState } from \"react\";\nimport { render } from \"react-dom\";\n\nimport { <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>, Line, XAxis, YAxis, ReferenceArea } from \"recharts\";\n\nconst styles = {\n  fontFamily: \"sans-serif\",\n  textAlign: \"center\"\n};\n\nconst data = [];\n\nconst rand = 300;\nfor (let i = 0; i &lt; 7; i++) {\n  let d = {\n    year: 2000 + i,\n    value: Math.random() * (rand + 50) + 100\n  };\n\n  data.push(d);\n}\n\nconst App = () =&gt; {\n  const [showCircle, setShowCircle] = useState(false);\n\n  const onMouseOver = () =&gt; {\n    setShowCircle(true);\n  };\n\n  const onMouseOut = () =&gt; {\n    setShowCircle(false);\n  };\n\n  return (\n    &lt;div style={styles}&gt;\n      &lt;LineChart\n        <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Canvas_keys udls\">width</span>={500}\n        <span class=\"fea_Canvas_keys udls\">height</span>={300}\n        data={data}\n        margin={{ top: 5, right: 20, bottom: 5, left: 0 }}</div>\n      &gt;\n        <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><line class=\"fea_Shapes_keys udls\" type=\"monotone\">data</line>Key=\"value\" stroke=\"#8884d8\" dot={false} /&gt;</div>\n        <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"year\" /&gt;\n        <y class=\"fea_Axis_keys udls\">Axis</y> /&gt;</div>\n        &lt;ReferenceArea\n          x1={2001}\n          x2={2003}\n          <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\">on<span class=\"fea_Mouse_Events_keys udls\">Mouse</span>Out={on<span class=\"fea_Mouse_Events_keys udls\">Mouse</span>Out}\n          on<span class=\"fea_Mouse_Events_keys udls\">Mouse</span><span class=\"fea_Mouse_Events_keys udls\">Ove</span>r={on<span class=\"fea_Mouse_Events_keys udls\">Mouse</span><span class=\"fea_Mouse_Events_keys udls\">Ove</span>r}</div>\n          label=\"an important period\"\n        /&gt;\n        <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\">{showCircle ? &lt;circle cx={150} cy={50} r=\"10\" fill=\"red\" /&gt; : null}</div>\n      &lt;/LineChart&gt;\n    &lt;/div&gt;\n  );\n};\n\nrender(&lt;App /&gt;, document.getElementById(\"root\"));\n</code></pre></div>",
    "thr_9": "<div class=\"codeBlock hljs javascript\" id=\"thr_9\"><pre id=\"thr_9_code\" style=\"\"><code class=\"javascript\">import React, { Component } from \"react\";\nimport {\n  YAxis,\n  XAxis,\n  HorizontalGridLines,\n  VerticalGridLines,\n  XYPlot,\n  <div class=\"highlights fea_Area_Chart\" id=\"Area_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Area_Chart_keys udls\">Area</span>Series</div>,\n  Crosshair\n} from \"react-vis\";\nimport styles from \"./styles\";\nimport \"react-vis/dist/style.css\";\nimport { simpleData } from \"../util\";\nimport moment from \"moment\";\n\nexport class ReactVisArea extends Component {\n  state = {\n    data: [\n      simpleData().map(({ x, y }) =&gt; ({ x: new Date(x).getTime(), y })),\n      simpleData().map(({ x, y }) =&gt; ({ x: new Date(x).getTime(), y }))\n    ],\n    crosshairValues: []\n  };\n\n  _onMouseLeave = () =&gt; {\n    this.setState({ crosshairValues: [] });\n  };\n  _onNearestX = ({ x, y }, e) =&gt; {\n    this.setState({ crosshairValues: this.state.data.map((d) =&gt; d[e.index]) });\n  };\n\n  render() {\n    const { data, crosshairValues } = this.state;\n\n    return (\n      &lt;div style={styles.container}&gt;\n        &lt;h3 style={styles.title}&gt;React-vis Stacked Area Chart&lt;/h3&gt;\n        &lt;XYPlot\n          <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Canvas_keys udls\">height</span>={400}\n          <span class=\"fea_Canvas_keys udls\">width</span>={800}\n          margin={{ right: 32, bottom: 60 }}</div>\n          stackedBy=\"y\"\n          domain={[0, 200]}\n        &gt;\n          &lt;VerticalGridLines /&gt;\n          &lt;HorizontalGridLines /&gt;\n          <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x>\n            tickTotal={10}\n            tickFormat={function tickFormat(d) {\n              return moment(new Date(d)).format(\"mm:ss\");\n            }}\n          /&gt;\n          <y class=\"fea_Axis_keys udls\">Axis</y> /&gt;\n          <areaseries color=\"steelblue\" data=\"{data[0]}\" onnearestx=\"{this._onNearestX}\" opacity=\"{0.5}\"></areaseries></div>\n        <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"> <areaseries class=\"fea_Shapes_keys udls\">data</areaseries>={<span class=\"fea_Shapes_keys udls\">data</span>[1]} color=\"slateblue\" opacity={0.5} /&gt;\n          <crosshair values=\"{crosshairValues}\"></crosshair></div>\n        &lt;/XYPlot&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n</code></pre></div>",
    "thr_12": "<div class=\"codeBlock hljs javascript\" id=\"thr_12\"><pre id=\"thr_12_code\" style=\"\"><code class=\"javascript\">import React from \"react\";\nimport { render } from \"react-dom\";\n\nimport { <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>, Line, XAxis, YAxis, ReferenceLine } from \"recharts\";\n\nconst styles = {\n  fontFamily: \"sans-serif\",\n  textAlign: \"center\"\n};\n\nconst data = [];\nconst launchDate = 2004;\n\nconst rand = 300;\nfor (let i = 0; i &lt; 7; i++) {\n  const year = 2000 + i;\n  const value = Math.random() * (rand + 50) + 100;\n  let d = {\n    year: year,\n    value: value,\n    beforeLaunch: year &lt;= launchDate ? value : undefined\n  };\n\n  data.push(d);\n}\n\n// change type to see that the overlap might not be appropriate towards the\n// end of the shorter chart\nconst type = \"monotone\";\n\nconst App = () =&gt; (\n  &lt;div style={styles}&gt;\n    &lt;LineChart\n      <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><span class=\"fea_Canvas_keys udls\">width</span>={500}\n      <span class=\"fea_Canvas_keys udls\">height</span>={300}\n      data={data}\n      margin={{ top: 5, right: 20, bottom: 5, left: 0 }}</div>\n    &gt;\n      <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><line class=\"fea_Shapes_keys udls\" type=\"{type}\">data</line>Key=\"value\" stroke=\"#8884d8\" dot={false} /&gt;\n      <line class=\"fea_Shapes_keys udls\" type=\"{type}\">data</line>Key=\"beforeLaunch\" stroke=\"red\" dot={false} /&gt;</div>\n      <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"year\" /&gt;\n      <y class=\"fea_Axis_keys udls\">Axis</y> /&gt;</div>\n      &lt;ReferenceLine x={launchDate} label=\"iPhone\" /&gt;\n    &lt;/LineChart&gt;\n  &lt;/div&gt;\n);\n\nrender(&lt;App /&gt;, document.getElementById(\"root\"));\n</code></pre></div>",
    "thr_19": "<div class=\"codeBlock hljs javascript\" id=\"thr_19\"><pre id=\"thr_19_code\" style=\"\"><code class=\"javascript\">/* eslint-disable max-classes-per-file */\nimport React, { PureComponent } from 'react';\nimport { <div class=\"highlights fea_Treemap\" id=\"Treemap_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Treemap_keys udls\">Treemap</span></div>, ResponsiveContainer } from 'recharts';\n\nconst data = [\n  {\n    name: 'axis',\n    children: [\n      { name: 'Axes', size: 1302 },\n      { name: 'Axis', size: 24593 },\n      { name: 'AxisGridLine', size: 652 },\n      { name: 'AxisLabel', size: 636 },\n      { name: 'CartesianAxes', size: 6703 },\n    ],\n  },\n  {\n    name: 'controls',\n    children: [\n      { name: 'AnchorControl', size: 2138 },\n      { name: 'ClickControl', size: 3824 },\n      { name: 'Control', size: 1353 },\n      { name: 'ControlList', size: 4665 },\n      { name: 'DragControl', size: 2649 },\n      { name: 'ExpandControl', size: 2832 },\n      { name: 'HoverControl', size: 4896 },\n      { name: 'IControl', size: 763 },\n      { name: 'PanZoomControl', size: 5222 },\n      { name: 'SelectionControl', size: 7862 },\n      { name: 'TooltipControl', size: 8435 },\n    ],\n  },\n  {\n    name: 'data',\n    children: [\n      { name: 'Data', size: 20544 },\n      { name: 'DataList', size: 19788 },\n      { name: 'DataSprite', size: 10349 },\n      { name: 'EdgeSprite', size: 3301 },\n      { name: 'NodeSprite', size: 19382 },\n      {\n        name: 'render',\n        children: [\n          { name: 'ArrowType', size: 698 },\n          { name: 'EdgeRenderer', size: 5569 },\n          { name: 'IRenderer', size: 353 },\n          { name: 'ShapeRenderer', size: 2247 },\n        ],\n      },\n      { name: 'ScaleBinding', size: 11275 },\n      { name: 'Tree', size: 7147 },\n      { name: 'TreeBuilder', size: 9930 },\n    ],\n  },\n  {\n    name: 'events',\n    children: [\n      { name: 'DataEvent', size: 7313 },\n      { name: 'SelectionEvent', size: 6880 },\n      { name: 'TooltipEvent', size: 3701 },\n      { name: 'VisualizationEvent', size: 2117 },\n    ],\n  },\n  {\n    name: 'legend',\n    children: [\n      { name: 'Legend', size: 20859 },\n      { name: 'LegendItem', size: 4614 },\n      { name: 'LegendRange', size: 10530 },\n    ],\n  },\n  {\n    name: 'operator',\n    children: [\n      {\n        name: 'distortion',\n        children: [\n          { name: 'BifocalDistortion', size: 4461 },\n          { name: 'Distortion', size: 6314 },\n          { name: 'FisheyeDistortion', size: 3444 },\n        ],\n      },\n      {\n        name: 'encoder',\n        children: [\n          { name: 'ColorEncoder', size: 3179 },\n          { name: 'Encoder', size: 4060 },\n          { name: 'PropertyEncoder', size: 4138 },\n          { name: 'ShapeEncoder', size: 1690 },\n          { name: 'SizeEncoder', size: 1830 },\n        ],\n      },\n      {\n        name: 'filter',\n        children: [\n          { name: 'FisheyeTreeFilter', size: 5219 },\n          { name: 'GraphDistanceFilter', size: 3165 },\n          { name: 'VisibilityFilter', size: 3509 },\n        ],\n      },\n      { name: 'IOperator', size: 1286 },\n      {\n        name: 'label',\n        children: [\n          { name: 'Labeler', size: 9956 },\n          { name: 'RadialLabeler', size: 3899 },\n          { name: 'StackedAreaLabeler', size: 3202 },\n        ],\n      },\n      {\n        name: 'layout',\n        children: [\n          { name: 'AxisLayout', size: 6725 },\n          { name: 'BundledEdgeRouter', size: 3727 },\n          { name: 'CircleLayout', size: 9317 },\n          { name: 'CirclePackingLayout', size: 12003 },\n          { name: 'DendrogramLayout', size: 4853 },\n          { name: 'ForceDirectedLayout', size: 8411 },\n          { name: 'IcicleTreeLayout', size: 4864 },\n          { name: 'IndentedTreeLayout', size: 3174 },\n          { name: 'Layout', size: 7881 },\n          { name: 'NodeLinkTreeLayout', size: 12870 },\n          { name: 'PieLayout', size: 2728 },\n          { name: 'RadialTreeLayout', size: 12348 },\n          { name: 'RandomLayout', size: 870 },\n          { name: 'StackedAreaLayout', size: 9121 },\n          { name: 'TreeMapLayout', size: 9191 },\n        ],\n      },\n      { name: 'Operator', size: 2490 },\n      { name: 'OperatorList', size: 5248 },\n      { name: 'OperatorSequence', size: 4190 },\n      { name: 'OperatorSwitch', size: 2581 },\n      { name: 'SortOperator', size: 2023 },\n    ],\n  },\n];\n\nconst COLORS = ['#8889DD', '#9597E4', '#8DC77B', '#A5D297', '#E2CF45', '#F8C12D'];\n\nclass CustomizedContent extends PureComponent {\n  render() {\n    const { root, depth, x, y, width, height, index, payload, colors, rank, name } = this.props;\n\n    return (\n      &lt;g&gt;\n        <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><rect :=\"\" class=\"fea_Shapes_keys udls\" colors=\"\" depth=\"\" fill:=\"\" height=\"{height}\" root.children.length=\"\" style=\"{{\" width=\"{width}\" x=\"{x}\" y=\"{y}\">stroke</rect>: '#fff',\n            strokeWidth: 2 / (depth + 1e-10),\n            strokeOpacity: 1 / (depth + 1e-10),\n          }}\n        /&gt;</div>\n        {depth === 1 ? (\n          &lt;text x={x + width / 2} y={y + height / 2 + 7} textAnchor=\"middle\" fill=\"#fff\" fontSize={14}&gt;\n            {name}\n          &lt;/text&gt;\n        ) : null}\n        {depth === 1 ? (\n          &lt;text x={x + 4} y={y + 18} fill=\"#fff\" fontSize={16} fillOpacity={0.9}&gt;\n            {index + 1}\n          &lt;/text&gt;\n        ) : null}\n      &lt;/g&gt;\n    );\n  }\n}\n\nexport default class Example extends PureComponent {\n  static demoUrl = 'https://codesandbox.io/s/treemap-with-customized-content-7qxfp';\n\n  render() {\n    return (\n      &lt;ResponsiveContainer width=\"100%\" height=\"100%\"&gt;\n        <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"display: inline; background-color: rgb(246, 183, 60);\"><treemap class=\"fea_Shapes_keys udls\" height=\"{200}\" width=\"{400}\">data</treemap>={<span class=\"fea_Shapes_keys udls\">data</span>}\n          <span class=\"fea_Shapes_keys udls\">data</span>Key=\"size\"\n          ratio={4 / 3}\n          stroke=\"#fff\"\n          fill=\"#8884d8\"\n          content={<customizedcontent colors=\"{COLORS}\"></customizedcontent>}\n        /&gt;</div>\n      &lt;/ResponsiveContainer&gt;\n    );\n  }\n}\n//https://recharts.org/en-US/examples/CustomContentTreemap</code></pre></div>",
    "fir_31": "<div class=\"codeBlock hljs javascript\" id=\"fir_31\"><pre id=\"fir_31_code\" style=\"display: block;\"><code class=\"javascript\">// http://blog.thomsonreuters.com/index.php/mobile-patent-suits-graphic-of-the-day/\nvar links = [\n  {source: \"Microsoft\", target: \"Amazon\", type: \"licensing\"},\n  {source: \"Microsoft\", target: \"HTC\", type: \"licensing\"},\n  {source: \"Samsung\", target: \"Apple\", type: \"suit\"},\n  {source: \"Motorola\", target: \"Apple\", type: \"suit\"},\n  {source: \"Nokia\", target: \"Apple\", type: \"resolved\"},\n  {source: \"HTC\", target: \"Apple\", type: \"suit\"},\n  {source: \"Kodak\", target: \"Apple\", type: \"suit\"},\n  {source: \"Microsoft\", target: \"Barnes &amp; Noble\", type: \"suit\"},\n  {source: \"Microsoft\", target: \"Foxconn\", type: \"suit\"},\n  {source: \"Oracle\", target: \"Google\", type: \"suit\"},\n  {source: \"Apple\", target: \"HTC\", type: \"suit\"},\n  {source: \"Microsoft\", target: \"Inventec\", type: \"suit\"},\n  {source: \"Samsung\", target: \"Kodak\", type: \"resolved\"},\n  {source: \"LG\", target: \"Kodak\", type: \"resolved\"},\n  {source: \"RIM\", target: \"Kodak\", type: \"suit\"},\n  {source: \"Sony\", target: \"LG\", type: \"suit\"},\n  {source: \"Kodak\", target: \"LG\", type: \"resolved\"},\n  {source: \"Apple\", target: \"Nokia\", type: \"resolved\"},\n  {source: \"Qualcomm\", target: \"Nokia\", type: \"resolved\"},\n  {source: \"Apple\", target: \"Motorola\", type: \"suit\"},\n  {source: \"Microsoft\", target: \"Motorola\", type: \"suit\"},\n  {source: \"Motorola\", target: \"Microsoft\", type: \"suit\"},\n  {source: \"Huawei\", target: \"ZTE\", type: \"suit\"},\n  {source: \"Ericsson\", target: \"ZTE\", type: \"suit\"},\n  {source: \"Kodak\", target: \"Samsung\", type: \"resolved\"},\n  {source: \"Apple\", target: \"Samsung\", type: \"suit\"},\n  {source: \"Kodak\", target: \"RIM\", type: \"suit\"},\n  {source: \"Nokia\", target: \"Qualcomm\", type: \"suit\"}\n];\n\nvar nodes = {};\n\n// Compute the distinct nodes from the links.\nlinks.forEach(function(link) {\n  link.source = nodes[link.source] || (nodes[link.source] = {name: link.source});\n  link.target = nodes[link.target] || (nodes[link.target] = {name: link.target});\n});\n\nvar width = 960,\n    height = 500;\n\n<div class=\"highlights fea_Force_Directed_Graph\" id=\"Force_Directed_Graph_0\" style=\"background-color: #f6b73c;  display: inline;\">var force = d3.layout.force()\n    .nodes(d3.values(nodes))\n    .links(links)\n    .size([width, height])\n    .linkDistance(60)\n    .charge(-300)\n    .on(\"tick\", tick)\n    .start();</div>\n\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">var svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span>)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span>);</div>\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">var link = svg.selectAll(\".link\")\n    .<span class=\"fea_Shapes_keys udls\">data</span>(force.links())\n  .enter().append(\"line\")\n    .attr(\"class\", \"link\");\n\nvar node = svg.selectAll(\".node\")\n    .<span class=\"fea_Shapes_keys udls\">data</span>(force.nodes())\n  .enter().append(\"g\")\n    .attr(\"class\", \"node\")\n    .on(\"mouseover\", mouseover)\n    .on(\"mouseout\", mouseout)\n    .call(force.drag);\n\nnode.append(\"circle\")\n    .attr(\"r\", 8);</div>\n\n<div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">node.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n    .attr(\"x\", 12)\n    .attr(\"dy\", \".35em\")\n    .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d.name; });</div>\n\nfunction tick() {\n  link\n      .attr(\"x1\", function(d) { return d.source.x; })\n      .attr(\"y1\", function(d) { return d.source.y; })\n      .attr(\"x2\", function(d) { return d.target.x; })\n      .attr(\"y2\", function(d) { return d.target.y; });\n\n  node\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n}\n\n<div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"background-color: #f6b73c;  display: inline;\">function <span class=\"fea_Mouse_Events_keys udls\">mouse</span><span class=\"fea_Mouse_Events_keys udls\">ove</span>r() {\n  d3.select(this).select(\"circle\").transition()\n      .duration(750)\n      .attr(\"r\", 16);\n}\n\nfunction <span class=\"fea_Mouse_Events_keys udls\">mouse</span>out() {\n  d3.select(this).select(\"circle\").transition()\n      .duration(750)\n      .attr(\"r\", 8);\n}</div>\n</code></pre></div>",
    "fir_32": "<div class=\"codeBlock hljs javascript\" id=\"fir_32\"><pre id=\"fir_32_code\" style=\"display: block;\"><code class=\"javascript\"><div class=\"highlights fea_Data_Format\" id=\"Data_Format_0\" style=\"background-color: #f6b73c;  display: inline;\">var formatDate = d3.time.format(\"%a\"),\n    formatDay = function(d) { return formatDate(new Date(2007, 0, d)); };</div>\n\nvar width = 960,\n    height = 500,\n    outerRadius = height / 2 - 10,\n    innerRadius = 120;\n\n<div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"background-color: #f6b73c;  display: inline;\">var angle = d3.time.<span class=\"fea_Axis_keys udls\">scale</span>()\n    .range([0, 2 * Math.PI]);</div>\n\n<div class=\"highlights fea_Axis\" id=\"Axis_2\" style=\"background-color: #f6b73c;  display: inline;\">var radius = d3.<span class=\"fea_Axis_keys udls\">scale</span>.linear()\n    .range([innerRadius, outerRadius]);</div>\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\">var z = d3.<span class=\"fea_Axis_keys udls\">scale</span>.category20c();</div>\n\nvar stack = d3.layout.stack()\n    .offset(\"zero\")\n    .values(function(d) { return d.values; })\n    .x(function(d) { return d.time; })\n    .y(function(d) { return d.value; });\n\n<div class=\"highlights fea_Data_Grouping\" id=\"Data_Grouping_0\" style=\"background-color: #f6b73c;  display: inline;\">var nest = d3.nest()\n    .key(<span class=\"fea_Data_Grouping_keys udls\">function</span>(d) { <span class=\"fea_Data_Grouping_keys udls\">return</span> d.key; });</div>\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">var line = d3.svg.line.radial()\n    .interpolate(\"cardinal-closed\")\n    .angle(function(d) { return angle(d.time); })\n    .radius(function(d) { return radius(d.y0 + d.y); });</div>\n\n<div class=\"highlights fea_Radial_Area_Chart\" id=\"Radial_Area_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">var area = d3.svg.area.radial()</div>\n    <div class=\"highlights fea_Radial_Area_Chart\" id=\"Radial_Area_Chart_1\" style=\"background-color: #f6b73c;  display: inline;\">.interpolate(\"cardinal-closed\")\n    .angle(function(d) { return angle(d.time); })\n    .innerRadius(function(d) { return radius(d.y0); })\n    .outerRadius(function(d) { return radius(d.y0 + d.y); });</div>\n\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">var svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span>)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span>)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + <span class=\"fea_Canvas_keys udls\">width</span> / 2 + \",\" + <span class=\"fea_Canvas_keys udls\">height</span> / 2 + \")\");</div>\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.csv(\"<span class=\"fea_Import_Data_keys udls\">data</span>.csv\", type, function(error, <span class=\"fea_Import_Data_keys udls\">data</span>)</div> {\n  if (error) throw error;\n\n  var layers = stack(nest.entries(data));\n\n  // Extend the domain slightly to match the range of [0, 2π].\n  angle.domain([0, d3.max(data, function(d) { return d.time + 1; })]);\n  radius.domain([0, d3.max(data, function(d) { return d.y0 + d.y; })]);\n\n  svg.selectAll(\".layer\")\n      .data(layers)\n    .enter().append(\"path\")\n      .attr(\"class\", \"layer\")\n      .attr(\"d\", function(d) { return area(d.values); })\n      .style(\"fill\", function(d, i) { return z(i); });\n\n  <div class=\"highlights fea_Axis\" id=\"Axis_3\" style=\"background-color: #f6b73c;  display: inline;\">svg.selectAll(\".<span class=\"fea_Axis_keys udls\">axis</span>\")\n      .data(d3.range(angle.domain()[1]))\n    .enter().append(\"g\")\n      .attr(\"class\", \"<span class=\"fea_Axis_keys udls\">axis</span>\")\n      .attr(\"transform\", function(d) { return \"rotate(\" + angle(d) * 180 / Math.PI + \")\"; })\n    .call(d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>()\n      .<span class=\"fea_Axis_keys udls\">scale</span>(radius.copy().range([-innerRadius, -outerRadius]))\n      .orient(\"left\"))\n    .append(\"text\")\n      .attr(\"y\", -innerRadius + 6)\n      .attr(\"dy\", \".71em\")\n      .attr(\"text-anchor\", \"middle\")\n      .text(function(d) { return formatDay(d); });\n});</div>\n\nfunction type(d) {\n  d.time = +d.time;\n  d.value = +d.value;\n  return d;\n}\n#https://bl.ocks.org/mbostock/3048740</code></pre></div>",
    "fir_33": "<div class=\"codeBlock hljs javascript\" id=\"fir_33\"><pre id=\"fir_33_code\" style=\"display: block;\"><code class=\"javascript\"><div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">var margin = {top: 40, right: 40, bottom: 40, left: 80},\n    <span class=\"fea_Canvas_keys udls\">width</span> = 960 - margin.left - margin.right,\n    <span class=\"fea_Canvas_keys udls\">height</span> = 500 - margin.top - margin.bottom;</div>\n\n<div class=\"highlights fea_Tree\" id=\"Tree_0\" style=\"background-color: #f6b73c;  display: inline;\">var tree = d3.layout.tree()\n    .size([height, width]);</div>\n\nvar diagonal = d3.svg.diagonal()\n    .projection(function(d) { return [d.y, d.x]; });\n\n<div class=\"highlights fea_Canvas\" id=\"Canvas_1\" style=\"background-color: #f6b73c;  display: inline;\">var svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\n<div class=\"highlights fea_Data_Format\" id=\"Data_Format_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.json(\"species.json\", function(error, root) {</div>\n  if (error) throw error;\n\n  <div class=\"highlights fea_Tree\" id=\"Tree_1\" style=\"background-color: #f6b73c;  display: inline;\">var nodes = tree.nodes(root),\n      links = tree.links(nodes);</div>\n\n  // Create the link lines.\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">svg.selectAll(\".link\")\n      .<span class=\"fea_Shapes_keys udls\">data</span>(links)\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", diagonal);\n\n  // Create the node circles.\n  var node = svg.selectAll(\".node\")\n      .<span class=\"fea_Shapes_keys udls\">data</span>(nodes)\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return \"node \" + d.type; })\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; })</div>\n      <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"background-color: #f6b73c;  display: inline;\">.on(\"<span class=\"fea_Mouse_Events_keys udls\">mouse</span><span class=\"fea_Mouse_Events_keys udls\">ove</span>r\", function(d) { highlight(d.type); })\n      .on(\"<span class=\"fea_Mouse_Events_keys udls\">mouse</span>out\", function(d) { highlight(null); });</div>\n\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"background-color: #f6b73c;  display: inline;\">node.append(\"circle\")\n      .attr(\"r\", 4.5);</div>\n\n  <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">node.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"x\", -6)\n      .attr(\"dy\", \".35em\")\n      .attr(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\", \"end\")\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d.name; });</div>\n});\n\nfunction highlight(type) {\n  if (type == null) d3.selectAll(\".node\").classed(\"active\", false);\n  else d3.selectAll(\".node.\" + type).classed(\"active\", true);\n}\n#https://bl.ocks.org/mbostock/3087986</code></pre></div>",
    "fir_34": "<div class=\"codeBlock hljs javascript\" id=\"fir_34\"><pre id=\"fir_34_code\" style=\"display: block;\"><code class=\"javascript\">var margin = {top: 20, right: 90, bottom: 30, left: 50},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n<div class=\"highlights fea_Data_Format\" id=\"Data_Format_0\" style=\"background-color: #f6b73c;  display: inline;\">var parseDate = d3.time.format(\"%Y-%m-%d\").parse,\n    formatDate = d3.time.format(\"%b %d\");</div>\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\">var x = d3.time.<span class=\"fea_Axis_keys udls\">scale</span>().range([0, width]),\n    y = d3.<span class=\"fea_Axis_keys udls\">scale</span>.linear().range([height, 0]),\n    z = d3.<span class=\"fea_Axis_keys udls\">scale</span>.linear().range([\"white\", \"steelblue\"]);</div>\n\n// The size of the buckets in the CSV data file.\n// This could be inferred from the data if it weren't sparse.\nvar xStep = 864e5,\n    yStep = 100;\n\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">var svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.csv(\"<span class=\"fea_Import_Data_keys udls\">data</span>.csv\", function(error, buckets) {</div>\n  if (error) throw error;\n\n  // Coerce the CSV data to the appropriate types.\n  buckets.forEach(function(d) {\n    d.date = parseDate(d.date);\n    d.bucket = +d.bucket;\n    d.count = +d.count;\n  });\n\n  // Compute the scale domains.\n  <div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"background-color: #f6b73c;  display: inline;\">x.domain(d3.extent(buckets, function(d) { return d.date; }));\n  y.domain(d3.extent(buckets, function(d) { return d.bucket; }));\n  z.domain([0, d3.max(buckets, function(d) { return d.count; })]);</div>\n\n  // Extend the x- and y-domain to fit the last bucket.\n  // For example, the y-bucket 3200 corresponds to values [3200, 3300].\n  x.domain([x.domain()[0], +x.domain()[1] + xStep]);\n  y.domain([y.domain()[0], y.domain()[1] + yStep]);\n\n  // Display the tiles for each non-zero bucket.\n  // See http://bl.ocks.org/3074470 for an alternative implementation.\n  <div class=\"highlights fea_Heatmap\" id=\"Heatmap_0\" style=\"background-color: #f6b73c;  display: inline;\">svg.selectAll(\".tile\")\n      .<span class=\"fea_Heatmap_keys udls\">data</span>(buckets)\n    .enter().append(\"<span class=\"fea_Heatmap_keys udls\">rect</span>\")\n      .attr(\"class\", \"tile\")\n      .attr(\"x\", function(d) { <span class=\"fea_Heatmap_keys udls\">return</span> x(d.date); })\n      .attr(\"y\", function(d) { <span class=\"fea_Heatmap_keys udls\">return</span> y(d.bucket + yStep); })\n      .attr(\"width\", x(xStep) - x(0))\n      .attr(\"<span class=\"fea_Heatmap_keys udls\">height</span>\",  y(0) - y(yStep))\n      .style(\"fill\", function(d) { <span class=\"fea_Heatmap_keys udls\">return</span> z(d.count); });</div>\n\n  // Add a legend for the color values.\n  <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"background-color: #f6b73c;  display: inline;\">var <span class=\"fea_Legend_keys udls\">legend</span> = svg.selectAll(\".<span class=\"fea_Legend_keys udls\">legend</span>\")\n      .data(z.ticks(6).slice(1).reverse())\n    .enter().append(\"g\")\n      .attr(\"class\", \"<span class=\"fea_Legend_keys udls\">legend</span>\")\n      .attr(\"transform\", function(d, i) { return \"translate(\" + (width + 20) + \",\" + (20 + i * 20) + \")\"; });</div>\n\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">legend.append(\"rect\")\n      .attr(\"width\", 20)\n      .attr(\"height\", 20)\n      .style(\"fill\", z);</div>\n\n  <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">legend.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"x\", 26)\n      .attr(\"y\", 10)\n      .attr(\"dy\", \".35em\")\n      .<span class=\"fea_Text_keys udls\">text</span>(String);\n\n  svg.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width + 20)\n      .attr(\"y\", 10)\n      .attr(\"dy\", \".35em\")\n      .<span class=\"fea_Text_keys udls\">text</span>(\"Count\");</div>\n\n  // Add an x-axis with label.\n  <div class=\"highlights fea_Axis\" id=\"Axis_2\" style=\"background-color: #f6b73c;  display: inline;\">svg.append(\"g\")\n      .attr(\"class\", \"x <span class=\"fea_Axis_keys udls\">axis</span>\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>().<span class=\"fea_Axis_keys udls\">scale</span>(x).ticks(d3.time.days).tickFormat(formatDate).orient(\"bottom\"))</div>\n    <div class=\"highlights fea_Text\" id=\"Text_1\" style=\"background-color: #f6b73c;  display: inline;\">.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .attr(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\", \"end\")\n      .<span class=\"fea_Text_keys udls\">text</span>(\"Date\");</div>\n\n  // Add a y-axis with label.\n  <div class=\"highlights fea_Axis\" id=\"Axis_3\" style=\"background-color: #f6b73c;  display: inline;\">svg.append(\"g\")\n      .attr(\"class\", \"y <span class=\"fea_Axis_keys udls\">axis</span>\")\n      .call(d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>().<span class=\"fea_Axis_keys udls\">scale</span>(y).orient(\"left\"))\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .attr(\"text-anchor\", \"end\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .text(\"Value\");</div>\n});\n#http://bl.ocks.org/mbostock/3202354</code></pre></div>",
    "fir_35": "<div class=\"codeBlock hljs javascript\" id=\"fir_35\"><pre id=\"fir_35_code\" style=\"display: block;\"><code class=\"javascript\">var width = 960,\n    size = 230,\n    padding = 20;\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\">var x = d3.<span class=\"fea_Axis_keys udls\">scale</span>.linear()\n    .range([padding / 2, size - padding / 2]);\n\nvar y = d3.<span class=\"fea_Axis_keys udls\">scale</span>.linear()\n    .range([size - padding / 2, padding / 2]);\n\nvar x<span class=\"fea_Axis_keys udls\">Axis</span> = d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>()\n    .<span class=\"fea_Axis_keys udls\">scale</span>(x)\n    .orient(\"bottom\")\n    .ticks(6);\n\nvar y<span class=\"fea_Axis_keys udls\">Axis</span> = d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>()\n    .<span class=\"fea_Axis_keys udls\">scale</span>(y)\n    .orient(\"left\")\n    .ticks(6);\n\nvar color = d3.<span class=\"fea_Axis_keys udls\">scale</span>.category10();</div>\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.csv(\"flowers.csv\", function(error, <span class=\"fea_Import_Data_keys udls\">data</span>) {</div>\n  if (error) throw error;\n\n  var domainByTrait = {},\n      <div class=\"highlights fea_Data_Filtering\" id=\"Data_Filtering_0\" style=\"background-color: #f6b73c;  display: inline;\">traits = d3.keys(data[0]).filter(function(d) { return d !== \"species\"; }),</div>\n      n = traits.length;\n\n  traits.forEach(function(trait) {\n    domainByTrait[trait] = d3.extent(data, function(d) { return d[trait]; });\n  });\n\n  <div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"background-color: #f6b73c;  display: inline;\">x<span class=\"fea_Axis_keys udls\">Axis</span>.tickSize(size * n);\n  y<span class=\"fea_Axis_keys udls\">Axis</span>.tickSize(-size * n);</div>\n\n  <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">var svg = d3.select(\"body\").append(\"svg\")\n      .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", size * n + padding)\n      .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", size * n + padding)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + padding + \",\" + padding / 2 + \")\");</div>\n\n  <div class=\"highlights fea_Axis\" id=\"Axis_2\" style=\"background-color: #f6b73c;  display: inline;\">svg.selectAll(\".x.<span class=\"fea_Axis_keys udls\">axis</span>\")\n      .data(traits)\n    .enter().append(\"g\")\n      .attr(\"class\", \"x <span class=\"fea_Axis_keys udls\">axis</span>\")\n      .attr(\"transform\", function(d, i) { return \"translate(\" + (n - i - 1) * size + \",0)\"; })\n      .each(function(d) { x.domain(domainByTrait[d]); d3.select(this).call(x<span class=\"fea_Axis_keys udls\">Axis</span>); });\n\n  svg.selectAll(\".y.<span class=\"fea_Axis_keys udls\">axis</span>\")\n      .data(traits)\n    .enter().append(\"g\")\n      .attr(\"class\", \"y <span class=\"fea_Axis_keys udls\">axis</span>\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * size + \")\"; })\n      .each(function(d) { y.domain(domainByTrait[d]); d3.select(this).call(y<span class=\"fea_Axis_keys udls\">Axis</span>); });</div>\n\n  <div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_0\" style=\"background-color: #f6b73c;  display: inline;\">var cell = svg.selectAll(\".cell\")\n      .data(cross(traits, traits))\n    .enter().append(\"g\")\n      .attr(\"class\", \"cell\")\n      .attr(\"transform\", function(d) { return \"translate(\" + (n - d.i - 1) * size + \",\" + d.j * size + \")\"; })\n      .each(plot);</div>\n\n  // Titles for the diagonal.\n  <div class=\"highlights fea_Data_Filtering\" id=\"Data_Filtering_1\" style=\"background-color: #f6b73c;  display: inline;\">cell.filter(function(d) { return d.i === d.j; })</div><div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"x\", padding)\n      .attr(\"y\", padding)\n      .attr(\"dy\", \".71em\")\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d.x; });</div>\n\n  function plot(p) {\n    var cell = d3.select(this);\n\n    <div class=\"highlights fea_Axis\" id=\"Axis_3\" style=\"background-color: #f6b73c;  display: inline;\">x.domain(domainByTrait[p.x]);\n    y.domain(domainByTrait[p.y]);</div>\n\n    <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">cell.append(\"rect\")\n        .attr(\"class\", \"frame\")\n        .attr(\"x\", padding / 2)\n        .attr(\"y\", padding / 2)\n        .attr(\"width\", size - padding)\n        .attr(\"height\", size - padding);</div>\n\n    <div class=\"highlights fea_Scatter_Plot\" id=\"Scatter_Plot_0\" style=\"background-color: #f6b73c;  display: inline;\">cell.selectAll(\"circle\")\n        .data(data)\n      .en<span class=\"fea_Scatter_Plot_keys udls\">ter</span>().append(\"circle\")\n        .<span class=\"fea_Scatter_Plot_keys udls\">att</span>r(\"cx\", function(d) { return x(d[p.x]); })\n        .<span class=\"fea_Scatter_Plot_keys udls\">att</span>r(\"cy\", function(d) { return y(d[p.y]); })\n        .<span class=\"fea_Scatter_Plot_keys udls\">att</span>r(\"r\", 4)\n        .style(\"fill\", function(d) { return color(d.species); });</div>\n  }\n});\n\nfunction cross(a, b) {\n  var c = [], n = a.length, m = b.length, i, j;\n  for (i = -1; ++i &lt; n;) for (j = -1; ++j &lt; m;) c.push({x: a[i], i: i, y: b[j], j: j});\n  return c;\n}\n#https://bl.ocks.org/mbostock/3213173</code></pre></div>",
    "fir_36": "<div class=\"codeBlock hljs javascript\" id=\"fir_36\"><pre id=\"fir_36_code\" style=\"display: block;\"><code class=\"javascript\"><div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">var svg = d3.select(\"svg\"),\n    margin = {top: 20, right: 20, bottom: 30, left: 40},\n    <span class=\"fea_Canvas_keys udls\">width</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\") - margin.left - margin.right,\n    <span class=\"fea_Canvas_keys udls\">height</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\") - margin.top - margin.bottom,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\">var x = d3.<span class=\"fea_Axis_keys udls\">scale</span>Band()\n    .rangeRound([0, width])\n    .paddingInner(0.05)\n    .align(0.1);\n\nvar y = d3.<span class=\"fea_Axis_keys udls\">scale</span>Linear()\n    .rangeRound([height, 0]);\n\nvar z = d3.<span class=\"fea_Axis_keys udls\">scale</span>Ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);</div>\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.csv(\"<span class=\"fea_Import_Data_keys udls\">data</span>.csv\", function(d, i, columns) {</div>\n  for (i = 1, t = 0; i &lt; columns.length; ++i) t += d[columns[i]] = +d[columns[i]];\n  d.total = t;\n  return d;\n}, function(error, data) {\n  if (error) throw error;\n\n  var keys = data.columns.slice(1);\n\n  data.sort(function(a, b) { return b.total - a.total; });\n  <div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"background-color: #f6b73c;  display: inline;\">x.domain(data.map(function(d) { return d.State; }));</div>\n  y.domain([0, <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.<span class=\"fea_Data_Transformation_keys udls\">max</span>(<span class=\"fea_Data_Transformation_keys udls\">data</span>, function(d) { return d.total; })</div>]).nice();\n  <div class=\"highlights fea_Axis\" id=\"Axis_2\" style=\"background-color: #f6b73c;  display: inline;\">z.domain(keys);</div>\n\n  <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">g.append(\"g\")\n    .selectAll(\"g\")\n    .data(d3.stack().keys(keys)(data))\n    .enter().append(\"g\")\n      .attr(\"fill\", function(d) { return z(d.key); })\n    .selectAll(\"rect\")\n    .data(function(d) { return d; })\n    .enter().append(\"rect\")\n      .attr(\"x\", function(d) { return x(d.data.State); })\n      .attr(\"y\", function(d) { return y(d[1]); })\n      .attr(\"height\", function(d) { return y(d[0]) - y(d[1]); })\n      .attr(\"width\", x.bandwidth());</div>\n\n  <div class=\"highlights fea_Axis\" id=\"Axis_3\" style=\"background-color: #f6b73c;  display: inline;\">g.append(\"g\")\n      .attr(\"class\", \"<span class=\"fea_Axis_keys udls\">axis</span>\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.<span class=\"fea_Axis_keys udls\">axis</span>Bottom(x));\n\n  g.append(\"g\")\n      .attr(\"class\", \"<span class=\"fea_Axis_keys udls\">axis</span>\")\n      .call(d3.<span class=\"fea_Axis_keys udls\">axis</span>Left(y).ticks(null, \"s\"))\n    .append(\"text\")\n      .attr(\"x\", 2)\n      .attr(\"y\", y(y.ticks().pop()) + 0.5)\n      .attr(\"dy\", \"0.32em\")\n      .attr(\"fill\", \"#000\")\n      .attr(\"font-weight\", \"bold\")\n      .attr(\"text-anchor\", \"start\")\n      .text(\"Population\");</div>\n\n  <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"background-color: #f6b73c;  display: inline;\">var <span class=\"fea_Legend_keys udls\">legend</span> = g.append(\"g\")\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", 10)\n      .attr(\"text-anchor\", \"end\")\n    .selectAll(\"g\")\n    .data(keys.slice().reverse())\n    .enter().append(\"g\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });</div>\n\n <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\"> legend.append(\"rect\")\n      .attr(\"x\", width - 19)\n      .attr(\"width\", 19)\n      .attr(\"height\", 19)\n      .attr(\"fill\", z);</div>\n\n  <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">legend.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9.5)\n      .attr(\"dy\", \"0.32em\")\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d; });</div>\n});\n#https://bl.ocks.org/mbostock/3886208</code></pre></div>",
    "fir_37": "<div class=\"codeBlock hljs javascript\" id=\"fir_37\"><pre id=\"fir_37_code\" style=\"display: block;\"><code class=\"javascript\">var margin = {top: 20, right: 20, bottom: 30, left: 40},\n    width = 960 - margin.left - margin.right,\n    height = 500 - margin.top - margin.bottom;\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\">var x = d3.<span class=\"fea_Axis_keys udls\">scale</span>.linear()\n    .range([0, width]);\n\nvar y = d3.<span class=\"fea_Axis_keys udls\">scale</span>.linear()\n    .range([height, 0]);\n\nvar color = d3.<span class=\"fea_Axis_keys udls\">scale</span>.category10();\n\nvar x<span class=\"fea_Axis_keys udls\">Axis</span> = d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>()\n    .<span class=\"fea_Axis_keys udls\">scale</span>(x)\n    .orient(\"bottom\");\n\nvar y<span class=\"fea_Axis_keys udls\">Axis</span> = d3.svg.<span class=\"fea_Axis_keys udls\">axis</span>()\n    .<span class=\"fea_Axis_keys udls\">scale</span>(y)\n    .orient(\"left\");</div>\n\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">var svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");</div>\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.tsv(\"<span class=\"fea_Import_Data_keys udls\">data</span>.tsv\", function(error, <span class=\"fea_Import_Data_keys udls\">data</span>)</div> {\n  if (error) throw error;\n\n  data.forEach(function(d) {\n    d.sepalLength = +d.sepalLength;\n    d.sepalWidth = +d.sepalWidth;\n  });\n\n  <div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"background-color: #f6b73c;  display: inline;\">x.domain(d3.extent(data, function(d) { return d.sepalWidth; })).nice();\n  y.domain(d3.extent(data, function(d) { return d.sepalLength; })).nice();</div>\n\n  <div class=\"highlights fea_Axis\" id=\"Axis_2\" style=\"background-color: #f6b73c;  display: inline;\">svg.append(\"g\")\n      .attr(\"class\", \"x <span class=\"fea_Axis_keys udls\">axis</span>\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(x<span class=\"fea_Axis_keys udls\">Axis</span>)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"x\", width)\n      .attr(\"y\", -6)\n      .style(\"text-anchor\", \"end\")\n      .text(\"Sepal Width (cm)\");\n\n  svg.append(\"g\")\n      .attr(\"class\", \"y <span class=\"fea_Axis_keys udls\">axis</span>\")\n      .call(y<span class=\"fea_Axis_keys udls\">Axis</span>)\n    .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Sepal Length (cm)\")</div>\n\n  <div class=\"highlights fea_Scatter_Plot\" id=\"Scatter_Plot_0\" style=\"background-color: #f6b73c;  display: inline;\">svg.selectAll(\".dot\")\n      .data(data)\n    .en<span class=\"fea_Scatter_Plot_keys udls\">ter</span>().append(\"circle\")</div>\n      <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">.attr(\"class\", \"dot\")\n      .attr(\"r\", 3.5)\n      .attr(\"cx\", function(d) { return x(d.sepalWidth); })\n      .attr(\"cy\", function(d) { return y(d.sepalLength); })\n      .style(\"fill\", function(d) { return color(d.species); });</div>\n\n  <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"background-color: #f6b73c;  display: inline;\">var <span class=\"fea_Legend_keys udls\">legend</span> = svg.selectAll(\".<span class=\"fea_Legend_keys udls\">legend</span>\")\n      .data(color.domain())\n    .enter().append(\"g\")\n      .attr(\"class\", \"<span class=\"fea_Legend_keys udls\">legend</span>\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  <span class=\"fea_Legend_keys udls\">legend</span>.append(\"rect\")\n      .attr(\"x\", width - 18)\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  <span class=\"fea_Legend_keys udls\">legend</span>.append(\"text\")\n      .attr(\"x\", width - 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .style(\"text-anchor\", \"end\")\n      .text(function(d) { return d; });</div>\n});\n#https://bl.ocks.org/mbostock/3887118</code></pre></div>",
    "fir_38": "<div class=\"codeBlock hljs javascript\" id=\"fir_38\"><pre id=\"fir_38_code\" style=\"display: block;\"><code class=\"javascript\">var width = 960,\n    height = 500,\n    radius = Math.min(width, height) / 2;\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\">var color = d3.<span class=\"fea_Axis_keys udls\">scale</span>.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);</div>\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">var arc = d3.svg.arc()\n    .outerRadius(radius - 10)\n    .innerRadius(radius - 70);</div>\n\n<div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">var <span class=\"fea_Pie_Chart_keys udls\">pie</span> = d3.layout.<span class=\"fea_Pie_Chart_keys udls\">pie</span>()\n    .sort(null)\n    .value(function(d) { return d.population; });</div>\n\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">var svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span>)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span>)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + <span class=\"fea_Canvas_keys udls\">width</span> / 2 + \",\" + <span class=\"fea_Canvas_keys udls\">height</span> / 2 + \")\");</div>\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.csv(\"<span class=\"fea_Import_Data_keys udls\">data</span>.csv\", type, function(error, <span class=\"fea_Import_Data_keys udls\">data</span>)</div> {\n  if (error) throw error;\n\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"background-color: #f6b73c;  display: inline;\">var g = svg.selectAll(\".arc\")\n      .<span class=\"fea_Shapes_keys udls\">data</span>(pie(<span class=\"fea_Shapes_keys udls\">data</span>))\n    .enter().append(\"g\")\n      .attr(\"class\", \"arc\");\n\n  g.append(\"path\")\n      .attr(\"d\", arc)\n      .style(\"fill\", function(d) { return color(d.<span class=\"fea_Shapes_keys udls\">data</span>.age); });</div>\n\n  <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">g.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"transform\", function(d) { return \"translate(\" + arc.centroid(d) + \")\"; })\n      .attr(\"dy\", \".35em\")\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d.data.age; });\n});</div>\n\nfunction type(d) {\n  d.population = +d.population;\n  return d;\n}\n#https://bl.ocks.org/mbostock/3887193</code></pre></div>",
    "fir_39": "<div class=\"codeBlock hljs javascript\" id=\"fir_39\"><pre id=\"fir_39_code\" style=\"display: block;\"><code class=\"javascript\"><div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">var svg = d3.select(\"svg\"),\n    <span class=\"fea_Canvas_keys udls\">width</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\"),\n    <span class=\"fea_Canvas_keys udls\">height</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\"),\n    radius = Math.min(<span class=\"fea_Canvas_keys udls\">width</span>, <span class=\"fea_Canvas_keys udls\">height</span>) / 2,\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + <span class=\"fea_Canvas_keys udls\">width</span> / 2 + \",\" + <span class=\"fea_Canvas_keys udls\">height</span> / 2 + \")\");</div>\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\">var color = d3.<span class=\"fea_Axis_keys udls\">scale</span>Ordinal([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);</div>\n\n<div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">var <span class=\"fea_Pie_Chart_keys udls\">pie</span> = d3.<span class=\"fea_Pie_Chart_keys udls\">pie</span>()\n    .sort(null)\n    .value(function(d) { return d.population; });</div>\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">var path = d3.arc()\n    .outerRadius(radius - 10)\n    .innerRadius(0);\n\nvar label = d3.arc()\n    .outerRadius(radius - 40)\n    .innerRadius(radius - 40);</div>\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.csv(\"<span class=\"fea_Import_Data_keys udls\">data</span>.csv\", function(d)</div> {\n  d.population = +d.population;\n  return d;\n}, function(error, data) {\n  if (error) throw error;\n\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"background-color: #f6b73c;  display: inline;\">var arc = g.selectAll(\".arc\")\n    .<span class=\"fea_Shapes_keys udls\">data</span>(pie(<span class=\"fea_Shapes_keys udls\">data</span>))\n    .enter().append(\"g\")\n      .attr(\"class\", \"arc\");\n\n  arc.append(\"path\")\n      .attr(\"d\", path)\n      .attr(\"fill\", function(d) { return color(d.<span class=\"fea_Shapes_keys udls\">data</span>.age); });</div>\n\n  <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">arc.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"transform\", function(d) { return \"translate(\" + label.centroid(d) + \")\"; })\n      .attr(\"dy\", \"0.35em\")\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d.data.age; });</div>\n});\n#https://bl.ocks.org/mbostock/3887235</code></pre></div>",
    "fir_40": "<div class=\"codeBlock hljs javascript\" id=\"fir_40\"><pre id=\"fir_40_code\" style=\"display: block;\"><code class=\"javascript\">var radius = 74,\n    padding = 10;\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\">var color = d3.<span class=\"fea_Axis_keys udls\">scale</span>.ordinal()\n    .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);</div>\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">var arc = d3.svg.arc()\n    .outerRadius(radius)\n    .innerRadius(radius - 30);</div>\n\n<div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">var <span class=\"fea_Pie_Chart_keys udls\">pie</span> = d3.layout.<span class=\"fea_Pie_Chart_keys udls\">pie</span>()\n    .sort(null)\n    .value(function(d) { return d.population; });</div>\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.csv(\"<span class=\"fea_Import_Data_keys udls\">data</span>.csv\", function(error, <span class=\"fea_Import_Data_keys udls\">data</span>) {</div>\n  if (error) throw error;\n\n  <div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"background-color: #f6b73c;  display: inline;\">color.domain(d3.keys(data[0]).filter(function(key) { return key !== \"State\"; }));</div>\n\n  data.forEach(function(d) {\n    <div class=\"highlights fea_Data_Grouping\" id=\"Data_Grouping_0\" style=\"background-color: #f6b73c;  display: inline;\">d.ages = color.domain().<span class=\"fea_Data_Grouping_keys udls\">map</span>(<span class=\"fea_Data_Grouping_keys udls\">function</span>(name) {\n      <span class=\"fea_Data_Grouping_keys udls\">return</span> {name: name, population: +d[name]};\n    });</div>\n  });\n\n  <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"background-color: #f6b73c;  display: inline;\">var <span class=\"fea_Legend_keys udls\">legend</span> = d3.select(\"body\").append(\"svg\")\n      .attr(\"class\", \"<span class=\"fea_Legend_keys udls\">legend</span>\")\n      .attr(\"width\", radius * 2)\n      .attr(\"height\", radius * 2)\n    .selectAll(\"g\")\n      .data(color.domain().slice().reverse())\n    .enter().append(\"g\")\n      .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n  <span class=\"fea_Legend_keys udls\">legend</span>.append(\"rect\")\n      .attr(\"width\", 18)\n      .attr(\"height\", 18)\n      .style(\"fill\", color);\n\n  <span class=\"fea_Legend_keys udls\">legend</span>.append(\"text\")\n      .attr(\"x\", 24)\n      .attr(\"y\", 9)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d; });</div>\n\n <div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_0\" style=\"background-color: #f6b73c;  display: inline;\"> var svg = d3.select(\"body\").selectAll(\".pie\")\n      .data(data)\n    .enter().append(\"svg\")\n      .attr(\"class\", \"pie\")\n      .attr(\"width\", radius * 2)\n      .attr(\"height\", radius * 2)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + radius + \",\" + radius + \")\");</div>\n\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"background-color: #f6b73c;  display: inline;\">svg.selectAll(\".arc\")\n      .<span class=\"fea_Shapes_keys udls\">data</span>(function(d) { return pie(d.ages); })\n    .enter().append(\"path\")\n      .attr(\"class\", \"arc\")\n      .attr(\"d\", arc)\n      .style(\"fill\", function(d) { return color(d.<span class=\"fea_Shapes_keys udls\">data</span>.name); });</div>\n\n  <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">svg.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"dy\", \".35em\")\n      .style(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\", \"middle\")\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d.State; });</div>\n\n});\n#https://bl.ocks.org/mbostock/3888852</code></pre></div>",
    "fir_41": "<div class=\"codeBlock hljs javascript\" id=\"fir_41\"><pre id=\"fir_41_code\" style=\"display: block;\"><code class=\"javascript\">var n = 20, // number of layers\n    m = 200, // number of samples per layer\n    k = 10; // number of bumps per layer\n\nvar stack = d3.stack().keys(d3.range(n)).offset(d3.stackOffsetWiggle),\n    layers0 = stack(<div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.transpose(d3.range(n).map(function() { return bumps(m, k); }))</div>),\n    layers1 = stack(<div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_1\" style=\"background-color: #f6b73c;  display: inline;\">d3.transpose(d3.range(n).map(function() { return bumps(m, k); }))</div>),\n    layers = layers0.concat(layers1);\n\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">var svg = d3.select(\"svg\"),\n    <span class=\"fea_Canvas_keys udls\">width</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\"),\n    <span class=\"fea_Canvas_keys udls\">height</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\");</div>\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\">var x = d3.<span class=\"fea_Axis_keys udls\">scale</span>Linear()\n    .domain([0, m - 1])\n    .range([0, width]);\n\nvar y = d3.<span class=\"fea_Axis_keys udls\">scale</span>Linear()\n    .domain([d3.min(layers, stackMin), d3.max(layers, stackMax)])\n    .range([height, 0]);\n\nvar z = d3.interpolateCool;</div>\n\n<div class=\"highlights fea_Stream_Graph\" id=\"Stream_Graph_0\" style=\"background-color: #f6b73c;  display: inline;\">var area = d3.area()\n    .x(function(d, i) { return x(i); })\n    .y0(function(d) { return y(d[0]); })\n    .y1(function(d) { return y(d[1]); });</div>\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">svg.selectAll(\"path\")\n  .<span class=\"fea_Shapes_keys udls\">data</span>(layers0)\n  .enter().append(\"path\")\n    .attr(\"d\", area)\n    .attr(\"fill\", function() { return z(Math.random()); });</div>\n\nfunction stackMax(layer) {\n  return <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_2\" style=\"background-color: #f6b73c;  display: inline;\">d3.<span class=\"fea_Data_Transformation_keys udls\">max</span>(layer, function(d) { return d[1]; });</div>\n}\n\nfunction stackMin(layer) {\n  return <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_3\" style=\"background-color: #f6b73c;  display: inline;\">d3.min(layer, function(d) { return d[0]; });</div>\n}\n\n<div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"background-color: #f6b73c;  display: inline;\">function transition() {\n  var t;\n  d3.selectAll(\"path\")\n    .data((t = layers1, layers1 = layers0, layers0 = t))\n    .transition()\n      .dur<span class=\"fea_Animations_keys udls\">ation</span>(2500)\n      .attr(\"d\", area);\n}</div>\n\n// Inspired by Lee Byron’s test data generator.\nfunction bumps(n, m) {\n  var a = [], i;\n  for (i = 0; i &lt; n; ++i) a[i] = 0;\n  for (i = 0; i &lt; m; ++i) bump(a, n);\n  return a;\n}\n\nfunction bump(a, n) {\n  var x = 1 / (0.1 + Math.random()),\n      y = 2 * Math.random() - 0.5,\n      z = 10 / (0.1 + Math.random());\n  for (var i = 0; i &lt; n; i++) {\n    var w = (i / n - y) * z;\n    a[i] += x * Math.exp(-w * w);\n  }\n}</code></pre></div>",
    "fir_42": "<div class=\"codeBlock hljs javascript\" id=\"fir_42\"><pre id=\"fir_42_code\" style=\"display: block;\"><code class=\"javascript\">var margin = {top: 5, right: 40, bottom: 20, left: 120},\n    width = 960 - margin.left - margin.right,\n    height = 50 - margin.top - margin.bottom;\n\n<div class=\"highlights fea_Bullet_Chart\" id=\"Bullet_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">var chart = d3.bullet()\n    .width(width)\n    .height(height);</div>\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.json(\"bullets.json\", function(error, <span class=\"fea_Import_Data_keys udls\">data</span>)</div> {\n  if (error) throw error;\n\n  <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">var svg = d3.select(\"body\").selectAll(\"svg\")\n      .data(data)\n    .enter().append(\"svg\")\n      .attr(\"class\", \"bullet\")\n      .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span> + margin.left + margin.right)\n      .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span> + margin.top + margin.bottom)\n    .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\")\n      .call(chart);</div>\n\n  <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">var title = svg.append(\"g\")\n      .style(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\", \"end\")\n      .attr(\"transform\", \"translate(-6,\" + height / 2 + \")\");</div>\n\n  <div class=\"highlights fea_Text\" id=\"Text_1\" style=\"background-color: #f6b73c;  display: inline;\">title.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"class\", \"title\")\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d.title; });\n\n  title.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"class\", \"subtitle\")\n      .attr(\"dy\", \"1em\")\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d.subtitle; });</div>\n\n  <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.selectAll(\"button\").on(\"click\", function() </div>{\n    <div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"background-color: #f6b73c;  display: inline;\">svg.datum(randomize).call(chart.dur<span class=\"fea_Animations_keys udls\">ation</span>(1000));</div> // TODO automatic transition\n  });\n});\n\nfunction randomize(d) {\n  if (!d.randomizer) d.randomizer = randomizer(d);\n  d.ranges = d.ranges.map(d.randomizer);\n  d.markers = d.markers.map(d.randomizer);\n  d.measures = d.measures.map(d.randomizer);\n  return d;\n}\n\nfunction randomizer(d) {\n  var k = d3.max(d.ranges) * .2;\n  return function(d) {\n    return Math.max(0, d + k * (Math.random() - .5));\n  };\n}\n#https://bl.ocks.org/mbostock/4061961</code></pre></div>",
    "fir_43": "<div class=\"codeBlock hljs javascript\" id=\"fir_43\"><pre id=\"fir_43_code\" style=\"display: block;\"><code class=\"javascript\">var matrix = [\n  [11975,  5871, 8916, 2868],\n  [ 1951, 10048, 2060, 6171],\n  [ 8010, 16145, 8090, 8045],\n  [ 1013,   990,  940, 6907]\n];\n\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">var svg = d3.select(\"svg\"),\n    <span class=\"fea_Canvas_keys udls\">width</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\"),\n    <span class=\"fea_Canvas_keys udls\">height</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\"),\n    outerRadius = Math.min(<span class=\"fea_Canvas_keys udls\">width</span>, <span class=\"fea_Canvas_keys udls\">height</span>) * 0.5 - 40,\n    innerRadius = outerRadius - 30;</div>\n\n<div class=\"highlights fea_Data_Format\" id=\"Data_Format_0\" style=\"background-color: #f6b73c;  display: inline;\">var formatValue = d3.formatPrefix(\",.0\", 1e3);</div>\n\n<div class=\"highlights fea_Chord_Diagram\" id=\"Chord_Diagram_0\" style=\"background-color: #f6b73c;  display: inline;\">var chord = d3.chord()\n    .padAngle(0.05)\n    .sortSubgroups(d3.descending);</div>\n\n<div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">var arc = d3.arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius);\n\nvar ribbon = d3.ribbon()\n    .radius(innerRadius);</div>\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\">var color = d3.<span class=\"fea_Axis_keys udls\">scale</span>Ordinal()\n    .domain(d3.range(4))\n    .range([\"#000000\", \"#FFDD89\", \"#957244\", \"#F26223\"]);</div>\n\nvar g = svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\")\n    .datum(chord(matrix));\n\nvar group = g.append(\"g\")\n    .attr(\"class\", \"groups\")\n  .selectAll(\"g\")\n  .data(function(chords) { return chords.groups; })\n  .enter().append(\"g\");\n\ngroup.append(\"path\")\n    .style(\"fill\", function(d) { return color(d.index); })\n    .style(\"stroke\", function(d) { return d3.rgb(color(d.index)).darker(); })\n    .attr(\"d\", arc);\n\nvar groupTick = group.selectAll(\".group-tick\")\n  .data(function(d) { return groupTicks(d, 1e3); })\n  .enter().append(\"g\")\n    .attr(\"class\", \"group-tick\")\n    .attr(\"transform\", function(d) { return \"rotate(\" + (d.angle * 180 / Math.PI - 90) + \") translate(\" + outerRadius + \",0)\"; });\n\ngroupTick.append(\"line\")\n    .attr(\"x2\", 6);\n\ngroupTick\n  .filter(function(d) { return d.value % 5e3 === 0; })\n  .append(\"text\")\n    .attr(\"x\", 8)\n    .attr(\"dy\", \".35em\")\n    .attr(\"transform\", function(d) { return d.angle &gt; Math.PI ? \"rotate(180) translate(-16)\" : null; })\n    .style(\"text-anchor\", function(d) { return d.angle &gt; Math.PI ? \"end\" : null; })\n    .text(function(d) { return formatValue(d.value); });\n\ng.append(\"g\")\n    .attr(\"class\", \"ribbons\")\n  .selectAll(\"path\")\n  .data(function(chords) { return chords; })\n  .enter().append(\"path\")\n    .attr(\"d\", ribbon)\n    .style(\"fill\", function(d) { return color(d.target.index); })\n    .style(\"stroke\", function(d) { return d3.rgb(color(d.target.index)).darker(); });\n\n// Returns an array of tick angles and values for a given group and step.\nfunction groupTicks(d, step) {\n  var k = (d.endAngle - d.startAngle) / d.value;\n  return <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.range(0, d.value, step).map(function(value) {\n    return {value: value, angle: value * k + d.startAngle};\n  });</div>\n}\n#https://bl.ocks.org/mbostock/4062006</code></pre></div>",
    "fir_44": "<div class=\"codeBlock hljs javascript\" id=\"fir_44\"><pre id=\"fir_44_code\" style=\"display: block;\"><code class=\"javascript\"><div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">var svg = d3.select(\"svg\"),\n    <span class=\"fea_Canvas_keys udls\">width</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\"),\n    <span class=\"fea_Canvas_keys udls\">height</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\");</div>\n\n<div class=\"highlights fea_Data_Format\" id=\"Data_Format_0\" style=\"background-color: #f6b73c;  display: inline;\">var format = d3.format(\",d\");</div>\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\">var color = d3.<span class=\"fea_Axis_keys udls\">scale</span>Ordinal(d3.schemeCategory20c);</div>\n\n<div class=\"highlights fea_Bubble_Chart\" id=\"Bubble_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">var pack = d3.pack()\n    .size([width, height])\n    .padding(1.5);</div>\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.csv(\"flare.csv\", function(d) {</div>\n  d.value = +d.value;\n  if (d.value) return d;\n}, function(error, classes) {\n  if (error) throw error;\n\n  <div class=\"highlights fea_Data_Grouping\" id=\"Data_Grouping_0\" style=\"background-color: #f6b73c;  display: inline;\">var root = d3.hierarchy({children: classes})\n      .sum(<span class=\"fea_Data_Grouping_keys udls\">function</span>(d) { <span class=\"fea_Data_Grouping_keys udls\">return</span> d.value; })\n      .each(<span class=\"fea_Data_Grouping_keys udls\">function</span>(d) {\n        if (id = d.<span class=\"fea_Data_Grouping_keys udls\">data</span>.id) {\n          var id, i = id.lastIndexOf(\".\");\n          d.id = id;\n          d.package = id.slice(0, i);\n          d.class = id.slice(i + 1);\n        }\n      });</div>\n\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">var node = svg.selectAll(\".node\")\n    .<span class=\"fea_Shapes_keys udls\">data</span>(pack(root).leaves())\n    .enter().append(\"g\")\n      .attr(\"class\", \"node\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n  node.append(\"circle\")\n      .attr(\"id\", function(d) { return d.id; })\n      .attr(\"r\", function(d) { return d.r; })\n      .style(\"fill\", function(d) { return color(d.package); });\n\n  node.append(\"clipPath\")\n      .attr(\"id\", function(d) { return \"clip-\" + d.id; })\n    .append(\"use\")\n      .attr(\"xlink:href\", function(d) { return \"#\" + d.id; });</div>\n\n  <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">node.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"clip-path\", function(d) { return \"url(#clip-\" + d.id + \")\"; })\n    .selectAll(\"tspan\")\n    .data(function(d) { return d.class.split(/(?=[A-Z][^A-Z])/g); })\n    .enter().append(\"tspan\")\n      .attr(\"x\", 0)\n      .attr(\"y\", function(d, i, nodes) { return 13 + (i - nodes.length / 2 - 0.5) * 10; })\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d; });\n\n  node.append(\"title\")\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d.id + \"\\n\" + format(d.value); });</div>\n});\n#https://bl.ocks.org/mbostock/4063269</code></pre></div>",
    "fir_45": "<div class=\"codeBlock hljs javascript\" id=\"fir_45\"><pre id=\"fir_45_code\" style=\"display: block;\"><code class=\"javascript\">var width = 960,\n    height = 136,\n    cellSize = 17;\n\n<div class=\"highlights fea_Data_Format\" id=\"Data_Format_0\" style=\"background-color: #f6b73c;  display: inline;\">var formatPercent = d3.format(\".1%\");</div>\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\">var color = d3.<span class=\"fea_Axis_keys udls\">scale</span>Quantize()\n    .domain([-0.05, 0.05])\n    .range([\"#a50026\", \"#d73027\", \"#f46d43\", \"#fdae61\", \"#fee08b\", \"#ffffbf\", \"#d9ef8b\", \"#a6d96a\", \"#66bd63\", \"#1a9850\", \"#006837\"]);</div>\n\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">var svg = d3.select(\"body\")\n  .selectAll(\"svg\")\n  .data(d3.range(1990, 2011))\n  .enter().append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span>)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span>)\n  .append(\"g\")\n    .attr(\"transform\", \"translate(\" + ((<span class=\"fea_Canvas_keys udls\">width</span> - cellSize * 53) / 2) + \",\" + (<span class=\"fea_Canvas_keys udls\">height</span> - cellSize * 7 - 1) + \")\");</div>\n\n<div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">svg.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n    .attr(\"transform\", \"translate(-6,\" + cellSize * 3.5 + \")rotate(-90)\")\n    .attr(\"font-family\", \"sans-serif\")\n    .attr(\"font-size\", 10)\n    .attr(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\", \"middle\")\n    .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d; });</div>\n\n<div class=\"highlights fea_Heatmap\" id=\"Heatmap_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Heatmap_keys udls\">var</span> <span class=\"fea_Heatmap_keys udls\">rect</span> = svg.append(\"g\")\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"#ccc\")\n  .selectAll(\"<span class=\"fea_Heatmap_keys udls\">rect</span>\")\n  .<span class=\"fea_Heatmap_keys udls\">data</span>(function(d) { <span class=\"fea_Heatmap_keys udls\">return</span> d3.timeDays(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"<span class=\"fea_Heatmap_keys udls\">rect</span>\")</div>\n    .attr(\"width\", cellSize)\n    .attr(\"height\", cellSize)\n    .attr(\"x\", function(d) { return d3.timeWeek.count(d3.timeYear(d), d) * cellSize; })\n    .attr(\"y\", function(d) { return d.getDay() * cellSize; })\n    <div class=\"highlights fea_Data_Format\" id=\"Data_Format_1\" style=\"background-color: #f6b73c;  display: inline;\">.datum(d3.timeFormat(\"%Y-%m-%d\"));</div>\n\nsvg.append(\"g\")\n    .attr(\"fill\", \"none\")\n    .attr(\"stroke\", \"#000\")\n  .selectAll(\"path\")\n  .data(function(d) { return d3.timeMonths(new Date(d, 0, 1), new Date(d + 1, 0, 1)); })\n  .enter().append(\"path\")\n    .attr(\"d\", pathMonth);\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.csv(\"dji.csv\", function(error, csv) {</div>\n  if (error) throw error;\n\n  <div class=\"highlights fea_Data_Grouping\" id=\"Data_Grouping_0\" style=\"background-color: #f6b73c;  display: inline;\">var <span class=\"fea_Data_Grouping_keys udls\">data</span> = d3.nest()\n      .key(<span class=\"fea_Data_Grouping_keys udls\">function</span>(d) { <span class=\"fea_Data_Grouping_keys udls\">return</span> d.Date; })\n      .rollup(<span class=\"fea_Data_Grouping_keys udls\">function</span>(d) { <span class=\"fea_Data_Grouping_keys udls\">return</span> (d[0].Close - d[0].Open) / d[0].Open; })\n    .object(csv);</div>\n\n  <div class=\"highlights fea_Data_Filtering\" id=\"Data_Filtering_0\" style=\"background-color: #f6b73c;  display: inline;\">rect.filter(function(d) { return d in data; })</div>\n      .attr(\"fill\", function(d) { return color(data[d]); })\n    .append(\"title\")\n      .text(function(d) { return d + \": \" + formatPercent(data[d]); });\n});\n\nfunction pathMonth(t0) {\n  var t1 = new Date(t0.getFullYear(), t0.getMonth() + 1, 0),\n      d0 = t0.getDay(), w0 = d3.timeWeek.count(d3.timeYear(t0), t0),\n      d1 = t1.getDay(), w1 = d3.timeWeek.count(d3.timeYear(t1), t1);\n  return \"M\" + (w0 + 1) * cellSize + \",\" + d0 * cellSize\n      + \"H\" + w0 * cellSize + \"V\" + 7 * cellSize\n      + \"H\" + w1 * cellSize + \"V\" + (d1 + 1) * cellSize\n      + \"H\" + (w1 + 1) * cellSize + \"V\" + 0\n      + \"H\" + (w0 + 1) * cellSize + \"Z\";\n}\n#https://bl.ocks.org/mbostock/4063318</code></pre></div>",
    "fir_46": "<div class=\"codeBlock hljs javascript\" id=\"fir_46\"><pre id=\"fir_46_code\" style=\"display: block;\"><code class=\"javascript\"><div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">var svg = d3.select(\"svg\"),\n    diameter = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\"),\n    g = svg.append(\"g\").attr(\"transform\", \"translate(2,2)\"),</div>\n    <div class=\"highlights fea_Data_Format\" id=\"Data_Format_0\" style=\"background-color: #f6b73c;  display: inline;\">format = d3.format(\",d\");</div>\n\n<div class=\"highlights fea_Bubble_Chart\" id=\"Bubble_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">var pack = d3.pack()\n    .size([diameter - 4, diameter - 4]);</div>\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.json(\"flare.json\", function(error, root) {</div>\n  if (error) throw error;\n\n  <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"background-color: #f6b73c;  display: inline;\">root = d3.hierarchy(root)\n      .sum(function(d) { return d.size; })\n      .sort(function(a, b) { return b.value - a.value; });</div>\n\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">var node = g.selectAll(\".node\")\n    .<span class=\"fea_Shapes_keys udls\">data</span>(pack(root).descendants())\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return d.children ? \"node\" : \"leaf node\"; })\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });</div>\n\n  <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">node.append(\"title\")\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d.data.name + \"\\n\" + format(d.value); });</div>\n\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"background-color: #f6b73c;  display: inline;\">node.append(\"circle\")\n      .attr(\"r\", function(d) { return d.r; });</div>\n\n <div class=\"highlights fea_Data_Filtering\" id=\"Data_Filtering_0\" style=\"background-color: #f6b73c;  display: inline;\"> node.filter(function(d) { return !d.children; })</div><div class=\"highlights fea_Text\" id=\"Text_1\" style=\"background-color: #f6b73c;  display: inline;\">.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"dy\", \"0.3em\")\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d.data.name.substring(0, d.r / 3); });\n});</div>\n#https://bl.ocks.org/mbostock/4063530</code></pre></div>",
    "fir_47": "<div class=\"codeBlock hljs javascript\" id=\"fir_47\"><pre id=\"fir_47_code\" style=\"display: block;\"><code class=\"javascript\"><div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">var svg = d3.select(\"svg\"),\n    <span class=\"fea_Canvas_keys udls\">width</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\"),\n    <span class=\"fea_Canvas_keys udls\">height</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\"),\n    g = svg.append(\"g\").attr(\"transform\", \"translate(\" + (<span class=\"fea_Canvas_keys udls\">width</span> / 2 + 40) + \",\" + (<span class=\"fea_Canvas_keys udls\">height</span> / 2 + 90) + \")\");</div>\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\n<div class=\"highlights fea_Tree\" id=\"Tree_0\" style=\"background-color: #f6b73c;  display: inline;\">var tree = d3.tree()\n    .size([2 * Math.PI, 500])\n    .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });\n</div>\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.csv(\"flare.csv\", function(error, <span class=\"fea_Import_Data_keys udls\">data</span>) {</div>\n  if (error) throw error;\n\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">var root = tree(stratify(<span class=\"fea_Shapes_keys udls\">data</span>));\n\n  var link = g.selectAll(\".link\")\n    .<span class=\"fea_Shapes_keys udls\">data</span>(root.links())\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", d3.linkRadial()\n          .angle(function(d) { return d.x; })\n          .radius(function(d) { return d.y; }));\n\n  var node = g.selectAll(\".node\")\n    .<span class=\"fea_Shapes_keys udls\">data</span>(root.descendants())\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return \"node\" + (d.children ? \" node--internal\" : \" node--leaf\"); })\n      .attr(\"transform\", function(d) { return \"translate(\" + radialPoint(d.x, d.y) + \")\"; });\n\n  node.append(\"circle\")\n      .attr(\"r\", 2.5);</div>\n\n  <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">node.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"dy\", \"0.31em\")\n      .attr(\"x\", function(d) { return d.x &lt; Math.PI === !d.children ? 6 : -6; })\n      .attr(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\", function(d) { return d.x &lt; Math.PI === !d.children ? \"start\" : \"end\"; })\n      .attr(\"transform\", function(d) { return \"rotate(\" + (d.x &lt; Math.PI ? d.x - Math.PI / 2 : d.x + Math.PI / 2) * 180 / Math.PI + \")\"; })\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1); });\n});</div>\n\nfunction radialPoint(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n#https://bl.ocks.org/mbostock/4063550</code></pre></div>",
    "fir_48": "<div class=\"codeBlock hljs javascript\" id=\"fir_48\"><pre id=\"fir_48_code\" style=\"display: block;\"><code class=\"javascript\"><div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">var svg = d3.select(\"svg\"),\n    <span class=\"fea_Canvas_keys udls\">width</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\"),\n    <span class=\"fea_Canvas_keys udls\">height</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\"),\n    g = svg.append(\"g\").attr(\"transform\", \"translate(40,0)\");</div>\n\n<div class=\"highlights fea_Tree\" id=\"Tree_0\" style=\"background-color: #f6b73c;  display: inline;\">var tree = d3.cluster()\n    .size([height, width - 160]);</div>\n\nvar stratify = d3.stratify()\n    .parentId(function(d) { return d.id.substring(0, d.id.lastIndexOf(\".\")); });\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.csv(\"flare.csv\", function(error, <span class=\"fea_Import_Data_keys udls\">data</span>) {</div>\n  if (error) throw error;\n\n  var root = stratify(data)\n      .sort(function(a, b) { return (a.height - b.height) || a.id.localeCompare(b.id); });\n\n  tree(root);\n\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">var link = g.selectAll(\".link\")\n      .<span class=\"fea_Shapes_keys udls\">data</span>(root.descendants().slice(1))\n    .enter().append(\"path\")\n      .attr(\"class\", \"link\")\n      .attr(\"d\", function(d) {\n        return \"M\" + d.y + \",\" + d.x\n            + \"C\" + (d.parent.y + 100) + \",\" + d.x\n            + \" \" + (d.parent.y + 100) + \",\" + d.parent.x\n            + \" \" + d.parent.y + \",\" + d.parent.x;\n      });\n\n  var node = g.selectAll(\".node\")\n      .<span class=\"fea_Shapes_keys udls\">data</span>(root.descendants())\n    .enter().append(\"g\")\n      .attr(\"class\", function(d) { return \"node\" + (d.children ? \" node--internal\" : \" node--leaf\"); })\n      .attr(\"transform\", function(d) { return \"translate(\" + d.y + \",\" + d.x + \")\"; })\n\n  node.append(\"circle\")\n      .attr(\"r\", 2.5);</div>\n\n  <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">node.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"dy\", 3)\n      .attr(\"x\", function(d) { return d.children ? -8 : 8; })\n      .style(\"<span class=\"fea_Text_keys udls\">text</span>-anchor\", function(d) { return d.children ? \"end\" : \"start\"; })\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d.id.substring(d.id.lastIndexOf(\".\") + 1); });\n});</div>\n#https://bl.ocks.org/mbostock/4063570</code></pre></div>",
    "fir_49": "<div class=\"codeBlock hljs javascript\" id=\"fir_49\"><pre id=\"fir_49_code\" style=\"display: block;\"><code class=\"javascript\"><div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">var svg = d3.select(\"svg\"),\n    <span class=\"fea_Canvas_keys udls\">width</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\"),\n    <span class=\"fea_Canvas_keys udls\">height</span> = +svg.attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\");</div>\n\nvar fader = function(color) { return d3.interpolateRgb(color, \"#fff\")(0.2); },\n   <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\"> color = d3.<span class=\"fea_Axis_keys udls\">scale</span>Ordinal(d3.schemeCategory20.map(fader)),</div>\n    <div class=\"highlights fea_Data_Format\" id=\"Data_Format_0\" style=\"background-color: #f6b73c;  display: inline;\">format = d3.format(\",d\");</div>\n\n<div class=\"highlights fea_Treemap\" id=\"Treemap_0\" style=\"background-color: #f6b73c;  display: inline;\">var <span class=\"fea_Treemap_keys udls\">treemap</span> = d3.<span class=\"fea_Treemap_keys udls\">treemap</span>()\n    .tile(d3.<span class=\"fea_Treemap_keys udls\">treemap</span>Resquarify)\n    .size([width, height])\n    .round(true)\n    .paddingInner(1);</div>\n\n<div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.json(\"flare.json\", function(error, <span class=\"fea_Import_Data_keys udls\">data</span>)</div> {\n  if (error) throw error;\n\n  var root = d3.hierarchy(data)\n      <div class=\"highlights fea_Data_Transformation\" id=\"Data_Transformation_0\" style=\"background-color: #f6b73c;  display: inline;\">.eachBefore(function(d) { d.<span class=\"fea_Data_Transformation_keys udls\">data</span>.id = (d.parent ? d.parent.<span class=\"fea_Data_Transformation_keys udls\">data</span>.id + \".\" : \"\") + d.<span class=\"fea_Data_Transformation_keys udls\">data</span>.name; })\n      .sum(sumBySize)\n      .sort(function(a, b) { return b.height - a.height || b.value - a.value; });</div>\n\n  treemap(root);\n\n  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">var cell = svg.selectAll(\"g\")\n    .<span class=\"fea_Shapes_keys udls\">data</span>(root.leaves())\n    .enter().append(\"g\")\n      .attr(\"transform\", function(d) { return \"translate(\" + d.x0 + \",\" + d.y0 + \")\"; });\n\n  cell.append(\"rect\")\n      .attr(\"id\", function(d) { return d.<span class=\"fea_Shapes_keys udls\">data</span>.id; })\n      .attr(\"width\", function(d) { return d.x1 - d.x0; })\n      .attr(\"height\", function(d) { return d.y1 - d.y0; })\n      .attr(\"fill\", function(d) { return color(d.parent.<span class=\"fea_Shapes_keys udls\">data</span>.id); });\n\n  cell.append(\"clipPath\")\n      .attr(\"id\", function(d) { return \"clip-\" + d.<span class=\"fea_Shapes_keys udls\">data</span>.id; })\n    .append(\"use\")\n      .attr(\"xlink:href\", function(d) { return \"#\" + d.<span class=\"fea_Shapes_keys udls\">data</span>.id; });</div>\n\n  <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">cell.append(\"<span class=\"fea_Text_keys udls\">text</span>\")\n      .attr(\"clip-path\", function(d) { return \"url(#clip-\" + d.data.id + \")\"; })\n    .selectAll(\"tspan\")\n      .data(function(d) { return d.data.name.split(/(?=[A-Z][^A-Z])/g); })\n    .enter().append(\"tspan\")\n      .attr(\"x\", 4)\n      .attr(\"y\", function(d, i) { return 13 + i * 10; })\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d; });\n\n  cell.append(\"title\")\n      .<span class=\"fea_Text_keys udls\">text</span>(function(d) { return d.data.id + \"\\n\" + format(d.value); });\n</div>\n  <div class=\"highlights fea_Selection\" id=\"Selection_0\" style=\"background-color: #f6b73c;  display: inline;\">d3.selectAll(\"input\")\n      .<span class=\"fea_Selection_keys udls\">data</span>([sumBySize, sumByCount], function(d) { return d ? d.name : <span class=\"fea_Selection_keys udls\">this</span>.<span class=\"fea_Selection_keys udls\">value</span>; })\n      .on(\"<span class=\"fea_Selection_keys udls\">change</span>\", <span class=\"fea_Selection_keys udls\">change</span>d);</div>\n\n  <div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"background-color: #f6b73c;  display: inline;\">var timeout = d3.timeout(function() {\n    d3.select(\"input[value=\\\"sumByCount\\\"]\")\n        .property(\"checked\", true)\n        .dispatch(\"change\");\n  }, 2000);</div>\n\n  function changed(sum) {\n    timeout.stop();\n\n    treemap(root.sum(sum));\n\n   <div class=\"highlights fea_Animations\" id=\"Animations_1\" style=\"background-color: #f6b73c;  display: inline;\"> cell.transition()\n        .dur<span class=\"fea_Animations_keys udls\">ation</span>(750)</div>\n        .attr(\"transform\", function(d) { return \"translate(\" + d.x0 + \",\" + d.y0 + \")\"; })\n      .select(\"rect\")\n        .attr(\"width\", function(d) { return d.x1 - d.x0; })\n        .attr(\"height\", function(d) { return d.y1 - d.y0; });\n  }\n});\n\nfunction sumByCount(d) {\n  return d.children ? 0 : 1;\n}\n\nfunction sumBySize(d) {\n  return d.size;\n}\n#https://bl.ocks.org/mbostock/4063582</code></pre></div>",
    "fir_50": "<div class=\"codeBlock hljs javascript\" id=\"fir_50\"><pre id=\"fir_50_code\" style=\"display: block;\"><code class=\"javascript\">var width = 960,\n    height = 500;\n\n<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\">var radius = d3.<span class=\"fea_Axis_keys udls\">scale</span>.sqrt()\n    .domain([0, 1e6])\n    .range([0, 10]);</div>\n\n<div class=\"highlights fea_Geo_Maps\" id=\"Geo_Maps_0\" style=\"background-color: #f6b73c;  display: inline;\">var path = d3.geo.path();</div>\n\n<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">var svg = d3.select(\"body\").append(\"svg\")\n    .attr(\"<span class=\"fea_Canvas_keys udls\">width</span>\", <span class=\"fea_Canvas_keys udls\">width</span>)\n    .attr(\"<span class=\"fea_Canvas_keys udls\">height</span>\", <span class=\"fea_Canvas_keys udls\">height</span>);</div>\n\nqueue()\n    <div class=\"highlights fea_Import_Data\" id=\"Import_Data_0\" style=\"background-color: #f6b73c;  display: inline;\">.defer(d3.json, \"/mbostock/raw/4090846/us.json\")\n    .defer(d3.json, \"us-state-centroids.json\")</div>\n    .await(ready);\n\nfunction ready(error, us, centroid) {\n  if (error) throw error;\n\n  svg.append(\"path\")\n      .attr(\"class\", \"states\")\n      .datum(topojson.feature(us, us.objects.states))\n      .attr(\"d\", path);\n\n  <div class=\"highlights fea_Scatter_Plot\" id=\"Scatter_Plot_0\" style=\"background-color: #f6b73c;  display: inline;\">svg.selectAll(\".symbol\")\n      .data(centroid.features.sort(function(a, b) { return b.properties.population - a.properties.population; }))\n    .en<span class=\"fea_Scatter_Plot_keys udls\">ter</span>().append(\"path\")\n      .<span class=\"fea_Scatter_Plot_keys udls\">att</span>r(\"class\", \"symbol\")\n      .<span class=\"fea_Scatter_Plot_keys udls\">att</span>r(\"d\", path.pointRadius(function(d) { return radius(d.properties.population); }));</div>\n}\n#https://bl.ocks.org/mbostock/4342045</code></pre></div>",
    "sec_31": "<div class=\"codeBlock hljs javascript\" id=\"sec_31\"><pre id=\"sec_31_code\" style=\"display: block;\"><code class=\"javascript\">// Bar chart\nnew Chart(document.getElementById(\"bar-chart\"), {\n    <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: '<span class=\"fea_Bar_Chart_keys udls\">bar</span>'</div>,\n    data: {\n      labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n      datasets: [\n        {\n          label: \"Population (millions)\",\n          backgroundColor: [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\",\"#e8c3b9\",\"#c45850\"],\n          data: [2478,5267,734,784,433]\n        }\n      ]\n    },\n    options: {\n      <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Legend_keys udls\">legend</span>: { display: false },</div>\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">title: {\n        display: true,\n        <span class=\"fea_Text_keys udls\">text</span>: 'Predicted world population (millions) in 2050'\n      }</div>\n    }\n});\n#https://tobiasahlin.com/blog/chartjs-charts-to-get-you-started/</code></pre></div>",
    "sec_32": "<div class=\"codeBlock hljs javascript\" id=\"sec_32\"><pre id=\"sec_32_code\" style=\"display: block;\"><code class=\"javascript\">new Chart(document.getElementById(\"line-chart\"), {\n  <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: '<span class=\"fea_Line_Chart_keys udls\">line</span>',</div>\n  data: {\n    labels: [1500,1600,1700,1750,1800,1850,1900,1950,1999,2050],\n    datasets: [{ \n        data: [86,114,106,106,107,111,133,221,783,2478],\n        label: \"Africa\",\n        borderColor: \"#3e95cd\",\n        fill: false\n      }, { \n        data: [282,350,411,502,635,809,947,1402,3700,5267],\n        label: \"Asia\",\n        borderColor: \"#8e5ea2\",\n        fill: false\n      }, { \n        data: [168,170,178,190,203,276,408,547,675,734],\n        label: \"Europe\",\n        borderColor: \"#3cba9f\",\n        fill: false\n      }, { \n        data: [40,20,10,16,24,38,74,167,508,784],\n        label: \"Latin America\",\n        borderColor: \"#e8c3b9\",\n        fill: false\n      }, { \n        data: [6,3,2,2,7,26,82,172,312,433],\n        label: \"North America\",\n        borderColor: \"#c45850\",\n        fill: false\n      }\n    ]\n  },\n  options: {\n    <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">title: {\n      display: true,\n      <span class=\"fea_Text_keys udls\">text</span>: 'World population per region (in millions)'\n    }</div>\n  }\n});\n</code></pre></div>",
    "sec_33": "<div class=\"codeBlock hljs javascript\" id=\"sec_33\"><pre id=\"sec_33_code\" style=\"display: block;\"><code class=\"javascript\">new Chart(document.getElementById(\"pie-chart\"), {\n    <div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: '<span class=\"fea_Pie_Chart_keys udls\">pie</span>',</div>\n    data: {\n      labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n      datasets: [{\n        label: \"Population (millions)\",\n        backgroundColor: [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\",\"#e8c3b9\",\"#c45850\"],\n        data: [2478,5267,734,784,433]\n      }]\n    },\n    options: {\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">title: {\n        display: true,\n        <span class=\"fea_Text_keys udls\">text</span>: 'Predicted world population (millions) in 2050'\n      }</div>\n    }\n});</code></pre></div>",
    "sec_34": "<div class=\"codeBlock hljs javascript\" id=\"sec_34\"><pre id=\"sec_34_code\" style=\"display: block;\"><code class=\"javascript\">new Chart(document.getElementById(\"radar-chart\"), {\n    <div class=\"highlights fea_Radar_Chart\" id=\"Radar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: '<span class=\"fea_Radar_Chart_keys udls\">radar</span>',</div>\n    data: {\n      labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n      datasets: [\n        {\n          label: \"1950\",\n          fill: true,\n          backgroundColor: \"rgba(179,181,198,0.2)\",\n          borderColor: \"rgba(179,181,198,1)\",\n          pointBorderColor: \"#fff\",\n          pointBackgroundColor: \"rgba(179,181,198,1)\",\n          data: [8.77,55.61,21.69,6.62,6.82]\n        }, {\n          label: \"2050\",\n          fill: true,\n          backgroundColor: \"rgba(255,99,132,0.2)\",\n          borderColor: \"rgba(255,99,132,1)\",\n          pointBorderColor: \"#fff\",\n          pointBackgroundColor: \"rgba(255,99,132,1)\",\n          pointBorderColor: \"#fff\",\n          data: [25.48,54.16,7.61,8.06,4.45]\n        }\n      ]\n    },\n    options: {\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">title: {\n        display: true,\n        <span class=\"fea_Text_keys udls\">text</span>: 'Distribution in % of world population'\n      }</div>\n    }\n});</code></pre></div>",
    "sec_35": "<div class=\"codeBlock hljs javascript\" id=\"sec_35\"><pre id=\"sec_35_code\" style=\"display: block;\"><code class=\"javascript\">new Chart(document.getElementById(\"polar-chart\"), {\n    <div class=\"highlights fea_Area_Chart\" id=\"Area_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: 'polar<span class=\"fea_Area_Chart_keys udls\">Area</span>',</div>\n    data: {\n      labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n      datasets: [\n        {\n          label: \"Population (millions)\",\n          backgroundColor: [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\",\"#e8c3b9\",\"#c45850\"],\n          data: [2478,5267,734,784,433]\n        }\n      ]\n    },\n    options: {\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">title: {\n        display: true,\n        <span class=\"fea_Text_keys udls\">text</span>: 'Predicted world population (millions) in 2050'\n      }</div>\n    }\n});</code></pre></div>",
    "sec_36": "<div class=\"codeBlock hljs javascript\" id=\"sec_36\"><pre id=\"sec_36_code\" style=\"display: block;\"><code class=\"javascript\">new Chart(document.getElementById(\"doughnut-chart\"), {\n    <div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: 'doughnut',</div>\n    data: {\n      labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n      datasets: [\n        {\n          label: \"Population (millions)\",\n          backgroundColor: [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\",\"#e8c3b9\",\"#c45850\"],\n          data: [2478,5267,734,784,433]\n        }\n      ]\n    },\n    options: {\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">title: {\n        display: true,\n        <span class=\"fea_Text_keys udls\">text</span>: 'Predicted world population (millions) in 2050'\n      }</div>\n    }\n});</code></pre></div>",
    "sec_37": "<div class=\"codeBlock hljs javascript\" id=\"sec_37\"><pre id=\"sec_37_code\" style=\"display: block;\"><code class=\"javascript\">new Chart(document.getElementById(\"bar-chart-horizontal\"), {\n    <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: 'horizontal<span class=\"fea_Bar_Chart_keys udls\">Bar</span>',</div>\n    data: {\n      labels: [\"Africa\", \"Asia\", \"Europe\", \"Latin America\", \"North America\"],\n      datasets: [\n        {\n          label: \"Population (millions)\",\n          backgroundColor: [\"#3e95cd\", \"#8e5ea2\",\"#3cba9f\",\"#e8c3b9\",\"#c45850\"],\n          data: [2478,5267,734,784,433]\n        }\n      ]\n    },\n    options: {\n      <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Legend_keys udls\">legend</span>: { display: false },</div>\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">title: {\n        display: true,\n        <span class=\"fea_Text_keys udls\">text</span>: 'Predicted world population (millions) in 2050'\n      }</div>\n    }\n});</code></pre></div>",
    "sec_38": "<div class=\"codeBlock hljs javascript\" id=\"sec_38\"><pre id=\"sec_38_code\" style=\"display: block;\"><code class=\"javascript\">new Chart(document.getElementById(\"bar-chart-grouped\"), {\n    <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: '<span class=\"fea_Bar_Chart_keys udls\">bar</span>',</div>\n    data: {\n      labels: [\"1900\", \"1950\", \"1999\", \"2050\"],\n      datasets: [\n        {\n          label: \"Africa\",\n          backgroundColor: \"#3e95cd\",\n          data: [133,221,783,2478]\n        }, {\n          label: \"Europe\",\n          backgroundColor: \"#8e5ea2\",\n          data: [408,547,675,734]\n        }\n      ]\n    },\n    options: {\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">title: {\n        display: true,\n        <span class=\"fea_Text_keys udls\">text</span>: 'Population growth (millions)'\n      }</div>\n    }\n});</code></pre></div>",
    "sec_39": "<div class=\"codeBlock hljs javascript\" id=\"sec_39\"><pre id=\"sec_39_code\" style=\"display: block;\"><code class=\"javascript\">new Chart(document.getElementById(\"mixed-chart\"), {\n   <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"> type: '<span class=\"fea_Bar_Chart_keys udls\">bar</span>',</div>\n    data: {\n      labels: [\"1900\", \"1950\", \"1999\", \"2050\"],\n      datasets: [{\n          label: \"Europe\",\n          <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: \"<span class=\"fea_Line_Chart_keys udls\">line</span>\",</div>\n          borderColor: \"#8e5ea2\",\n          data: [408,547,675,734],\n          fill: false\n        }, {\n          label: \"Africa\",\n          <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_1\" style=\"background-color: #f6b73c;  display: inline;\">type: \"<span class=\"fea_Line_Chart_keys udls\">line</span>\",</div>\n          borderColor: \"#3e95cd\",\n          data: [133,221,783,2478],\n          fill: false\n        }, {\n          label: \"Europe\",\n          <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_1\" style=\"background-color: #f6b73c;  display: inline;\">type: \"<span class=\"fea_Bar_Chart_keys udls\">bar</span>\",</div>\n          backgroundColor: \"rgba(0,0,0,0.2)\",\n          data: [408,547,675,734],\n        }, {\n          label: \"Africa\",\n          <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_2\" style=\"background-color: #f6b73c;  display: inline;\">type: \"<span class=\"fea_Bar_Chart_keys udls\">bar</span>\",</div>\n          backgroundColor: \"rgba(0,0,0,0.2)\",\n          backgroundColorHover: \"#3e95cd\",\n          data: [133,221,783,2478]\n        }\n      ]\n    },\n    options: {\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">title: {\n        display: true,\n        <span class=\"fea_Text_keys udls\">text</span>: 'Population growth (millions): Europe &amp; Africa'\n      },</div>\n      <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Legend_keys udls\">legend</span>: { display: false }</div>\n    }\n});</code></pre></div>",
    "sec_40": "<div class=\"codeBlock hljs javascript\" id=\"sec_40\"><pre id=\"sec_40_code\" style=\"display: block;\"><code class=\"javascript\">new Chart(document.getElementById(\"bubble-chart\"), {\n    <div class=\"highlights fea_Bubble_Chart\" id=\"Bubble_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: 'bubble',</div>\n    data: {\n      labels: \"Africa\",\n      datasets: [\n        {\n          label: [\"China\"],\n          backgroundColor: \"rgba(255,221,50,0.2)\",\n          borderColor: \"rgba(255,221,50,1)\",\n          data: [{\n            x: 21269017,\n            y: 5.245,\n            r: 15\n          }]\n        }, {\n          label: [\"Denmark\"],\n          backgroundColor: \"rgba(60,186,159,0.2)\",\n          borderColor: \"rgba(60,186,159,1)\",\n          data: [{\n            x: 258702,\n            y: 7.526,\n            r: 10\n          }]\n        }, {\n          label: [\"Germany\"],\n          backgroundColor: \"rgba(0,0,0,0.2)\",\n          borderColor: \"#000\",\n          data: [{\n            x: 3979083,\n            y: 6.994,\n            r: 15\n          }]\n        }, {\n          label: [\"Japan\"],\n          backgroundColor: \"rgba(193,46,12,0.2)\",\n          borderColor: \"rgba(193,46,12,1)\",\n          data: [{\n            x: 4931877,\n            y: 5.921,\n            r: 15\n          }]\n        }\n      ]\n    },\n    options: {\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">title: {\n        display: true,\n        <span class=\"fea_Text_keys udls\">text</span>: 'Predicted world population (millions) in 2050'\n      }, </div><div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Axis_keys udls\">scale</span>s: {\n        yAxes: [{ \n          <span class=\"fea_Axis_keys udls\">scale</span>Label: {\n            display: true,\n            labelString: \"Happiness\"\n          }\n        }],\n        xAxes: [{ \n          <span class=\"fea_Axis_keys udls\">scale</span>Label: {\n            display: true,\n            labelString: \"GDP (PPP)\"\n          }\n        }]</div>\n      }\n    }\n});</code></pre></div>",
    "sec_41": "<div class=\"codeBlock hljs javascript\" id=\"sec_41\"><pre id=\"sec_41_code\" style=\"display: block;\"><code class=\"javascript\">\nvar ctx = document.getElementById('myChart').getContext('2d');\nvar myChart = new Chart(ctx, {\n  <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: '<span class=\"fea_Line_Chart_keys udls\">line</span>',</div>\n  data: {\n    labels: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    datasets: [{ \n        data: [86,114,106,106,107,111,133],\n        label: \"Total\",\n        borderColor: \"#3e95cd\",\n        backgroundColor: \"#7bb6dd\",\n        fill: False,\n      }, { \n        data: [70,90,44,60,83,90,100],\n        label: \"Accepted\",\n        borderColor: \"#3cba9f\",\n        backgroundColor: \"#71d1bd\",\n        fill: False,\n      }, { \n        data: [10,21,60,44,17,21,17],\n        label: \"Pending\",\n        borderColor: \"#ffa500\",\n        backgroundColor:\"#ffc04d\",\n        fill: False,\n      }, { \n        data: [6,3,2,2,7,0,16],\n        label: \"Rejected\",\n        borderColor: \"#c45850\",\n        backgroundColor:\"#d78f89\",\n        fill: False,\n      }\n    ]\n  },\n});\n\n#https://ordinarycoders.com/blog/article/11-chart-js-examples</code></pre></div>",
    "sec_42": "<div class=\"codeBlock hljs javascript\" id=\"sec_42\"><pre id=\"sec_42_code\" style=\"display: block;\"><code class=\"javascript\">var ctx = document.getElementById('myChart').getContext('2d');\n  var myChart = new Chart(ctx, {\n      <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: '<span class=\"fea_Line_Chart_keys udls\">line</span>',</div>\n      data: {\n        labels: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n        datasets: [{ \n            data: [86,114,106,106,107,111,133],\n            label: \"Total\",\n            borderColor: \"rgb(62,149,205)\",\n            backgroundColor: \"rgb(62,149,205,0.1)\",\n          }, { \n            data: [70,90,44,60,83,90,100],\n            label: \"Accepted\",\n            borderColor: \"rgb(60,186,159)\",\n            backgroundColor: \"rgb(60,186,159,0.1)\",\n          }, { \n            data: [10,21,60,44,17,21,17],\n            label: \"Pending\",\n            borderColor: \"rgb(255,165,0)\",\n            backgroundColor:\"rgb(255,165,0,0.1)\",\n          }, { \n            data: [6,3,2,2,7,0,16],\n            label: \"Rejected\",\n            borderColor: \"rgb(196,88,80)\",\n            backgroundColor:\"rgb(196,88,80,0.1)\",\n          }\n        ]\n      },\n    });   </code></pre></div>",
    "sec_43": "<div class=\"codeBlock hljs javascript\" id=\"sec_43\"><pre id=\"sec_43_code\" style=\"display: block;\"><code class=\"javascript\">var ctx = document.getElementById('myChart').getContext('2d');\nvar myChart = new Chart(ctx, {\n    <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: '<span class=\"fea_Bar_Chart_keys udls\">bar</span>',</div>\n    data: {\n      labels: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n      datasets: [{ \n          data: [86,114,106,106,107,111,133],\n          label: \"Total\",\n          borderColor: \"rgb(62,149,205)\",\n          backgroundColor: \"rgb(62,149,205,0.1)\",\n          borderWidth:2\n        }, { \n          data: [70,90,44,60,83,90,100],\n          label: \"Accepted\",\n          borderColor: \"rgb(60,186,159)\",\n          backgroundColor: \"rgb(60,186,159,0.1)\",\n          borderWidth:2\n        }, { \n          data: [10,21,60,44,17,21,17],\n          label: \"Pending\",\n          borderColor: \"rgb(255,165,0)\",\n          backgroundColor:\"rgb(255,165,0,0.1)\",\n          borderWidth:2\n        }, { \n          data: [6,3,2,2,7,0,16],\n          label: \"Rejected\",\n          borderColor: \"rgb(196,88,80)\",\n          backgroundColor:\"rgb(196,88,80,0.1)\",\n          borderWidth:2\n        }\n      ]\n    },\n  });</code></pre></div>",
    "sec_44": "<div class=\"codeBlock hljs javascript\" id=\"sec_44\"><pre id=\"sec_44_code\" style=\"display: block;\"><code class=\"javascript\">var ctx = document.getElementById('myChart').getContext('2d');\nvar myChart = new Chart(ctx, {\n    <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: '<span class=\"fea_Bar_Chart_keys udls\">bar</span>',</div>\n    data: {\n      labels: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n      datasets: [{ \n          data: [70,90,44,60,83,90,100],\n          label: \"Accepted\",\n          borderColor: \"#3cba9f\",\n          backgroundColor: \"#71d1bd\",\n          borderWidth:2\n        }, { \n          data: [10,21,60,44,17,21,17],\n          label: \"Pending\",\n          borderColor: \"#ffa500\",\n          backgroundColor:\"#ffc04d\",\n          borderWidth:2\n        }, { \n          data: [6,3,2,2,7,0,16],\n          label: \"Rejected\",\n          borderColor: \"#c45850\",\n          backgroundColor:\"#d78f89\",\n          borderWidth:2\n        }\n      ]\n    },\n    options: {\n      <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Axis_keys udls\">scale</span>s: {\n         xAxes: [{ \n          stacked: True    \n         }],\n         yAxes: [{\n          stacked:True\n         }],\n       }</div>\n     },\n  }); </code></pre></div>",
    "sec_45": "<div class=\"codeBlock hljs javascript\" id=\"sec_45\"><pre id=\"sec_45_code\" style=\"display: block;\"><code class=\"javascript\">var ctx = document.getElementById('myChart').getContext('2d');\nvar myChart = new Chart(ctx, {\n  <div class=\"highlights fea_Radar_Chart\" id=\"Radar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: '<span class=\"fea_Radar_Chart_keys udls\">radar</span>',</div>\n  data: {\n    labels: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    datasets: [{ \n        data: [86,114,106,106,107,111,133],\n        label: \"Total\",\n        borderColor: \"#3e95cd\",\n        backgroundColor: \"rgb(62,149,205,0.1)\",\n        borderWidth:2,\n       \n      }, { \n        data: [70,90,44,60,83,90,100],\n        label: \"Accepted\",\n        borderColor: \"#3cba9f\",\n        backgroundColor: \"rgb(60,186,159,0.1)\",\n        borderWidth:2,\n        \n      }, { \n        data: [10,21,60,44,17,21,17],\n        label: \"Pending\",\n        borderColor: \"#ffa500\",\n        backgroundColor:\"rgb(255,165,0,0.1)\",\n        borderWidth:2,\n        \n      }, { \n        data: [6,3,2,2,7,0,16],\n        label: \"Rejected\",\n        borderColor: \"#c45850\",\n        backgroundColor:\"rgb(196,88,80,0.1)\",\n        borderWidth:2,\n        \n      }\n    ]\n  },\n  options: {\n     <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Axis_keys udls\">scale</span>s: {\n       xAxes: [{ \n          display: False,\n       }],\n     }</div>\n   },\n}); </code></pre></div>",
    "sec_46": "<div class=\"codeBlock hljs javascript\" id=\"sec_46\"><pre id=\"sec_46_code\" style=\"display: block;\"><code class=\"javascript\">var ctx = document.getElementById('myChart').getContext('2d');\nvar myChart = new Chart(ctx, {\n    <div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: 'doughnut',</div>\n    data: {\n      labels: [\"Accepted\",\"Pending\", \"Rejected\"],\n      datasets: [{ \n          data: [70,10,6],\n          borderColor:[\n            \"#3cba9f\",\n            \"#ffa500\",\n            \"#c45850\",\n          ],\n          backgroundColor: [\n            \"rgb(60,186,159,0.1)\",\n            \"rgb(255,165,0,0.1)\",\n            \"rgb(196,88,80,0.1)\",\n          ],\n          borderWidth:2,\n        }]\n    },\n  options: {\n    <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Axis_keys udls\">scale</span>s: {\n      xAxes: [{ \n         display: False,\n      }],\n      yAxes: [{\n         display: False,\n      }],\n    }</div>\n  },\n\n});</code></pre></div>",
    "sec_47": "<div class=\"codeBlock hljs javascript\" id=\"sec_47\"><pre id=\"sec_47_code\" style=\"display: block;\"><code class=\"javascript\">var ctx = document.getElementById('myChart').getContext('2d');\nvar myChart = new Chart(ctx, {\n    <div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: '<span class=\"fea_Pie_Chart_keys udls\">pie</span>',</div>\n    data: {\n      labels: [\"Accepted\",\"Pending\", \"Rejected\"],\n      datasets: [{ \n          data: [70,10,6],\n          borderColor:[\n            \"#3cba9f\",\n            \"#ffa500\",\n            \"#c45850\",\n          ],\n          backgroundColor: [\n            \"rgb(60,186,159,0.1)\",\n            \"rgb(255,165,0,0.1)\",\n            \"rgb(196,88,80,0.1)\",\n          ],\n          borderWidth:2,\n        }]\n    },\n  options: {\n    <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Axis_keys udls\">scale</span>s: {\n      xAxes: [{ \n         display: False,\n      }],\n      yAxes: [{\n         display: False,\n      }],\n    }</div>\n  },\n}); </code></pre></div>",
    "sec_48": "<div class=\"codeBlock hljs javascript\" id=\"sec_48\"><pre id=\"sec_48_code\" style=\"display: block;\"><code class=\"javascript\">var ctx = document.getElementById('myChart').getContext('2d');\nvar myChart = new Chart(ctx, {\n    <div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: '<span class=\"fea_Pie_Chart_keys udls\">pie</span>',</div>\n    data: {\n      labels: [\"Accepted\",\"Pending\", \"Rejected\"],\n      datasets: [{ \n          data: [70,10,6],\n          borderColor:[\n            \"#3cba9f\",\n            \"#ffa500\",\n            \"#c45850\",\n          ],\n          backgroundColor: [\n            \"rgb(60,186,159,0.1)\",\n            \"rgb(255,165,0,0.1)\",\n            \"rgb(196,88,80,0.1)\",\n          ],\n          borderWidth:2,\n        }]\n    },\n  options: {\n    <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Axis_keys udls\">scale</span>s: {\n      xAxes: [{ \n         display: False,\n      }],\n      yAxes: [{\n         display: False,\n      }],\n    }</div>\n  },\n});</code></pre></div>",
    "sec_49": "<div class=\"codeBlock hljs javascript\" id=\"sec_49\"><pre id=\"sec_49_code\" style=\"display: block;\"><code class=\"javascript\">var ctx = document.getElementById('myChart').getContext('2d');\nvar myChart = new Chart(ctx, {\n  <div class=\"highlights fea_Bubble_Chart\" id=\"Bubble_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: 'bubble',</div>\n  data: {\n    datasets: [{ \n        data: [\n          {x: 17, y: 3, r:11},\n        ],\n        label: \"Blue Team\",\n        borderColor: \"#3e95cd\",\n        backgroundColor: \"rgb(62,149,205,0.1)\",\n        borderWidth:2,\n       \n      }, { \n        data: [\n          {x: 10, y: 3, r:20},\n        ],\n        label: \"Green Team\",\n        borderColor: \"#3cba9f\",\n        backgroundColor: \"rgb(60,186,159,0.1)\",\n        borderWidth:2,\n        \n      }, { \n        data: [\n        {x: 4, y: 4, r:30},\n        ],\n        label: \"Yellow Team\",\n        borderColor: \"#ffa500\",\n        backgroundColor:\"rgb(255,165,0,0.1)\",\n        borderWidth:2,\n        \n      }, { \n        data: [\n        {x: 14, y: 0, r:9}\n        ],\n        label: \"Red Team\",\n        borderColor: \"#c45850\",\n        backgroundColor:\"rgb(196,88,80,0.1)\",\n        borderWidth:2,\n      }\n    ]\n  },\n  options: {\n    <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Axis_keys udls\">scale</span>s: {\n      xAxes: [{ \n        <span class=\"fea_Axis_keys udls\">scale</span>Label: {\n          display: True,\n          labelString: '# of wins'\n        }\n      }],\n      yAxes: [{\n        <span class=\"fea_Axis_keys udls\">scale</span>Label: {\n          display: True,\n          labelString: '# of games'\n        }\n      }],\n    }</div>\n  },\n});</code></pre></div>",
    "sec_50": "<div class=\"codeBlock hljs javascript\" id=\"sec_50\"><pre id=\"sec_50_code\" style=\"display: block;\"><code class=\"javascript\">var ctx = document.getElementById('myChart').getContext('2d');\nvar myChart = new Chart(ctx, {\n  <div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">type: '<span class=\"fea_Bar_Chart_keys udls\">bar</span>',</div>\n  data: {\n    labels: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n    datasets: [{ \n        data: [86,114,106,106,107,111,133],\n        label: \"Total\",\n        borderColor: \"#3e95cd\",\n        backgroundColor: \"rgb(62,149,205)\",\n        borderWidth:2,\n        type: 'line',\n        fill:False\n      }, { \n        data: [70,90,44,60,83,90,100],\n        label: \"Accepted\",\n        borderColor: \"#3cba9f\",\n        backgroundColor: \"#3cba9f\",\n        borderWidth:2\n      }, { \n        data: [10,21,60,44,17,21,17],\n        label: \"Pending\",\n        borderColor: \"#ffa500\",\n        backgroundColor:\"#ffa500\",\n        borderWidth:2,\n      }, { \n        data: [6,3,2,2,7,0,16],\n        label: \"Rejected\",\n        borderColor: \"#c45850\",\n        backgroundColor:\"#c45850\",\n        borderWidth:2\n      }\n    ]\n  },\n});</code></pre></div>",
    "thr_31": "<div class=\"codeBlock hljs javascript\" id=\"thr_31\"><pre id=\"thr_31_code\" style=\"display: block;\"><code class=\"javascript\">import React, { Component } from 'react';\nimport { Surface, Pie } from 'recharts';\n\nconst data = [\n  { name: 'iphone4', value: 120, fill: '#ff7300' },\n  { name: 'iphone4s', value: 500, fill: '#e5671a' },\n  { name: 'iphone5', value: 600, fill: '#907213' }\n];\nconst sectors = [\n  { cx: 250, cy: 250, startAngle: 0, endAngle: 60, innerRadius: 100, outerRadius: 200 },\n  { cx: 250, cy: 250, startAngle: 60, endAngle: 120, innerRadius: 100, outerRadius: 200 },\n  { cx: 250, cy: 250, startAngle: 120, endAngle: 180, innerRadius: 100, outerRadius: 200 },\n  { cx: 250, cy: 250, startAngle: 180, endAngle: 240, innerRadius: 100, outerRadius: 200 },\n  { cx: 250, cy: 250, startAngle: 240, endAngle: 300, innerRadius: 100, outerRadius: 200 },\n  { cx: 250, cy: 250, startAngle: 300, endAngle: 360, innerRadius: 100, outerRadius: 200 },\n];\n\nexport default class PieDemo extends React.Component {\n  static displayName = 'PieDemo';\n\n  render () {\n    return (\n      <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\"><surface class=\"fea_Canvas_keys udls\">width</surface>={500} <span class=\"fea_Canvas_keys udls\">height</span>={500}&gt;</div>\n        &lt;<div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Pie_Chart_keys udls\">Pie</span></div>\n          <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">cx={250}\n          cy={250}\n          endAngle={0}\n          startAngle={360}\n          outerRadius={200}\n          innerRadius={180}</div>\n          data={data}\n          sectors={sectors}\n          paddingAngle={10}\n          dataKey=\"value\"\n          fill=\"#fff\"\n          stroke=\"#000\"\n        /&gt;\n       <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"background-color: #f6b73c;  display: inline;\"> &lt;line x1={0} y1={250} x2={500} y2={250} stroke=\"black\"/&gt;</div>\n      &lt;/Surface&gt;\n    );\n  }\n}\n\n//https://bitbucket.org/delainetech/transporter_react</code></pre></div>",
    "thr_32": "<div class=\"codeBlock hljs javascript\" id=\"thr_32\"><pre id=\"thr_32_code\" style=\"display: block;\"><code class=\"javascript\">import React, { Component } from 'react';\nimport { Surface, Radar, RadarChart, PolarGrid, Legend, Tooltip,\n  PolarAngleAxis, PolarRadiusAxis, ResponsiveContainer,\n  LabelList, Label } from 'recharts';\nimport DemoRadarItem from './DemoRadarItem';\nimport { changeNumberOfData } from './utils';\n\nconst data = [\n  { subject: 'Math', A: 120, B: 110 },\n  { subject: 'Chinese', A: 98, B: 130 },\n  { subject: 'English', A: 86, B: 130 },\n  { subject: 'Geography', A: 99, B: 100 },\n  { subject: 'Physics', A: 85, B: 90 },\n  { subject: 'History', A: 65, B: 85 },\n];\n\nconst initialState = { data };\n\nexport default class Demo extends Component {\n\n  static displayName = 'RadarChartDemo';\n\n  constructor() {\n    super();\n\n    this.state = initialState;\n    this.handleChangeData = this.handleChangeData.bind(this);\n  }\n\n  <div class=\"highlights fea_Selection\" id=\"Selection_0\" style=\"background-color: #f6b73c;  display: inline;\">handle<span class=\"fea_Selection_keys udls\">Change</span><span class=\"fea_Selection_keys udls\">Data</span>() {\n    <span class=\"fea_Selection_keys udls\">this</span>.setState(() =&gt; _.map<span class=\"fea_Selection_keys udls\">Value</span>s(initialState, <span class=\"fea_Selection_keys udls\">change</span>NumberOf<span class=\"fea_Selection_keys udls\">Data</span>));\n  }</div>\n\n  <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"background-color: #f6b73c;  display: inline;\">handle<span class=\"fea_Mouse_Events_keys udls\">Mouse</span>Enter(props) {\n    console.log(props);\n  }</div>\n\n  render() {\n    const { data } = this.state;\n\n    return (\n      &lt;div&gt;\n        &lt;a\n          href=\"javascript: void(0);\"\n          className=\"btn update\"\n          onClick={this.handleChangeData}\n        &gt;\n          change data\n        &lt;/a&gt;\n        &lt;br/&gt;\n        &lt;p&gt;A simple RadarChart&lt;/p&gt;\n        &lt;<div class=\"highlights fea_Radar_Chart\" id=\"Radar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Radar_Chart_keys udls\">Radar</span>Chart</div> <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">cx={300} cy={250} outerRadius={150}</div> <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Canvas_keys udls\">width</span>={600} <span class=\"fea_Canvas_keys udls\">height</span>={500}</div> data={data}&gt;\n          &lt;PolarGrid /&gt;\n          &lt;<div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\">PolarAngle<span class=\"fea_Axis_keys udls\">Axis</span></div> dataKey=\"subject\" /&gt;\n          &lt;Radar name=\"Mike\" dataKey=\"A\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6} /&gt;\n        &lt;/RadarChart&gt;\n\n        &lt;p&gt;A RadarChart of two students' score&lt;/p&gt;\n        &lt;<div class=\"highlights fea_Radar_Chart\" id=\"Radar_Chart_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Radar_Chart_keys udls\">Radar</span>Chart</div>\n          cx={300}\n          cy={250}\n          outerRadius={150}\n          width={600}\n          height={500}\n          data={data}\n        &gt;\n          &lt;PolarGrid /&gt;\n          &lt;<div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Tooltip_keys udls\">Tooltip</span></div> /&gt;\n          &lt;Radar\n            name=\"Mike\"\n            dataKey=\"A\"\n            stroke=\"#8884d8\"\n            fill=\"#8884d8\"\n            fillOpacity={0.6}\n            <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_1\" style=\"background-color: #f6b73c;  display: inline;\">on<span class=\"fea_Mouse_Events_keys udls\">Mouse</span>Enter={this.handle<span class=\"fea_Mouse_Events_keys udls\">Mouse</span>Enter}</div>\n          /&gt;\n          &lt;Radar\n            name=\"Lily\"\n            dataKey=\"B\"\n            stroke=\"#82ca9d\"\n            fill=\"#82ca9d\"\n            fillOpacity={0.6}\n            <div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"background-color: #f6b73c;  display: inline;\">anim<span class=\"fea_Animations_keys udls\">ation</span>Begin={180}</div>\n          /&gt;\n          &lt;Legend /&gt;\n          &lt;PolarRadiusAxis domain={[0, 150]} label=\"score\"/&gt;\n        &lt;/RadarChart&gt;\n\n        &lt;p&gt;RadarChart wrapped by ResponsiveContainer&lt;/p&gt;\n        &lt;div style={{ width: '100%', height: '100%' }}&gt;\n          &lt;ResponsiveContainer&gt;\n            &lt;RadarChart data={data}&gt;\n              &lt;PolarGrid /&gt;\n              &lt;PolarAngleAxis dataKey=\"subject\" /&gt;\n              &lt;PolarRadiusAxis /&gt;\n              &lt;Tooltip /&gt;\n              &lt;Radar name=\"Mike\" dataKey=\"A\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.6}&gt;\n                &lt;LabelList /&gt;\n              &lt;/Radar&gt;\n            &lt;/RadarChart&gt;\n          &lt;/ResponsiveContainer&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n#https://bitbucket.org/delainetech/transporter_react</code></pre></div>",
    "thr_33": "<div class=\"codeBlock hljs javascript\" id=\"thr_33\"><pre id=\"thr_33_code\" style=\"display: block;\"><code class=\"javascript\">import React, { Component } from 'react';\nimport { Sankey, Tooltip } from 'recharts';\nimport _ from 'lodash';\nimport DemoSankeyLink from './DemoSankeyLink';\nimport DemoSankeyNode from './DemoSankeyNode';\n\nconst data0 = {\n  nodes: [\n    { name: 'Agricultural waste' },\n    { name: 'Bio-conversion' },\n    { name: 'Liquid' },\n    { name: 'Losses' },\n    { name: 'Solid' },\n    { name: 'Gas' },\n    { name: 'Biofuel imports' },\n    { name: 'Biomass imports' },\n    { name: 'Coal imports' },\n    { name: 'Coal' },\n    { name: 'Coal reserves' },\n    { name: 'District heating' },\n    { name: 'Industry' },\n    { name: 'Heating and cooling - commercial' },\n    { name: 'Heating and cooling - homes' },\n    { name: 'Electricity grid' },\n    { name: 'Over generation / exports' },\n    { name: 'H2 conversion' },\n    { name: 'Road transport' },\n    { name: 'Agriculture' },\n    { name: 'Rail transport' },\n    { name: 'Lighting &amp; appliances - commercial' },\n    { name: 'Lighting &amp; appliances - homes' },\n    { name: 'Gas imports' },\n    { name: 'Ngas' },\n    { name: 'Gas reserves' },\n    { name: 'Thermal generation' },\n    { name: 'Geothermal' },\n    { name: 'H2' },\n    { name: 'Hydro' },\n    { name: 'International shipping' },\n    { name: 'Domestic aviation' },\n    { name: 'International aviation' },\n    { name: 'National navigation' },\n    { name: 'Marine algae' },\n    { name: 'Nuclear' },\n    { name: 'Oil imports' },\n    { name: 'Oil' },\n    { name: 'Oil reserves' },\n    { name: 'Other waste' },\n    { name: 'Pumped heat' },\n    { name: 'Solar PV' },\n    { name: 'Solar Thermal' },\n    { name: 'Solar' },\n    { name: 'Tidal' },\n    { name: 'UK land based bioenergy' },\n    { name: 'Wave' },\n    { name: 'Wind' },\n  ],\n  links: [\n    { source: 0, target: 1, value: 124.729 },\n    { source: 1, target: 2, value: 0.597 },\n    { source: 1, target: 3, value: 26.862 },\n    { source: 1, target: 4, value: 280.322 },\n    { source: 1, target: 5, value: 81.144 },\n    { source: 6, target: 2, value: 35 },\n    { source: 7, target: 4, value: 35 },\n    { source: 8, target: 9, value: 11.606 },\n    { source: 10, target: 9, value: 63.965 },\n    { source: 9, target: 4, value: 75.571 },\n    { source: 11, target: 12, value: 10.639 },\n    { source: 11, target: 13, value: 22.505 },\n    { source: 11, target: 14, value: 46.184 },\n    { source: 15, target: 16, value: 104.453 },\n    { source: 15, target: 14, value: 113.726 },\n    { source: 15, target: 17, value: 27.14 },\n    { source: 15, target: 12, value: 342.165 },\n    { source: 15, target: 18, value: 37.797 },\n    { source: 15, target: 19, value: 4.412 },\n    { source: 15, target: 13, value: 40.858 },\n    { source: 15, target: 3, value: 56.691 },\n    { source: 15, target: 20, value: 7.863 },\n    { source: 15, target: 21, value: 90.008 },\n    { source: 15, target: 22, value: 93.494 },\n    { source: 23, target: 24, value: 40.719 },\n    { source: 25, target: 24, value: 82.233 },\n    { source: 5, target: 13, value: 0.129 },\n    { source: 5, target: 3, value: 1.401 },\n    { source: 5, target: 26, value: 151.891 },\n    { source: 5, target: 19, value: 2.096 },\n    { source: 5, target: 12, value: 48.58 },\n    { source: 27, target: 15, value: 7.013 },\n    { source: 17, target: 28, value: 20.897 },\n    { source: 17, target: 3, value: 6.242 },\n    { source: 28, target: 18, value: 20.897 },\n    { source: 29, target: 15, value: 6.995 },\n    { source: 2, target: 12, value: 121.066 },\n    { source: 2, target: 30, value: 128.69 },\n    { source: 2, target: 18, value: 135.835 },\n    { source: 2, target: 31, value: 14.458 },\n    { source: 2, target: 32, value: 206.267 },\n    { source: 2, target: 19, value: 3.64 },\n    { source: 2, target: 33, value: 33.218 },\n    { source: 2, target: 20, value: 4.413 },\n    { source: 34, target: 1, value: 4.375 },\n    { source: 24, target: 5, value: 122.952 },\n    { source: 35, target: 26, value: 839.978 },\n    { source: 36, target: 37, value: 504.287 },\n    { source: 38, target: 37, value: 107.703 },\n    { source: 37, target: 2, value: 611.99 },\n    { source: 39, target: 4, value: 56.587 },\n    { source: 39, target: 1, value: 77.81 },\n    { source: 40, target: 14, value: 193.026 },\n    { source: 40, target: 13, value: 70.672 },\n    { source: 41, target: 15, value: 59.901 },\n    { source: 42, target: 14, value: 19.263 },\n    { source: 43, target: 42, value: 19.263 },\n    { source: 43, target: 41, value: 59.901 },\n    { source: 4, target: 19, value: 0.882 },\n    { source: 4, target: 26, value: 400.12 },\n    { source: 4, target: 12, value: 46.477 },\n    { source: 26, target: 15, value: 525.531 },\n    { source: 26, target: 3, value: 787.129 },\n    { source: 26, target: 11, value: 79.329 },\n    { source: 44, target: 15, value: 9.452 },\n    { source: 45, target: 1, value: 182.01 },\n    { source: 46, target: 15, value: 19.013 },\n    { source: 47, target: 15, value: 289.366 },\n  ],\n};\n\nconst data1 = {\n  nodes: [\n    { name: 'Visit' },\n    { name: 'Direct-Favourite' },\n    { name: 'Page-Click' },\n    { name: 'Detail-Favourite' },\n    { name: 'Lost' },\n  ],\n  links: [\n    { source: 0, target: 1, value: 3728.3 },\n    { source: 0, target: 2, value: 354170 },\n    { source: 2, target: 3, value: 62429 },\n    { source: 2, target: 4, value: 291741 },\n  ],\n};\n\nfunction SankeyDemo() {\n  return (\n    &lt;div className=\"sankey-charts\"&gt;\n      &lt;div&gt;\n        &lt;pre&gt;1. Simple Sankey&lt;/pre&gt;\n        &lt;Sankey width={960} height={500} data={data0}&gt;\n          &lt;Tooltip /&gt;\n        &lt;/Sankey&gt;\n      &lt;/div&gt;\n      &lt;br /&gt;\n      &lt;div&gt;\n        &lt;pre&gt;2. Customized Sankey.&lt;/pre&gt;\n        &lt;<div class=\"highlights fea_Sankey_Diagram\" id=\"Sankey_Diagram_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Sankey_Diagram_keys udls\">Sankey</span></div>\n         <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\"> <span class=\"fea_Canvas_keys udls\">width</span>={960}\n          <span class=\"fea_Canvas_keys udls\">height</span>={500}</div>\n          data={data0}\n          <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">node={{ fill: '#8a52b6' }}\n          link={{ stroke: '#77c878' }}</div>\n        &gt;\n          {/* &lt;Tooltip /&gt; */}\n        &lt;/Sankey&gt;\n      &lt;/div&gt;\n      &lt;br /&gt;\n      &lt;div&gt;\n        &lt;pre&gt;2. Sankey with gradient color, name and value, and use margin to avoid outer-clip.&lt;/pre&gt;\n        &lt;Sankey\n          width={960} height={500}\n          margin={{ top: 20, bottom: 20 }}\n          data={data1}\n          nodeWidth={10} nodePadding={60}\n          linkCurvature={0.61}\n          iterations={64}\n          link={&lt;DemoSankeyLink /&gt;}\n          node={&lt;DemoSankeyNode containerWidth={960} /&gt;}\n        &gt;\n          &lt;defs&gt;\n            &lt;linearGradient id={'linkGradient'}&gt;\n              &lt;stop offset=\"0%\" stopColor=\"rgba(0, 136, 254, 0.5)\" /&gt;\n              &lt;stop offset=\"100%\" stopColor=\"rgba(0, 197, 159, 0.3)\" /&gt;\n            &lt;/linearGradient&gt;\n          &lt;/defs&gt;\n          &lt;<div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Tooltip_keys udls\">Tooltip</span></div> /&gt;\n        &lt;/Sankey&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );\n}\n\nexport default SankeyDemo;\n#https://bitbucket.org/delainetech/transporter_react</code></pre></div>",
    "thr_34": "<div class=\"codeBlock hljs javascript\" id=\"thr_34\"><pre id=\"thr_34_code\" style=\"display: block;\"><code class=\"javascript\">import React, { Component } from 'react';\nimport { ScatterChart, Scatter, CartesianGrid, Tooltip, Legend,\n XAxis, YAxis, ZAxis, ReferenceLine, ReferenceDot, ReferenceArea, ErrorBar,\n LabelList } from 'recharts';\nimport { changeNumberOfData } from './utils';\n\nconst data01 = [\n  { x: 100, y: 200, z: 200, errorY: [20, 30], errorX: 30 },\n  { x: 120, y: 100, z: 260, errorY: 20, errorX: [20, 30] },\n  { x: 170, y: 300, z: 400, errorY: [12, 8], errorX: 20 },\n  { x: 140, y: 250, z: 280, errorY: 23, errorX: [12, 8] },\n  { x: 150, y: 400, z: 500, errorY: [21, 10], errorX: 23 },\n  { x: 110, y: 280, z: 200, errorY: 21, errorX: [21, 10] },\n];\n\nconst data02 = [\n  { x: 200, y: 260, z: 240 },\n  { x: 240, y: 290, z: 220 },\n  { x: 190, y: 290, z: 250 },\n  { x: 198, y: 250, z: 210 },\n  { x: 180, y: 280, z: 260 },\n  { x: 210, y: 220, z: 230 },\n];\n\nconst data03 = [\n  { x: 10, y: 30 },\n  { x: 30, y: 200 },\n  { x: 45, y: 100 },\n  { x: 50, y: 400 },\n  { x: 70, y: 150 },\n  { x: 100, y: 250 },\n];\n\nconst data04 = [\n  { x: 30, y: 20 },\n  { x: 50, y: 180 },\n  { x: 75, y: 240 },\n  { x: 100, y: 100 },\n  { x: 120, y: 190 },\n];\n\nconst data05 = [{x: 100, y: 200, z: 200}, {x: 100, y: 100, z: 260},\n  {x: 170, y: 300, z: 400}, {x: 140, y: 250, z: 280},\n  {x: 150, y: 400, z: 500}, {x: 110, y: 280, z: 200}];\n\nconst data06 = [\n  { x: 0, y: 'Sun', z: 78 },\n  { x: 0, y: 'Mon', z: 40 },\n  { x: 0, y: 'Tue', z: 60 },\n  { x: 3, y: 'Wed', z: 100 },\n];\n\nconst initialState = {\n  data01,\n  data02,\n  data03,\n  data04,\n  data05,\n};\n\nexport default class Demo extends Component {\n\n  static displayName = 'ScatterChartDemo';\n\n  state = initialState;\n\n  handleChangeData = () =&gt; {\n    this.setState(() =&gt; _.mapValues(initialState, changeNumberOfData));\n  };\n\n  renderSquare = (props) =&gt; {\n    const { cx, cy, size, xAxis, yAxis, zAxis } = props;\n    const xBandSize = xAxis.bandSize;\n    const yBandSize = yAxis.bandSize;\n\n    return &lt;rect x={cx - xAxis.bandSize / 2} y={cy - yAxis.bandSize / 2} width={xAxis.bandSize} height={yAxis.bandSize} fill=\"red\" fillOpacity={size} /&gt;;\n  }\n\n\n  render () {\n    const { data01, data02, data03, data04 } = this.state;\n\n    return (\n      &lt;div className=\"scatter-charts\"&gt;\n        &lt;a\n          href=\"javascript: void(0);\"\n          className=\"btn update\"\n          onClick={this.handleChangeData}\n        &gt;\n          change data\n        &lt;/a&gt;\n        &lt;br/&gt;\n        &lt;p&gt;Simple ScatterChart&lt;/p&gt;\n        &lt;div className=\"scatter-chart-wrapper\"&gt;\n          &lt;<div class=\"highlights fea_Scatter_Plot\" id=\"Scatter_Plot_0\" style=\"background-color: #f6b73c;  display: inline;\">Scat<span class=\"fea_Scatter_Plot_keys udls\">ter</span>Chart</div> <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Canvas_keys udls\">width</span>={400} <span class=\"fea_Canvas_keys udls\">height</span>={400} margin={{ top: 20, right: 20, bottom: 0, left: 20 }}</div>&gt;\n            <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\"><x class=\"fea_Axis_keys udls\">Axis</x> type=\"number\" dataKey=\"x\" name=\"stature\" unit=\"cm\" /&gt;\n            <y class=\"fea_Axis_keys udls\">Axis</y> type=\"number\" dataKey=\"y\" name=\"weight\" unit=\"kg\" /&gt;</div>\n            &lt;CartesianGrid /&gt;\n            &lt;<div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Tooltip_keys udls\">Tooltip</span></div> /&gt;\n            &lt;<div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Legend_keys udls\">Legend</span></div>/&gt;\n            &lt;Scatter name=\"A school\" data={data01} fill=\"#ff7300\" label={{ dataKey: 'x' }} /&gt;\n          &lt;/ScatterChart&gt;\n        &lt;/div&gt;\n\n        &lt;p&gt;ScatterChart of three dimension data&lt;/p&gt;\n        &lt;div className=\"scatter-chart-wrapper\"&gt;\n          &lt;ScatterChart width={400} height={400} margin={{ top: 20, right: 20, bottom: 0, left: 20 }}&gt;\n            <div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"background-color: #f6b73c;  display: inline;\"><x class=\"fea_Axis_keys udls\">Axis</x> type=\"number\" dataKey=\"x\" name=\"stature\" unit=\"cm\" /&gt;\n            <y class=\"fea_Axis_keys udls\">Axis</y> type=\"number\" dataKey=\"y\" name=\"weight\" unit=\"kg\" /&gt;\n            <z class=\"fea_Axis_keys udls\">Axis</z> type=\"number\" dataKey=\"z\" range={[50, 1200]} name=\"score\" unit=\"km\" /&gt;</div>\n            &lt;CartesianGrid /&gt;\n            &lt;Scatter name=\"A school\" data={data01} fillOpacity={0.3} fill=\"#ff7300\" /&gt;\n            &lt;Scatter name=\"B school\" data={data02} fill=\"#347300\" /&gt;\n            &lt;Tooltip/&gt;\n            &lt;Legend/&gt;\n            &lt;ReferenceArea x1={250} x2={300} alwaysShow label=\"any label\" /&gt;\n            &lt;ReferenceLine x={159} stroke=\"red\"/&gt;\n            &lt;ReferenceLine y={237.5} stroke=\"red\"/&gt;\n            &lt;ReferenceDot x={170} y={290} r={15} label=\"AB\" stroke=\"none\" fill=\"red\" isFront/&gt;\n          &lt;/ScatterChart&gt;\n        &lt;/div&gt;\n\n        &lt;p&gt;ScatterChart with customized error bars&lt;/p&gt;\n        &lt;div className=\"scatter-chart-wrapper\"&gt;\n          <div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_0\" style=\"background-color: #f6b73c;  display: inline;\"><scatter class=\"fea_Multiple_Charts_keys udls\">Chart</scatter> width={400} height={400} margin={{ top: 20, right: 20, bottom: 0, left: 20 }}&gt;</div>\n            &lt;XAxis type=\"number\" dataKey=\"x\" name=\"stature\" unit=\"cm\" /&gt;\n            &lt;YAxis type=\"number\" dataKey=\"y\" name=\"weight\" unit=\"kg\" /&gt;\n            &lt;CartesianGrid /&gt;\n            &lt;Tooltip /&gt;\n            &lt;Legend/&gt;\n            &lt;Scatter name=\"A school\" data={data01} fill=\"#ff7300\"&gt;\n              &lt;ErrorBar dataKey=\"errorY\" width={0} strokeWidth={1} stroke=\"blue\" direction=\"y\" /&gt;\n              &lt;ErrorBar dataKey=\"errorX\" width={4} strokeWidth={2} stroke=\"green\" opacity={0.8} direction=\"x\" /&gt;\n            &lt;/Scatter&gt;\n          &lt;/ScatterChart&gt;\n        &lt;/div&gt;\n\n        &lt;p&gt;ScatterChart which has joint line&lt;/p&gt;\n        &lt;div className=\"scatter-chart-wrapper\"&gt;\n          &lt;ScatterChart width={800} height={400} margin={{ top: 20, right: 20, bottom: 0, left: 20 }}&gt;\n            &lt;XAxis type=\"number\" dataKey=\"x\" name=\"stature\" unit=\"cm\" /&gt;\n            &lt;YAxis dataKey=\"y\" name=\"weight\" unit=\"kg\" /&gt;\n            &lt;ZAxis range={[64]} /&gt;\n            &lt;CartesianGrid /&gt;\n            &lt;Tooltip cursor={{ stroke: '#808080', strokeDasharray: '5 5' }}/&gt;\n            &lt;Legend/&gt;\n            &lt;Scatter line lineJointType=\"monotoneX\" shape=\"wye\" legendType=\"wye\" data={data03} fill=\"#ff7300\" /&gt;\n            &lt;Scatter line shape=\"square\" legendType=\"square\" data={data04} fill=\"#347300\" /&gt;\n          &lt;/ScatterChart&gt;\n        &lt;/div&gt;\n\n        &lt;p&gt;ScatterChart which has default x-axis&lt;/p&gt;\n        &lt;div className=\"scatter-chart-wrapper\"&gt;\n          &lt;ScatterChart width={400} height={400} margin={{top: 20, right: 20, bottom: 20, left: 20}}&gt;\n            &lt;XAxis dataKey={'x'} name='stature' unit='cm' /&gt;\n            &lt;YAxis dataKey={'y'} name='weight' unit='kg'/&gt;\n            &lt;ZAxis dataKey={'z'} range={[60, 400]} name='score' unit='km'/&gt;\n            &lt;CartesianGrid /&gt;\n            &lt;Tooltip cursor={{strokeDasharray: '3 3'}}/&gt;\n            &lt;Legend/&gt;\n            &lt;Scatter name='A school' data={data05} legendType=\"square\" fill='#8884d8' shape=\"square\"/&gt;\n          &lt;/ScatterChart&gt;\n        &lt;/div&gt;\n\n        &lt;p&gt;ScatterChart filled by squares&lt;/p&gt;\n        &lt;div className=\"scatter-chart-wrapper\"&gt;\n          &lt;ScatterChart width={900} height={300} margin={{top: 20, right: 20, bottom: 20, left: 20}}&gt;\n            &lt;XAxis dataKey=\"x\" type=\"category\" allowDuplicatedCategory={false} domain={[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23]} allowDuplicatedCategory={false} name=\"hour\"  /&gt;\n            &lt;YAxis dataKey=\"y\" type=\"category\" allowDuplicatedCategory={false} domain={['Sun', 'Sat', 'Fri', 'Thu', 'Wed', 'Tue', 'Mon']} allowDuplicatedCategory={false} name=\"week\" /&gt;\n            &lt;ZAxis dataKey=\"z\" range={[0.2, 1]} name=\"score\" /&gt;\n            &lt;Tooltip cursor={{strokeDasharray: '3 3'}}/&gt;\n            &lt;CartesianGrid fill=\"#999\" /&gt;\n            &lt;Legend/&gt;\n            &lt;Scatter name='A school' data={data06} legendType=\"square\" fill='#8884d8' shape={this.renderSquare}/&gt;\n          &lt;/ScatterChart&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    );\n  }\n}</code></pre></div>",
    "thr_35": "<div class=\"codeBlock hljs javascript\" id=\"thr_35\"><pre id=\"thr_35_code\" style=\"display: block;\"><code class=\"javascript\">import React, { Component } from 'react';\nimport { Treemap, Tooltip } from 'recharts';\nimport DemoTreemapItem from './DemoTreemapItem';\nimport _ from 'lodash';\nimport { changeNumberOfData as changeData } from './utils';\n\nconst data = [{\n  name: 'analytics',\n  children: [\n    {\n      name: 'cluster',\n      children: [\n        { name: 'AgglomerativeCluster', size: 3938 },\n        { name: 'CommunityStructure', size: 3812 },\n        { name: 'HierarchicalCluster', size: 6714 },\n        { name: 'MergeEdge', size: 743 },\n      ],\n    },\n    {\n      name: 'graph',\n      children: [\n        { name: 'BetweennessCentrality', size: 3534 },\n        { name: 'LinkDistance', size: 5731 },\n        { name: 'MaxFlowMinCut', size: 7840 },\n        { name: 'ShortestPaths', size: 5914 },\n        { name: 'SpanningTree', size: 3416 },\n      ],\n    },\n    {\n      name: 'optimization',\n      children: [\n        { name: 'AspectRatioBanker', size: 7074 },\n      ],\n    },\n  ],\n}, {\n  name: 'animate',\n  children: [\n    { name: 'Easing', size: 17010 },\n    { name: 'FunctionSequence', size: 5842 },\n    {\n      name: 'interpolate',\n      children: [\n        { name: 'ArrayInterpolator', size: 1983 },\n        { name: 'ColorInterpolator', size: 2047 },\n        { name: 'DateInterpolator', size: 1375 },\n        { name: 'Interpolator', size: 8746 },\n        { name: 'MatrixInterpolator', size: 2202 },\n        { name: 'NumberInterpolator', size: 1382 },\n        { name: 'ObjectInterpolator', size: 1629 },\n        { name: 'PointInterpolator', size: 1675 },\n        { name: 'RectangleInterpolator', size: 2042 },\n      ],\n    },\n    { name: 'ISchedulable', size: 1041 },\n    { name: 'Parallel', size: 5176 },\n    { name: 'Pause', size: 449 },\n    { name: 'Scheduler', size: 5593 },\n    { name: 'Sequence', size: 5534 },\n    { name: 'Transition', size: 9201 },\n    { name: 'Transitioner', size: 19975 },\n    { name: 'TransitionEvent', size: 1116 },\n    { name: 'Tween', size: 6006 },\n  ],\n}, {\n  name: 'data',\n  children: [\n    {\n      name: 'converters',\n      children: [\n        { name: 'Converters', size: 721 },\n        { name: 'DelimitedTextConverter', size: 4294 },\n        { name: 'GraphMLConverter', size: 9800 },\n        { name: 'IDataConverter', size: 1314 },\n        { name: 'JSONConverter', size: 2220 },\n      ],\n    },\n    { name: 'DataField', size: 1759 },\n    { name: 'DataSchema', size: 2165 },\n    { name: 'DataSet', size: 586 },\n    { name: 'DataSource', size: 3331 },\n    { name: 'DataTable', size: 772 },\n    { name: 'DataUtil', size: 3322 },\n  ],\n}, {\n  name: 'display',\n  children: [\n    { name: 'DirtySprite', size: 8833 },\n    { name: 'LineSprite', size: 1732 },\n    { name: 'RectSprite', size: 3623 },\n    { name: 'TextSprite', size: 10066 },\n  ],\n}, {\n  name: 'flex',\n  children: [\n    { name: 'FlareVis', size: 4116 },\n  ],\n}, {\n  name: 'physics',\n  children: [\n    { name: 'DragForce', size: 1082 },\n    { name: 'GravityForce', size: 1336 },\n    { name: 'IForce', size: 319 },\n    { name: 'NBodyForce', size: 10498 },\n    { name: 'Particle', size: 2822 },\n    { name: 'Simulation', size: 9983 },\n    { name: 'Spring', size: 2213 },\n    { name: 'SpringForce', size: 1681 },\n  ],\n}, {\n  name: 'query',\n  children: [\n    { name: 'AggregateExpression', size: 1616 },\n    { name: 'And', size: 1027 },\n    { name: 'Arithmetic', size: 3891 },\n    { name: 'Average', size: 891 },\n    { name: 'BinaryExpression', size: 2893 },\n    { name: 'Comparison', size: 5103 },\n    { name: 'CompositeExpression', size: 3677 },\n    { name: 'Count', size: 781 },\n    { name: 'DateUtil', size: 4141 },\n    { name: 'Distinct', size: 933 },\n    { name: 'Expression', size: 5130 },\n    { name: 'ExpressionIterator', size: 3617 },\n    { name: 'Fn', size: 3240 },\n    { name: 'If', size: 2732 },\n    { name: 'IsA', size: 2039 },\n    { name: 'Literal', size: 1214 },\n    { name: 'Match', size: 3748 },\n    { name: 'Maximum', size: 843 },\n    {\n      name: 'methods',\n      children: [\n        { name: 'add', size: 593 },\n        { name: 'and', size: 330 },\n        { name: 'average', size: 287 },\n        { name: 'count', size: 277 },\n        { name: 'distinct', size: 292 },\n        { name: 'div', size: 595 },\n        { name: 'eq', size: 594 },\n        { name: 'fn', size: 460 },\n        { name: 'gt', size: 603 },\n        { name: 'gte', size: 625 },\n        { name: 'iff', size: 748 },\n        { name: 'isa', size: 461 },\n        { name: 'lt', size: 597 },\n        { name: 'lte', size: 619 },\n        { name: 'max', size: 283 },\n        { name: 'min', size: 283 },\n        { name: 'mod', size: 591 },\n        { name: 'mul', size: 603 },\n        { name: 'neq', size: 599 },\n        { name: 'not', size: 386 },\n        { name: 'or', size: 323 },\n        { name: 'orderby', size: 307 },\n        { name: 'range', size: 772 },\n        { name: 'select', size: 296 },\n        { name: 'stddev', size: 363 },\n        { name: 'sub', size: 600 },\n        { name: 'sum', size: 280 },\n        { name: 'update', size: 307 },\n        { name: 'variance', size: 335 },\n        { name: 'where', size: 299 },\n        { name: 'xor', size: 354 },\n        { name: '_', size: 264 },\n      ],\n    },\n    { name: 'Minimum', size: 843 },\n    { name: 'Not', size: 1554 },\n    { name: 'Or', size: 970 },\n    { name: 'Query', size: 13896 },\n    { name: 'Range', size: 1594 },\n    { name: 'StringUtil', size: 4130 },\n    { name: 'Sum', size: 791 },\n    { name: 'Variable', size: 1124 },\n    { name: 'Variance', size: 1876 },\n    { name: 'Xor', size: 1101 },\n  ],\n}, {\n  name: 'scale',\n  children: [\n    { name: 'IScaleMap', size: 2105 },\n    { name: 'LinearScale', size: 1316 },\n    { name: 'LogScale', size: 3151 },\n    { name: 'OrdinalScale', size: 3770 },\n    { name: 'QuantileScale', size: 2435 },\n    { name: 'QuantitativeScale', size: 4839 },\n    { name: 'RootScale', size: 1756 },\n    { name: 'Scale', size: 4268 },\n    { name: 'ScaleType', size: 1821 },\n    { name: 'TimeScale', size: 5833 },\n  ],\n}, {\n  name: 'util',\n  children: [\n    { name: 'Arrays', size: 8258 },\n    { name: 'Colors', size: 10001 },\n    { name: 'Dates', size: 8217 },\n    { name: 'Displays', size: 12555 },\n    { name: 'Filter', size: 2324 },\n    { name: 'Geometry', size: 10993 },\n    {\n      name: 'heap',\n      children: [\n        { name: 'FibonacciHeap', size: 9354 },\n        { name: 'HeapNode', size: 1233 },\n      ],\n    },\n    { name: 'IEvajavascriptble', size: 335 },\n    { name: 'IPredicate', size: 383 },\n    { name: 'IValueProxy', size: 874 },\n    {\n      name: 'math',\n      children: [\n        { name: 'DenseMatrix', size: 3165 },\n        { name: 'IMatrix', size: 2815 },\n        { name: 'SparseMatrix', size: 3366 },\n      ],\n    },\n    { name: 'Maths', size: 17705 },\n    { name: 'Orientation', size: 1486 },\n    {\n      name: 'palette',\n      children: [\n        { name: 'ColorPalette', size: 6367 },\n        { name: 'Palette', size: 1229 },\n        { name: 'ShapePalette', size: 2059 },\n        { name: 'SizePalette', size: 2291 },\n      ],\n    },\n    { name: 'Property', size: 5559 },\n    { name: 'Shapes', size: 19118 },\n    { name: 'Sort', size: 6887 },\n    { name: 'Stats', size: 6557 },\n    { name: 'Strings', size: 22026 },\n  ],\n}, {\n  name: 'vis',\n  children: [\n    {\n      name: 'axis',\n      children: [\n        { name: 'Axes', size: 1302 },\n        { name: 'Axis', size: 24593 },\n        { name: 'AxisGridLine', size: 652 },\n        { name: 'AxisLabel', size: 636 },\n        { name: 'CartesianAxes', size: 6703 },\n      ],\n    },\n    {\n      name: 'controls',\n      children: [\n        { name: 'AnchorControl', size: 2138 },\n        { name: 'ClickControl', size: 3824 },\n        { name: 'Control', size: 1353 },\n        { name: 'ControlList', size: 4665 },\n        { name: 'DragControl', size: 2649 },\n        { name: 'ExpandControl', size: 2832 },\n        { name: 'HoverControl', size: 4896 },\n        { name: 'IControl', size: 763 },\n        { name: 'PanZoomControl', size: 5222 },\n        { name: 'SelectionControl', size: 7862 },\n        { name: 'TooltipControl', size: 8435 },\n      ],\n    },\n    {\n      name: 'data',\n      children: [\n        { name: 'Data', size: 20544 },\n        { name: 'DataList', size: 19788 },\n        { name: 'DataSprite', size: 10349 },\n        { name: 'EdgeSprite', size: 3301 },\n        { name: 'NodeSprite', size: 19382 },\n        {\n          name: 'render',\n          children: [\n            { name: 'ArrowType', size: 698 },\n            { name: 'EdgeRenderer', size: 5569 },\n            { name: 'IRenderer', size: 353 },\n            { name: 'ShapeRenderer', size: 2247 },\n          ],\n        },\n        { name: 'ScaleBinding', size: 11275 },\n        { name: 'Tree', size: 7147 },\n        { name: 'TreeBuilder', size: 9930 },\n      ],\n    },\n    {\n      name: 'events',\n      children: [\n        { name: 'DataEvent', size: 2313 },\n        { name: 'SelectionEvent', size: 1880 },\n        { name: 'TooltipEvent', size: 1701 },\n        { name: 'VisualizationEvent', size: 1117 },\n      ],\n    },\n    {\n      name: 'legend',\n      children: [\n        { name: 'Legend', size: 20859 },\n        { name: 'LegendItem', size: 4614 },\n        { name: 'LegendRange', size: 10530 },\n      ],\n    },\n    {\n      name: 'operator',\n      children: [\n        {\n          name: 'distortion',\n          children: [\n            { name: 'BifocalDistortion', size: 4461 },\n            { name: 'Distortion', size: 6314 },\n            { name: 'FisheyeDistortion', size: 3444 },\n          ],\n        },\n        {\n          name: 'encoder',\n          children: [\n            { name: 'ColorEncoder', size: 3179 },\n            { name: 'Encoder', size: 4060 },\n            { name: 'PropertyEncoder', size: 4138 },\n            { name: 'ShapeEncoder', size: 1690 },\n            { name: 'SizeEncoder', size: 1830 },\n          ],\n        },\n        {\n          name: 'filter',\n          children: [\n            { name: 'FisheyeTreeFilter', size: 5219 },\n            { name: 'GraphDistanceFilter', size: 3165 },\n            { name: 'VisibilityFilter', size: 3509 },\n          ],\n        },\n        { name: 'IOperator', size: 1286 },\n        {\n          name: 'label',\n          children: [\n            { name: 'Labeler', size: 9956 },\n            { name: 'RadialLabeler', size: 3899 },\n            { name: 'StackedAreaLabeler', size: 3202 },\n          ],\n        },\n        {\n          name: 'layout',\n          children: [\n            { name: 'AxisLayout', size: 6725 },\n            { name: 'BundledEdgeRouter', size: 3727 },\n            { name: 'CircleLayout', size: 9317 },\n            { name: 'CirclePackingLayout', size: 12003 },\n            { name: 'DendrogramLayout', size: 4853 },\n            { name: 'ForceDirectedLayout', size: 8411 },\n            { name: 'IcicleTreeLayout', size: 4864 },\n            { name: 'IndentedTreeLayout', size: 3174 },\n            { name: 'Layout', size: 7881 },\n            { name: 'NodeLinkTreeLayout', size: 12870 },\n            { name: 'PieLayout', size: 2728 },\n            { name: 'RadialTreeLayout', size: 12348 },\n            { name: 'RandomLayout', size: 870 },\n            { name: 'StackedAreaLayout', size: 9121 },\n            { name: 'TreeMapLayout', size: 9191 },\n          ],\n        },\n        { name: 'Operator', size: 2490 },\n        { name: 'OperatorList', size: 5248 },\n        { name: 'OperatorSequence', size: 4190 },\n        { name: 'OperatorSwitch', size: 2581 },\n        { name: 'SortOperator', size: 2023 },\n      ],\n    },\n    { name: 'Visualization', size: 16540 },\n  ],\n}][2].children;\n\nclass DemoTreemap extends Component {\n  static displayName = 'DemoTreemap';\n\n  state = {\n    data,\n  };\n\n  render() {\n    const ColorPlatte = ['#8889DD', '#9597E4', '#8DC77B', '#A5D297', '#E2CF45', '#F8C12D'];\n\n    return (\n      &lt;div className=\"treemap-charts\"&gt;\n\n        &lt;br/&gt;\n        &lt;div className=\"treemap-chart-wrapper\"&gt;\n          &lt;<div class=\"highlights fea_Treemap\" id=\"Treemap_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Treemap_keys udls\">Treemap</span></div>\n            width={500}\n            height={250}\n            data={this.state.data}\n            dataKey=\"size\"\n            isUpdateAnimationActive={false}\n          /&gt;\n        &lt;/div&gt;\n        &lt;br /&gt;\n        &lt;p&gt;Treemap&lt;/p&gt;\n        &lt;a\n          href=\"javascript:void(0)\"\n          className=\"btn\"\n          <div class=\"highlights fea_Mouse_Events\" id=\"Mouse_Events_0\" style=\"background-color: #f6b73c;  display: inline;\">onClick={() =&gt; {\n            this.setState({\n              data: changeData(data),\n            });\n          }}</div>\n        &gt;\n          change data\n        &lt;/a&gt;\n        &lt;div className=\"treemap-chart-wrapper\"&gt;\n          &lt;Treemap\n            width={500}\n            height={250}\n            data={this.state.data}\n            <div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"background-color: #f6b73c;  display: inline;\">isAnim<span class=\"fea_Animations_keys udls\">ation</span>Active={false}</div>\n            nameKey=\"name\"\n            dataKey=\"size\"\n            ratio={1}\n            content={&lt;DemoTreemapItem bgColors={ColorPlatte} /&gt;}\n          &gt;\n            &lt;<div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Tooltip_keys udls\">Tooltip</span></div> /&gt;\n          &lt;/Treemap&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n\nexport default DemoTreemap;\n#https://bitbucket.org/delainetech/transporter_react</code></pre></div>",
    "thr_36": "<div class=\"codeBlock hljs javascript\" id=\"thr_36\"><pre id=\"thr_36_code\" style=\"display: block;\"><code class=\"javascript\">import React, { Component } from 'react';\nimport { PieChart, Pie, Sector } from 'recharts';\nimport ChartWrapper from '../../chart.style';\n\nconst renderActiveShape = props =&gt; {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos &gt;= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos &gt;= 0 ? 'start' : 'end';\n  return (\n    &lt;g&gt;\n      <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\">&lt;<span class=\"fea_Text_keys udls\">text</span> x={cx} y={cy} dy={8} <span class=\"fea_Text_keys udls\">text</span>Anchor=\"middle\" fill={fill}&gt;</div>\n        {payload.name}\n      &lt;/text&gt;\n      &lt;<div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_1\" style=\"background-color: #f6b73c;  display: inline;\">Sector</div>\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      /&gt;\n      &lt;<div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">Sector</div>\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      /&gt;\n      &lt;path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      /&gt;\n     <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\"> &lt;circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" /&gt;</div>\n      &lt;text\n        x={ex + (cos &gt;= 0 ? 1 : -1) * 12}\n        y={ey}\n        textAnchor={textAnchor}\n        fill=\"#788195\"\n      &gt;{`PV ${value}`}&lt;/text&gt;\n      &lt;text\n        x={ex + (cos &gt;= 0 ? 1 : -1) * 12}\n        y={ey}\n        dy={18}\n        textAnchor={textAnchor}\n        fill=\"#999\"\n      &gt;\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\n      &lt;/text&gt;\n    &lt;/g&gt;\n  );\n};\n\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.onPieEnter = this.onPieEnter.bind(this);\n    this.state = { activeIndex: 0 };\n  }\n  onPieEnter(data, index) {\n    // this.setState({\n    //   activeIndex: index,\n    // });\n  }\n  render() {\n    const { datas, width, height, colors } = this.props;\n    return (\n      &lt;ChartWrapper className=\"isoChartWrapper\"&gt;\n        &lt;<div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_2\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Pie_Chart_keys udls\">Pie</span>Chart</div> width={width} height={height} onMouseEnter={this.onPieEnter}&gt;\n          &lt;Pie\n            activeIndex={this.state.activeIndex}\n            activeShape={renderActiveShape}\n            dataKey=\"value\"\n            data={datas}\n            cx={300}\n            cy={200}\n            innerRadius={60}\n            outerRadius={80}\n            fill={colors[0]}\n          /&gt;\n        &lt;/PieChart&gt;\n      &lt;/ChartWrapper&gt;\n    );\n  }\n}</code></pre></div>",
    "thr_37": "<div class=\"codeBlock hljs javascript\" id=\"thr_37\"><pre id=\"thr_37_code\" style=\"display: block;\"><code class=\"javascript\">const {\n  LineChart, ResponsiveContainer, Line, XAxis, YAxis, CartesianGrid, Tooltip,\n} = Recharts;\n\nconst data = [\n  { x: '06-09', y: 2.978 },\n  { x: '06-10', y: 2.973 },\n  { x: '06-11', y: 2.964 },\n  { x: '06-12', y: 2.955 },\n  { x: '06-13', y: 2.937 },\n  { x: '06-14', y: 2.919 },\n  { x: '06-15', y: 2.902 },\n];\n\nconst SimpleChart = React.createClass({\n\trender() {\n  \treturn (\n      &lt;ResponsiveContainer\n        width=\"100%\"\n      &gt;\n        &lt;<div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>\n            data={data}\n            <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">margin={{top: 5, right: 0, left: 0, bottom: 25}}&gt;</div>\n          <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\"><x class=\"fea_Axis_keys udls\">Axis</x> \n            dataKey=\"x\"\n            fontFamily=\"sans-serif\"\n            tickSize\n            dy='25'\n          /&gt;\n          <y class=\"fea_Axis_keys udls\">Axis</y>\n            domain={['dataMin', 'dataMax']}\n            ticks={[2.882, 2.905, 2.928, 2.951, 2.974, 2.997]}\n          /&gt;</div>\n          &lt;CartesianGrid \n            vertical={false}\n            stroke=\"#ebf3f0\"\n          /&gt;\n          &lt;<div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Tooltip_keys udls\">Tooltip</span></div> /&gt;\n          &lt;Line dataKey=\"y\" dot={false}/&gt;\n        &lt;/LineChart&gt;\n      &lt;/ResponsiveContainer&gt;\n    \t\n    );\n  }\n})\n\nReactDOM.render(\n  &lt;SimpleChart /&gt;,\n  document.getElementById('container')\n);\n#https://codepen.io/kimjuny90/pen/WOOpgN</code></pre></div>",
    "thr_38": "<div class=\"codeBlock hljs javascript\" id=\"thr_38\"><pre id=\"thr_38_code\" style=\"display: block;\"><code class=\"javascript\">const {AreaChart, Area, BarChart, Bar, XAxis, YAxis} = Recharts;\nconst sc = styled.default;\n\nconst StackedBarChart = React.createClass({\n\trender () {\n  \treturn (\n    \t&lt;<div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Bar_Chart_keys udls\">Bar</span>Chart</div> width={400} height={400} data={barChartData}&gt;\n       <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\"><x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"name\"/&gt;\n       <y class=\"fea_Axis_keys udls\">Axis</y>/&gt;</div>\n       <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\"><bar class=\"fea_Shapes_keys udls\">data</bar>Key=\"pv\" stackId=\"a\" fill=\"#4bbff7\" /&gt;\n       <bar class=\"fea_Shapes_keys udls\">data</bar>Key=\"uv\" stackId=\"a\" fill=\"#c7edfd\" /&gt;</div>\n      &lt;/BarChart&gt;\n    );\n  }\n})\n\nconst TinyAreaChart = React.createClass({\n\trender () {\n    const {chartData} = this.props;\n  \treturn (\n        &lt;<div class=\"highlights fea_Area_Chart\" id=\"Area_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Area_Chart_keys udls\">Area</span>Chart</div> <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Canvas_keys udls\">width</span>={150} <span class=\"fea_Canvas_keys udls\">height</span>={60} data={chartData}\n            margin={{top: 5, right: 0, left: 0, bottom: 5}}&gt;</div>\n        <div class=\"highlights fea_Shapes\" id=\"Shapes_1\" style=\"background-color: #f6b73c;  display: inline;\"><area class=\"fea_Shapes_keys udls\" type=\"monotone\"/>dataKey='uv' stroke='#4bbff7' fill='#4bbff7' /&gt;</div>\n      &lt;/AreaChart&gt;\n    );\n  }\n});\n\nconst GitHubIssuesTinyChartWithLabel = ({\n  label,\n  maxValue,\n  chartData\n}) =&gt; (\n  &lt;IssuesTinyChartContainer&gt;\n    &lt;IssuesTinyChartLabel&gt;{label}&lt;/IssuesTinyChartLabel&gt;\n    &lt;IssuesTinyChartValue&gt;{maxValue}&lt;/IssuesTinyChartValue&gt;\n    &lt;TinyAreaChart chartData={chartData} /&gt;\n  &lt;/IssuesTinyChartContainer&gt;\n);\n\nconst ChartsCard = () =&gt; {\n\treturn (\n    &lt;ChartsCardContainer&gt;\n      &lt;ChartCardHeading&gt;Github Issues&lt;/ChartCardHeading&gt;\n      &lt;Line&gt;&lt;/Line&gt;\n      &lt;ChartCardContent&gt;\n        &lt;StackedBarChart /&gt;\n        &lt;GitHubIssuesChartsContainer&gt;\n          &lt;GitHubIssuesTinyChartWithLabel\n            label=\"Created\"\n            maxValue={getMaxChartValue(CreatedIssuesChartData)}\n            chartData={CreatedIssuesChartData}\n          /&gt;\n          &lt;GitHubIssuesTinyChartWithLabel\n            label=\"Closed\"\n            maxValue={getMaxChartValue(ClosedIssuesChartData)}\n            chartData={ClosedIssuesChartData}\n          /&gt;\n          &lt;GitHubIssuesTinyChartWithLabel\n            label=\"Re-opened\"\n            maxValue={getMaxChartValue(ReOpenedIssuesChartData)}\n            chartData={ReOpenedIssuesChartData}\n          /&gt;\n          &lt;GitHubIssuesTinyChartWithLabel\n            label=\"Won't fix\"\n            maxValue={getMaxChartValue(WontFixIssuesChartData)}\n            chartData={WontFixIssuesChartData}\n          /&gt;\n          &lt;GitHubIssuesTinyChartWithLabel\n            label=\"Needs test\"\n            maxValue={getMaxChartValue(NeedsTestIssuesChartData)}\n            chartData={NeedsTestIssuesChartData}\n          /&gt;\n          &lt;GitHubIssuesTinyChartWithLabel\n            label=\"Needs test\"\n            maxValue={getMaxChartValue(FixedIssuesChartData)}\n            chartData={FixedIssuesChartData}\n          /&gt;\n        &lt;/GitHubIssuesChartsContainer&gt;\n      &lt;/ChartCardContent&gt;\n    &lt;/ChartsCardContainer&gt;\n  );\n};\n\nconst getMaxChartValue = (chartData) =&gt; (\n  chartData.reduce((prev, current) =&gt; (\n     (prev.uv &gt; current.uv) ? prev : current\n  )).uv\n);\n\nconst barChartData = [\n      {name: 'Mon', uv: 18, pv: 42, amt: 2400},\n      {name: 'Tue', uv: 10, pv: 29, amt: 2210},\n      {name: 'Wed', uv: 13, pv: 45, amt: 2290},\n      {name: 'Thu', uv: 13, pv: 35, amt: 2000},\n      {name: 'Fri', uv: 10, pv: 19, amt: 2181},\n      {name: 'Sat', uv: 11, pv: 23, amt: 2500},\n      {name: 'Sun', uv: 17, pv: 20, amt: 2100},\n];\n\nconst CreatedIssuesChartData = [\n      {name: 'Mon', uv: 25, amt: 2400},\n      {name: 'Tue', uv: 10, amt: 2210},\n      {name: 'Wed', uv: 28, amt: 2290},\n      {name: 'Thu', uv: 44, amt: 2000},\n      {name: 'Fri', uv: 54, amt: 2181},\n      {name: 'Sat', uv: 50, amt: 2500},\n      {name: 'Sun', uv: 32, amt: 2500},\n];\n\nconst ClosedIssuesChartData = [\n      {name: 'Mon', uv: 25, amt: 2400},\n      {name: 'Tue', uv: 15, amt: 2210},\n      {name: 'Wed', uv: 22, amt: 2290},\n      {name: 'Thu', uv: 20, amt: 2000},\n      {name: 'Fri', uv: 18, amt: 2181},\n      {name: 'Sat', uv: 15, amt: 2500},\n      {name: 'Sun', uv: 26, amt: 2500},\n];\n\nconst ReOpenedIssuesChartData = [\n      {name: 'Mon', uv: 0, amt: 2400},\n      {name: 'Tue', uv: 1, amt: 2210},\n      {name: 'Wed', uv: 1, amt: 2290},\n      {name: 'Thu', uv: 1, amt: 2000},\n      {name: 'Fri', uv: 2, amt: 2181},\n      {name: 'Sat', uv: 1, amt: 2500},\n      {name: 'Sun', uv: 1, amt: 2500},\n];\n\nconst WontFixIssuesChartData = [\n      {name: 'Mon', uv: 3, amt: 2400},\n      {name: 'Tue', uv: 2, amt: 2210},\n      {name: 'Wed', uv: 1, amt: 2290},\n      {name: 'Thu', uv: 2, amt: 2000},\n      {name: 'Fri', uv: 3, amt: 2181},\n      {name: 'Sat', uv: 2, amt: 2500},\n      {name: 'Sun', uv: 4, amt: 2500},\n];\n\nconst NeedsTestIssuesChartData = [\n      {name: 'Mon', uv: 6, amt: 2400},\n      {name: 'Tue', uv: 4, amt: 2210},\n      {name: 'Wed', uv: 6, amt: 2290},\n      {name: 'Thu', uv: 5, amt: 2000},\n      {name: 'Fri', uv: 4, amt: 2181},\n      {name: 'Sat', uv: 6, amt: 2500},\n      {name: 'Sun', uv: 8, amt: 2500},\n];\n\nconst FixedIssuesChartData = [\n      {name: 'Mon', uv: 10, amt: 2400},\n      {name: 'Tue', uv: 14, amt: 2210},\n      {name: 'Wed', uv: 9, amt: 2290},\n      {name: 'Thu', uv: 11, amt: 2000},\n      {name: 'Fri', uv: 9, amt: 2181},\n      {name: 'Sat', uv: 6, amt: 2500},\n      {name: 'Sun', uv: 3, amt: 2500},\n];\n\nconst IssuesTinyChartContainer = sc.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst IssuesTinyChartLabel = sc.span`\n  text-transform: uppercase;\n  color: #929292;\n  font-weight: 300;\n`;\n\nconst IssuesTinyChartValue = sc.span`\n  font-size: 28px;\n  font-weight: 500;\n`;\n\nconst ChartsCardContainer = sc.div`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid silver;\n  border-radius: 10px;\n  width: max-content;\n`;\n\nconst ChartCardHeading = sc.h4`\n  margin-left: 20px;\n`;\n\nconst Line = sc.hr`\n  width: 100%;\n  color: #e7e7e7;\n  border: 1px solid;\n`;\n\nconst ChartCardContent = sc.div`\n  display: flex;\n  padding: 20px 0;\n`;\n\nconst GitHubIssuesChartsContainer = sc.div`\n  display: grid;\n  margin-left: 20px;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 20px;\n  margin: 0 20px;\n`;\n\nReactDOM.render(\n  &lt;ChartsCard /&gt;,\n  document.getElementById('app')\n);\n#https://codepen.io/starnavi/pen/QWjXKjz</code></pre></div>",
    "thr_39": "<div class=\"codeBlock hljs javascript\" id=\"thr_39\"><pre id=\"thr_39_code\" style=\"display: block;\"><code class=\"javascript\">const { LineChart, Line, LabelList, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Label } = Recharts;\n\nconst formatHours = hour =&gt; hour &lt; 10 ? `0${hour}` : hour;\n\nconst getHoursData = (data) =&gt; {\n  return R.times(idx =&gt; {\n    const hour = R.find(R.pipe(\n      R.prop('hour'),\n      R.equals(idx)\n    ), data);\n\n    return {\n      hour: formatHours(idx),\n      total: R.propOr(0, 'total', hour)\n    };\n  }, 24);\n};\n\nconst data = [\n  {\n    \"text\": 7,\n    \"total\": 7,\n    \"hour\": 2\n  },\n  {\n    \"text\": 21,\n    \"total\": 23,\n    \"hour\": 3\n  },\n  {\n    \"text\": 2,\n    \"total\": 2,\n    \"hour\": 4\n  },\n  {\n    \"text\": 1,\n    \"total\": 1,\n    \"hour\": 10\n  },\n  {\n    \"text\": 1,\n    \"total\": 1,\n    \"hour\": 13\n  },\n  {\n    \"text\": 4,\n    \"total\": 4,\n    \"hour\": 14\n  },\n  {\n    \"text\": 2,\n    \"total\": 2,\n    \"hour\": 15\n  },\n  {\n    \"text\": 23,\n    \"total\": 23,\n    \"hour\": 16\n  },\n  {\n    \"text\": 19,\n    \"total\": 19,\n    \"hour\": 17\n  },\n  {\n    \"text\": 7,\n    \"total\": 7,\n    \"hour\": 18\n  }\n];\n\nconst Logo = () =&gt; (\n  &lt;a className='logo' href='/'&gt;Data Tracker&lt;sup&gt;beta&lt;/sup&gt;&lt;/a&gt;\n);\n\nconst Gradient = () =&gt; (\n  &lt;linearGradient id='pupleChart' x1='0%' y1='0%' x2='10%' y2='100%'&gt;\n    &lt;stop offset='0%' stopColor='#764ba2'&gt;&lt;/stop&gt;\n    &lt;stop offset='100%' stopColor='#667eea'&gt;&lt;/stop&gt;\n  &lt;/linearGradient&gt;\n);\n\nconst HoursActivity = props =&gt; (\n  &lt;section className='statistics-container'&gt;\n    &lt;header className='statistics-container__header'&gt;\n      &lt;Logo/&gt;\n      &lt;span className='name'&gt;{props.name}&lt;/span&gt;\n    &lt;/header&gt;\n    &lt;div className='statistics-container__content'&gt;\n      &lt;h3 className='title'&gt;Active hours&lt;/h3&gt;\n      &lt;<div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div> data={props.data} <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">margin={{}} <span class=\"fea_Canvas_keys udls\">width</span>={540} <span class=\"fea_Canvas_keys udls\">height</span>={240}</div>&gt;\n        &lt;defs&gt;\n          &lt;Gradient/&gt;\n        &lt;/defs&gt;\n        <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\"><x class=\"fea_Axis_keys udls\">Axis</x>\n          tick={{ fill: '#f8f9fa', fontSize: 10 }}\n          tickLine={false}\n          <span class=\"fea_Axis_keys udls\">axis</span>Line={false}\n          mirror\n          dataKey='hour'\n          tickMargin={5}\n          padding={{ left: 36, right: 10 }}\n          interval={0}\n        /&gt;\n        <y class=\"fea_Axis_keys udls\">Axis</y>\n          tick={{ fill: '#f8f9fa', fontSize: 14 }}\n          tickLine={false}\n          <span class=\"fea_Axis_keys udls\">axis</span>Line={false}\n          mirror\n          tickMargin={0}\n          padding={{ bottom: 50, top: 10 }}\n        /&gt;</div>\n        &lt;Line\n          <div class=\"highlights fea_Animations\" id=\"Animations_0\" style=\"background-color: #f6b73c;  display: inline;\">isAnim<span class=\"fea_Animations_keys udls\">ation</span>Active={false}</div>\n          type='monotone'\n          dataKey='total'\n          stroke='url(#pupleChart)'\n          strokeWidth={4}\n          dot={{ r: 4, strokeWidth: 3 }}\n          activeDot={{ r: 6 }}\n        /&gt;\n      &lt;/LineChart&gt;\n    &lt;/div&gt;\n  &lt;/section&gt;\n);\n\n\nReactDOM.render(\n  &lt;HoursActivity data={getHoursData(data)} name='Ivan Odintsov ☄️'/&gt;,\n  document.getElementById('container')\n);\n\n#https://codepen.io/ivanodintsov/pen/eXOBQK</code></pre></div>",
    "thr_40": "<div class=\"codeBlock hljs javascript\" id=\"thr_40\"><pre id=\"thr_40_code\" style=\"display: block;\"><code class=\"javascript\">const {LineChart, Line} = Recharts\n\nconst dataTop = { \n  facebook: [\n    {name: '11/07', clicks: 1000, shares: 1000, likes: 105000, comments: 100, past: 2000},\n    {name: '11/08', clicks: 2000, shares: 2000, likes: 200000, comments: 100, past: 2000},\n    {name: '11/09', clicks: 9000, shares: 1000, likes: 234000, comments: 100, past: 2000},\n    {name: '11/10', clicks: 9000, shares: 2000, likes: 190000, comments: 100, past: 2000},\n    {name: '11/11', clicks: 1000, shares: 1800, likes: 210000, comments: 100, past: 2000},\n    {name: '11/12', clicks: 3000, shares: 1700, likes: 250000, comments: 100, past: 2000},\n    {name: '11/13', clicks: 1000, shares: 1600, likes: 270000, comments: 100, past: 2000},\n  ],\n}\n\nconst namesProp = [ { name: 'clicks', total:'39'},\n                    { name: 'shares', total:'0'},\n                    { name: 'likes', total:'12'},\n                    { name: 'comments', total:'136'},]\n\n\nconst SparkList = (props) =&gt; {\n  return(\n    &lt;div&gt;\n      {\n        props.names.map((obj) =&gt; {\n          return(\n             &lt;div className=\"engagement-box\"&gt;\n                &lt;div className=\"description-box\"&gt;\n                  &lt;div className=\"engage-total\"&gt;{obj.total}&lt;/div&gt;\n                  &lt;div className=\"engage-description\"&gt;{obj.name}&lt;/div&gt;\n                &lt;/div&gt; \n                &lt;div className=\"spark-chart\"&gt;\n                &lt;<div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>  w<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">idth={105} \n                  <span class=\"fea_Canvas_keys udls\">height</span>={20}\n                  margin={{top:0}}</div>\n                  data={props.data}&gt;\n                  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\"><line class=\"fea_Shapes_keys udls\" type=\"linear\">data</line>Key='clicks' \n                    stroke='#1A237E' \n                    strokeWidth={1.5}\n                    dot={false}/&gt;\n                  <line class=\"fea_Shapes_keys udls\" type=\"linear\">data</line>Key='past' \n                    stroke='#cccccc' \n                    strokeWidth={1.5}\n                    dot={false}/&gt;</div>\n                &lt;/LineChart&gt;\n                &lt;/div&gt;\n             &lt;/div&gt;\n            )\n        })\n      }\n    &lt;/div&gt;\n  )\n}\n// console.log(names)\n\nconst StatsContainer = (props) =&gt; {\n  return(\n     &lt;div className=\"graph-container\"&gt;\n       &lt;div className=\"container-box\"&gt;\n            &lt;div className=\"header\"&gt;\n              &lt;div className=\"fa fa-facebook\"&gt;&lt;/div&gt;{props.header} \n              &lt;div className=\"fa fa-angle-right\"&gt;&lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div className=\"total-box\"&gt;\n              &lt;div className=\"total\"&gt;{props.total}&lt;/div&gt;\n              &lt;div className=\"total-text\"&gt;Total {props.totalText}&lt;/div&gt;\n              &lt;div className=\"last-week\"&gt;\n                &lt;div className=\"fa fa-caret-up\"&gt;&lt;/div&gt;\n                &lt;div className=\"percent\"&gt;{props.percent}&lt;/div&gt;\n                &lt;p&gt;from last week&lt;/p&gt;\n               &lt;/div&gt;\n            &lt;/div&gt;\n         {props.chart(props)}\n      &lt;/div&gt;\n    &lt;/div&gt;\n  )\n}\n\nReactDOM.render(&lt;StatsContainer \n                  names={namesProp} //special for sparkline\n                  data={dataTop.facebook}\n                  header={'Engagements'}\n                  total={'117'}\n                  totalText={'Page Likes'}\n                  percent={'85%'}\n                  chartProps={{newTotal: '17', newCaption: 'Page Likes',percent:'85%'}}\n                  chart={SparkList}/&gt;, document.getElementById('root'))\n                  #https://codepen.io/joyguy89/pen/LbVqmj</code></pre></div>",
    "thr_41": "<div class=\"codeBlock hljs javascript\" id=\"thr_41\"><pre id=\"thr_41_code\" style=\"display: block;\"><code class=\"javascript\">const { Component } = React;\nconst { render } = ReactDOM;\n\nconst {BarChart, Bar, Brush, ReferenceLine, XAxis, YAxis, CartesianGrid, Tooltip, Legend} = Recharts;\n\nconst data = [\n      {name: '1', uv: 300, pv: 456},\n      {name: '2', uv: -145, pv: 230},\n      {name: '3', uv: -100, pv: 345},\n      {name: '4', uv: -8, pv: 450},\n      {name: '5', uv: 100, pv: 321},\n      {name: '6', uv: 9, pv: 235},\n      {name: '7', uv: 53, pv: 267},\n      {name: '8', uv: 252, pv: -378},\n      {name: '9', uv: 79, pv: -210},\n      {name: '10', uv: 294, pv: -23},\n      {name: '12', uv: 43, pv: 45},\n      {name: '13', uv: -74, pv: 90},\n      {name: '14', uv: -71, pv: 130},\n      {name: '15', uv: -117, pv: 11},\n      {name: '16', uv: -186, pv: 107},\n      {name: '17', uv: -16, pv: 926},\n      {name: '18', uv: -125, pv: 653},\n      {name: '19', uv: 222, pv: 366},\n      {name: '20', uv: 372, pv: 486},\n      {name: '21', uv: 182, pv: 512},\n      {name: '22', uv: 164, pv: 302},\n      {name: '23', uv: 316, pv: 425},\n      {name: '24', uv: 131, pv: 467},\n      {name: '25', uv: 291, pv: -190},\n      {name: '26', uv: -47, pv: 194},\n      {name: '27', uv: -415, pv: 371},\n      {name: '28', uv: -182, pv: 376},\n      {name: '29', uv: -93, pv: 295},\n      {name: '30', uv: -99, pv: 322},\n      {name: '31', uv: -52, pv: 246},\n      {name: '32', uv: 154, pv: 33},\n      {name: '33', uv: 205, pv: 354},\n      {name: '34', uv: 70, pv: 258},\n      {name: '35', uv: -25, pv: 359},\n      {name: '36', uv: -59, pv: 192},\n      {name: '37', uv: -63, pv: 464},\n      {name: '38', uv: -91, pv: -2},\n      {name: '39', uv: -66, pv: 154},\n      {name: '40', uv: -50, pv: 186}\n    ];\n\nclass SimpleBarChart extends Component {\n\trender () {\n  \treturn (\n    \t&lt;<div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Bar_Chart_keys udls\">Bar</span>Chart</div> <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Canvas_keys udls\">width</span>={600} <span class=\"fea_Canvas_keys udls\">height</span>={300} data={data}\n            margin={{top: 5, right: 30, left: 20, bottom: 5}}&gt;</div>\n       <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\"><x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"name\"/&gt;\n       <y class=\"fea_Axis_keys udls\">Axis</y> domain={[-500, 1000]} /&gt;</div>\n       &lt;CartesianGrid strokeDasharray=\"3 3\"/&gt;\n       &lt;<div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Tooltip_keys udls\">Tooltip</span></div>/&gt;\n       <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"background-color: #f6b73c;  display: inline;\">&lt;<span class=\"fea_Legend_keys udls\">Legend</span> verticalAlign=\"top\" wrapperStyle={{lineHeight: '40px'}}/&gt;</div>\n       &lt;ReferenceLine y={0} stroke='#000'/&gt;\n       <div class=\"highlights fea_Zoom\" id=\"Zoom_0\" style=\"background-color: #f6b73c;  display: inline;\">&lt;<span class=\"fea_Zoom_keys udls\">Brush</span> dataKey='name' height={30} stroke=\"#8884d8\"/&gt;</div>\n       &lt;Bar dataKey=\"pv\" fill=\"#8884d8\" /&gt;\n       &lt;Bar dataKey=\"uv\" fill=\"#82ca9d\" /&gt;\n      &lt;/BarChart&gt;\n    );\n  }\n}\n\nrender(\n  &lt;SimpleBarChart /&gt;,\n  document.getElementById('root')\n);\n#https://codepen.io/techniq/pen/JKkBZo</code></pre></div>",
    "thr_42": "<div class=\"codeBlock hljs javascript\" id=\"thr_42\"><pre id=\"thr_42_code\" style=\"display: block;\"><code class=\"javascript\">const {\n  LineChart,\n  XAxis,\n  YAxis,\n  Tooltip,\n  CartesianGrid,\n  Line\n} = Recharts\n\nclass BasicIncomeExample extends React.PureComponent {\n  render() {\n    const {data, bi, taxRate} = this.props \n \n    return (\n      &lt;<div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>\n        <div class=\"highlights fea_Canvas\" id=\"Canvas_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Canvas_keys udls\">width</span>={600}\n        <span class=\"fea_Canvas_keys udls\">height</span>={400}</div>\n        data={data}\n        bi={bi} taxRate={taxRate}\n        <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">margin={{ top: 5, right: 20, left: 10, bottom: 20 }}</div>\n      &gt;\n        <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\"><y class=\"fea_Axis_keys udls\">Axis</y> y<span class=\"fea_Axis_keys udls\">Axis</span>Id=\"€\" unit=\"€\" /&gt;    \n        <y class=\"fea_Axis_keys udls\">Axis</y> y<span class=\"fea_Axis_keys udls\">Axis</span>Id=\"tax\" orientation=\"right\" unit=\"%\" /&gt;\n        <x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"Income\" interval={1} unit=\"€\" /&gt;</div>\n        <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"background-color: #f6b73c;  display: inline;\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> label={false} labelFormatter={() =&gt; null} formatter={(v) =&gt; parseInt(v.toFixed(0), 10).toLocaleString() } /&gt;</div>\n        &lt;CartesianGrid stroke=\"#f5f5f5\" /&gt;\n        &lt;Line type=\"monotone\" dataKey=\"Income\" stroke=\"#000\" yAxisId=\"€\" unit=\"€\" /&gt;\n        &lt;Line type=\"monotone\" dataKey=\"Basic Income\" stroke={colors.flat} yAxisId=\"€\" unit=\"€\" /&gt;\n        &lt;Line type=\"monotone\" dataKey=\"BI: Net Income\" stroke={colors.bi} yAxisId=\"€\" unit=\"€\" /&gt;\n        &lt;Line type=\"monotone\" dataKey=\"BI: Net Tax Rate\" stroke={colors.biTax} yAxisId=\"tax\" unit=\"%\" /&gt;\n        &lt;Line type=\"monotone\" dataKey=\"Existing: Net Income\" stroke={colors.ex} yAxisId=\"€\" unit=\"€\" /&gt;\n        &lt;Line type=\"monotone\" dataKey=\"Existing: Net Tax Rate\" stroke={colors.exTax} yAxisId=\"tax\" unit=\"%\" /&gt;\n      &lt;/LineChart&gt;\n    )\n  }\n}\n\nclass BasicIncomeChart extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      period: 'w',\n      biTaxRate: 45,\n      bi: 188,\n      data: getBIData(45, 188, 'w')\n    }\n  }\n  \n  handleChange(rates) {\n    const {biTaxRate, bi, period} = this.state,\n          newRates = {\n            biTaxRate,\n            bi,\n            ...rates\n          },\n          data = getBIData(newRates.biTaxRate, newRates.bi, period)\n\n    this.setState({\n      ...newRates,\n      data\n    })\n  }\n  \n  handleChangePeriod(newPeriod) {\n    const {bi, period} = this.state\n    \n    this.setState({\n      bi: applyPeriod(bi, newPeriod, period),\n      period: newPeriod\n    }, () =&gt; this.handleChange({}))\n  }\n  \n  render() {\n    const {data, bi, biTaxRate, period} = this.state\n\n    return (\n      &lt;div className=\"chart-wrapper\"&gt;\n        &lt;h1&gt;{'Explore basic income against 2018 tax rates for Ireland'}&lt;/h1&gt;\n        &lt;h2&gt;Income in € Euros ({languageStrings.periods[period]})&lt;/h2&gt;\n        &lt;BasicIncomeExample data={data} bi={bi} taxRate={biTaxRate} /&gt;\n        &lt;h2&gt;Custom Values:&lt;/h2&gt;\n        &lt;div className=\"spaced-out\"&gt;\n          &lt;label&gt;View by pay period&lt;/label&gt;\n          &lt;SelectPeriod period={period} onChange={(p) =&gt; this.handleChangePeriod(p) }/&gt;\n        &lt;/div&gt;\n        &lt;NumberField\n          value={bi}\n          label={`Set Basic Income Amount (${languageStrings.periods[period]})`}\n          max={applyPeriod(15000, period)}\n          onChange={(bi) =&gt; this.handleChange({bi})}\n        /&gt;\n        &lt;NumberField\n          value={biTaxRate}\n          label=\"Set Tax Rate\"\n          max={99}\n          onChange={(biTaxRate) =&gt; this.handleChange({biTaxRate})}\n        /&gt;\n        &lt;h2&gt;Interesting sets:&lt;/h2&gt;\n        &lt;SuggestedValues\n          bi={applyPeriod(10000, period)} biTaxRate={48}\n          onClick={(r) =&gt; this.handleChange(r)}\n        /&gt;\n        &lt;SuggestedValues\n          bi={applyPeriod(9776, period)} biTaxRate={45}\n          onClick={(r) =&gt; this.handleChange(r)}\n          label=\"Basic Income Ireland\"\n        /&gt;\n        &lt;SuggestedValues\n          bi={applyPeriod(9776, period)} biTaxRate={40}\n          onClick={(r) =&gt; this.handleChange(r)}\n          label=\"Social Justice Ireland\"\n        /&gt;\n        &lt;SuggestedValues\n          bi={applyPeriod(11440, period)} biTaxRate={50}\n          onClick={(r) =&gt; this.handleChange(r)}\n          label=\"Higher UBI\"\n        /&gt;\n        &lt;SuggestedValues\n          bi={applyPeriod(10400, period)} biTaxRate={33}\n          onClick={(r) =&gt; this.handleChange(r)}\n          label=\"Tax too low\"\n        /&gt;\n        &lt;p&gt;\n          &lt;strong&gt;Note: &lt;/strong&gt;\nFigures for existing taxes and rates take into \naccount PSRI at 4%, USC at 2018 rates and the\nstandard rate cut-off and tax credits for a \nsingle person. Figures for basic income\nassume that PRSI and USC are not also charged.\n        &lt;/p&gt;\n      &lt;/div&gt;\n    )\n  }\n}\n\n// general colour scheme\nconst colors = {\n  bi: '#ff7300',\n  biTax: '#ff730066',\n  ex: '#ff00cf',\n  exTax: '#ff00cf66',\n  flat: '#387908'\n}\n\n// Basic income for a single income level\nfunction getBasicIncome(income, bi, taxRate) {\n  const grossIncome = income + bi,\n        grossTax = income * (taxRate/100),\n        netTax = Math.max(income - grossIncome + grossTax, 0),\n        netIncome = grossIncome - grossTax,\n        effectiveTaxRate = income ? ((netTax / income) * 100) || 0 : 0\n\n  return {\n    grossIncome,\n    grossTax,\n    netTax,\n    netIncome,\n    effectiveTaxRate\n  }\n}\n\n// Adjust figure by annual/monthly/weekly (optional originalPeriod arg to convert from non-annual figure)\nfunction applyPeriod(amount, period = 'w', originalPeriod = 'a') {\n  const conversion = {\n    a: 1,\n    m: 12,\n    w: 52\n  }\n\n  const annualAmout = amount * (conversion[originalPeriod])\n  return Math.round(annualAmout / conversion[period])\n}\n\n// languageStrings where needed\nconst languageStrings = {\n  periods: {\n    'w': 'weekly',\n    'm': 'monthly',\n    'a': 'annual',\n  }\n}\n// 2018 rates, Irish single person\nfunction Tax(period = 'w') {\n  const srco = applyPeriod(34550, period),\n      sr = 20,\n      hr = 40,\n      credits = applyPeriod(3300, period),\n      prsi = 4,\n      usc = [\n        {max: applyPeriod(12012, period), rate: .5},\n        {max: applyPeriod(19372, period), rate: 2},\n        {max: applyPeriod(70044, period), rate: 4.75},\n        {max: Infinity, rate: 8}\n      ]\n\n  return {\n    standardRateCutOff: function(income) { return Math.min(income, srco) * (sr/100) },\n    standardRate: function(income) { return Math.min(income, srco) * (sr/100) },\n    higherRate: function(income) { return Math.max((income - srco), 0) * (hr/100) },\n    prsi: function(income) { return income * (prsi/100) },\n    usc: function(income) {\n      return usc.reduce((a, b) =&gt; {\n        const tax = Math.min(a.remainder, b.max) * (b.rate/100)\n\n        return {\n          tax: a.tax + tax,\n          remainder: Math.max(a.remainder - b.max, 0)\n        }\n      }, {tax: 0, remainder: income}).tax\n    },\n    grossTax: function(income) { return this.standardRate(income) + this.higherRate(income) },\n    tax: function(income) { return Math.max(this.grossTax(income) - credits, 0) + this.prsi(income) + this.usc(income) },\n    taxRate: (income, netTax) =&gt; income ? (netTax / income) * 100 : 0,\n    netIncome: (income, netTax) =&gt; Math.max(income - netTax, 0),\n  }\n}\n\n// get chart data for a tax rate and basic income rate\nfunction getBIData(biTaxRate = 45, biRate = 188, period = 'w') {\n  const points = Array(11).fill()\n\n  return points.map((v, i) =&gt; {\n    const income = i * applyPeriod(10400, period),\n          bi = getBasicIncome(income, biRate, biTaxRate),\n          current = getStandardTax(income, period)\n\n    return {\n      \"Income\": income,\n      \"Basic Income\": biRate,\n      \"BI: Tax Paid\": bi.grossTax,\n      \"BI: Net Tax Rate\": bi.effectiveTaxRate,\n      \"BI: Net Income\": bi.netIncome,\n      \"Existing: Net Income\": current.netIncome,\n      \"Existing: Net Tax Rate\": current.netTaxRate\n    }\n  })\n}\n\n// Standard tax for a single person with no special allowances\nfunction getStandardTax(income, period = 'w'){\n  const taxation = new Tax(period),\n        netTax = taxation.tax(income),\n        netTaxRate = taxation.taxRate(income, netTax),\n        netIncome = taxation.netIncome(income, netTax)\n  \n  return {\n    netTaxRate,\n    netIncome\n  }\n}\n\n/*\n * Supporting UI elements \n */\nconst NumberField = ({value, max, label, onChange}) =&gt; (\n  &lt;div className=\"spaced-out\"&gt;\n    &lt;label&gt;{label}&lt;/label&gt;\n    &lt;input\n      type='number'\n      min={0}\n      max={max}\n      value={value}\n      onChange={({currentTarget: {valueAsNumber}}) =&gt; onChange(valueAsNumber)}\n    /&gt;\n &lt;/div&gt;\n)\n\nconst SuggestedValues = ({bi, biTaxRate, label, onClick}) =&gt; (\n  &lt;div className=\"spaced-out\"&gt;\n    &lt;label&gt;\n      {`Basic Income: €${bi}, ${biTaxRate}% Tax`}\n      { label &amp;&amp; ` (${label})` }\n    &lt;/label&gt;\n    &lt;button onClick={() =&gt; onClick({bi, biTaxRate})}&gt;\n      {'Set Values'}\n    &lt;/button&gt;\n &lt;/div&gt;\n)\n\nconst SelectPeriod = ({period, onChange}) =&gt; (\n  &lt;select onChange={({currentTarget: {value}}) =&gt; onChange(value)}&gt;\n    {Object.keys(languageStrings.periods).map((key) =&gt; {\n      return &lt;option key={key} value={key}&gt;{languageStrings.periods[key]}&lt;/option&gt;\n    })}\n &lt;/select&gt;\n)\n\n// Render\nReactDOM.render(\n  &lt;BasicIncomeChart /&gt;,\n  document.getElementById('container')\n);\n\n\n#https://codepen.io/adamdharrington/pen/GdpMyG</code></pre></div>",
    "thr_43": "<div class=\"codeBlock hljs javascript\" id=\"thr_43\"><pre id=\"thr_43_code\" style=\"display: block;\"><code class=\"javascript\">const { useState, useEffect } = React;\nconst {\n  ScatterChart, XAxis, YAxis, Scatter, Tooltip, Legend, Rectangle,\n} = Recharts;\n\nconst formatMonth = (month) =&gt; {\n  switch(month) {\n    case 1:\n      return 'January';\n    case 2:\n      return 'February';\n    case 3:\n      return 'March';\n    case 4:\n      return 'April';\n    case 5:\n      return 'May';\n    case 6:\n      return 'June';\n    case 7:\n      return 'July';\n    case 8:\n      return 'August';\n    case 9:\n      return 'September';\n    case 10:\n      return 'October';\n    case 11:\n      return 'November';\n    case 12:\n      return 'December';\n    default:\n      return '';\n  }\n};\n\nconst getHeatGroups = (dataset) =&gt; {\n  const breakpoints = [\n    { temp: 2.8, color: 'rgb(49, 54, 149)' },\n    { temp: 3.9, color: 'rgb(69, 117, 180)' },\n    { temp: 5.0, color: 'rgb(116, 173, 209)' },\n    { temp: 6.1, color: 'rgb(171, 217, 233)' },\n    { temp: 7.2, color: 'rgb(224, 243, 248)' },\n    { temp: 8.3, color: 'rgb(255, 255, 191)' },\n    { temp: 9.5, color: 'rgb(254, 224, 144)' },\n    { temp: 10.6, color: 'rgb(253, 174, 97)' },\n    { temp: 11.7, color: 'rgb(244, 109, 67)' },\n    { temp: 12.8, color: 'rgb(215, 48, 39)' },\n  ];\n  let remaining = [...dataset];\n  const heatGroups = [];\n  \n  breakpoints.forEach(({ temp, color }, index) =&gt; {\n    heatGroups.push({\n      label: `&lt;= ${temp}`,\n      color,\n      data: remaining.filter(d =&gt; d.temperature &lt;= temp),\n    });\n    \n    // Keep track of remaining\n    remaining = remaining.filter(d =&gt; d.temperature &gt; temp);\n  });\n  if (remaining.length &gt; 0) {\n    heatGroups.push({\n      label: `&gt; ${breakpoints.pop().temp}`,\n      color: 'rgb(165, 0, 38)',\n      data: remaining,\n    });\n  }\n  \n  return heatGroups;\n};\n\n<div class=\"highlights fea_Heatmap\" id=\"Heatmap_1\" style=\"background-color: #f6b73c;  display: inline;\">const CustomShape = (props) =&gt; {\n  <span class=\"fea_Heatmap_keys udls\">return</span> (\n    <rectangle height=\"{25}\" x=\"{props.x\" y=\"{props.y\"></rectangle>\n  );\n};</div>\n\n<div class=\"highlights fea_Heatmap\" id=\"Heatmap_0\" style=\"background-color: #f6b73c;  display: inline;\">const HeatMap = ({ <span class=\"fea_Heatmap_keys udls\">data</span>: { baseTemperature, monthly<span class=\"fea_Heatmap_keys udls\">Var</span>iance = [] } }) =&gt; {</div>\n  const dataset = monthlyVariance.map(i =&gt; ({\n    ...i,\n    temperature: baseTemperature + i.variance,\n  }));\n  \n  return (\n    &lt;div id=\"heat-map\"&gt;\n      &lt;ScatterChart <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Canvas_keys udls\">width</span>={1000} <span class=\"fea_Canvas_keys udls\">height</span>={350}</div>&gt;\n        <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\"><x class=\"fea_Axis_keys udls\">Axis</x>\n          dataKey=\"year\"\n          domain={[1753, 2015]}\n          type=\"number\"\n          padding={{ right: 10 }}\n        /&gt;\n        <y class=\"fea_Axis_keys udls\">Axis</y>\n          dataKey=\"month\"\n          reversed\n          tickCount={12}\n          interval={0}\n          padding={{ top: 15 }}\n          tickFormatter={formatMonth}\n          tick={{ fontSize: 16 }}\n          domain={[1, 12]}\n        /&gt;</div>\n        \n        <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"background-color: #f6b73c;  display: inline;\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span>\n          content={({ payload }) =&gt; {\n            const data = payload &amp;&amp; payload[0] &amp;&amp; payload[0].payload;\n            const { month, year, temperature, variance } = data || {};\n            \n            return (\n              <div fea_tooltip_keys=\"\" id=\"&lt;span class=\" udls=\"\">tooltip</div>\"&gt;\n                <p>Date: {`${year} - ${formatMonth(month)}`}</p>\n<p>Temperature: {temperature &amp;&amp; temperature.toFixed(2)}°C</p>\n<p>Variance: {variance &amp;&amp; variance.toFixed(2)}°C</p>\n\n            );\n          }}\n        /&gt;</div>\n        <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"background-color: #f6b73c;  display: inline;\">&lt;<span class=\"fea_Legend_keys udls\">Legend</span> /&gt;</div>\n        \n        {getHeatGroups(dataset).map(group =&gt; (\n          &lt;<div class=\"highlights fea_Scatter_Plot\" id=\"Scatter_Plot_0\" style=\"background-color: #f6b73c;  display: inline;\">Scat<span class=\"fea_Scatter_Plot_keys udls\">ter</span></div>\n            name={group.label}\n            data={group.data}\n            fill={group.color}\n            shape={CustomShape}\n          /&gt;\n        ))}\n      &lt;/ScatterChart&gt;\n    &lt;/div&gt;\n  );\n};\n\nconst App = (props) =&gt; {\n  const [dataset, setDataset] = useState({});\n  const url = 'https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/global-temperature.json';\n  \n  useEffect(() =&gt; {\n    axios.get(url).then(({ data }) =&gt; {\n      setDataset(data);\n    })\n  }, dataset);\n  \n  return (\n    &lt;div id=\"container\"&gt;\n      &lt;h1&gt;Monthly Global Land-Surface Temperature&lt;/h1&gt;\n      &lt;h2&gt;Base Temperature: {dataset.baseTemperature}&amp;deg;C&lt;/h2&gt;\n      \n      &lt;HeatMap data={dataset} /&gt;\n    &lt;/div&gt;\n  );\n};\n\nReactDOM.render(&lt;App /&gt;, document.querySelector('#react-mount'));\n#https://codepen.io/paulmichaelxd/pen/WBrWEb</code></pre></div>",
    "thr_44": "<div class=\"codeBlock hljs javascript\" id=\"thr_44\"><pre id=\"thr_44_code\" style=\"display: block;\"><code class=\"javascript\">const { <div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Pie_Chart_keys udls\">Pie</span>Chart</div>, Pie, <div class=\"highlights fea_Pie_Chart\" id=\"Pie_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\">Sector</div>, <div class=\"highlights fea_Treemap\" id=\"Treemap_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Treemap_keys udls\">Treemap</span></div>, <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Tooltip_keys udls\">Tooltip</span></div> } = Recharts;\n\nconst CustomerLabels = React.createClass({\n  render() {\n    const {\n      root,\n      depth,\n      x,\n      y,\n      width,\n      height,\n      index,\n      payload,\n      colors,\n      rank,\n      name,\n      size\n    } = this.props;\n\n    return (\n      &lt;g&gt;\n        <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\">&lt;rect\n          x={x}\n          y={y}\n          width={width}\n          height={height}\n          style={{\n            fill: \"#e07050\",\n            stroke: \"#fff\",\n            strokeWidth: 2 / (depth + 1e-10),\n            strokeOpacity: 1 / (depth + 1e-10)\n          }}\n        /&gt;</div>\n        <div class=\"highlights fea_Text\" id=\"Text_1\" style=\"background-color: #f6b73c;  display: inline;\">&lt;<span class=\"fea_Text_keys udls\">text</span>\n          x={x + width / 2}\n          y={y + height / 2 + 7}\n          <span class=\"fea_Text_keys udls\">text</span>Anchor=\"middle\"\n          fill=\"#fff\"\n          fontSize={14}\n        &gt;</div>\n          {`${size}: ${name}`}\n        &lt;/text&gt;\n      &lt;/g&gt;\n    );\n  }\n});\n\nconst renderActiveShape = props =&gt; {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n    title,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos &gt;= 0 ? 1 : -1);\n  const ey = my;\n  const textAnchor = cos &gt;= 0 ? \"start\" : \"end\";\n\n  return (\n    &lt;g&gt;\n     <div class=\"highlights fea_Text\" id=\"Text_0\" style=\"background-color: #f6b73c;  display: inline;\"> &lt;<span class=\"fea_Text_keys udls\">text</span> x={cx} y={cy} dy={8} <span class=\"fea_Text_keys udls\">text</span>Anchor=\"middle\" fill=\"#333\" fontWeight=\"bold\"&gt;</div>\n        {title}\n      &lt;/text&gt;\n      <div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_0\" style=\"background-color: #f6b73c;  display: inline;\">&lt;Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      /&gt;\n      &lt;Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill=\"#5ECCF7\"\n      /&gt;</div>\n      &lt;text\n        x={ex + (cos &gt;= 0 ? 1 : -1)}\n        y={ey}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      &gt;{`${value} ${payload.name}`}&lt;/text&gt;\n    &lt;/g&gt;\n  );\n};\n\nconst renderActiveShapePct = props =&gt; {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n    title,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos &gt;= 0 ? 1 : -1);\n  const ey = my;\n  const textAnchor = cos &gt;= 0 ? \"start\" : \"end\";\n\n  return (\n    &lt;g&gt;\n      &lt;text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill=\"#333\" fontWeight=\"bold\"&gt;\n        {title}\n      &lt;/text&gt;\n      &lt;Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      /&gt;\n      &lt;Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill=\"#5ECCF7\"\n      /&gt;\n      &lt;text\n        x={ex + (cos &gt;= 0 ? 1 : -1)}\n        y={ey}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      &gt;{`${payload.name}: ${value}%`}&lt;/text&gt;\n    &lt;/g&gt;\n  );\n};\n\nconst MKPieChart = React.createClass({\n  getInitialState() {\n    return {\n      activeIndex: 0\n    };\n  },\n\n  onPieEnter(data, index) {\n    this.setState({\n      activeIndex: index\n    });\n  },\n  render() {\n    const isAPercentage =\n      this.props.data.reduce((acc, el) =&gt; {\n        return acc + el.value;\n      }, 0) === 100;\n    return (\n      &lt;PieChart height={300} width={500} onMouseEnter={this.onPieEnter}&gt;\n        &lt;Pie\n          activeIndex={this.state.activeIndex}\n          activeShape={\n            this.props.percentage ? renderActiveShapePct : renderActiveShape\n          }\n          data={this.props.data}\n          innerRadius={45}\n          outerRadius={65}\n          fill=\"#e07050\"\n        /&gt;\n      &lt;/PieChart&gt;\n    );\n  }\n});\n\nReactDOM.render(\n  &lt;MKPieChart\n    data={[\n      { title: \"Employees\", name: \"UX Engineers\", value: 2 },\n      { title: \"Employees\", name: \"Administration\", value: 2 },\n      { title: \"Employees\", name: \"Data Scientists\", value: 7 },\n      { title: \"Employees\", name: \"Platform Architects\", value: 5 }\n    ]}\n    title=\"Employees\"\n  /&gt;,\n  document.getElementById(\"employees-chart\")\n);\n\nReactDOM.render(\n  &lt;MKPieChart\n    data={[\n      { title: \"Methods\", name: \"Predictive Analytics\", value: 32 },\n      { title: \"Methods\", name: \"Recommendation Engine\", value: 11 },\n      { title: \"Methods\", name: \"Business Intelligence\", value: 11 },\n      { title: \"Methods\", name: \"Deep Learning\", value: 14 },\n      { title: \"Methods\", name: \"Geospatial\", value: 4 },\n      { title: \"Methods\", name: \"Graph Analytics\", value: 7 },\n      { title: \"Methods\", name: \"Natural Language Processing\", value: 21 }\n    ]}\n    title=\"Methods\"\n    percentage\n  /&gt;,\n  document.getElementById(\"methods-chart\")\n);\n\n\nReactDOM.render(\n  &lt;MKPieChart\n    data={[\n      { title:\"Customers\", name: \"Startup\", value: 43 },\n      { title:\"Customers\", name: \"Fortune 500\", value: 23 },\n      { title:\"Customers\", name: \"Large\", value: 23 },\n      { title:\"Customers\", name: \"Small\", value: 10 }\n    ]}\n    title=\"Customer Size\"\n    percentage\n  /&gt;,\n  document.getElementById(\"customer-size-chart\")\n);\n\nReactDOM.render(\n  &lt;MKPieChart\n    data={[\n      { title:\"Platforms\", name: \"Large Scale Database\", value: 18 },\n      { title:\"Platforms\", name: \"Cloud based PaaS\", value: 38 },\n      { title:\"Platforms\", name: \"Hadoop\", value: 44 }\n    ]}\n    title=\"Platforms\"\n    percentage\n  /&gt;,\n  document.getElementById(\"platforms-chart\")\n);\n\nReactDOM.render(\n  &lt;Treemap\n    width={600}\n    height={200}\n    data={[\n      { name: \"Construction\", size: 1 },\n      { name: \"Entertainment\", size: 2 },\n      { name: \"Retail\", size: 4 },\n      { name: \"Finance\", size: 6 },\n      { name: \"Other\", size: 3 },\n      { name: \"Internet\", size: 2 },\n      { name: \"Energy\", size: 1 },\n      { name: \"Education\", size: 2 },\n      { name: \"Health\", size: 3 },\n      { name: \"Media\", size: 3 },\n      { name: \"Technology\", size: 4 },\n      { name: \"Telco\", size: 1 },\n      { name: \"Government\", size: 3 }\n    ]}\n    dataKey=\"size\"\n    ratio={3}\n    stroke=\"#fff\"\n    fill=\"#e07050\"\n    content={&lt;CustomerLabels /&gt;}\n  &gt;\n    &lt;Tooltip /&gt;\n  &lt;/Treemap&gt;,\n  document.getElementById(\"customer-industries-chart\")\n);\n\n#https://codepen.io/nick123pig/pen/ZyOPpy</code></pre></div>",
    "thr_45": "<div class=\"codeBlock hljs javascript\" id=\"thr_45\"><pre id=\"thr_45_code\" style=\"display: block;\"><code class=\"javascript\">const { useState, useEffect } = React;\nconst {\n  ScatterChart, XAxis, YAxis, ZAxis, Tooltip, Legend, Scatter, CartesianGrid,\n} = Recharts;\n\nconst formatSeconds = (seconds) =&gt; {\n  return `${\n    Math.floor(seconds / 60)\n  }:${\n    String(seconds % 60).padStart(2, '0')\n  }`;\n}\n\nconst Chart = ({ data }) =&gt; {\n  const formatData = data.map((item) =&gt; {\n    const arr = item.Time.split(':').map(i =&gt; parseInt(i, 10));\n    const Seconds = arr[0] * 60 + arr[1];\n    \n    return { ...item, Seconds };\n  });\n  const doping = formatData.filter(i =&gt; i.Doping);\n  const noDoping = formatData.filter(i =&gt; !i.Doping);\n \n  return (\n    &lt;div id=\"graph\"&gt;\n      &lt;<div class=\"highlights fea_Scatter_Plot\" id=\"Scatter_Plot_0\" style=\"background-color: #f6b73c;  display: inline;\">Scat<span class=\"fea_Scatter_Plot_keys udls\">ter</span>Chart</div> <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Canvas_keys udls\">width</span>={600} <span class=\"fea_Canvas_keys udls\">height</span>={350}</div>&gt;\n        <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\"><x class=\"fea_Axis_keys udls\">Axis</x>\n          dataKey=\"Year\"\n          name=\"Year\"\n          type=\"number\"\n          domain={[1993, 2015]}\n        /&gt;\n        <y class=\"fea_Axis_keys udls\">Axis</y>\n          reversed\n          dataKey=\"Seconds\"\n          name=\"Time\"\n          tickFormatter={formatSeconds}\n          domain={[36 * 60, 40 * 60]}\n        /&gt;</div>\n        \n        <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"background-color: #f6b73c;  display: inline;\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span>\n          content={({ payload }) =&gt; {\n            const item = payload &amp;&amp; payload[0] &amp;&amp; payload[0].payload;\n            const { Time, Name, Doping, Year } = item || {};\n            \n            return (\n              <div fea_tooltip_keys=\"\" id=\"&lt;span class=\" udls=\"\">tooltip</div>\"&gt;\n                <p>Name: {Name}</p>\n<p>Time: {Time}</p>\n<p>Year: {Year}</p>\n<p>Doping Allegations: {Doping || 'None'}</p>\n\n            );\n          }}\n        /&gt;</div>\n        <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"background-color: #f6b73c;  display: inline;\">&lt;<span class=\"fea_Legend_keys udls\">Legend</span> /&gt;</div>\n        &lt;CartesianGrid /&gt;\n        \n        &lt;Scatter name=\"Doping\" data={doping} /&gt;\n        &lt;Scatter name=\"No Doping\" data={noDoping} fill=\"firebrick\" /&gt;\n      &lt;/ScatterChart&gt;\n    &lt;/div&gt;\n  );\n};\n\nconst App = (props) =&gt; {\n  const [dataset, setDataset] = useState([]);\n  const url = 'https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json';\n  \n  useEffect(() =&gt; {\n    axios.get(url).then(({ data }) =&gt; {\n      setDataset(data);\n    })\n  }, dataset)\n  \n  return (\n    &lt;div id=\"container\"&gt;\n      &lt;h1&gt;Doping in Professional Bike Racing&lt;/h1&gt;\n      \n      &lt;Chart data={dataset} /&gt;\n    &lt;/div&gt;\n  );\n}\n\nReactDOM.render(&lt;App /&gt;, document.querySelector('#react-mount'));\n#https://codepen.io/paulmichaelxd/pen/LoGpjW</code></pre></div>",
    "thr_46": "<div class=\"codeBlock hljs javascript\" id=\"thr_46\"><pre id=\"thr_46_code\" style=\"display: block;\"><code class=\"javascript\">const {AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, } = Recharts;\nconst data = [\n      {name: '11/07', uv: 500, },\n      {name: '11/08', uv: 30, },\n      {name: '11/09', uv: 0, },\n      {name: '11/10', uv: 80, },\n      {name: '11/11', uv: 20, },\n      {name: '11/12', uv: 5, },\n      {name: '11/13', uv: 6, },\n];\n\nclass ChartManager extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: props.initialColor\n    };\n  }  \n  render() {\n    return &lt;div&gt;&lt;/div&gt;;\n  }\n}\n\nconst CustomizedLabel = (props) =&gt; {\n    const {x, y, stroke} = props;\n   \treturn &lt;text x={x} y={y} dy={-4} fill={stroke} fontSize={8} textAnchor=\"middle\"&gt;&lt;/text&gt;\n}\n\nconst DefineTimeChart = () =&gt; {\n  return (\n    &lt;div className=\"define-time-container\"&gt;\n      &lt;div className=\"chart-container\"&gt;\n        &lt;<div class=\"highlights fea_Area_Chart\" id=\"Area_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Area_Chart_keys udls\">Area</span>Chart</div> width={600} height={70} data={data}\n              margin={{top: 10, right: 30, left: 30, bottom: 0}}&gt;\n          <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\"><x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"name\" <span class=\"fea_Axis_keys udls\">axis</span>Line={false} label={<customizedlabel></customizedlabel>}/&gt;</div>\n          &lt;Area type='linear' dataKey='uv' stroke='#8884d8' fill='#8884d8'/&gt;\n        &lt;/AreaChart&gt;\n      &lt;/div&gt;\n      &lt;div className=\"period-chooser\"&gt;\n        &lt;div className=\"start\"&gt;\n          &lt;label className=\"start form-label\" for=\"input-example-1\"&gt;Start:&lt;/label&gt;\n          &lt;input type=\"date\"&gt;&lt;/input&gt;\n        &lt;/div&gt;\n        &lt;div className=\"end\"&gt;\n          &lt;label class=\"start form-label\" for=\"input-example-1\"&gt;End:&lt;/label&gt;\n          &lt;input type=\"date\"&gt;&lt;/input&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  )\n}\n\nconst OrganicPaidChart = () =&gt; {\n  return (\n    &lt;div className=\"organic-paid-container\"&gt;\n      &lt;div className=\"header-container\"&gt;\n        &lt;h3&gt;Post Reach&lt;/h3&gt;\n        &lt;p&gt;The number of people your posts were served too.&lt;/p&gt;\n      &lt;/div&gt;\n      &lt;div className=\"chart-container\"&gt;\n        &lt;AreaChart <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Canvas_keys udls\">width</span>={600} <span class=\"fea_Canvas_keys udls\">height</span>={300}</div> data={data}\n              margin={{top: 40, right: 30, left: 0, bottom: 0}}&gt;\n          &lt;XAxis dataKey=\"name\" axisLine={false} label={&lt;CustomizedLabel /&gt;}/&gt;\n          &lt;YAxis dataKey=\"uv\" axisLine={false} tickLine={false}/&gt;\n          &lt;Area type='linear' dataKey='uv' stroke='#8884d8' fill='#8884d8' padding={{ left: 0 }}/&gt;\n          &lt;CartesianGrid vertical={false}/&gt;\n          &lt;Tooltip/&gt;\n        &lt;/AreaChart&gt;\n      &lt;/div&gt;\n      &lt;div className=\"side-container\"&gt;\n        &lt;div className=\"side-header\"&gt;\n          &lt;strong&gt;BENCHMARK&lt;/strong&gt;&lt;br&gt;&lt;/br&gt;\n          &lt;div className=\"text\"&gt;Compare your average performance overtime.&lt;/div&gt;\n        &lt;/div&gt;\n        &lt;p&gt;Organic&lt;/p&gt;\n        &lt;p&gt;Paid&lt;/p&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  )\n}\n\nconst Charts = () =&gt;{\n  return(\n    &lt;div&gt;\n      &lt;DefineTimeChart/&gt;\n      &lt;OrganicPaidChart/&gt;\n    &lt;/div&gt;\n  )\n}\n\nReactDOM.render(&lt;Charts\n                  /&gt;, document.getElementById('root'))\n\n\n// There is a really cool tooltip but it won't render for some odd reason in Codepen. \n#https://codepen.io/joyguy89/pen/vyLGae</code></pre></div>",
    "thr_47": "<div class=\"codeBlock hljs javascript\" id=\"thr_47\"><pre id=\"thr_47_code\" style=\"display: block;\"><code class=\"javascript\">const {LineChart, Line, Tooltip} = Recharts\n\nconst dataTop = { \n  facebook:[\n      {date: '11/07', gained: 7560, lost:250},\n      {date: '11/08', gained: 6990, lost:280},\n      {date: '11/09', gained: 1200, lost:520},\n      {date: '11/10', gained: 3600, lost:170},\n      {date: '11/11', gained: 2400, lost:150},\n      {date: '11/12', gained: 2000, lost:950},\n      {date: '11/13', gained: 3000, lost:350},\n  ],\n}\n\nconst Chart = (props) =&gt; {\n  \n const reformatCal = props.data.map((obj) =&gt;{\n if (obj.length&gt;7){\n   return obj.date\n } else{ return obj.date }\n})\n  \n  return(\n    &lt;div&gt;\n      &lt;div className=\"weekly-metric\"&gt;\n              &lt;div className=\"new-total\"&gt;{props.chartProps.newTotal}&lt;/div&gt;\n              &lt;div className=\"new-caption\"&gt;New {props.chartProps.newCaption}&lt;/div&gt;\n              &lt;div className=\"fa fa-caret-up\"&gt;&lt;/div&gt;\n              &lt;div className=\"percent\"&gt;{props.chartProps.percent}&lt;/div&gt;\n            &lt;/div&gt;\n        &lt;div className=\"keys-box\"&gt;\n          &lt;div className=\"key\"&gt;\n            &lt;div className=\"this-week\"&gt;&lt;/div&gt;&lt;p&gt;This week&lt;/p&gt;\n          &lt;/div&gt;\n          &lt;div className=\"key\"&gt;\n            &lt;div className=\"last-week\"&gt;&lt;/div&gt;&lt;p&gt;Last week&lt;/p&gt;\n          &lt;/div&gt;\n        &lt;/div&gt;\n        &lt;div className=\"line-chart\"&gt;\n          &lt;<div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>  <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Canvas_keys udls\">width</span>={280} \n          <span class=\"fea_Canvas_keys udls\">height</span>={100}</div>\n           margin={{}}\n          data={props.data}&gt;\n          <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\"><line class=\"fea_Shapes_keys udls\" type=\"linear\">data</line>Key='gained' \n            stroke='#1A237E' \n            strokeWidth={2.2} \n            dot={false}/&gt;\n          <line class=\"fea_Shapes_keys udls\" type=\"linear\">data</line>Key='lost' \n            stroke='#cccccc' \n            strokeWidth={.8} \n            dot={false}/&gt;</div>\n          <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"background-color: #f6b73c;  display: inline;\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> /&gt;</div>\n        &lt;/LineChart&gt;\n        &lt;/div&gt;\n        &lt;div className=\"mapped-dates\"&gt; \n         {\n           reformatCal.map((date)=&gt;{\n             return(\n               &lt;div className=\"date\"&gt;{date}&lt;/div&gt;\n             )\n           })\n         }\n        &lt;/div&gt;\n      &lt;/div&gt;\n    )\n}\n\nconst StatsContainer = (props) =&gt; {\n  \nconst total = 0\n\nconst reformat = props.data.map((obj) =&gt;{\n  return obj.gained\n})\n\nconst newtotal = reformat.reduce((acc,value)=&gt;{\n  return acc + value\n},total)\n  \n  return(\n     &lt;div className=\"graph-container\"&gt;\n       &lt;div className=\"container-box\"&gt;\n            &lt;div className=\"header\"&gt;\n              &lt;div className=\"fa fa-facebook\"&gt;&lt;/div&gt;{props.header} \n              &lt;div className=\"fa fa-angle-right\"&gt;&lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div className=\"total-box\"&gt;\n              &lt;div className=\"total\"&gt;{newtotal}&lt;/div&gt;\n              &lt;div className=\"total-text\"&gt;Total {props.totalText}&lt;/div&gt;\n              &lt;div className=\"last-week\"&gt;\n                &lt;div className=\"fa fa-caret-up\"&gt;&lt;/div&gt;\n                &lt;div className=\"percent\"&gt;{props.percent}&lt;/div&gt;\n                &lt;p&gt;from last week&lt;/p&gt;\n               &lt;/div&gt;\n            &lt;/div&gt;\n         {props.chart(props)}\n      &lt;/div&gt;\n    &lt;/div&gt;\n  )\n}\n\nReactDOM.render(&lt;StatsContainer \n                  data={dataTop.facebook}\n                  header={'Page Likes'}\n                  totalText={'Page Likes'}\n                  percent={'85%'}\n                  chartProps={{newTotal: '170', newCaption: 'Page Likes',percent:'85%'}}\n                  chart={Chart}\n                  /&gt;, document.getElementById('root'))\n\n\n\n// import {StatsContainer, SparkLineContainer, Chart} from './util/charts'\n\n\n#https://codepen.io/joyguy89/pen/BQNyXP</code></pre></div>",
    "thr_48": "<div class=\"codeBlock hljs javascript\" id=\"thr_48\"><pre id=\"thr_48_code\" style=\"display: block;\"><code class=\"javascript\">const {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer} = Recharts;\nvar monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n  \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n];\n\nconst CustomizedTooltip = ({payload}) =&gt; {\n  if (!payload || payload.length === 0) {\n     return null;\n  }\n  const realPayload = payload[0].payload\n  const { name, value } = realPayload;\n  \n  return (\n    &lt;div className=\"custom-tooltip\"&gt;\n      &lt;div&gt;\n        ${value.toLocaleString()} Billion\n      &lt;/div&gt;\n      &lt;div&gt;\n        {name.substring(0,4)} {monthNames[ new Date(name).getMonth() ]}\n      &lt;/div&gt;\n    &lt;/div&gt;\n  );\n};\n\n// The game state\nclass App extends React.Component {\n\n  state = {\n    data: []\n  };\n  componentDidMount() {\n    const onResponse = jsonObj =&gt; {\n      const data = jsonObj.data.map( item =&gt; ({ name: item[0], value: item[1], years: item[0].substring(0,4)}));\n      this.setState({ data  });\n      \n    };\n    fetch(\"https://raw.githubusercontent.com/FreeCodeCamp/ProjectReferenceData/master/GDP-data.json\")\n      .then(response =&gt; response.json())\n      .then(onResponse);\n  }\n\n  render() {\n    const { \n      data\n    } = this.state;\n    return (\n      &lt;div style={{width: '100%', height:'50vh'}}&gt;\n        &lt;ResponsiveContainer width='100%' height='100%'&gt;\n         &lt;<div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Bar_Chart_keys udls\">Bar</span>Chart</div> data={data}\n            <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">margin={{top: 5, right: 30, left: 20, bottom: 5}}&gt;</div>\n           <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\"><x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"years\" /&gt;\n           <y class=\"fea_Axis_keys udls\">Axis</y> /&gt;</div>\n           &lt;CartesianGrid strokeDasharray=\"3 3\"/&gt;\n           <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"background-color: #f6b73c;  display: inline;\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> content={<customized class=\"fea_Tooltip_keys udls\">Tooltip</customized> /&gt;}/&gt;</div>\n           <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\"><bar class=\"fea_Shapes_keys udls\">data</bar>Key=\"value\" fill=\"#8884d8\" /&gt;</div>\n        &lt;/BarChart&gt;\n        &lt;/ResponsiveContainer&gt;\n        \n        &lt;div&gt;\n          Units: Billions of Dollars Seasonal Adjustment: Seasonally Adjusted Annual Rate Notes: A Guide to the National Income and Product Accounts of the United States (NIPA) - (http://www.bea.gov/national/pdf/nipaguid.pdf)\n        &lt;/div&gt;\n      &lt;/div&gt;\n    );\n  }\n}\n\n/*\n   * Render the above component into the div#app\n   */\nReactDOM.render(&lt;App /&gt;, document.getElementById(\"app\"));</code></pre></div>",
    "thr_49": "<div class=\"codeBlock hljs javascript\" id=\"thr_49\"><pre id=\"thr_49_code\" style=\"display: block;\"><code class=\"javascript\">const {<div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>, Line} = Recharts\n\nconst dataTop = { \n  facebook: [\n    {name: '11/07', clicks: 1000, shares: 1000, likes: 105000, comments: 100, past: 2000},\n    {name: '11/08', clicks: 2000, shares: 2000, likes: 200000, comments: 100, past: 2000},\n    {name: '11/09', clicks: 9000, shares: 1000, likes: 234000, comments: 100, past: 2000},\n    {name: '11/10', clicks: 9000, shares: 2000, likes: 190000, comments: 100, past: 2000},\n    {name: '11/11', clicks: 1000, shares: 1800, likes: 210000, comments: 100, past: 2000},\n    {name: '11/12', clicks: 3000, shares: 1700, likes: 250000, comments: 100, past: 2000},\n    {name: '11/13', clicks: 1000, shares: 1600, likes: 270000, comments: 100, past: 2000},\n  ],\n}\n\nconst namesProp = [ { name: 'clicks', total:'39'},\n                    { name: 'shares', total:'0'},\n                    { name: 'likes', total:'12'},\n                    { name: 'comments', total:'136'},]\n\n\nconst SparkList = (props) =&gt; {\n  return(\n    &lt;div&gt;\n      {\n        props.names.map((obj) =&gt; {\n          return(\n             &lt;div className=\"engagement-box\"&gt;\n                &lt;div className=\"description-box\"&gt;\n                  &lt;div className=\"engage-total\"&gt;{obj.total}&lt;/div&gt;\n                  &lt;div className=\"engage-description\"&gt;{obj.name}&lt;/div&gt;\n                &lt;/div&gt; \n                &lt;div className=\"spark-chart\"&gt;\n                &lt;<div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>  w<div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\">idth={105} \n                  <span class=\"fea_Canvas_keys udls\">height</span>={20}\n                  margin={{top:0}}</div>\n                  data={props.data}&gt;\n                  <div class=\"highlights fea_Shapes\" id=\"Shapes_0\" style=\"background-color: #f6b73c;  display: inline;\"><line class=\"fea_Shapes_keys udls\" type=\"linear\">data</line>Key='clicks' \n                    stroke='#1A237E' \n                    strokeWidth={1.5}\n                    dot={false}/&gt;\n                  <line class=\"fea_Shapes_keys udls\" type=\"linear\">data</line>Key='past' \n                    stroke='#cccccc' \n                    strokeWidth={1.5}\n                    dot={false}/&gt;</div>\n                &lt;/LineChart&gt;\n                &lt;/div&gt;\n             &lt;/div&gt;\n            )\n        })\n      }\n    &lt;/div&gt;\n  )\n}\n// console.log(names)\n\nconst StatsContainer = (props) =&gt; {\n  return(\n     &lt;div className=\"graph-container\"&gt;\n       &lt;div className=\"container-box\"&gt;\n            &lt;div className=\"header\"&gt;\n              &lt;div className=\"fa fa-facebook\"&gt;&lt;/div&gt;{props.header} \n              &lt;div className=\"fa fa-angle-right\"&gt;&lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div className=\"total-box\"&gt;\n              &lt;div className=\"total\"&gt;{props.total}&lt;/div&gt;\n              &lt;div className=\"total-text\"&gt;Total {props.totalText}&lt;/div&gt;\n              &lt;div className=\"last-week\"&gt;\n                &lt;div className=\"fa fa-caret-up\"&gt;&lt;/div&gt;\n                &lt;div className=\"percent\"&gt;{props.percent}&lt;/div&gt;\n                &lt;p&gt;from last week&lt;/p&gt;\n               &lt;/div&gt;\n            &lt;/div&gt;\n         {props.chart(props)}\n      &lt;/div&gt;\n    &lt;/div&gt;\n  )\n}\n\nReactDOM.render(&lt;StatsContainer \n                  names={namesProp} //special for sparkline\n                  data={dataTop.facebook}\n                  header={'Engagements'}\n                  total={'117'}\n                  totalText={'Page Likes'}\n                  percent={'85%'}\n                  chartProps={{newTotal: '17', newCaption: 'Page Likes',percent:'85%'}}\n                  chart={SparkList}/&gt;, document.getElementById('root'))\n                  #https://codepen.io/joyguy89/pen/LbVqmj</code></pre></div>",
    "thr_50": "<div class=\"codeBlock hljs javascript\" id=\"thr_50\"><pre id=\"thr_50_code\" style=\"display: block;\"><code class=\"javascript\">const {PropTypes} = React;\nconst {<div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Bar_Chart_keys udls\">Bar</span>Chart</div>, Bar, <div class=\"highlights fea_Axis\" id=\"Axis_0\" style=\"background-color: #f6b73c;  display: inline;\">X<span class=\"fea_Axis_keys udls\">Axis</span>, Y<span class=\"fea_Axis_keys udls\">Axis</span></div>, CartesianGrid, <div class=\"highlights fea_Tooltip\" id=\"Tooltip_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Tooltip_keys udls\">Tooltip</span></div>, <div class=\"highlights fea_Legend\" id=\"Legend_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Legend_keys udls\">Legend</span></div>, <div class=\"highlights fea_Scatter_Plot\" id=\"Scatter_Plot_1\" style=\"background-color: #f6b73c;  display: inline;\">Scat<span class=\"fea_Scatter_Plot_keys udls\">ter</span>Chart</div>, <div class=\"highlights fea_Scatter_Plot\" id=\"Scatter_Plot_0\" style=\"background-color: #f6b73c;  display: inline;\">Scat<span class=\"fea_Scatter_Plot_keys udls\">ter</span></div>, <div class=\"highlights fea_Line_Chart\" id=\"Line_Chart_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Line_Chart_keys udls\">Line</span>Chart</div>, Line} = Recharts;\n\n// Custom Tooltip\nconst CustomTooltip  = React.createClass({\n  propTypes: {\n    type: PropTypes.string,\n    payload: PropTypes.array,\n    label: PropTypes.string,\n  },\n\n getIntroOfPage(label) {\n    return label\n  },\n\n  render() {\n    const { active } = this.props;\n\n    if (active) {\n      const { payload, label } = this.props;\n      return (\n        &lt;div className=\"custom-tooltip\" &gt;\n          &lt;p className=\"label\"&gt;{`${payload[0].name} : ${payload[0].value}`}&lt;/p&gt;\n        &lt;/div&gt;\n      );\n    }\n\n    return null;\n  }\n});\n\n// Feature importance graph\nconst data = [\n      {name: ' A', uv: 4000, Importance: 2400, amt: 2400},\n      {name: ' B', uv: 3000, Importance: 1398, amt: 2210},\n      {name: ' C', uv: 2000, Importance: 9800, amt: 2290},\n      {name: ' D', uv: 2780, Importance: 3908, amt: 2000},\n      {name: ' E', uv: 1890, Importance: 4800, amt: 2181},\n      {name: ' F', uv: 2390, Importance: 3800, amt: 2500},\n      {name: ' G', uv: 3490, Importance: 4300, amt: 2100},\n];\n<div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_0\" style=\"background-color: #f6b73c;  display: inline;\">const SimpleBar<span class=\"fea_Multiple_Charts_keys udls\">Chart</span> = React.createClass({</div>\n\trender () {\n  \treturn (\n    \t<div class=\"highlights fea_Bar_Chart\" id=\"Bar_Chart_1\" style=\"background-color: #f6b73c;  display: inline;\">&lt;<span class=\"fea_Bar_Chart_keys udls\">Bar</span>Chart</div> <div class=\"highlights fea_Canvas\" id=\"Canvas_1\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Canvas_keys udls\">width</span>={360} <span class=\"fea_Canvas_keys udls\">height</span>={230}</div> data={data}\n             layout='vertical'&gt;\n       &lt;CartesianGrid strokeDasharray=\"4 4\" stroke=\"#eeeeee\"/&gt;\n      <div class=\"highlights fea_Axis\" id=\"Axis_2\" style=\"background-color: #f6b73c;  display: inline;\"> <x class=\"fea_Axis_keys udls\">Axis</x> type=\"number\" stroke=\"#fff3e0\"/&gt;\n       <y class=\"fea_Axis_keys udls\">Axis</y> type=\"category\" dataKey='name' stroke=\"#fff3e0\"/&gt;</div>\n       <div class=\"highlights fea_Tooltip\" id=\"Tooltip_2\" style=\"background-color: #f6b73c;  display: inline;\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> cursor={false}/&gt;</div>\n       <div class=\"highlights fea_Legend\" id=\"Legend_1\" style=\"background-color: #f6b73c;  display: inline;\">&lt;<span class=\"fea_Legend_keys udls\">Legend</span> /&gt;</div>\n       &lt;Bar dataKey=\"Importance\" fill=\"#ffe0b2\" /&gt;\n       \n      &lt;/BarChart&gt;\n    );\n  }\n})\n\nReactDOM.render(\n  &lt;SimpleBarChart /&gt;,\n  document.getElementById('feature_distribution')\n);\n\n\n// Accuracy plot\nconst data01 = [{x: 1, Accuracy: 70}, {x: 3, Accuracy: 72}, {x: 5, Accuracy: 72}, {x: 7, Accuracy: 74}, {x: 9, Accuracy: 77}, {x: 11, Accuracy: 79}];\n\nconst tooltip_style={\n  background: \"#000000\"\n};\n\n<div class=\"highlights fea_Multiple_Charts\" id=\"Multiple_Charts_1\" style=\"background-color: #f6b73c;  display: inline;\">const SimpleLine<span class=\"fea_Multiple_Charts_keys udls\">Chart</span> = React.createClass({</div>\n\trender () {\n  \treturn (\n    \t&lt;LineChart <div class=\"highlights fea_Canvas\" id=\"Canvas_0\" style=\"background-color: #f6b73c;  display: inline;\"><span class=\"fea_Canvas_keys udls\">width</span>={400} <span class=\"fea_Canvas_keys udls\">height</span>={205} data={data01}\n            margin={{top: 5, right: 30, left: 20, bottom: 2}</div>}&gt;\n       <div class=\"highlights fea_Axis\" id=\"Axis_1\" style=\"background-color: #f6b73c;  display: inline;\"><x class=\"fea_Axis_keys udls\">Axis</x> dataKey=\"x\" stroke=\"#ef9a9a\"/&gt;\n       <y class=\"fea_Axis_keys udls\">Axis</y> domain={['auto', 'auto']} stroke=\"#ef9a9a\"/&gt;</div>\n       &lt;CartesianGrid strokeDasharray=\"4 4\" stroke=\"#ef9a9a\"/&gt;\n       <div class=\"highlights fea_Tooltip\" id=\"Tooltip_1\" style=\"background-color: #f6b73c;  display: inline;\">&lt;<span class=\"fea_Tooltip_keys udls\">Tooltip</span> content={<custom class=\"fea_Tooltip_keys udls\">Tooltip</custom>/&gt;}/&gt;</div>\n       &lt;Line dataKey=\"Accuracy\" stroke=\"#ffebee\" activeDot={{r: 8}} dot={{r: 5, fill:\"#ffebee\"}} strokeWidth={3}/&gt;\n      &lt;/LineChart&gt;\n    );\n  }\n})\n\nReactDOM.render(\n  &lt;SimpleLineChart /&gt;,\n  document.getElementById('accuracy_plot')\n);\n#https://codepen.io/akshay-karangale/pen/mzzYrQ</code></pre></div>"
  },
  "file concepts": {
    "fir_14": [
      "cat_Data_Processing",
      "fea_Import_Data",
      "fea_Line_Chart",
      "fea_Data_Format",
      "fea_Data_Transformation",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Multiple_Charts",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "fir_3": [
      "cat_Data_Processing",
      "fea_Import_Data",
      "fea_Line_Chart",
      "fea_Data_Format",
      "fea_Data_Transformation",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Legend",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "fir_6": [
      "fea_Text",
      "cat_Data_Processing",
      "fea_Line_Chart",
      "fea_Data_Filtering",
      "cat_Interactions_and_Animations",
      "fea_Data_Format",
      "fea_Data_Transformation",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Mouse_Events",
      "fea_Legend",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "fir_13": [
      "fea_Text",
      "cat_Data_Processing",
      "fea_Line_Chart",
      "fea_Data_Filtering",
      "fea_Data_Grouping",
      "fea_Data_Transformation",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Legend",
      "fea_Shapes",
      "fea_Canvas",
      "fea_Bar_Chart",
      "cat_Visualization_Types"
    ],
    "fir_21": [
      "fea_Text",
      "cat_Data_Processing",
      "fea_Import_Data",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Legend",
      "fea_Shapes",
      "fea_Canvas"
    ],
    "fir_16": [
      "fea_Text",
      "cat_Data_Processing",
      "fea_Tooltip",
      "fea_Import_Data",
      "fea_Line_Chart",
      "cat_Interactions_and_Animations",
      "fea_Data_Format",
      "fea_Data_Transformation",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Mouse_Events",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "fir_29": [
      "fea_Text",
      "fea_Heatmap",
      "cat_Data_Processing",
      "fea_Tooltip",
      "fea_Import_Data",
      "cat_Interactions_and_Animations",
      "fea_Data_Transformation",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Mouse_Events",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "fir_7": [
      "fea_Text",
      "cat_Data_Processing",
      "fea_Import_Data",
      "fea_Data_Grouping",
      "fea_Data_Format",
      "fea_Data_Transformation",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas"
    ],
    "fir_11": [
      "fea_Text",
      "cat_Data_Processing",
      "fea_Tooltip",
      "fea_Import_Data",
      "cat_Interactions_and_Animations",
      "fea_Data_Format",
      "fea_Data_Transformation",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Mouse_Events",
      "fea_Shapes",
      "fea_Canvas"
    ],
    "fir_12": [
      "fea_Text",
      "fea_Line_Chart",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "fea_Bar_Chart",
      "cat_Visualization_Types"
    ],
    "fir_15": [
      "fea_Text",
      "cat_Data_Processing",
      "fea_Import_Data",
      "fea_Line_Chart",
      "cat_Interactions_and_Animations",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Mouse_Events",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "fir_17": [
      "fea_Text",
      "cat_Data_Processing",
      "fea_Line_Chart",
      "fea_Data_Transformation",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "fir_24": [
      "fea_Text",
      "fea_Selection",
      "cat_Data_Processing",
      "fea_Import_Data",
      "cat_Interactions_and_Animations",
      "fea_Animations",
      "cat_Customizable_Components",
      "fea_Tree",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "fir_25": [
      "fea_Text",
      "cat_Data_Processing",
      "fea_Import_Data",
      "cat_Interactions_and_Animations",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Mouse_Events",
      "fea_Tree",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "fir_26": [
      "fea_Text",
      "cat_Data_Processing",
      "fea_Import_Data",
      "fea_Data_Grouping",
      "cat_Interactions_and_Animations",
      "fea_Data_Format",
      "cat_Customizable_Components",
      "fea_Mouse_Events",
      "fea_Sankey_Diagram",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "fir_28": [
      "fea_Text",
      "cat_Data_Processing",
      "fea_Import_Data",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "fea_Bar_Chart",
      "cat_Visualization_Types"
    ],
    "fir_1": [
      "cat_Data_Processing",
      "fea_Import_Data",
      "fea_Line_Chart",
      "fea_Data_Format",
      "fea_Data_Transformation",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "fir_2": [
      "cat_Data_Processing",
      "fea_Import_Data",
      "fea_Line_Chart",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "fir_4": [
      "fea_Text",
      "cat_Data_Processing",
      "fea_Tooltip",
      "fea_Import_Data",
      "cat_Interactions_and_Animations",
      "fea_Geo_Maps",
      "fea_Axis",
      "fea_Mouse_Events",
      "cat_Customizable_Componenets",
      "fea_Legend",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "fir_5": [
      "fea_Text",
      "cat_Data_Processing",
      "fea_Import_Data",
      "cat_Interactions_and_Animations",
      "fea_Geo_Maps",
      "fea_Axis",
      "fea_Mouse_Events",
      "cat_Customizable_Componenets",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "fir_9": [
      "fea_Text",
      "cat_Data_Processing",
      "fea_Import_Data",
      "fea_Geo_Maps",
      "fea_Axis",
      "cat_Customizable_Componenets",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Customizable_Components",
      "cat_Visualization_Types"
    ],
    "fir_8": [
      "cat_Data_Processing",
      "fea_Import_Data",
      "fea_Line_Chart",
      "fea_Data_Filtering",
      "fea_Data_Grouping",
      "cat_Interactions_and_Animations",
      "fea_Animations",
      "fea_Data_Format",
      "fea_Data_Transformation",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "fir_10": [
      "cat_Data_Processing",
      "fea_Import_Data",
      "fea_Line_Chart",
      "cat_Interactions_and_Animations",
      "fea_Data_Format",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Zoom",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "fir_19": [
      "cat_Data_Processing",
      "fea_Import_Data",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes"
    ],
    "fir_20": [
      "fea_Scatter_Plot",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "fir_23": [
      "cat_Data_Processing",
      "fea_Import_Data",
      "cat_Interactions_and_Animations",
      "fea_Data_Transformation",
      "fea_Force_Directed_Graph",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Mouse_Events",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "fir_30": [
      "cat_Data_Processing",
      "fea_Import_Data",
      "fea_Data_Grouping",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "fea_Bar_Chart",
      "cat_Visualization_Types"
    ],
    "fir_22": [
      "fea_Selection",
      "cat_Data_Processing",
      "fea_Import_Data",
      "cat_Interactions_and_Animations",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas"
    ],
    "fir_27": [
      "fea_Shapes",
      "cat_Customizable_Components",
      "fea_Canvas",
      "fea_Chord_Diagram",
      "cat_Visualization_Types"
    ],
    "fir_18": [
      "fea_Shapes",
      "fea_Data_Grouping",
      "cat_Customizable_Components",
      "cat_Data_Processing"
    ],
    "sec_8": [
      "fea_Tooltip",
      "fea_Line_Chart",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Legend",
      "fea_Shapes",
      "cat_Visualization_Types"
    ],
    "sec_14": [
      "fea_Tooltip",
      "fea_Line_Chart",
      "cat_Interactions_and_Animations",
      "fea_Animations",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Legend",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "sec_17": [
      "fea_Tooltip",
      "fea_Area_Chart",
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "sec_18": [
      "fea_Line_Chart",
      "cat_Interactions_and_Animations",
      "fea_Animations",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Legend",
      "fea_Shapes",
      "cat_Visualization_Types"
    ],
    "sec_21": [
      "fea_Tooltip",
      "cat_Interactions_and_Animations",
      "cat_Customizable_Components",
      "fea_Bubble_Chart",
      "fea_Legend",
      "fea_Shapes",
      "fea_Mouse_Events",
      "cat_Visualization_Types"
    ],
    "sec_25": [
      "cat_Data_Processing",
      "fea_Tooltip",
      "fea_Data_Grouping",
      "cat_Interactions_and_Animations",
      "fea_Data_Transformation",
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Shapes",
      "fea_Mouse_Events",
      "fea_Pie_Chart",
      "cat_Visualization_Types"
    ],
    "sec_26": [
      "fea_Text",
      "fea_Scatter_Plot",
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Shapes",
      "cat_Visualization_Types"
    ],
    "sec_27": [
      "fea_Text",
      "cat_Customizable_Components",
      "fea_Bubble_Chart",
      "fea_Legend",
      "fea_Shapes",
      "cat_Visualization_Types"
    ],
    "sec_30": [
      "fea_Text",
      "cat_Customizable_Components",
      "fea_Legend",
      "fea_Shapes",
      "fea_Bar_Chart",
      "cat_Visualization_Types"
    ],
    "sec_2": [
      "fea_Tooltip",
      "fea_Line_Chart",
      "cat_Interactions_and_Animations",
      "fea_Animations",
      "cat_Customizable_Components",
      "fea_Shapes",
      "cat_Visualization_Types"
    ],
    "sec_5": [
      "fea_Text",
      "fea_Tooltip",
      "cat_Interactions_and_Animations",
      "fea_Animations",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Mouse_Events",
      "fea_Pie_Chart",
      "cat_Visualization_Types"
    ],
    "sec_9": [
      "fea_Text",
      "fea_Tooltip",
      "fea_Line_Chart",
      "cat_Interactions_and_Animations",
      "fea_Animations",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Mouse_Events",
      "cat_Visualization_Types"
    ],
    "sec_12": [
      "fea_Text",
      "cat_Data_Processing",
      "fea_Tooltip",
      "fea_Data_Grouping",
      "cat_Interactions_and_Animations",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Mouse_Events",
      "fea_Bar_Chart",
      "cat_Visualization_Types"
    ],
    "sec_16": [
      "fea_Tooltip",
      "cat_Interactions_and_Animations",
      "cat_Customizable_Components",
      "fea_Shapes",
      "fea_Mouse_Events",
      "fea_Bar_Chart",
      "cat_Visualization_Types"
    ],
    "sec_19": [
      "fea_Text",
      "cat_Data_Processing",
      "fea_Tooltip",
      "fea_Scatter_Plot",
      "fea_Data_Transformation",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "cat_Visualization_Types"
    ],
    "sec_11": [
      "fea_Text",
      "cat_Interactions_and_Animations",
      "fea_Animations",
      "cat_Customizable_Components",
      "fea_Shapes",
      "fea_Mouse_Events",
      "fea_Pie_Chart",
      "cat_Visualization_Types"
    ],
    "sec_15": [
      "fea_Text",
      "cat_Interactions_and_Animations",
      "fea_Animations",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Pie_Chart",
      "cat_Visualization_Types"
    ],
    "sec_22": [
      "fea_Text",
      "fea_Line_Chart",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "cat_Visualization_Types"
    ],
    "sec_23": [
      "fea_Text",
      "cat_Data_Processing",
      "fea_Line_Chart",
      "fea_Data_Transformation",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Bar_Chart",
      "cat_Visualization_Types"
    ],
    "sec_24": [
      "fea_Text",
      "cat_Data_Processing",
      "fea_Radar_Chart",
      "fea_Data_Transformation",
      "cat_Customizable_Components",
      "fea_Shapes",
      "cat_Visualization_Types"
    ],
    "sec_28": [
      "fea_Text",
      "fea_Line_Chart",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "cat_Visualization_Types"
    ],
    "sec_29": [
      "fea_Text",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Bar_Chart",
      "cat_Visualization_Types"
    ],
    "sec_3": [
      "fea_Line_Chart",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Multiple_Charts",
      "fea_Shapes",
      "fea_Pie_Chart",
      "cat_Visualization_Types"
    ],
    "sec_6": [
      "fea_Line_Chart",
      "cat_Interactions_and_Animations",
      "fea_Animations",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "cat_Visualization_Types"
    ],
    "sec_13": [
      "fea_Line_Chart",
      "cat_Interactions_and_Animations",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Mouse_Events",
      "cat_Visualization_Types"
    ],
    "sec_20": [
      "cat_Data_Processing",
      "cat_Interactions_and_Animations",
      "fea_Animations",
      "fea_Data_Transformation",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Bar_Chart",
      "cat_Visualization_Types"
    ],
    "sec_1": [
      "fea_Line_Chart",
      "cat_Interactions_and_Animations",
      "fea_Animations",
      "cat_Customizable_Components",
      "fea_Shapes",
      "cat_Visualization_Types"
    ],
    "sec_4": [
      "fea_Line_Chart",
      "fea_Shapes",
      "cat_Customizable_Components",
      "cat_Visualization_Types"
    ],
    "sec_10": [
      "fea_Line_Chart",
      "cat_Interactions_and_Animations",
      "fea_Animations",
      "cat_Customizable_Components",
      "fea_Multiple_Charts",
      "fea_Shapes",
      "fea_Pie_Chart",
      "fea_Bar_Chart",
      "cat_Visualization_Types"
    ],
    "thr_14": [
      "fea_Text",
      "fea_Tooltip",
      "fea_Area_Chart",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Legend",
      "fea_Multiple_Charts",
      "fea_Shapes",
      "fea_Bar_Chart",
      "cat_Visualization_Types"
    ],
    "thr_2": [
      "fea_Tooltip",
      "fea_Line_Chart",
      "fea_Multiple_Charts",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Legend",
      "fea_Zoom",
      "fea_Shapes",
      "fea_Canvas",
      "fea_Bar_Chart",
      "cat_Visualization_Types",
      "cat_Interactions_and_Animations"
    ],
    "thr_3": [
      "fea_Tooltip",
      "fea_Line_Chart",
      "fea_Multiple_Charts",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Legend",
      "fea_Zoom",
      "fea_Shapes",
      "fea_Canvas",
      "fea_Bar_Chart",
      "cat_Visualization_Types",
      "cat_Interactions_and_Animations"
    ],
    "thr_8": [
      "fea_Tooltip",
      "fea_Area_Chart",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Legend",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "thr_13": [
      "fea_Tooltip",
      "fea_Line_Chart",
      "fea_Area_Chart",
      "fea_Multiple_Charts",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Legend",
      "fea_Zoom",
      "fea_Shapes",
      "fea_Canvas",
      "fea_Pie_Chart",
      "cat_Visualization_Types",
      "cat_Interactions_and_Animations"
    ],
    "thr_16": [
      "fea_Tooltip",
      "fea_Line_Chart",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Legend",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "thr_17": [
      "fea_Legend",
      "cat_Customizable_Components",
      "fea_Radar_Chart",
      "fea_Shapes",
      "cat_Visualization_Types"
    ],
    "thr_18": [
      "fea_Legend",
      "cat_Customizable_Components",
      "fea_Radar_Chart",
      "fea_Shapes",
      "cat_Visualization_Types"
    ],
    "thr_20": [
      "fea_Tooltip",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Legend",
      "fea_Shapes",
      "fea_Canvas",
      "fea_Bar_Chart",
      "cat_Visualization_Types"
    ],
    "thr_21": [
      "fea_Tooltip",
      "fea_Line_Chart",
      "fea_Area_Chart",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Legend",
      "fea_Multiple_Charts",
      "fea_Shapes",
      "fea_Canvas",
      "fea_Bar_Chart",
      "cat_Visualization_Types"
    ],
    "thr_24": [
      "fea_Tooltip",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Legend",
      "fea_Zoom",
      "fea_Shapes",
      "fea_Canvas",
      "fea_Bar_Chart",
      "cat_Visualization_Types",
      "cat_Interactions_and_Animations"
    ],
    "thr_25": [
      "fea_Tooltip",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Legend",
      "fea_Shapes",
      "fea_Canvas",
      "fea_Bar_Chart",
      "cat_Visualization_Types"
    ],
    "thr_26": [
      "fea_Tooltip",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Legend",
      "fea_Shapes",
      "fea_Canvas",
      "fea_Bar_Chart",
      "cat_Visualization_Types"
    ],
    "thr_28": [
      "fea_Line_Chart",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Legend",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "thr_1": [
      "fea_Tooltip",
      "fea_Line_Chart",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Zoom",
      "fea_Shapes",
      "cat_Interactions_and_Animations",
      "cat_Visualization_Types"
    ],
    "thr_4": [
      "fea_Tooltip",
      "fea_Line_Chart",
      "fea_Area_Chart",
      "fea_Multiple_Charts",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Zoom",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types",
      "cat_Interactions_and_Animations"
    ],
    "thr_5": [
      "fea_Text",
      "fea_Tooltip",
      "fea_Line_Chart",
      "cat_Interactions_and_Animations",
      "fea_Animations",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Mouse_Events",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "thr_10": [
      "fea_Tooltip",
      "fea_Line_Chart",
      "cat_Interactions_and_Animations",
      "fea_Animations",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "cat_Visualization_Types"
    ],
    "thr_11": [
      "fea_Tooltip",
      "fea_Area_Chart",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "thr_15": [
      "fea_Tooltip",
      "fea_Line_Chart",
      "cat_Interactions_and_Animations",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Mouse_Events",
      "fea_Zoom",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "thr_22": [
      "fea_Shapes",
      "cat_Customizable_Components",
      "fea_Pie_Chart",
      "fea_Tooltip",
      "cat_Visualization_Types"
    ],
    "thr_23": [
      "fea_Tooltip",
      "fea_Scatter_Plot",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "thr_27": [
      "fea_Tooltip",
      "fea_Area_Chart",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "thr_29": [
      "cat_Data_Processing",
      "fea_Tooltip",
      "fea_Import_Data",
      "fea_Line_Chart",
      "fea_Area_Chart",
      "fea_Multiple_Charts",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Zoom",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types",
      "cat_Interactions_and_Animations"
    ],
    "thr_30": [
      "cat_Data_Processing",
      "fea_Tooltip",
      "fea_Import_Data",
      "fea_Line_Chart",
      "cat_Interactions_and_Animations",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Mouse_Events",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "thr_6": [
      "fea_Line_Chart",
      "cat_Interactions_and_Animations",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Mouse_Events",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "thr_7": [
      "fea_Line_Chart",
      "cat_Interactions_and_Animations",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Mouse_Events",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "thr_9": [
      "fea_Area_Chart",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "thr_12": [
      "fea_Line_Chart",
      "cat_Customizable_Components",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types"
    ],
    "thr_19": [
      "fea_Shapes",
      "cat_Customizable_Components",
      "fea_Treemap",
      "cat_Visualization_Types"
    ],
    "fir_31": [
      "fea_Text",
      "fea_Force_Directed_Graph",
      "fea_Mouse_Events",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types",
      "cat_Customizable_Components",
      "cat_Interactions_and_Animations"
    ],
    "fir_32": [
      "fea_Import_Data",
      "fea_Data_Grouping",
      "fea_Data_Format",
      "fea_Shapes",
      "fea_Axis",
      "fea_Radial_Area_Chart",
      "fea_Canvas",
      "cat_Data_Processing",
      "cat_Customizable_Components",
      "cat_Visualization_Types"
    ],
    "fir_33": [
      "fea_Text",
      "fea_Data_Format",
      "fea_Tree",
      "fea_Mouse_Events",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Customizable_Components",
      "cat_Visualization_Types",
      "cat_Data_Processing",
      "cat_Interactions_and_Animations"
    ],
    "fir_34": [
      "fea_Heatmap",
      "fea_Text",
      "fea_Import_Data",
      "fea_Data_Format",
      "fea_Axis",
      "fea_Legend",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Data_Processing",
      "cat_Customizable_Components",
      "cat_Visualization_Types"
    ],
    "fir_35": [
      "fea_Text",
      "fea_Scatter_Plot",
      "fea_Import_Data",
      "fea_Data_Filtering",
      "fea_Axis",
      "fea_Multiple_Charts",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Customizable_Components",
      "cat_Data_Processing",
      "cat_Visualization_Types"
    ],
    "fir_36": [
      "fea_Text",
      "fea_Import_Data",
      "fea_Data_Transformation",
      "fea_Axis",
      "fea_Legend",
      "fea_Shapes",
      "fea_Canvas",
      "fea_Bar_Chart",
      "cat_Customizable_Components",
      "cat_Data_Processing",
      "cat_Visualization_Types"
    ],
    "fir_37": [
      "fea_Scatter_Plot",
      "fea_Import_Data",
      "fea_Axis",
      "fea_Legend",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Customizable_Components",
      "cat_Data_Processing",
      "cat_Visualization_Types"
    ],
    "fir_38": [
      "fea_Text",
      "fea_Import_Data",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "fea_Pie_Chart",
      "cat_Customizable_Components",
      "cat_Visualization_Types",
      "cat_Data_Processing"
    ],
    "fir_39": [
      "fea_Text",
      "fea_Import_Data",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "fea_Pie_Chart",
      "cat_Customizable_Components",
      "cat_Visualization_Types",
      "cat_Data_Processing"
    ],
    "fir_40": [
      "fea_Text",
      "fea_Import_Data",
      "fea_Data_Grouping",
      "fea_Axis",
      "fea_Legend",
      "fea_Multiple_Charts",
      "fea_Shapes",
      "fea_Pie_Chart",
      "cat_Customizable_Components",
      "cat_Visualization_Types",
      "cat_Data_Processing"
    ],
    "fir_41": [
      "fea_Stream_Graph",
      "fea_Animations",
      "fea_Data_Transformation",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Data_Processing",
      "cat_Customizable_Components",
      "cat_Visualization_Types",
      "cat_Interactions_and_Animations"
    ],
    "fir_42": [
      "fea_Text",
      "fea_Bullet_Chart",
      "fea_Import_Data",
      "fea_Animations",
      "fea_Mouse_Events",
      "fea_Canvas",
      "cat_Visualization_Types",
      "cat_Data_Processing",
      "cat_Customizable_Components",
      "cat_Interactions_and_Animations"
    ],
    "fir_43": [
      "fea_Data_Format",
      "fea_Chord_Diagram",
      "fea_Data_Transformation",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Customizable_Components",
      "cat_Data_Processing",
      "cat_Visualization_Types"
    ],
    "fir_44": [
      "fea_Text",
      "fea_Import_Data",
      "fea_Data_Grouping",
      "fea_Data_Format",
      "fea_Bubble_Chart",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Customizable_Components",
      "cat_Data_Processing",
      "cat_Visualization_Types"
    ],
    "fir_45": [
      "fea_Text",
      "fea_Heatmap",
      "fea_Import_Data",
      "fea_Data_Filtering",
      "fea_Data_Grouping",
      "fea_Data_Format",
      "fea_Axis",
      "fea_Canvas",
      "cat_Data_Processing",
      "cat_Customizable_Components",
      "cat_Visualization_Types"
    ],
    "fir_46": [
      "fea_Text",
      "fea_Import_Data",
      "fea_Data_Filtering",
      "fea_Data_Format",
      "fea_Data_Transformation",
      "fea_Bubble_Chart",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Customizable_Components",
      "cat_Data_Processing",
      "cat_Visualization_Types"
    ],
    "fir_47": [
      "fea_Text",
      "fea_Import_Data",
      "fea_Tree",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Customizable_Components",
      "cat_Visualization_Types",
      "cat_Data_Processing"
    ],
    "fir_48": [
      "fea_Text",
      "fea_Import_Data",
      "fea_Tree",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Customizable_Components",
      "cat_Visualization_Types",
      "cat_Data_Processing"
    ],
    "fir_49": [
      "fea_Text",
      "fea_Selection",
      "fea_Import_Data",
      "fea_Animations",
      "fea_Data_Format",
      "fea_Data_Transformation",
      "fea_Treemap",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Customizable_Components",
      "cat_Data_Processing",
      "cat_Visualization_Types",
      "cat_Interactions_and_Animations"
    ],
    "fir_50": [
      "fea_Scatter_Plot",
      "fea_Import_Data",
      "fea_Geo_Maps",
      "fea_Axis",
      "fea_Canvas",
      "cat_Customizable_Components",
      "cat_Visualization_Types",
      "cat_Data_Processing"
    ],
    "sec_31": [
      "fea_Legend",
      "fea_Text",
      "fea_Bar_Chart",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "sec_32": [
      "fea_Line_Chart",
      "fea_Text",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "sec_33": [
      "fea_Text",
      "fea_Pie_Chart",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "sec_34": [
      "fea_Text",
      "fea_Radar_Chart",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "sec_35": [
      "fea_Text",
      "fea_Area_Chart",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "sec_36": [
      "fea_Text",
      "fea_Pie_Chart",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "sec_37": [
      "fea_Legend",
      "fea_Text",
      "fea_Bar_Chart",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "sec_38": [
      "fea_Text",
      "fea_Bar_Chart",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "sec_39": [
      "fea_Line_Chart",
      "fea_Text",
      "fea_Legend",
      "fea_Bar_Chart",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "sec_40": [
      "fea_Text",
      "fea_Bubble_Chart",
      "fea_Axis",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "sec_41": [
      "fea_Line_Chart",
      "cat_Visualization_Types"
    ],
    "sec_42": [
      "fea_Line_Chart",
      "cat_Visualization_Types"
    ],
    "sec_43": [
      "fea_Bar_Chart",
      "cat_Visualization_Types"
    ],
    "sec_44": [
      "fea_Axis",
      "fea_Bar_Chart",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "sec_45": [
      "fea_Axis",
      "fea_Radar_Chart",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "sec_46": [
      "fea_Axis",
      "fea_Pie_Chart",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "sec_47": [
      "fea_Axis",
      "fea_Pie_Chart",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "sec_48": [
      "fea_Axis",
      "fea_Pie_Chart",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "sec_49": [
      "fea_Bubble_Chart",
      "fea_Axis",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "sec_50": [
      "fea_Bar_Chart",
      "cat_Visualization_Types"
    ],
    "thr_31": [
      "fea_Shapes",
      "fea_Canvas",
      "fea_Pie_Chart",
      "cat_Customizable_Components",
      "cat_Visualization_Types"
    ],
    "thr_32": [
      "fea_Selection",
      "fea_Tooltip",
      "fea_Animations",
      "fea_Radar_Chart",
      "fea_Canvas",
      "fea_Axis",
      "fea_Shapes",
      "fea_Mouse_Events",
      "cat_Interactions_and_Animations",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "thr_33": [
      "fea_Shapes",
      "fea_Sankey_Diagram",
      "fea_Canvas",
      "fea_Tooltip",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "thr_34": [
      "fea_Scatter_Plot",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Legend",
      "fea_Multiple_Charts",
      "fea_Canvas",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "thr_35": [
      "fea_Animations",
      "fea_Treemap",
      "fea_Mouse_Events",
      "fea_Tooltip",
      "cat_Visualization_Types",
      "cat_Interactions_and_Animations",
      "cat_Customizable_Components"
    ],
    "thr_36": [
      "fea_Text",
      "fea_Shapes",
      "fea_Pie_Chart",
      "cat_Customizable_Components",
      "cat_Visualization_Types"
    ],
    "thr_37": [
      "fea_Line_Chart",
      "fea_Canvas",
      "fea_Axis",
      "fea_Tooltip",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "thr_38": [
      "fea_Area_Chart",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "fea_Bar_Chart",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "thr_39": [
      "fea_Line_Chart",
      "fea_Animations",
      "fea_Canvas",
      "fea_Axis",
      "cat_Visualization_Types",
      "cat_Customizable_Components",
      "cat_Interactions_and_Animations"
    ],
    "thr_40": [
      "fea_Line_Chart",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "thr_41": [
      "fea_Tooltip",
      "fea_Axis",
      "fea_Legend",
      "fea_Zoom",
      "fea_Canvas",
      "fea_Bar_Chart",
      "cat_Visualization_Types",
      "cat_Customizable_Components",
      "cat_Interactions_and_Animations"
    ],
    "thr_42": [
      "fea_Line_Chart",
      "fea_Canvas",
      "fea_Axis",
      "fea_Tooltip",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "thr_43": [
      "fea_Heatmap",
      "fea_Tooltip",
      "fea_Scatter_Plot",
      "fea_Axis",
      "fea_Legend",
      "fea_Canvas",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "thr_44": [
      "fea_Text",
      "fea_Tooltip",
      "fea_Treemap",
      "fea_Multiple_Charts",
      "fea_Shapes",
      "fea_Pie_Chart",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "thr_45": [
      "fea_Scatter_Plot",
      "fea_Tooltip",
      "fea_Axis",
      "fea_Legend",
      "fea_Canvas",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "thr_46": [
      "fea_Area_Chart",
      "fea_Axis",
      "fea_Canvas",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "thr_47": [
      "fea_Line_Chart",
      "fea_Shapes",
      "fea_Canvas",
      "fea_Tooltip",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "thr_48": [
      "fea_Tooltip",
      "fea_Axis",
      "fea_Shapes",
      "fea_Canvas",
      "fea_Bar_Chart",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "thr_49": [
      "fea_Line_Chart",
      "fea_Shapes",
      "fea_Canvas",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ],
    "thr_50": [
      "fea_Scatter_Plot",
      "fea_Tooltip",
      "fea_Line_Chart",
      "fea_Axis",
      "fea_Legend",
      "fea_Multiple_Charts",
      "fea_Canvas",
      "fea_Bar_Chart",
      "cat_Visualization_Types",
      "cat_Customizable_Components"
    ]
  },
  "file info": {
    "fir_14": {
      "source": "https://bl.ocks.org/firnoob/5987480",
      "nlines": 98,
      "nchara": 8229
    },
    "fir_3": {
      "source": "",
      "nlines": 71,
      "nchara": 6682
    },
    "fir_6": {
      "source": "",
      "nlines": 263,
      "nchara": 19080
    },
    "fir_13": {
      "source": "https://bl.ocks.org/nanu146/f48ffc5ec10270f55c9e1fb3da8b38f0",
      "nlines": 259,
      "nchara": 29286
    },
    "fir_21": {
      "source": "https://bl.ocks.org/mbostock/6fead6d1378d6df5ae77bb6a719afcb2",
      "nlines": 109,
      "nchara": 11550
    },
    "fir_4": {
      "source": "",
      "nlines": 149,
      "nchara": 11915
    },
    "fir_5": {
      "source": "",
      "nlines": 105,
      "nchara": 8674
    },
    "fir_9": {
      "source": "",
      "nlines": 66,
      "nchara": 6579
    },
    "fir_16": {
      "source": "https://github.com/colorfulAsh/interactive-fir-lineGraph/blob/master/myfirscript",
      "nlines": 227,
      "nchara": 28144
    },
    "fir_29": {
      "source": "https://www.fir-graph-gallery.com/graph/heatmap_style.html",
      "nlines": 119,
      "nchara": 10668
    },
    "fir_7": {
      "source": "https://bl.ocks.org/sebg/0cc55428f83eb52bdfad6f5692023b07",
      "nlines": 78,
      "nchara": 8328
    },
    "fir_11": {
      "source": "https://bl.ocks.org/Vvgupta/62d8a405260cb4d104cc1ba42b155e87",
      "nlines": 122,
      "nchara": 10517
    },
    "fir_12": {
      "source": "https://bl.ocks.org/htakeuchi/a60c0ecb55713c06c054c26c6dbed57a",
      "nlines": 109,
      "nchara": 11349
    },
    "fir_15": {
      "source": "https://www.fir-graph-gallery.com/graph/line_cursor.html",
      "nlines": 102,
      "nchara": 8265
    },
    "fir_17": {
      "source": "https://github.com/caged/firline/blob/master/js/app",
      "nlines": 60,
      "nchara": 9515
    },
    "fir_24": {
      "source": "https://bl.ocks.org/mbostock/e9ba78a2c1070980d1b530800ce7fa2b",
      "nlines": 68,
      "nchara": 7218
    },
    "fir_25": {
      "source": "https://www.fir-graph-gallery.com/graph/arc_highlight.html",
      "nlines": 104,
      "nchara": 10205
    },
    "fir_26": {
      "source": "https://bl.ocks.org/firnoob/06e72deea99e7b4859841f305f63ba85",
      "nlines": 133,
      "nchara": 12233
    },
    "fir_28": {
      "source": "https://www.fir-graph-gallery.com/graph/histogram_coloredTail.html",
      "nlines": 70,
      "nchara": 7331
    },
    "fir_1": {
      "source": "",
      "nlines": 51,
      "nchara": 4871
    },
    "fir_2": {
      "source": "",
      "nlines": 55,
      "nchara": 4951
    },
    "fir_8": {
      "source": "http://bl.ocks.org/atmccann/8966400",
      "nlines": 122,
      "nchara": 10776
    },
    "fir_10": {
      "source": "https://bl.ocks.org/EfratVil/92f894ac0ba265192411e73f633a3e2f",
      "nlines": 135,
      "nchara": 10302
    },
    "fir_19": {
      "source": "https://codesandbox.io/s/erpyl4q94?file=/index:0-3393",
      "nlines": 118,
      "nchara": 10807
    },
    "fir_20": {
      "source": "https://codesandbox.io/s/module-5-lesson-5-scatter-plot-h9uo5?file=/chart:0-2336",
      "nlines": 99,
      "nchara": 6307
    },
    "fir_23": {
      "source": "https://bl.ocks.org/HarryStevens/f636199a46fc4b210fbca3b1dc4ef372",
      "nlines": 71,
      "nchara": 7241
    },
    "fir_30": {
      "source": "https://www.fir-graph-gallery.com/graph/violin_jitter.html",
      "nlines": 100,
      "nchara": 9692
    },
    "fir_22": {
      "source": "https://bl.ocks.org/ganezasan/52fcefir4d2182483995f0ca3960fe228",
      "nlines": 51,
      "nchara": 6292
    },
    "fir_27": {
      "source": "https://www.fir-graph-gallery.com/graph/chord_colors.html",
      "nlines": 54,
      "nchara": 4349
    },
    "fir_18": {
      "source": "https://codesandbox.io/s/0xoy5yn4rp?file=/index:0-9817",
      "nlines": 259,
      "nchara": 24315
    },
    "sec_8": {
      "source": "",
      "nlines": 80,
      "nchara": 6799
    },
    "sec_14": {
      "source": "",
      "nlines": 75,
      "nchara": 6272
    },
    "sec_17": {
      "source": "https://www.chartjs.org/docs/latest/samples/advanced/radial-gradient.html",
      "nlines": 113,
      "nchara": 6849
    },
    "sec_18": {
      "source": "https://www.chartjs.org/docs/latest/samples/animations/progressive-line.html",
      "nlines": 87,
      "nchara": 5756
    },
    "sec_21": {
      "source": "https://www.chartjs.org/docs/latest/samples/scriptable/bubble.html",
      "nlines": 106,
      "nchara": 7587
    },
    "sec_25": {
      "source": "https://www.chartjs.org/docs/latest/samples/other-charts/multi-series-pie.html",
      "nlines": 88,
      "nchara": 6962
    },
    "sec_26": {
      "source": "https://www.chartjs.org/docs/latest/samples/other-charts/scatter.html",
      "nlines": 110,
      "nchara": 5872
    },
    "sec_27": {
      "source": "https://www.chartjs.org/docs/latest/samples/other-charts/bubble.html",
      "nlines": 110,
      "nchara": 5873
    },
    "sec_30": {
      "source": "https://www.chartjs.org/docs/latest/samples/bar/vertical.html",
      "nlines": 112,
      "nchara": 5661
    },
    "sec_2": {
      "source": "",
      "nlines": 49,
      "nchara": 4815
    },
    "sec_5": {
      "source": "",
      "nlines": 545,
      "nchara": 32499
    },
    "sec_9": {
      "source": "",
      "nlines": 185,
      "nchara": 14556
    },
    "sec_12": {
      "source": "",
      "nlines": 120,
      "nchara": 8433
    },
    "sec_16": {
      "source": "https://www.chartjs.org/docs/latest/samples/advanced/programmatic-events.html",
      "nlines": 100,
      "nchara": 8373
    },
    "sec_19": {
      "source": "https://www.chartjs.org/docs/latest/samples/other-charts/scatter-multi-axis.html",
      "nlines": 132,
      "nchara": 13797
    },
    "sec_11": {
      "source": "",
      "nlines": 251,
      "nchara": 22931
    },
    "sec_15": {
      "source": "",
      "nlines": 773,
      "nchara": 85960
    },
    "sec_22": {
      "source": "https://www.chartjs.org/docs/latest/samples/scales/time-combo.html",
      "nlines": 79,
      "nchara": 6947
    },
    "sec_23": {
      "source": "https://www.chartjs.org/docs/latest/samples/other-charts/stacked-bar-line.html",
      "nlines": 117,
      "nchara": 5965
    },
    "sec_24": {
      "source": "https://www.chartjs.org/docs/latest/samples/other-charts/radar-skip-points.html",
      "nlines": 83,
      "nchara": 4834
    },
    "sec_28": {
      "source": "https://www.chartjs.org/docs/latest/samples/line/interpolation.html",
      "nlines": 74,
      "nchara": 6116
    },
    "sec_29": {
      "source": "https://www.chartjs.org/docs/latest/samples/bar/stacked-groups.html",
      "nlines": 76,
      "nchara": 5846
    },
    "sec_3": {
      "source": "",
      "nlines": 255,
      "nchara": 17282
    },
    "sec_6": {
      "source": "",
      "nlines": 93,
      "nchara": 9379
    },
    "sec_13": {
      "source": "",
      "nlines": 75,
      "nchara": 6237
    },
    "sec_20": {
      "source": "https://www.chartjs.org/docs/latest/samples/animations/delay.html",
      "nlines": 76,
      "nchara": 6966
    },
    "sec_1": {
      "source": "",
      "nlines": 51,
      "nchara": 4997
    },
    "sec_4": {
      "source": "",
      "nlines": 16,
      "nchara": 1768
    },
    "sec_10": {
      "source": "",
      "nlines": 65,
      "nchara": 5214
    },
    "thr_14": {
      "source": "",
      "nlines": 163,
      "nchara": 15234
    },
    "thr_2": {
      "source": "",
      "nlines": 178,
      "nchara": 17831
    },
    "thr_3": {
      "source": "",
      "nlines": 178,
      "nchara": 18397
    },
    "thr_8": {
      "source": "",
      "nlines": 70,
      "nchara": 6699
    },
    "thr_13": {
      "source": "",
      "nlines": 184,
      "nchara": 20630
    },
    "thr_16": {
      "source": "https://recharts.org/en-US/examples/LegendEffectOpacity",
      "nlines": 108,
      "nchara": 8969
    },
    "thr_17": {
      "source": "https://recharts.org/en-US/examples/SimpleRadialBarChart",
      "nlines": 76,
      "nchara": 6156
    },
    "thr_18": {
      "source": "https://recharts.org/en-US/examples/SpecifiedDomainRadarChart",
      "nlines": 61,
      "nchara": 5930
    },
    "thr_20": {
      "source": "https://recharts.org/en-US/examples/CustomContentOfTooltip",
      "nlines": 113,
      "nchara": 9320
    },
    "thr_21": {
      "source": "https://recharts.org/en-US/examples/ComposedResponsiveContainer",
      "nlines": 86,
      "nchara": 7052
    },
    "thr_24": {
      "source": "https://recharts.org/en-US/examples/BrushBarChart",
      "nlines": 88,
      "nchara": 12567
    },
    "thr_25": {
      "source": "https://recharts.org/en-US/examples/BarChartWithMinHeight",
      "nlines": 105,
      "nchara": 8781
    },
    "thr_26": {
      "source": "https://recharts.org/en-US/examples/MixBarChart",
      "nlines": 79,
      "nchara": 6810
    },
    "thr_28": {
      "source": "https://recharts.org/en-US/examples/LineChartAxisInterval",
      "nlines": 94,
      "nchara": 11782
    },
    "thr_1": {
      "source": "",
      "nlines": 71,
      "nchara": 6447
    },
    "thr_4": {
      "source": "",
      "nlines": 123,
      "nchara": 9774
    },
    "thr_5": {
      "source": "",
      "nlines": 188,
      "nchara": 17951
    },
    "thr_10": {
      "source": "",
      "nlines": 196,
      "nchara": 16742
    },
    "thr_11": {
      "source": "",
      "nlines": 131,
      "nchara": 10712
    },
    "thr_15": {
      "source": "",
      "nlines": 167,
      "nchara": 17083
    },
    "thr_22": {
      "source": "https://recharts.org/en-US/examples/TwoSimplePieChart",
      "nlines": 46,
      "nchara": 5594
    },
    "thr_23": {
      "source": "https://recharts.org/en-US/examples/MultipleYAxesScatterChart",
      "nlines": 63,
      "nchara": 9760
    },
    "thr_27": {
      "source": "https://recharts.org/en-US/examples/StackedAreaChart",
      "nlines": 78,
      "nchara": 7148
    },
    "thr_29": {
      "source": "https://codesandbox.io/s/synchronized-line-charts-zc3nl?file=/src/App.tsx:0-2165",
      "nlines": 123,
      "nchara": 10079
    },
    "thr_30": {
      "source": "https://recharts.org/en-US/examples/HighlightAndZoomLineChart",
      "nlines": 152,
      "nchara": 17251
    },
    "thr_6": {
      "source": "",
      "nlines": 59,
      "nchara": 5492
    },
    "thr_7": {
      "source": "",
      "nlines": 59,
      "nchara": 5492
    },
    "thr_9": {
      "source": "",
      "nlines": 67,
      "nchara": 6331
    },
    "thr_12": {
      "source": "",
      "nlines": 49,
      "nchara": 5076
    },
    "thr_19": {
      "source": "https://recharts.org/en-US/examples/CustomContentTreemap",
      "nlines": 193,
      "nchara": 21566
    },
    "fir_31": {
      "source": "",
      "nlines": 100,
      "nchara": 10657
    },
    "fir_32": {
      "source": "https://bl.ocks.org/mbostock/3048740",
      "nlines": 79,
      "nchara": 9012
    },
    "fir_33": {
      "source": "https://bl.ocks.org/mbostock/3087986",
      "nlines": 53,
      "nchara": 6221
    },
    "fir_34": {
      "source": "http://bl.ocks.org/mbostock/3202354",
      "nlines": 104,
      "nchara": 10688
    },
    "fir_35": {
      "source": "https://bl.ocks.org/mbostock/3213173",
      "nlines": 99,
      "nchara": 9856
    },
    "fir_36": {
      "source": "https://bl.ocks.org/mbostock/3886208",
      "nlines": 83,
      "nchara": 9339
    },
    "fir_37": {
      "source": "https://bl.ocks.org/mbostock/3887118",
      "nlines": 88,
      "nchara": 8120
    },
    "fir_38": {
      "source": "https://bl.ocks.org/mbostock/3887193",
      "nlines": 44,
      "nchara": 4779
    },
    "fir_39": {
      "source": "https://bl.ocks.org/mbostock/3887235",
      "nlines": 41,
      "nchara": 4723
    },
    "fir_40": {
      "source": "https://bl.ocks.org/mbostock/3888852",
      "nlines": 68,
      "nchara": 7244
    },
    "fir_41": {
      "source": "https://bl.ocks.org/mbostock/4060954",
      "nlines": 68,
      "nchara": 7094
    },
    "fir_42": {
      "source": "https://bl.ocks.org/mbostock/4061961",
      "nlines": 54,
      "nchara": 5594
    },
    "fir_43": {
      "source": "https://bl.ocks.org/mbostock/4062006",
      "nlines": 80,
      "nchara": 8882
    },
    "fir_44": {
      "source": "https://bl.ocks.org/mbostock/4063269",
      "nlines": 58,
      "nchara": 6958
    },
    "fir_45": {
      "source": "https://bl.ocks.org/mbostock/4063318",
      "nlines": 71,
      "nchara": 9578
    },
    "fir_46": {
      "source": "https://bl.ocks.org/mbostock/4063530",
      "nlines": 32,
      "nchara": 4927
    },
    "fir_47": {
      "source": "https://bl.ocks.org/mbostock/4063550",
      "nlines": 46,
      "nchara": 6741
    },
    "fir_48": {
      "source": "https://bl.ocks.org/mbostock/4063570",
      "nlines": 46,
      "nchara": 5555
    },
    "fir_49": {
      "source": "https://bl.ocks.org/mbostock/4063582",
      "nlines": 84,
      "nchara": 9834
    },
    "fir_50": {
      "source": "https://bl.ocks.org/mbostock/4342045",
      "nlines": 33,
      "nchara": 3148
    },
    "sec_31": {
      "source": "https://tobiasahlin.com/blog/chartjs-charts-to-get-you-started/",
      "nlines": 22,
      "nchara": 2549
    },
    "sec_32": {
      "source": "https://tobiasahlin.com/blog/chartjs-charts-to-get-you-started/",
      "nlines": 40,
      "nchara": 5010
    },
    "sec_33": {
      "source": "https://tobiasahlin.com/blog/chartjs-charts-to-get-you-started/",
      "nlines": 17,
      "nchara": 2043
    },
    "sec_34": {
      "source": "https://tobiasahlin.com/blog/chartjs-charts-to-get-you-started/",
      "nlines": 32,
      "nchara": 3274
    },
    "sec_35": {
      "source": "https://tobiasahlin.com/blog/chartjs-charts-to-get-you-started/",
      "nlines": 19,
      "nchara": 2077
    },
    "sec_36": {
      "source": "https://tobiasahlin.com/blog/chartjs-charts-to-get-you-started/",
      "nlines": 19,
      "nchara": 2077
    },
    "sec_37": {
      "source": "https://tobiasahlin.com/blog/chartjs-charts-to-get-you-started/",
      "nlines": 20,
      "nchara": 2353
    },
    "sec_38": {
      "source": "https://tobiasahlin.com/blog/chartjs-charts-to-get-you-started/",
      "nlines": 23,
      "nchara": 2185
    },
    "sec_39": {
      "source": "https://tobiasahlin.com/blog/chartjs-charts-to-get-you-started/",
      "nlines": 38,
      "nchara": 4530
    },
    "sec_40": {
      "source": "https://tobiasahlin.com/blog/chartjs-charts-to-get-you-started/",
      "nlines": 64,
      "nchara": 4786
    },
    "sec_41": {
      "source": "https://ordinarycoders.com/blog/article/11-chart-js-examples",
      "nlines": 36,
      "nchara": 4032
    },
    "sec_42": {
      "source": "https://ordinarycoders.com/blog/article/11-chart-js-examples",
      "nlines": 29,
      "nchara": 3166
    },
    "sec_43": {
      "source": "https://ordinarycoders.com/blog/article/11-chart-js-examples",
      "nlines": 33,
      "nchara": 3332
    },
    "sec_44": {
      "source": "https://ordinarycoders.com/blog/article/11-chart-js-examples",
      "nlines": 37,
      "nchara": 2961
    },
    "sec_45": {
      "source": "https://ordinarycoders.com/blog/article/11-chart-js-examples",
      "nlines": 44,
      "nchara": 3501
    },
    "sec_46": {
      "source": "https://ordinarycoders.com/blog/article/11-chart-js-examples",
      "nlines": 32,
      "nchara": 1750
    },
    "sec_47": {
      "source": "https://ordinarycoders.com/blog/article/11-chart-js-examples",
      "nlines": 31,
      "nchara": 1745
    },
    "sec_48": {
      "source": "https://ordinarycoders.com/blog/article/11-chart-js-examples",
      "nlines": 31,
      "nchara": 1744
    },
    "sec_49": {
      "source": "https://ordinarycoders.com/blog/article/11-chart-js-examples",
      "nlines": 59,
      "nchara": 4474
    },
    "sec_50": {
      "source": "https://ordinarycoders.com/blog/article/11-chart-js-examples",
      "nlines": 35,
      "nchara": 3278
    },
    "thr_31": {
      "source": "https://bitbucket.org/delainetech/transporter_react",
      "nlines": 44,
      "nchara": 7250
    },
    "thr_32": {
      "source": "https://bitbucket.org/delainetech/transporter_react",
      "nlines": 107,
      "nchara": 12910
    },
    "thr_33": {
      "source": "https://bitbucket.org/delainetech/transporter_react",
      "nlines": 195,
      "nchara": 29132
    },
    "thr_34": {
      "source": "",
      "nlines": 180,
      "nchara": 35456
    },
    "thr_35": {
      "source": "https://bitbucket.org/delainetech/transporter_react",
      "nlines": 430,
      "nchara": 48753
    },
    "thr_36": {
      "source": "",
      "nlines": 108,
      "nchara": 10039
    },
    "thr_37": {
      "source": "https://codepen.io/kimjuny90/pen/WOOpgN",
      "nlines": 51,
      "nchara": 5083
    },
    "thr_38": {
      "source": "https://codepen.io/starnavi/pen/QWjXKjz",
      "nlines": 212,
      "nchara": 26357
    },
    "thr_39": {
      "source": "https://codepen.io/ivanodintsov/pen/eXOBQK",
      "nlines": 133,
      "nchara": 12093
    },
    "thr_40": {
      "source": "https://codepen.io/joyguy89/pen/LbVqmj",
      "nlines": 90,
      "nchara": 13358
    },
    "thr_41": {
      "source": "https://codepen.io/techniq/pen/JKkBZo",
      "nlines": 71,
      "nchara": 12537
    },
    "thr_42": {
      "source": "https://codepen.io/adamdharrington/pen/GdpMyG",
      "nlines": 295,
      "nchara": 28543
    },
    "thr_43": {
      "source": "https://codepen.io/paulmichaelxd/pen/WBrWEb",
      "nlines": 161,
      "nchara": 14215
    },
    "thr_44": {
      "source": "https://codepen.io/nick123pig/pen/ZyOPpy",
      "nlines": 288,
      "nchara": 25043
    },
    "thr_45": {
      "source": "https://codepen.io/paulmichaelxd/pen/LoGpjW",
      "nlines": 86,
      "nchara": 8316
    },
    "thr_46": {
      "source": "https://codepen.io/joyguy89/pen/vyLGae",
      "nlines": 96,
      "nchara": 13680
    },
    "thr_47": {
      "source": "https://codepen.io/joyguy89/pen/BQNyXP",
      "nlines": 118,
      "nchara": 13993
    },
    "thr_48": {
      "source": "",
      "nlines": 70,
      "nchara": 7551
    },
    "thr_49": {
      "source": "https://codepen.io/joyguy89/pen/LbVqmj",
      "nlines": 90,
      "nchara": 13489
    },
    "thr_50": {
      "source": "https://codepen.io/akshay-karangale/pen/mzzYrQ",
      "nlines": 91,
      "nchara": 13137
    }
  }
}